digraph  {
n226 [label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
n227 [label=algorithmName, span=""];
n228 [label=liveJob, span=""];
n229 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n230 [label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
n231 [label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
n232 [label=liveJob, span=""];
n233 [label=order, span=""];
n234 [label=canonicalOption, span=""];
n0 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()"];
n1 [label="Errors = new List<string>()", span="74-74", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()"];
n2 [label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="75-75", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()"];
n5 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n3 [label="MaxOrders = int.MaxValue", span="76-76", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()"];
n6 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n4 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()"];
n7 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n8 [label="string error", span="87-87", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n10 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names =>\r\n            {\r\n                // if there's only one use that guy\r\n                if (names.Count == 1)\r\n                {\r\n                    return names.Single();\r\n                }\r\n\r\n                // if there's more than one then check configuration for which one we should use\r\n                var algorithmName = Config.Get(''algorithm-type-name'');\r\n                return names.Single(x => x.Contains(''.'' + algorithmName));\r\n            })", span="91-102", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n11 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="104-104", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n9 [label="IAlgorithm algorithm", span="88-88", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n16 [label="Entry Loader.cstr", span="", cluster="Loader.cstr"];
n17 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n21 [label="names.Count == 1", span="94-94", cluster="lambda expression"];
n22 [label="return names.Single();", span="96-96", cluster="lambda expression"];
n24 [label="return names.Single(x => x.Contains(''.'' + algorithmName));", span="101-101", cluster="lambda expression"];
n12 [label="!complete", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n18 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="357-357", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)"];
n13 [label="throw new Exception(error + '' Try re-building algorithm and remove duplicate QCAlgorithm base classes.'');", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n14 [label="return algorithm;", span="107-107", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n15 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n20 [label="Entry lambda expression", span="91-102", cluster="lambda expression"];
n23 [label="var algorithmName = Config.Get(''algorithm-type-name'')", span="100-100", cluster="lambda expression"];
n27 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)"];
n30 [label="x.Contains(''.'' + algorithmName)", span="101-101", cluster="lambda expression"];
n25 [label="Exit lambda expression", span="91-102", cluster="lambda expression"];
n28 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n29 [label="Entry lambda expression", span="101-101", cluster="lambda expression"];
n26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
n31 [label="Exit lambda expression", span="101-101", cluster="lambda expression"];
n32 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)"];
n33 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="117-117", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n34 [label="var liveJob = algorithmNodePacket as LiveNodePacket", span="119-119", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n39 [label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="130-130", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n35 [label="liveJob == null", span="120-120", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n37 [label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="126-126", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n46 [label="brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="126-126", cluster="lambda expression"];
n36 [label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="122-122", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n38 [label="factory = _factory", span="127-127", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n43 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)"];
n45 [label="Entry lambda expression", span="126-126", cluster="lambda expression"];
n41 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="117-117", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n40 [label="return brokerage;", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n44 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="55-55", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)"];
n42 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n47 [label="Exit lambda expression", span="126-126", cluster="lambda expression"];
n48 [label="Entry System.Type.MatchesTypeName(string)", span="608-608", cluster="System.Type.MatchesTypeName(string)"];
n49 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="145-145", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n50 [label="_algorithm = algorithm", span="147-147", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n51 [label="var liveJob = job as LiveNodePacket", span="150-150", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n60 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="178-178", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n61 [label="var controls = job.Controls", span="181-181", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n63 [label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.Message);\r\n                    }\r\n                }, controls.RamAllocation)", span="183-215", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n172 [label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="188-188", cluster="lambda expression"];
n173 [label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="190-190", cluster="lambda expression"];
n174 [label="algorithm.SetParameters(job.Parameters)", span="192-192", cluster="lambda expression"];
n175 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="193-193", cluster="lambda expression"];
n176 [label="algorithm.SetLiveMode(true)", span="195-195", cluster="lambda expression"];
n177 [label="algorithm.SetDateTime(DateTime.UtcNow)", span="197-197", cluster="lambda expression"];
n178 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="199-199", cluster="lambda expression"];
n179 [label="algorithm.Initialize()", span="201-201", cluster="lambda expression"];
n181 [label="algorithm.Portfolio.CashBook", span="205-205", cluster="lambda expression"];
n67 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="224-224", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n68 [label="brokerage.Message += brokerageOnMessage", span="226-226", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n70 [label="brokerage.Connect()", span="232-232", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n75 [label="!brokerage.IsConnected", span="242-242", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n79 [label="var cashBalance = brokerage.GetCashBalance()", span="253-253", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n82 [label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="257-257", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n88 [label="var openOrders = brokerage.GetOpenOrders()", span="271-271", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n91 [label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="276-276", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n92 [label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="277-277", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n98 [label="var holdings = brokerage.GetAccountHoldings()", span="291-291", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n100 [label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="293-293", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n199 [label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="293-293", cluster="lambda expression"];
n106 [label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="309-309", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n112 [label="var canonicalOption = algorithm.AddSecurity(holding.Type, underlying, minResolution.Value, null, true, 1.0m, false)", span="323-323", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n113 [label="var universe = algorithm.UniverseManager.Where(x => x.Key == canonicalOption.Symbol).First().Value", span="324-324", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n114 [label="var option = universe.CreateSecurity(holding.Symbol, algorithm, marketHoursDatabase, symbolPropertiesDatabase)", span="327-327", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n115 [label="algorithm.Securities.Add(holding.Symbol, option)", span="328-328", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n117 [label="((QCAlgorithm) algorithm).AddFutureContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="333-333", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0];
n118 [label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="338-338", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n119 [label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, (int) holding.Quantity)", span="342-342", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n120 [label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="343-353", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n125 [label="algorithm.PostInitialize()", span="363-363", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n126 [label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="366-366", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n52 [label="liveJob == null", span="151-151", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n55 [label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="158-158", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n180 [label="liveJob.Brokerage != ''PaperBrokerage''", span="202-202", cluster="lambda expression"];
n53 [label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="153-153", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n54 [label="return false;", span="154-154", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n132 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="406-406", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)"];
n56 [label="AddInitializationError(''A brokerage must be specified'')", span="160-160", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n58 [label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="166-172", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n133 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)"];
n57 [label="return false;", span="161-161", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n59 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="176-176", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n167 [label="args.Type == BrokerageMessageType.Error", span="168-168", cluster="lambda expression"];
n168 [label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="170-170", cluster="lambda expression"];
n134 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n135 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n62 [label="var isolator = new Isolator()", span="182-182", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n136 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()"];
n64 [label="!initializeComplete", span="217-217", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n137 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)"];
n171 [label="Entry lambda expression", span="183-215", cluster="lambda expression"];
n65 [label="AddInitializationError(''Initialization timed out.'')", span="219-219", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n66 [label="return false;", span="220-220", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n69 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="228-228", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n71 [label=Exception, span="234-234", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n138 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.Connect()"];
n72 [label="Log.Error(err)", span="236-236", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n73 [label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="237-238", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n139 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n74 [label="return false;", span="239-239", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n140 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n76 [label="AddInitializationError(''Unable to connect to brokerage.'')", span="245-245", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n78 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="249-249", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n77 [label="return false;", span="246-246", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n80 [label=cashBalance, span="254-254", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n141 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()"];
n81 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n83 [label=Exception, span="260-260", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n87 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="267-267", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n142 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)"];
n84 [label="Log.Error(err)", span="262-262", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n85 [label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="263-263", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n86 [label="return false;", span="264-264", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n89 [label=openOrders, span="272-272", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n143 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()"];
n90 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.ToString() + '' - '' + order.Quantity)", span="275-275", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n93 [label=Exception, span="280-280", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n97 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="287-287", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n196 [label=order, span="277-277", cluster="lambda expression"];
n144 [label="Entry QuantConnect.Symbol.ToString()", span="350-350", cluster="QuantConnect.Symbol.ToString()"];
n145 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()"];
n146 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)"];
n195 [label="Entry lambda expression", span="277-277", cluster="lambda expression"];
n94 [label="Log.Error(err)", span="282-282", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n95 [label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="283-283", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n96 [label="return false;", span="284-284", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n99 [label="var supportedSecurityTypes = new HashSet<SecurityType> { SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd, SecurityType.Option, SecurityType.Future }", span="292-292", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n147 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()"];
n101 [label=holdings, span="294-294", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n148 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()"];
n103 [label="!supportedSecurityTypes.Contains(holding.Type)", span="299-299", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n105 [label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="302-303", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n149 [label="Entry Lazy<Resolution>.cstr", span="", cluster="Lazy<Resolution>.cstr"];
n102 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="296-296", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n121 [label=Exception, span="356-356", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n104 [label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="301-301", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n107 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.ToString())", span="311-311", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n110 [label="holding.Type == SecurityType.Option", span="318-318", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n111 [label="var underlying = holding.Symbol.Underlying.Value", span="320-320", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n116 [label="holding.Type == SecurityType.Future", span="330-330", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n150 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)"];
n151 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n153 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)"];
n108 [label="var marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="313-313", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n109 [label="var symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="314-314", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n154 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()"];
n155 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()"];
n156 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="457-457", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)"];
n208 [label="x.Key == canonicalOption.Symbol", span="324-324", cluster="lambda expression"];
n157 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n158 [label="Entry Unk.First", span="", cluster="Unk.First"];
n207 [label="Entry lambda expression", span="324-324", cluster="lambda expression"];
n159 [label="Entry Unk.CreateSecurity", span="", cluster="Unk.CreateSecurity"];
n161 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1411-1411", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)"];
n160 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n162 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)"];
n163 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()"];
n164 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)"];
n152 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)"];
n122 [label="Log.Error(err)", span="358-358", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n123 [label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="359-359", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n124 [label="return false;", span="360-360", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n165 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="291-291", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()"];
n127 [label="StartingDate = DateTime.Now", span="367-367", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n128 [label=Exception, span="369-369", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n130 [label="return Errors.Count == 0;", span="381-381", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n129 [label="AddInitializationError(err.Message)", span="371-371", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n131 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="145-145", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n166 [label="Entry lambda expression", span="166-172", cluster="lambda expression"];
n169 [label="Exit lambda expression", span="166-172", cluster="lambda expression"];
n170 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n186 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="313-313", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)"];
n187 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="305-305", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)"];
n188 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="388-388", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n189 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="542-542", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)"];
n190 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="492-492", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)"];
n191 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="422-422", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)"];
n192 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)"];
n193 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="285-285", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()"];
n183 [label=Exception, span="211-211", cluster="lambda expression"];
n185 [label="Exit lambda expression", span="183-215", cluster="lambda expression"];
n182 [label="kvp.Value.SetAmount(0)", span="207-207", cluster="lambda expression"];
n194 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)"];
n184 [label="AddInitializationError(err.Message)", span="213-213", cluster="lambda expression"];
n197 [label="Exit lambda expression", span="277-277", cluster="lambda expression"];
n198 [label="Entry lambda expression", span="293-293", cluster="lambda expression"];
n200 [label="Exit lambda expression", span="293-293", cluster="lambda expression"];
n201 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n202 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty"];
n203 [label="Entry Unk.Min", span="", cluster="Unk.Min"];
n204 [label="Entry lambda expression", span="293-293", cluster="lambda expression"];
n205 [label="x.Value.Resolution", span="293-293", cluster="lambda expression"];
n206 [label="Exit lambda expression", span="293-293", cluster="lambda expression"];
n209 [label="Exit lambda expression", span="324-324", cluster="lambda expression"];
n210 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="390-390", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n211 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="392-392", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n212 [label="dataFeedsConfigString != string.Empty", span="393-393", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n213 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="395-395", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n216 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n214 [label="return dataFeeds;", span="398-398", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n217 [label="Entry Unk.>", span="", cluster="Unk.>"];
n215 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="388-388", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()"];
n218 [label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="408-408", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)"];
n219 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="406-406", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)"];
n220 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n221 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="415-415", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()"];
n222 [label="_factory != null", span="417-417", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()"];
n223 [label="_factory.Dispose()", span="419-419", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()"];
n224 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="415-415", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()"];
n225 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()"];
m1_44 [label="Entry lambda expression", span="703-703", cluster="lambda expression", file="FactorFileTests.cs"];
m1_45 [label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703", cluster="lambda expression", file="FactorFileTests.cs"];
m1_46 [label="Exit lambda expression", span="703-703", cluster="lambda expression", file="FactorFileTests.cs"];
m1_9 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_0 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_1 [label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_2 [label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_6 [label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_3 [label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_4 [label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_5 [label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_7 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFileTests.cs"];
m1_41 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_49 [label="Algorithm = algorithm", span="714-714", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_50 [label="Statistics = statistics", span="715-715", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_51 [label="Language = language", span="716-716", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_52 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFileTests.cs"];
m1_48 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="FactorFileTests.cs"];
m1_10 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_11 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_12 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_37 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_13 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_14 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_15 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_16 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_17 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_18 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_19 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_20 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_21 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_22 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_23 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_24 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_25 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_26 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_27 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_28 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_29 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_30 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_31 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_32 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_33 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_34 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_35 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.53%''},\r\n                {''Average Loss'', ''-2.00%''},\r\n                {''Compounding Annual Return'', ''65.652%''},\r\n                {''Drawdown'', ''5.000%''},\r\n                {''Expectancy'', ''-0.158''},\r\n                {''Net Profit'', ''0.555%''},\r\n                {''Sharpe Ratio'', ''0.731''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.26''},\r\n                {''Alpha'', ''-1.237''},\r\n                {''Beta'', ''1.189''},\r\n                {''Annual Standard Deviation'', ''0.544''},\r\n                {''Annual Variance'', ''0.296''},\r\n                {''Information Ratio'', ''-8.473''},\r\n                {''Tracking Error'', ''0.115''},\r\n                {''Treynor Ratio'', ''0.335''},\r\n                {''Total Fees'', ''$2023.72''}\r\n            }", span="594-615", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_36 [label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_38 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFileTests.cs"];
m1_47 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="FactorFileTests.cs"];
m1_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="FactorFileTests.cs"];
m1_43 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="FactorFileTests.cs"];
m1_8 [label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118", cluster="QuantConnect.Configuration.Config.Set(string, string)", file="FactorFileTests.cs"];
m1_39 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FactorFileTests.cs"];
m1_53 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", file="FactorFileTests.cs"];
m4_28 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", span="123-123", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", file="FuturesExpiryFunctions.cs"];
m4_29 [label="ReferenceEquals(other, null)", span="125-125", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_31 [label="return Current.CompareTo(other.Current);", span="131-131", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_30 [label="return 1;", span="128-128", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_32 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", span="123-123", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(QuantConnect.Indicators.IndicatorBase<T>)", file="FuturesExpiryFunctions.cs"];
m4_56 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="189-189", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="FuturesExpiryFunctions.cs"];
m4_57 [label="return string.Format(''{0} - {1}'', Name, this);", span="191-191", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_58 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="189-189", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="FuturesExpiryFunctions.cs"];
m4_40 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="FuturesExpiryFunctions.cs"];
m4_0 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", span="48-48", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="FuturesExpiryFunctions.cs"];
m4_1 [label="Name = name", span="50-50", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="FuturesExpiryFunctions.cs"];
m4_2 [label="Current = new IndicatorDataPoint(DateTime.MinValue, 0m)", span="51-51", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="FuturesExpiryFunctions.cs"];
m4_3 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", span="48-48", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="FuturesExpiryFunctions.cs"];
m4_20 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="FuturesExpiryFunctions.cs"];
m4_60 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", span="199-199", cluster="QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", file="FuturesExpiryFunctions.cs"];
m4_61 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", span="199-199", cluster="QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", file="FuturesExpiryFunctions.cs"];
m4_4 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="FuturesExpiryFunctions.cs"];
m4_34 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", span="141-141", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", file="FuturesExpiryFunctions.cs"];
m4_35 [label="var other = obj as IndicatorBase<T>", span="143-143", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_36 [label="other == null", span="144-144", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_38 [label="return CompareTo(other);", span="149-149", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_37 [label="throw new ArgumentException(''Object must be of type '' + GetType().GetBetterTypeName());", span="146-146", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_39 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", span="141-141", cluster="QuantConnect.Indicators.IndicatorBase<T>.CompareTo(object)", file="FuturesExpiryFunctions.cs"];
m4_18 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="FuturesExpiryFunctions.cs"];
m4_23 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="109-109", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="FuturesExpiryFunctions.cs"];
m4_24 [label="Samples = 0", span="111-111", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_25 [label="_previousInput = null", span="112-112", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_26 [label="Current = new IndicatorDataPoint(DateTime.MinValue, default(decimal))", span="113-113", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_27 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="109-109", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="FuturesExpiryFunctions.cs"];
m4_22 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", span="217-217", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="FuturesExpiryFunctions.cs"];
m4_65 [label="var handler = Updated", span="219-219", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_67 [label="handler(this, consolidated)", span="220-220", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_66 [label="handler != null", span="220-220", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_68 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", span="217-217", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="FuturesExpiryFunctions.cs"];
m4_33 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.CompareTo(QuantConnect.Indicators.IndicatorDataPoint)", span="82-82", cluster="QuantConnect.Indicators.IndicatorDataPoint.CompareTo(QuantConnect.Indicators.IndicatorDataPoint)", file="FuturesExpiryFunctions.cs"];
m4_5 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="81-81", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="FuturesExpiryFunctions.cs"];
m4_6 [label="_previousInput != null && input.Time < _previousInput.Time", span="83-83", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_7 [label="throw new ArgumentException(string.Format(''This is a forward only indicator: {0} Input: {1} Previous: {2}'', Name, input.Time.ToString(''u''), _previousInput.Time.ToString(''u'')));", span="86-86", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_8 [label="!ReferenceEquals(input, _previousInput)", span="88-88", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_10 [label="_previousInput = input", span="92-92", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_11 [label="var nextResult = ValidateAndComputeNextValue(input)", span="94-94", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_13 [label="Current = new IndicatorDataPoint(input.Time, nextResult.Value)", span="97-97", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_9 [label="Samples++", span="91-91", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_15 [label="return IsReady;", span="103-103", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_12 [label="nextResult.Status == IndicatorStatus.Success", span="95-95", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_14 [label="OnUpdated(Current)", span="100-100", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_16 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="81-81", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="FuturesExpiryFunctions.cs"];
m4_21 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ValidateAndComputeNextValue(T)", span="207-207", cluster="QuantConnect.Indicators.IndicatorBase<T>.ValidateAndComputeNextValue(T)", file="FuturesExpiryFunctions.cs"];
m4_62 [label="return new IndicatorResult(ComputeNextValue(input));", span="210-210", cluster="QuantConnect.Indicators.IndicatorBase<T>.ValidateAndComputeNextValue(T)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_63 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ValidateAndComputeNextValue(T)", span="207-207", cluster="QuantConnect.Indicators.IndicatorBase<T>.ValidateAndComputeNextValue(T)", file="FuturesExpiryFunctions.cs"];
m4_41 [label="Entry System.Type.GetBetterTypeName()", span="564-564", cluster="System.Type.GetBetterTypeName()", file="FuturesExpiryFunctions.cs"];
m4_52 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="180-180", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="FuturesExpiryFunctions.cs"];
m4_53 [label="return Current.Value.ToString(''#######0.0####'');", span="182-182", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_54 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="180-180", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="FuturesExpiryFunctions.cs"];
m4_64 [label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45", cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="FuturesExpiryFunctions.cs"];
m4_19 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="FuturesExpiryFunctions.cs"];
m4_59 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="FuturesExpiryFunctions.cs"];
m4_69 [label="Entry QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", span="26-26", cluster="QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", file="FuturesExpiryFunctions.cs"];
m4_42 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", span="159-159", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", file="FuturesExpiryFunctions.cs"];
m4_43 [label="ReferenceEquals(obj, null)", span="168-168", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_45 [label="obj.GetType().IsSubclassOf(typeof (IndicatorBase<>))", span="169-169", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_46 [label="return ReferenceEquals(this, obj);", span="169-169", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_47 [label="var converted = Convert.ToDecimal(obj)", span="172-172", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_44 [label="return false;", span="168-168", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_48 [label="return Current.Value == converted;", span="173-173", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", color=red, community=0, file="FuturesExpiryFunctions.cs"];
m4_49 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", span="159-159", cluster="QuantConnect.Indicators.IndicatorBase<T>.Equals(object)", file="FuturesExpiryFunctions.cs"];
m4_51 [label="Entry System.Convert.ToDecimal(object)", span="0-0", cluster="System.Convert.ToDecimal(object)", file="FuturesExpiryFunctions.cs"];
m4_55 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="FuturesExpiryFunctions.cs"];
m4_50 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="FuturesExpiryFunctions.cs"];
m4_70 [label="QuantConnect.Indicators.IndicatorBase<T>", span="", file="FuturesExpiryFunctions.cs"];
m5_198 [label="Entry string.GetExtension()", span="202-202", cluster="string.GetExtension()", file="FuturesExpiryFunctionsTests.cs"];
m5_206 [label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(string, QuantConnect.DataFeedEndpoint)", span="84-84", cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(string, QuantConnect.DataFeedEndpoint)", file="FuturesExpiryFunctionsTests.cs"];
m5_154 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", span="641-641", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_228 [label="var newSource = ''''", span="643-643", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_230 [label="newSource = _getSourceMethod.Invoke(_dataFactory, new object[] { _config, date, _feedEndpoint }) as String", span="649-649", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_229 [label="_dataFactory != null", span="645-645", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_234 [label="return newSource;", span="658-658", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_231 [label=Exception, span="651-651", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_232 [label="Log.Error(''SubscriptionDataReader.GetSource(): '' + err.Message)", span="653-653", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_233 [label="Engine.ResultHandler.ErrorMessage(''Error getting string source location for custom data source: '' + err.Message, err.StackTrace)", span="654-654", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_235 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", span="641-641", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_200 [label="Entry System.Net.WebClient.WebClient()", span="0-0", cluster="System.Net.WebClient.WebClient()", file="FuturesExpiryFunctionsTests.cs"];
m5_226 [label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.Dispose()", span="154-154", cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_109 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SetMappedSymbol(string)", span="137-137", cluster="QuantConnect.Data.SubscriptionDataConfig.SetMappedSymbol(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_33 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="FuturesExpiryFunctionsTests.cs"];
m5_120 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_155 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="622-622", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_219 [label="_reader != null", span="624-624", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_220 [label="_reader.Close()", span="626-626", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_222 [label="_web != null", span="630-630", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_221 [label="_reader.Dispose()", span="627-627", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_223 [label="_web.Dispose()", span="632-632", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_224 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="622-622", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_42 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="237-237", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_43 [label="BaseData instance = null", span="239-239", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_44 [label="var instanceMarketOpen = false", span="240-240", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_51 [label="instance == null  && !_reader.EndOfStream", span="262-262", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_77 [label="_lastBarOfStream = _lastBarOutsideMarketHours ?? instance", span="339-339", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_80 [label="Current = instance", span="349-349", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_81 [label="_reader.EndOfStream && instance == null", span="352-352", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_45 [label="_endOfStream || _reader == null || _reader.EndOfStream", span="244-244", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_46 [label="_reader == null", span="246-246", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_47 [label="Current = null", span="249-249", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_48 [label="_lastBarOfStream = Current", span="254-254", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_49 [label="_endOfStream = true", span="256-256", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_50 [label="return false;", span="257-257", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_52 [label="var line = _reader.ReadLine()", span="265-265", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_75 [label="Current == null", span="333-333", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_53 [label="instance = _readerMethodInvoker(_dataFactory, _config, line, _date, _feedEndpoint) as BaseData", span="269-269", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_55 [label="Engine.ResultHandler.RuntimeError(''Error invoking '' + _config.Symbol + '' data reader. Line: '' + line + '' Error: '' + err.Message, err.StackTrace)", span="274-274", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_54 [label=Exception, span="271-271", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_57 [label="instance != null", span="278-278", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_58 [label="instanceMarketOpen = _security.Exchange.DateTimeIsOpen(instance.Time)", span="280-280", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_59 [label="!_security.DataFilter.Filter(_security, instance)", span="285-285", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_64 [label="instance == null", span="297-297", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_66 [label="instance.Time < _periodStart", span="305-305", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_67 [label="_lastBarOutsideMarketHours = instance", span="307-307", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_69 [label="instance.Time > _periodFinish", span="311-311", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_72 [label="_lastBarOutsideMarketHours = instance", span="320-320", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_56 [label="_endOfStream = true", span="275-275", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_71 [label="!instanceMarketOpen", span="318-318", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_73 [label="!_config.ExtendedMarketHours && !instanceMarketOpen", span="324-324", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_60 [label="instance = null", span="287-287", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_61 [label=Exception, span="291-291", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_62 [label="Log.Error(''SubscriptionDataReader.MoveNext(): Error applying filter: '' + err.Message)", span="293-293", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_63 [label="Engine.ResultHandler.RuntimeError(''Runtime error applying data filter. Assuming filter pass: '' + err.Message, err.StackTrace)", span="294-294", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_65 [label="Log.Trace(''SubscriptionDataReader.MoveNext(): Instance null, continuing...'')", span="299-299", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_68 [label="instance = null", span="308-308", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_70 [label="instance = null", span="313-313", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_74 [label="instance = null", span="326-326", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_76 [label="_lastBarOfStream == null", span="336-336", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_79 [label="Previous = Current", span="346-346", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_78 [label="Previous = _lastBarOfStream", span="342-342", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_82 [label="_endOfStream = true", span="355-355", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_88 [label="return true;", span="368-368", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_83 [label="_isFillForward && Previous != null", span="357-357", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_84 [label="Current = Previous.Clone(true)", span="360-360", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_87 [label="return false;", span="366-366", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_85 [label="Current.Time = _security.Exchange.TimeOfDayClosed(Previous.Time)", span="362-362", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_86 [label="_lastBarOfStream = Previous", span="364-364", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_89 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="237-237", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FuturesExpiryFunctionsTests.cs"];
m5_31 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="114-114", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="FuturesExpiryFunctionsTests.cs"];
m5_227 [label="Entry System.ComponentModel.Component.Dispose()", span="0-0", cluster="System.ComponentModel.Component.Dispose()", file="FuturesExpiryFunctionsTests.cs"];
m5_107 [label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", span="74-74", cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_93 [label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", span="196-196", cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_204 [label="Entry QuantConnect.Compression.Unzip(string)", span="248-248", cluster="QuantConnect.Compression.Unzip(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_158 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_37 [label="Entry QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", span="108-108", cluster="QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_90 [label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", span="117-117", cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="FuturesExpiryFunctionsTests.cs"];
m5_97 [label="Entry QuantConnect.Securities.SecurityExchange.TimeOfDayClosed(System.DateTime)", span="185-185", cluster="QuantConnect.Securities.SecurityExchange.TimeOfDayClosed(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_199 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="FuturesExpiryFunctionsTests.cs"];
m5_225 [label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", span="146-146", cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", file="FuturesExpiryFunctionsTests.cs"];
m5_91 [label="Entry Unk._readerMethodInvoker", span="", cluster="Unk._readerMethodInvoker", file="FuturesExpiryFunctionsTests.cs"];
m5_29 [label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", span="58-58", cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_35 [label="Entry Unk.DelegateForCallMethod", span="", cluster="Unk.DelegateForCallMethod", file="FuturesExpiryFunctionsTests.cs"];
m5_121 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="425-425", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_122 [label="_date = date", span="428-428", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_125 [label="UpdateScaleFactors(date)", span="434-434", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_126 [label="!_security.Exchange.DateIsOpen(date)", span="438-438", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_129 [label="newSource = GetSource(date)", span="445-445", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_142 [label="Log.Error(''Failed to get StreamReader for data source('' + _source + ''), symbol('' + _mappedSymbol + ''). Skipping date('' + date.ToShortDateString() + ''). Reader is null.'')", span="479-479", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_123 [label="var newSource = ''''", span="429-429", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_124 [label=_hasScaleFactors, span="432-432", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_127 [label="_endOfStream = true", span="440-440", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_128 [label="return false;", span="441-441", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_130 [label="newSource == ''''", span="448-448", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_133 [label="_source != newSource && newSource != ''''", span="455-455", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_135 [label="_source = newSource", span="460-460", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_131 [label="_endOfStream = true", span="450-450", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_132 [label="return false;", span="451-451", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_134 [label="_endOfStream = false", span="458-458", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_151 [label="return true;", span="506-506", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_136 [label="Dispose()", span="462-462", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_137 [label="_reader = GetReader(_source)", span="468-468", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_138 [label=Exception, span="470-470", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_141 [label="_reader == null", span="477-477", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_139 [label="Log.Error(''SubscriptionDataReader.RefreshSource(): Failed to get reader: '' + err.Message)", span="472-472", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_140 [label="return false;", span="474-474", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_146 [label="Current = null", span="490-490", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_143 [label=_isDynamicallyLoadedData, span="482-482", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_144 [label="Engine.ResultHandler.ErrorMessage(''We could not fetch the requested data. This may not be valid data, or a failed download of custom data. Skipping source ('' + _source + '').'')", span="484-484", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_145 [label="return false;", span="486-486", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_147 [label="Previous = null", span="491-491", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_148 [label="MoveNext()", span="497-497", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_149 [label=Exception, span="499-499", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_150 [label="throw new Exception(''SubscriptionDataReader.RefreshSource(): Could not MoveNext to init stream: '' + _source + '' '' + err.Message + '' >> '' + err.StackTrace);", span="501-501", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_152 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="425-425", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_194 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_116 [label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", span="207-207", cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_207 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", span="597-597", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_208 [label="StreamReader reader", span="600-600", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_210 [label="var stream = _web.OpenRead(source)", span="604-604", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_211 [label="source.GetExtension() == ''.zip''", span="607-607", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_209 [label="_web = new WebClient()", span="603-603", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_212 [label="reader = Compression.UnzipStream(stream)", span="609-609", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_213 [label="reader = new StreamReader(stream)", span="613-613", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_214 [label="return reader;", span="616-616", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_215 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", span="597-597", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_205 [label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(System.IO.StreamReader, QuantConnect.DataFeedEndpoint)", span="104-104", cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(System.IO.StreamReader, QuantConnect.DataFeedEndpoint)", file="FuturesExpiryFunctionsTests.cs"];
m5_94 [label="Entry QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="46-46", cluster="QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="FuturesExpiryFunctionsTests.cs"];
m5_196 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_216 [label="Entry System.Net.WebClient.OpenRead(string)", span="0-0", cluster="System.Net.WebClient.OpenRead(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_193 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_96 [label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="189-189", cluster="QuantConnect.Data.BaseData.Clone(bool)", file="FuturesExpiryFunctionsTests.cs"];
m5_197 [label="Entry string.ToMD5()", span="109-109", cluster="string.ToMD5()", file="FuturesExpiryFunctionsTests.cs"];
m5_113 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="406-406", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_114 [label="return _security.Exchange.DateTimeIsExtendedOpen(time);", span="408-408", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_115 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="406-406", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_0 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="161-161", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_1 [label="_config = config", span="164-164", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_2 [label="_isFillForward = config.FillDataForward", span="167-167", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_3 [label="_periodStart = periodStart", span="170-170", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_4 [label="_periodFinish = periodFinish", span="171-171", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_5 [label="_security = security", span="174-174", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_6 [label="_isDynamicallyLoadedData = security.IsDynamicallyLoadedData", span="175-175", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_7 [label="_hasScaleFactors = SubscriptionAdjustment.HasScalingFactors(config.Symbol)", span="178-178", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_8 [label="_feedEndpoint = feed", span="181-181", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_9 [label="_objectActivator = ObjectActivator.GetActivator(config.Type)", span="184-184", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_11 [label="Engine.ResultHandler.ErrorMessage(''Custom data type ''' + config.Type.Name + ''' missing parameterless constructor E.g. public '' + config.Type.Name + ''() { }'')", span="188-188", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_22 [label="_priceFactors = SubscriptionAdjustment.GetFactorTable(config.Symbol)", span="217-217", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_23 [label="_symbolMap = SubscriptionAdjustment.GetMapTable(config.Symbol)", span="218-218", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_10 [label="_objectActivator == null", span="186-186", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_14 [label="var userObj = _objectActivator.Invoke(new object[] { })", span="194-194", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_12 [label="_endOfStream = true", span="189-189", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_13 [label="return;", span="190-190", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_15 [label="_dataFactory = userObj as BaseData", span="195-195", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_16 [label="var readerMethod = _dataFactory.GetType().GetMethod(''Reader'', new[] { typeof(SubscriptionDataConfig), typeof(string), typeof(DateTime), typeof(DataFeedEndpoint) })", span="198-198", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_17 [label="_readerMethodInvoker = readerMethod.DelegateForCallMethod()", span="201-201", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_18 [label="_getSourceMethod = _dataFactory.GetType().GetMethod(''GetSource'', new[] { typeof(SubscriptionDataConfig), typeof(DateTime), typeof(DataFeedEndpoint) })", span="204-204", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_19 [label="_dataFactory.GetType().Name == ''Quandl''", span="207-207", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_20 [label="((Quandl)_dataFactory).SetAuthCode(Config.Get(''quandl-auth-token''))", span="209-209", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_21 [label=_hasScaleFactors, span="215-215", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_24 [label=Exception, span="221-221", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_25 [label="Log.Error(''SubscriptionDataReader(): Fetching Price/Map Factors: '' + err.Message)", span="223-223", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_26 [label="_priceFactors = new SortedDictionary<DateTime, decimal>()", span="224-224", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_27 [label="_symbolMap = new SortedDictionary<DateTime, string>()", span="225-225", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", color=red, community=0, file="FuturesExpiryFunctionsTests.cs"];
m5_28 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="161-161", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_202 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="150-150", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="FuturesExpiryFunctionsTests.cs"];
m5_203 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_201 [label="Entry System.Net.WebClient.DownloadFile(string, string)", span="0-0", cluster="System.Net.WebClient.DownloadFile(string, string)", file="FuturesExpiryFunctionsTests.cs"];
m5_217 [label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287", cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="FuturesExpiryFunctionsTests.cs"];
m5_218 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="FuturesExpiryFunctionsTests.cs"];
m5_30 [label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="39-39", cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="FuturesExpiryFunctionsTests.cs"];
m5_34 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="FuturesExpiryFunctionsTests.cs"];
m5_106 [label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", span="176-176", cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_32 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="FuturesExpiryFunctionsTests.cs"];
m5_98 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="376-376", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_99 [label="_mappedSymbol = SubscriptionAdjustment.GetMappedSymbol(_symbolMap, date)", span="379-379", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_100 [label="_priceFactor = SubscriptionAdjustment.GetTimePriceFactor(_priceFactors, date)", span="380-380", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_101 [label=Exception, span="382-382", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_103 [label="_config.SetPriceScaleFactor(_priceFactor)", span="386-386", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_102 [label="Log.Error(''SubscriptionDataReader.UpdateScaleFactors(): '' + err.Message)", span="384-384", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_104 [label="_config.SetMappedSymbol(_mappedSymbol)", span="387-387", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_105 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="376-376", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_157 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="FuturesExpiryFunctionsTests.cs"];
m5_236 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="FuturesExpiryFunctionsTests.cs"];
m5_110 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="395-395", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_111 [label="return _security.Exchange.DateTimeIsOpen(time);", span="397-397", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_112 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="395-395", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_153 [label="Entry QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", span="163-163", cluster="QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", file="FuturesExpiryFunctionsTests.cs"];
m5_41 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="FuturesExpiryFunctionsTests.cs"];
m5_156 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", span="515-515", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_159 [label="string cache = ''./cache/data''", span="518-518", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_165 [label="var filename = source.ToMD5() + source.GetExtension()", span="525-525", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_170 [label="var uri = new Uri(source, UriKind.RelativeOrAbsolute)", span="534-534", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_173 [label="client.DownloadFile(source, location)", span="543-543", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_179 [label="File.Exists(source)", span="558-558", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_180 [label="source.GetExtension() == ''.zip''", span="560-560", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_181 [label="var sr = Compression.Unzip(source)", span="563-563", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_185 [label="reader = new SubscriptionStreamReader(source, _feedEndpoint)", span="570-570", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_186 [label="Log.Trace(''SubscriptionDataReader.GetReader(): Could not find QC Data, skipped: '' + source)", span="575-575", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_190 [label="reader = new SubscriptionStreamReader(source, _feedEndpoint)", span="583-583", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_160 [label="SubscriptionStreamReader reader = null", span="519-519", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_161 [label="!Directory.Exists(cache)", span="520-520", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_162 [label="Directory.CreateDirectory(cache)", span="520-520", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_163 [label="Directory.EnumerateFiles(cache)", span="521-521", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_166 [label="var location = cache + @''/'' + filename", span="526-526", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_164 [label="File.Delete(file)", span="521-521", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_167 [label=_feedEndpoint, span="529-529", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_174 [label="source = location", span="546-546", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_168 [label="DataFeedEndpoint.FileSystem", span="531-531", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_189 [label="DataFeedEndpoint.LiveTrading", span="582-582", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_169 [label="DataFeedEndpoint.Backtesting", span="532-532", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_171 [label="uri.IsAbsoluteUri && !uri.IsLoopback", span="537-537", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_172 [label="var client = new WebClient()", span="541-541", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_175 [label=Exception, span="549-549", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_176 [label="Engine.ResultHandler.ErrorMessage(''Error downloading custom data source file, skipped: '' + source + '' Err: '' + err.Message, err.StackTrace)", span="551-551", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_177 [label="Engine.ResultHandler.SamplePerformance(_date.Date, 0)", span="552-552", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_178 [label="return null;", span="553-553", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_182 [label="sr == null", span="564-564", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_184 [label="reader = new SubscriptionStreamReader(sr, _feedEndpoint)", span="565-565", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_183 [label="return null;", span="564-564", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_187 [label="Engine.ResultHandler.SamplePerformance(_date.Date, 0)", span="576-576", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_188 [label="return null;", span="577-577", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_191 [label="return reader;", span="587-587", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_192 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", span="515-515", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_108 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SetPriceScaleFactor(decimal)", span="128-128", cluster="QuantConnect.Data.SubscriptionDataConfig.SetPriceScaleFactor(decimal)", file="FuturesExpiryFunctionsTests.cs"];
m5_195 [label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0", cluster="System.IO.Directory.EnumerateFiles(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_95 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="128-128", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FuturesExpiryFunctionsTests.cs"];
m5_38 [label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", span="92-92", cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_117 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", span="415-415", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="FuturesExpiryFunctionsTests.cs"];
m5_118 [label="throw new NotImplementedException(''Reset method not implemented. Assumes loop will only be used once.'');", span="417-417", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="FuturesExpiryFunctionsTests.cs"];
m5_119 [label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", span="415-415", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="FuturesExpiryFunctionsTests.cs"];
m5_36 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="FuturesExpiryFunctionsTests.cs"];
m5_39 [label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", span="119-119", cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="FuturesExpiryFunctionsTests.cs"];
m5_92 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="FuturesExpiryFunctionsTests.cs"];
m5_237 [label="QuantConnect.Lean.Engine.SubscriptionDataReader", span="", file="FuturesExpiryFunctionsTests.cs"];
m6_38 [label="Entry System.DateTime.DaysInMonth(int, int)", span="0-0", cluster="System.DateTime.DaysInMonth(int, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_42 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", span="103-103", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_43 [label="var daysInMonth = DateTime.DaysInMonth(time.Year, time.Month)", span="105-105", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_44 [label="return (from day in Enumerable.Range(1, daysInMonth)\r\n                    where new DateTime(time.Year, time.Month, day).DayOfWeek == DayOfWeek.Friday\r\n                    select new DateTime(time.Year, time.Month, day)).ElementAt(2);", span="106-108", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_45 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", span="103-103", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_22 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", span="129-129", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_53 [label="return time.IsCommonBusinessDay() && !USHoliday.Dates.Contains(time);", span="131-131", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_54 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", span="129-129", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_0 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", span="32-32", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_1 [label="n < 0", span="34-34", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_2 [label="var businessDays = (-1) * n", span="36-36", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_4 [label="var previousDay = time.AddDays(-totalDays)", span="40-40", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_10 [label="return time.AddDays(-totalDays);", span="48-48", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_11 [label="var businessDays = n", span="52-52", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_13 [label="var previousDay = time.AddDays(totalDays)", span="56-56", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_19 [label="return time.AddDays(totalDays);", span="64-64", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_3 [label="var totalDays = 1", span="37-37", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_6 [label="businessDays--", span="43-43", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_7 [label="businessDays > 0", span="45-45", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_9 [label="businessDays > 0", span="46-46", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_8 [label="totalDays++", span="45-45", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_5 [label="NotHoliday(previousDay)", span="41-41", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_12 [label="var totalDays = 1", span="53-53", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_15 [label="businessDays--", span="59-59", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_16 [label="businessDays > 0", span="61-61", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_18 [label="businessDays > 0", span="62-62", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_17 [label="totalDays++", span="61-61", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_14 [label="NotHoliday(previousDay)", span="57-57", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_20 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", span="32-32", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_23 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", span="74-74", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_24 [label="var daysInMonth = DateTime.DaysInMonth(time.Year, time.Month)", span="76-76", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_25 [label="var lastDayOfMonth = new DateTime(time.Year, time.Month, daysInMonth)", span="77-77", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_26 [label="n > daysInMonth", span="78-78", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_27 [label="throw new ArgumentOutOfRangeException(''n'',String.Format(''Number of days ({0}) is larger than the size of month({1})'', n, daysInMonth));", span="80-80", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_28 [label="var businessDays = n", span="83-83", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_30 [label="var previousDay = lastDayOfMonth.AddDays(-totalDays)", span="87-87", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_36 [label="return lastDayOfMonth.AddDays(-totalDays);", span="95-95", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_29 [label="var totalDays = 0", span="84-84", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_32 [label="businessDays--", span="90-90", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_33 [label="businessDays > 0", span="92-92", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_35 [label="businessDays > 0", span="93-93", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_34 [label="totalDays++", span="92-92", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_31 [label="NotHoliday(previousDay)", span="88-88", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_37 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", span="74-74", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_39 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_40 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="FuturesExpiryUtilityFunctions.cs"];
m6_55 [label="Entry System.DateTime.IsCommonBusinessDay()", span="586-586", cluster="System.DateTime.IsCommonBusinessDay()", file="FuturesExpiryUtilityFunctions.cs"];
m6_46 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="FuturesExpiryUtilityFunctions.cs"];
m6_49 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", span="116-116", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_50 [label="var daysInMonth = DateTime.DaysInMonth(time.Year, time.Month)", span="118-118", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_51 [label="return (from day in Enumerable.Range(1, daysInMonth)\r\n                                  where new DateTime(time.Year, time.Month, day).DayOfWeek == DayOfWeek.Wednesday\r\n                                  select new DateTime(time.Year, time.Month, day)).ElementAt(2);", span="119-121", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_52 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", span="116-116", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_47 [label="Entry DateTime.cstr", span="", cluster="DateTime.cstr", file="FuturesExpiryUtilityFunctions.cs"];
m6_57 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", span="139-139", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_58 [label="Thursday.DayOfWeek != DayOfWeek.Thursday", span="141-141", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_63 [label="!NotHoliday(Thursday.AddDays(-i))", span="149-149", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_66 [label="!NotHoliday(Thursday.AddDays(-6))", span="155-155", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_59 [label="throw new ArgumentException(''Input to NotPrecededByHolidays must be a Thursday'');", span="143-143", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_60 [label="var result = true", span="145-145", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_61 [label="int i = 1", span="147-147", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_68 [label="return result;", span="159-159", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_62 [label="i <= 3", span="147-147", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_65 [label="i++", span="147-147", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_64 [label="result = false", span="151-151", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_67 [label="result = false", span="157-157", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", color=red, community=0, file="FuturesExpiryUtilityFunctions.cs"];
m6_69 [label="Exit QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", span="139-139", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctions.cs"];
m6_21 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FuturesExpiryUtilityFunctions.cs"];
m6_70 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="FuturesExpiryUtilityFunctions.cs"];
m6_48 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="FuturesExpiryUtilityFunctions.cs"];
m6_56 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="FuturesExpiryUtilityFunctions.cs"];
m7_6 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_46 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", span="135-135", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_47 [label="var inputDate = DateTime.ParseExact(time, ''dd/MM/yyyy'', null)", span="138-138", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_48 [label="var calculatedValue = FuturesExpiryUtilityFunctions.NotHoliday(inputDate)", span="141-141", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_49 [label="Assert.AreEqual(calculatedValue, true)", span="144-144", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_50 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", span="135-135", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForABusinessDay_ShouldReturnTrue(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_8 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_22 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", span="75-75", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_23 [label="var inputDate = DateTime.ParseExact(time, ''dd/MM/yyyy'', null)", span="78-78", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_24 [label="var calculatedDate = FuturesExpiryUtilityFunctions.NthLastBusinessDay(inputDate, numberOfDays)", span="81-81", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_25 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", span="75-75", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsMoreThanDaysInMonth_ShouldThrowException(string, int)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_32 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", span="103-103", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdFriday(System.DateTime)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_7 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", span="32-32", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.AddBusinessDays(System.DateTime, int)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_21 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", span="74-74", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NthLastBusinessDay(System.DateTime, int)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_45 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", span="129-129", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_33 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", span="104-104", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_34 [label="var inputMonth = DateTime.ParseExact(time, ''MM/yyyy'', null)", span="107-107", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_35 [label="var actualFriday = DateTime.ParseExact(actual, ''dd/MM/yyyy'', null)", span="108-108", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_36 [label="var calculatedFriday = FuturesExpiryUtilityFunctions.ThirdWednesday(inputMonth)", span="111-111", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_37 [label="Assert.AreEqual(calculatedFriday, actualFriday)", span="114-114", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_38 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", span="104-104", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdWednesday_WithNormalMonth_ShouldReturnThridWednesday(string, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_9 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", span="43-43", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_10 [label="var inputTime = DateTime.ParseExact(time, ''dd/MM/yyyy'', null)", span="46-46", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_11 [label="var actualDate = DateTime.ParseExact(actual, ''dd/MM/yyyy'', null)", span="47-47", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_12 [label="var calculatedDate = FuturesExpiryUtilityFunctions.AddBusinessDays(inputTime, n)", span="50-50", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_13 [label="Assert.AreEqual(calculatedDate, actualDate)", span="53-53", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_14 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", span="43-43", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithNegativeInput_ShouldReturnNthprecedingBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_0 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", span="27-27", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_1 [label="var inputTime = DateTime.ParseExact(time,''dd/MM/yyyy'', null)", span="30-30", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_2 [label="var actualDate = DateTime.ParseExact(actual, ''dd/MM/yyyy'', null)", span="31-31", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_3 [label="var calculatedDate = FuturesExpiryUtilityFunctions.AddBusinessDays(inputTime, n)", span="34-34", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_4 [label="Assert.AreEqual(calculatedDate, actualDate)", span="37-37", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_5 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", span="27-27", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.AddBusinessDays_WithPositiveInput_ShouldReturnNthSuccedingBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_56 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", span="163-163", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_57 [label="var inputDate = DateTime.ParseExact(day, ''dd/MM/yyyy'', null)", span="166-166", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_58 [label="var calculatedOutput = FuturesExpiryUtilityFunctions.NotPrecededByHoliday(inputDate)", span="169-169", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_59 [label="Assert.AreEqual(calculatedOutput, true)", span="172-172", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_60 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", span="163-163", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithNoHolidayInFourPrecedingDays_ShouldReturnTrue(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_61 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", span="177-177", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_62 [label="var inputDate = DateTime.ParseExact(day, ''dd/MM/yyyy'', null)", span="180-180", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_63 [label="var calculatedOutput = FuturesExpiryUtilityFunctions.NotPrecededByHoliday(inputDate)", span="183-183", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_64 [label="Assert.AreEqual(calculatedOutput, false)", span="186-186", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_65 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", span="177-177", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_ForThursdayWithHolidayInFourPrecedingDays_ShouldReturnFalse(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_15 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", span="59-59", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_16 [label="var inputDate = DateTime.ParseExact(time, ''dd/MM/yyyy'', null)", span="62-62", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_17 [label="var actualDate = DateTime.ParseExact(actual, ''dd/MM/yyyy'', null)", span="63-63", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_18 [label="var calculatedDate = FuturesExpiryUtilityFunctions.NthLastBusinessDay(inputDate,numberOfDays)", span="66-66", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_19 [label="Assert.AreEqual(calculatedDate, actualDate)", span="69-69", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_20 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", span="59-59", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NthLastBusinessDay_WithInputsLessThanDaysInMonth_ShouldReturnNthLastBusinessDay(string, int, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_39 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", span="116-116", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.ThirdWednesday(System.DateTime)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_55 [label="Entry QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", span="139-139", cluster="QuantConnect.Securities.Future.FuturesExpiryUtilityFunctions.NotPrecededByHoliday(System.DateTime)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_40 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", span="120-120", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_41 [label="var inputDate = DateTime.ParseExact(time, ''dd/MM/yyyy'', null)", span="123-123", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_42 [label="var calculatedValue = FuturesExpiryUtilityFunctions.NotHoliday(inputDate)", span="126-126", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_43 [label="Assert.AreEqual(calculatedValue, false)", span="129-129", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_44 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", span="120-120", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotHoliday_ForAHoliday_ShouldReturnFalse(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_26 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", span="88-88", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_27 [label="var inputMonth = DateTime.ParseExact(time,''MM/yyyy'', null)", span="91-91", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_28 [label="var actualFriday = DateTime.ParseExact(actual, ''dd/MM/yyyy'', null)", span="92-92", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_29 [label="var calculatedFriday = FuturesExpiryUtilityFunctions.ThirdFriday(inputMonth)", span="95-95", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_30 [label="Assert.AreEqual(calculatedFriday, actualFriday)", span="98-98", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_31 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", span="88-88", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.ThirdFriday_WithNormalMonth_ShouldReturnThridFriday(string, string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_51 [label="Entry QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", span="151-151", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_52 [label="var inputDate = DateTime.ParseExact(day, ''dd/MM/yyyy'', null)", span="154-154", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_53 [label="var calculatedOutput = FuturesExpiryUtilityFunctions.NotPrecededByHoliday(inputDate)", span="157-157", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", color=red, community=0, file="FuturesExpiryUtilityFunctionsTests.cs"];
m7_54 [label="Exit QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", span="151-151", cluster="QuantConnect.Tests.Common.Securities.Futures.FuturesExpiryUtilityFunctionsTests.NotPrecededByHoliday_WithNonThrusdayWeekday_ShouldThrowException(string)", file="FuturesExpiryUtilityFunctionsTests.cs"];
n226 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n226 -> n223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
n227 -> n30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
n228 -> n46  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n229 -> n172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n229 -> n199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n230 -> n174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n231 -> n178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
n232 -> n180  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n233 -> n196  [key=1, style=dashed, color=darkseagreen4, label=order];
n234 -> n208  [key=1, style=dashed, color=darkseagreen4, label=canonicalOption];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n0  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n7 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n7 -> n9  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance"];
n8 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n10 -> n17  [key=2, style=dotted];
n10 -> n21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n10 -> n22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n10 -> n24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n11 -> n12  [key=0, style=solid];
n11 -> n18  [key=2, style=dotted];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=error];
n11 -> n14  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n9 -> n10  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n22 -> n25  [key=0, style=solid];
n22 -> n26  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n24 -> n29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n15 -> n7  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n20 -> n24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
n23 -> n24  [key=0, style=solid];
n23 -> n27  [key=2, style=dotted];
n23 -> n30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n25 -> n20  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n31 -> n29  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n33 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n34 -> n46  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n34 -> n39  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n39 -> n40  [key=0, style=solid];
n39 -> n44  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n43  [key=2, style=dotted];
n37 -> n45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n36 -> n41  [key=0, style=solid];
n36 -> n42  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
n45 -> n46  [key=0, style=solid];
n41 -> n33  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n47 -> n45  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n49 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
n49 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n49 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
n49 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
n49 -> n98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
n49 -> n100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n117  [key=1, style=dashed, color=red, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n49 -> n54  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Setup"];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n55  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n51 -> n63  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n51 -> n180  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
n60 -> n61  [key=0, style=solid];
n60 -> n135  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=1, style=dashed, color=darkseagreen4, label=controls];
n63 -> n64  [key=0, style=solid];
n63 -> n17  [key=2, style=dotted];
n63 -> n137  [key=2, style=dotted];
n63 -> n171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n172 -> n173  [key=0, style=solid];
n172 -> n186  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n174 -> n187  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n188  [key=2, style=dotted];
n175 -> n189  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n190  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n177 -> n191  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n192  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n193  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=0, style=solid];
n181 -> n185  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n135  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n75  [key=0, style=solid];
n70 -> n138  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n141  [key=2, style=dotted];
n82 -> n80  [key=0, style=solid];
n82 -> n142  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n143  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n145  [key=2, style=dotted];
n92 -> n89  [key=0, style=solid];
n92 -> n146  [key=2, style=dotted];
n92 -> n195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n98 -> n99  [key=0, style=solid];
n98 -> n147  [key=2, style=dotted];
n98 -> n101  [key=1, style=dashed, color=darkseagreen4, label=holdings];
n100 -> n101  [key=0, style=solid];
n100 -> n149  [key=2, style=dotted];
n100 -> n112  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
n100 -> n117  [key=1, style=dashed, color=red, label=minResolution];
n100 -> n118  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
n199 -> n200  [key=0, style=solid];
n199 -> n201  [key=2, style=dotted];
n199 -> n202  [key=2, style=dotted];
n199 -> n203  [key=2, style=dotted];
n199 -> n204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n106 -> n107  [key=0, style=solid];
n106 -> n119  [key=0, style=solid];
n106 -> n153  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n156  [key=2, style=dotted];
n112 -> n208  [key=1, style=dashed, color=darkseagreen4, label=canonicalOption];
n113 -> n114  [key=0, style=solid];
n113 -> n157  [key=2, style=dotted];
n113 -> n158  [key=2, style=dotted];
n113 -> n207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n114 -> n115  [key=0, style=solid];
n114 -> n159  [key=2, style=dotted];
n115 -> n119  [key=0, style=solid];
n115 -> n160  [key=2, style=dotted];
n117 -> n119  [key=0, style=solid, color=red];
n117 -> n161  [key=2, style=dotted, color=red];
n118 -> n119  [key=0, style=solid];
n118 -> n156  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n119 -> n162  [key=2, style=dotted];
n120 -> n101  [key=0, style=solid];
n120 -> n163  [key=2, style=dotted];
n120 -> n164  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n165  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n58  [key=0, style=solid];
n55 -> n133  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n183  [key=0, style=solid];
n180 -> n185  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n132  [key=2, style=dotted];
n54 -> n131  [key=0, style=solid];
n132 -> n218  [key=0, style=solid];
n132 -> n53  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n132 -> n56  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n132 -> n135  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n132 -> n76  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n56 -> n57  [key=0, style=solid];
n56 -> n132  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n58 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n58 -> n68  [key=1, style=dashed, color=darkseagreen4, label=brokerageOnMessage];
n58 -> n58  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<QuantConnect.Brokerages.BrokerageMessageEvent> brokerageOnMessage"];
n57 -> n131  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n134  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=2, style=dotted];
n168 -> n132  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n136  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n67  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n132  [key=2, style=dotted];
n66 -> n130  [key=0, style=solid];
n66 -> n131  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n134  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n139  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n140  [key=2, style=dotted];
n73 -> n132  [key=2, style=dotted];
n74 -> n130  [key=0, style=solid];
n74 -> n131  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n76 -> n132  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n134  [key=2, style=dotted];
n77 -> n130  [key=0, style=solid];
n77 -> n131  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n83  [key=0, style=solid];
n80 -> n87  [key=0, style=solid];
n80 -> n82  [key=1, style=dashed, color=darkseagreen4, label=cash];
n81 -> n82  [key=0, style=solid];
n81 -> n134  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n134  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n139  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n132  [key=2, style=dotted];
n86 -> n130  [key=0, style=solid];
n86 -> n131  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n93  [key=0, style=solid];
n89 -> n97  [key=0, style=solid];
n89 -> n91  [key=1, style=dashed, color=darkseagreen4, label=order];
n89 -> n92  [key=1, style=dashed, color=darkseagreen4, label=order];
n89 -> n196  [key=1, style=dashed, color=darkseagreen4, label=order];
n90 -> n91  [key=0, style=solid];
n90 -> n144  [key=2, style=dotted];
n90 -> n134  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n134  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n195 -> n196  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n94 -> n139  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n132  [key=2, style=dotted];
n96 -> n130  [key=0, style=solid];
n96 -> n131  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n148  [key=2, style=dotted];
n99 -> n103  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
n99 -> n105  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
n101 -> n102  [key=0, style=solid];
n101 -> n121  [key=0, style=solid];
n101 -> n125  [key=0, style=solid];
n101 -> n103  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n104  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n105  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n106  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n107  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n110  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n111  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n112  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n114  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n115  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n116  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n117  [key=1, style=dashed, color=red, label=holding];
n101 -> n118  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n119  [key=1, style=dashed, color=darkseagreen4, label=holding];
n101 -> n120  [key=1, style=dashed, color=darkseagreen4, label=holding];
n103 -> n104  [key=0, style=solid];
n103 -> n106  [key=0, style=solid];
n103 -> n150  [key=2, style=dotted];
n105 -> n101  [key=0, style=solid];
n105 -> n152  [key=2, style=dotted];
n105 -> n132  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n134  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n151  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n144  [key=2, style=dotted];
n107 -> n134  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n116  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n116 -> n117  [key=0, style=solid, color=red];
n116 -> n118  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n154  [key=2, style=dotted];
n108 -> n114  [key=1, style=dashed, color=darkseagreen4, label=marketHoursDatabase];
n109 -> n110  [key=0, style=solid];
n109 -> n155  [key=2, style=dotted];
n109 -> n114  [key=1, style=dashed, color=darkseagreen4, label=symbolPropertiesDatabase];
n208 -> n209  [key=0, style=solid];
n208 -> n208  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
n207 -> n208  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n139  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n132  [key=2, style=dotted];
n124 -> n130  [key=0, style=solid];
n124 -> n131  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n130  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n132  [key=2, style=dotted];
n131 -> n49  [key=0, style=bold, color=blue];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n169 -> n166  [key=0, style=bold, color=blue];
n188 -> n210  [key=0, style=solid];
n188 -> n211  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>> GetConfiguredDataFeeds"];
n183 -> n184  [key=0, style=solid];
n185 -> n171  [key=0, style=bold, color=blue];
n182 -> n181  [key=0, style=solid];
n182 -> n194  [key=2, style=dotted];
n182 -> n182  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n184 -> n185  [key=0, style=solid];
n184 -> n132  [key=2, style=dotted];
n197 -> n195  [key=0, style=bold, color=blue];
n198 -> n199  [key=0, style=solid];
n200 -> n198  [key=0, style=bold, color=blue];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n205  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
n206 -> n204  [key=0, style=bold, color=blue];
n209 -> n207  [key=0, style=bold, color=blue];
n210 -> n211  [key=0, style=solid];
n210 -> n27  [key=2, style=dotted];
n210 -> n212  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
n210 -> n213  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
n211 -> n212  [key=0, style=solid];
n211 -> n216  [key=2, style=dotted];
n211 -> n214  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=0, style=solid];
n213 -> n214  [key=0, style=solid];
n213 -> n217  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n215 -> n188  [key=0, style=bold, color=blue];
n218 -> n219  [key=0, style=solid];
n218 -> n220  [key=2, style=dotted];
n219 -> n132  [key=0, style=bold, color=blue];
n221 -> n222  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n224  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=2, style=dotted];
n224 -> n221  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=2, style=dotted];
m1_45 -> m1_48  [key=2, style=dotted];
m1_46 -> m1_44  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_7 -> m1_0  [key=0, style=bold, color=blue];
m1_41 -> m1_49  [key=0, style=solid];
m1_41 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m1_41 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_41  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_39  [key=2, style=dotted];
m1_11 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateStatistics];
m1_11 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m1_11 -> m1_14  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Data.Auxiliary.FactorFile file"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_39  [key=2, style=dotted];
m1_12 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateOptionsStatistics];
m1_12 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m1_12 -> m1_14  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Data.Auxiliary.FactorFile file"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> n5  [key=2, style=dotted];
m1_37 -> m1_41  [key=2, style=dotted];
m1_37 -> m1_42  [key=2, style=dotted];
m1_37 -> m1_43  [key=2, style=dotted];
m1_37 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_39  [key=2, style=dotted];
m1_13 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=limitFillRegressionStatistics];
m1_13 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_39  [key=2, style=dotted];
m1_14 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=updateOrderRegressionStatistics];
m1_14 -> m1_11  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m1_14 -> m1_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m1_14 -> m1_13  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m1_14 -> m1_14  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile GetTestFactorFile"];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_39  [key=2, style=dotted];
m1_15 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=regressionStatistics];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_39  [key=2, style=dotted];
m1_16 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=universeSelectionRegressionStatistics];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_39  [key=2, style=dotted];
m1_17 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=customDataRegressionStatistics];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_39  [key=2, style=dotted];
m1_18 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=addRemoveSecurityRegressionStatistics];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_39  [key=2, style=dotted];
m1_19 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=dropboxBaseDataUniverseSelectionStatistics];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_39  [key=2, style=dotted];
m1_20 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=dropboxUniverseSelectionStatistics];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=parameterizedStatistics];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_39  [key=2, style=dotted];
m1_22 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=historyAlgorithmStatistics];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_39  [key=2, style=dotted];
m1_23 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=coarseFundamentalTop5AlgorithmStatistics];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_39  [key=2, style=dotted];
m1_24 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_39  [key=2, style=dotted];
m1_25 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=macdTrendAlgorithmStatistics];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_39  [key=2, style=dotted];
m1_26 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=optionSplitRegressionAlgorithmStatistics];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_39  [key=2, style=dotted];
m1_27 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=optionRenameRegressionAlgorithmStatistics];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=optionOpenInterestRegressionAlgorithmStatistics];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_39  [key=2, style=dotted];
m1_29 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=optionChainConsistencyRegressionAlgorithmStatistics];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_39  [key=2, style=dotted];
m1_30 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=2, style=dotted];
m1_31 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=optionExerciseAssignRegressionAlgorithmStatistics];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=basicTemplateDailyStatistics];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_39  [key=2, style=dotted];
m1_33 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=hourSplitStatistics];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=hourReverseSplitStatistics];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=2, style=dotted];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=fractionalQuantityRegressionStatistics];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=2, style=dotted];
m1_38 -> m1_10  [key=0, style=bold, color=blue];
m1_53 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m1_53 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m1_53 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m4_28 -> m4_29  [key=0, style=solid, color=red];
m4_28 -> m4_31  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_31  [key=0, style=solid, color=red];
m4_29 -> m4_20  [key=2, style=dotted, color=red];
m4_31 -> m4_32  [key=0, style=solid, color=red];
m4_31 -> m4_33  [key=2, style=dotted, color=red];
m4_30 -> m4_32  [key=0, style=solid, color=red];
m4_32 -> m4_28  [key=0, style=bold, color=blue];
m4_56 -> m4_57  [key=0, style=solid, color=red];
m4_57 -> m4_58  [key=0, style=solid, color=red];
m4_57 -> m4_59  [key=2, style=dotted, color=red];
m4_58 -> m4_56  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_60  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid, color=red];
m4_35 -> m4_36  [key=0, style=solid, color=red];
m4_35 -> m4_38  [key=1, style=dashed, color=red, label=other];
m4_36 -> m4_37  [key=0, style=solid, color=red];
m4_36 -> m4_38  [key=0, style=solid, color=red];
m4_38 -> m4_39  [key=0, style=solid, color=red];
m4_38 -> m4_28  [key=2, style=dotted, color=red];
m4_37 -> m4_39  [key=0, style=solid, color=red];
m4_37 -> n42  [key=2, style=dotted, color=red];
m4_37 -> m4_40  [key=2, style=dotted, color=red];
m4_37 -> m4_41  [key=2, style=dotted, color=red];
m4_39 -> m4_34  [key=0, style=bold, color=blue];
m4_23 -> m4_24  [key=0, style=solid, color=red];
m4_24 -> m4_25  [key=0, style=solid, color=red];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_26 -> m4_27  [key=0, style=solid, color=red];
m4_26 -> m4_4  [key=2, style=dotted, color=red];
m4_27 -> m4_23  [key=0, style=bold, color=blue];
m4_22 -> m4_65  [key=0, style=solid, color=red];
m4_22 -> m4_67  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorDataPoint"];
m4_65 -> m4_66  [key=0, style=solid, color=red];
m4_65 -> m4_67  [key=1, style=dashed, color=red, label=handler];
m4_67 -> m4_68  [key=0, style=solid, color=red];
m4_67 -> m4_69  [key=2, style=dotted, color=red];
m4_66 -> m4_67  [key=0, style=solid, color=red];
m4_66 -> m4_68  [key=0, style=solid, color=red];
m4_68 -> m4_22  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_7  [key=1, style=dashed, color=red, label=T];
m4_5 -> m4_8  [key=1, style=dashed, color=red, label=T];
m4_5 -> m4_10  [key=1, style=dashed, color=red, label=T];
m4_5 -> m4_11  [key=1, style=dashed, color=red, label=T];
m4_5 -> m4_13  [key=1, style=dashed, color=red, label=T];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_16  [key=0, style=solid, color=red];
m4_7 -> n42  [key=2, style=dotted, color=red];
m4_7 -> m4_18  [key=2, style=dotted, color=red];
m4_7 -> m4_19  [key=2, style=dotted, color=red];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_8 -> m4_15  [key=0, style=solid, color=red];
m4_8 -> m4_20  [key=2, style=dotted, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_11 -> m4_12  [key=0, style=solid, color=red];
m4_11 -> m4_21  [key=2, style=dotted, color=red];
m4_11 -> m4_13  [key=1, style=dashed, color=red, label=nextResult];
m4_13 -> m4_14  [key=0, style=solid, color=red];
m4_13 -> m4_4  [key=2, style=dotted, color=red];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_15 -> m4_16  [key=0, style=solid, color=red];
m4_12 -> m4_13  [key=0, style=solid, color=red];
m4_12 -> m4_15  [key=0, style=solid, color=red];
m4_14 -> m4_15  [key=0, style=solid, color=red];
m4_14 -> m4_22  [key=2, style=dotted, color=red];
m4_16 -> m4_5  [key=0, style=bold, color=blue];
m4_21 -> m4_62  [key=0, style=solid, color=red];
m4_62 -> m4_63  [key=0, style=solid, color=red];
m4_62 -> m4_64  [key=2, style=dotted, color=red];
m4_62 -> m4_60  [key=2, style=dotted, color=red];
m4_63 -> m4_21  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid, color=red];
m4_53 -> m4_54  [key=0, style=solid, color=red];
m4_53 -> m4_55  [key=2, style=dotted, color=red];
m4_54 -> m4_52  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_42 -> m4_45  [key=1, style=dashed, color=red, label=object];
m4_42 -> m4_46  [key=1, style=dashed, color=red, label=object];
m4_42 -> m4_47  [key=1, style=dashed, color=red, label=object];
m4_43 -> m4_44  [key=0, style=solid, color=red];
m4_43 -> m4_45  [key=0, style=solid, color=red];
m4_43 -> m4_20  [key=2, style=dotted, color=red];
m4_45 -> m4_46  [key=0, style=solid, color=red];
m4_45 -> m4_47  [key=0, style=solid, color=red];
m4_45 -> m4_40  [key=2, style=dotted, color=red];
m4_45 -> m4_50  [key=2, style=dotted, color=red];
m4_46 -> m4_49  [key=0, style=solid, color=red];
m4_46 -> m4_20  [key=2, style=dotted, color=red];
m4_47 -> m4_48  [key=0, style=solid, color=red];
m4_47 -> m4_51  [key=2, style=dotted, color=red];
m4_44 -> m4_49  [key=0, style=solid, color=red];
m4_48 -> m4_49  [key=0, style=solid, color=red];
m4_49 -> m4_42  [key=0, style=bold, color=blue];
m4_70 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_6  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_7  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_8  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_9  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_10  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_11  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_13  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_14  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_15  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_24  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_25  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_26  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_31  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_37  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_38  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_46  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_48  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_53  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_57  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_62  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_65  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m4_70 -> m4_67  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.IndicatorBase<T>"];
m5_154 -> m5_228  [key=0, style=solid];
m5_154 -> m5_230  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_154 -> m5_121  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime date"];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=newSource];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_234  [key=0, style=solid];
m5_230 -> m5_236  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_234  [key=0, style=solid];
m5_234 -> m5_235  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> n151  [key=2, style=dotted];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_31  [key=2, style=dotted];
m5_235 -> m5_154  [key=0, style=bold, color=blue];
m5_155 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_222  [key=0, style=solid];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_225  [key=2, style=dotted];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_224  [key=0, style=solid];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_226  [key=2, style=dotted];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_227  [key=2, style=dotted];
m5_224 -> m5_155  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_43 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_43 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_43 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_29  [key=3, color=darkorchid, style=bold, label="Local variable bool instanceMarketOpen"];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_75  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_88  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_51  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_89  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_90  [key=2, style=dotted];
m5_52 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=line];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_79  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_57  [key=0, style=solid];
m5_53 -> m5_91  [key=2, style=dotted];
m5_53 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_53 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_92  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_46  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_93  [key=2, style=dotted];
m5_58 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=instanceMarketOpen];
m5_58 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=instanceMarketOpen];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=0, style=solid];
m5_59 -> m5_64  [key=0, style=solid];
m5_59 -> m5_94  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_69  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_46  [key=0, style=solid];
m5_60 -> m5_46  [key=0, style=solid];
m5_60 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_60 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> n151  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_92  [key=2, style=dotted];
m5_65 -> m5_46  [key=0, style=solid];
m5_65 -> m5_95  [key=2, style=dotted];
m5_68 -> m5_46  [key=0, style=solid];
m5_68 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_68 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_68 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_68 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_68 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_70 -> m5_46  [key=0, style=solid];
m5_70 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_70 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_70 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_70 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_74 -> m5_46  [key=0, style=solid];
m5_74 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_74 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_74 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_78 -> m5_80  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_87  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_96  [key=2, style=dotted];
m5_87 -> m5_89  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_97  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_89 -> m5_42  [key=0, style=bold, color=blue];
m5_29 -> m5_29  [key=3, color=darkorchid, style=bold, label="Field variable bool _endOfStream"];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_121 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_121 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_121 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_121 -> m5_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool RefreshSource"];
m5_122 -> m5_123  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_98  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_129  [key=0, style=solid];
m5_126 -> m5_153  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_154  [key=2, style=dotted];
m5_129 -> m5_133  [key=1, style=dashed, color=darkseagreen4, label=newSource];
m5_129 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label=newSource];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_157  [key=2, style=dotted];
m5_142 -> n151  [key=2, style=dotted];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_154  [key=3, color=darkorchid, style=bold, label="Local variable string newSource"];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_126  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_128 -> m5_152  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_133  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_151  [key=0, style=solid];
m5_135 -> m5_136  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_132 -> m5_152  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_155  [key=2, style=dotted];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_141  [key=0, style=solid];
m5_137 -> m5_156  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_146  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> n151  [key=2, style=dotted];
m5_140 -> m5_152  [key=0, style=solid];
m5_146 -> m5_147  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_145  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_31  [key=2, style=dotted];
m5_145 -> m5_152  [key=0, style=solid];
m5_147 -> m5_148  [key=0, style=solid];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_151  [key=0, style=solid];
m5_148 -> m5_42  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_150 -> m5_152  [key=0, style=solid];
m5_150 -> m5_158  [key=2, style=dotted];
m5_152 -> m5_121  [key=0, style=bold, color=blue];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_207 -> m5_211  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_208 -> m5_209  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_216  [key=2, style=dotted];
m5_210 -> m5_212  [key=1, style=dashed, color=darkseagreen4, label=stream];
m5_210 -> m5_213  [key=1, style=dashed, color=darkseagreen4, label=stream];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_213  [key=0, style=solid];
m5_211 -> m5_198  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_200  [key=2, style=dotted];
m5_212 -> m5_214  [key=0, style=solid];
m5_212 -> m5_217  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_218  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_215 -> m5_207  [key=0, style=bold, color=blue];
m5_113 -> m5_114  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [key=2, style=dotted];
m5_115 -> m5_113  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_0 -> m5_2  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_0 -> m5_3  [key=1, style=dashed, color=red, label="System.DateTime"];
m5_0 -> m5_4  [key=1, style=dashed, color=red, label="System.DateTime"];
m5_0 -> m5_5  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Security"];
m5_0 -> m5_6  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Security"];
m5_0 -> m5_7  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.DataFeedEndpoint"];
m5_0 -> m5_9  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_0 -> m5_11  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_0 -> m5_22  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_0 -> m5_23  [key=1, style=dashed, color=red, label="QuantConnect.Data.SubscriptionDataConfig"];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_2 -> m5_3  [key=0, style=solid, color=red];
m5_3 -> m5_4  [key=0, style=solid, color=red];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_7 -> m5_8  [key=0, style=solid, color=red];
m5_7 -> m5_29  [key=2, style=dotted, color=red];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_30  [key=2, style=dotted, color=red];
m5_11 -> m5_12  [key=0, style=solid, color=red];
m5_11 -> m5_31  [key=2, style=dotted, color=red];
m5_22 -> m5_23  [key=0, style=solid, color=red];
m5_22 -> m5_38  [key=2, style=dotted, color=red];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_23 -> m5_28  [key=0, style=solid, color=red];
m5_23 -> m5_39  [key=2, style=dotted, color=red];
m5_10 -> m5_11  [key=0, style=solid, color=red];
m5_10 -> m5_14  [key=0, style=solid, color=red];
m5_14 -> m5_15  [key=0, style=solid, color=red];
m5_14 -> m5_32  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_13 -> m5_28  [key=0, style=solid, color=red];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_16 -> m5_33  [key=2, style=dotted, color=red];
m5_16 -> m5_34  [key=2, style=dotted, color=red];
m5_17 -> m5_18  [key=0, style=solid, color=red];
m5_17 -> m5_35  [key=2, style=dotted, color=red];
m5_18 -> m5_19  [key=0, style=solid, color=red];
m5_18 -> m5_33  [key=2, style=dotted, color=red];
m5_18 -> m5_34  [key=2, style=dotted, color=red];
m5_19 -> m5_20  [key=0, style=solid, color=red];
m5_19 -> m5_21  [key=0, style=solid, color=red];
m5_19 -> m5_33  [key=2, style=dotted, color=red];
m5_20 -> m5_21  [key=0, style=solid, color=red];
m5_20 -> m5_36  [key=2, style=dotted, color=red];
m5_20 -> m5_37  [key=2, style=dotted, color=red];
m5_21 -> m5_22  [key=0, style=solid, color=red];
m5_21 -> m5_24  [key=0, style=solid, color=red];
m5_21 -> m5_28  [key=0, style=solid, color=red];
m5_24 -> m5_25  [key=0, style=solid, color=red];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> n151  [key=2, style=dotted, color=red];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_41  [key=2, style=dotted, color=red];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_41  [key=2, style=dotted, color=red];
m5_28 -> m5_0  [key=0, style=bold, color=blue];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_98 -> m5_121  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime date"];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_106  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_103  [key=0, style=solid];
m5_100 -> m5_107  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_108  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> n151  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_109  [key=2, style=dotted];
m5_105 -> m5_98  [key=0, style=bold, color=blue];
m5_110 -> m5_111  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_93  [key=2, style=dotted];
m5_112 -> m5_110  [key=0, style=bold, color=blue];
m5_156 -> m5_159  [key=0, style=solid];
m5_156 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_156 -> m5_166  [key=3, color=darkorchid, style=bold, label="Parameter variable string source"];
m5_156 -> m5_160  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Lean.Engine.SubscriptionStreamReader GetReader"];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=cache];
m5_159 -> m5_162  [key=1, style=dashed, color=darkseagreen4, label=cache];
m5_159 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=cache];
m5_159 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label=cache];
m5_159 -> m5_159  [key=3, color=darkorchid, style=bold, label="Local variable string cache"];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_197  [key=2, style=dotted];
m5_165 -> m5_198  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_199  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_201  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_186  [key=0, style=solid];
m5_179 -> m5_203  [key=2, style=dotted];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_185  [key=0, style=solid];
m5_180 -> m5_198  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_204  [key=2, style=dotted];
m5_181 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label=sr];
m5_185 -> m5_191  [key=0, style=solid];
m5_185 -> m5_206  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_95  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_206  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=0, style=solid];
m5_161 -> m5_193  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_194  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_165  [key=0, style=solid];
m5_163 -> m5_195  [key=2, style=dotted];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=location];
m5_166 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=location];
m5_164 -> m5_163  [key=0, style=solid];
m5_164 -> m5_196  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_189  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_179  [key=0, style=solid];
m5_174 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_174 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_174 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_174 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_174 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_174 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_168 -> m5_169  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_179  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_200  [key=2, style=dotted];
m5_175 -> m5_176  [key=0, style=solid];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_31  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_202  [key=2, style=dotted];
m5_178 -> m5_192  [key=0, style=solid];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_184  [key=0, style=solid];
m5_184 -> m5_191  [key=0, style=solid];
m5_184 -> m5_205  [key=2, style=dotted];
m5_183 -> m5_192  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_202  [key=2, style=dotted];
m5_188 -> m5_192  [key=0, style=solid];
m5_191 -> m5_192  [key=0, style=solid];
m5_192 -> m5_156  [key=0, style=bold, color=blue];
m5_117 -> m5_118  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=2, style=dotted];
m5_119 -> m5_117  [key=0, style=bold, color=blue];
m5_237 -> m5_1  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_2  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_3  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_4  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_5  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_6  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_7  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_9  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_10  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_12  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_15  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_16  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_17  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_18  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_19  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_20  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_21  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_22  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_23  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_26  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_27  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m5_237 -> m5_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_42 -> m6_43  [key=0, style=solid, color=red];
m6_42 -> m6_44  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_43 -> m6_44  [key=0, style=solid, color=red];
m6_43 -> m6_38  [key=2, style=dotted, color=red];
m6_44 -> m6_45  [key=0, style=solid, color=red];
m6_44 -> m6_46  [key=2, style=dotted, color=red];
m6_44 -> m6_39  [key=2, style=dotted, color=red];
m6_44 -> m6_47  [key=2, style=dotted, color=red];
m6_44 -> m6_48  [key=2, style=dotted, color=red];
m6_44 -> m6_44  [key=1, style=dashed, color=red, label=day];
m6_45 -> m6_42  [key=0, style=bold, color=blue];
m6_22 -> m6_53  [key=0, style=solid, color=red];
m6_22 -> m6_4  [key=3, color=red, style=bold, label="Parameter variable System.DateTime time"];
m6_22 -> m6_13  [key=3, color=red, style=bold, label="Parameter variable System.DateTime time"];
m6_22 -> m6_30  [key=3, color=red, style=bold, label="Parameter variable System.DateTime time"];
m6_53 -> m6_54  [key=0, style=solid, color=red];
m6_53 -> m6_55  [key=2, style=dotted, color=red];
m6_53 -> m6_56  [key=2, style=dotted, color=red];
m6_54 -> m6_22  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_0 -> m6_2  [key=1, style=dashed, color=red, label=int];
m6_0 -> m6_4  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_0 -> m6_10  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_0 -> m6_11  [key=1, style=dashed, color=red, label=int];
m6_0 -> m6_13  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_0 -> m6_19  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_11  [key=0, style=solid, color=red];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_6  [key=1, style=dashed, color=red, label=businessDays];
m6_2 -> m6_7  [key=1, style=dashed, color=red, label=businessDays];
m6_2 -> m6_9  [key=1, style=dashed, color=red, label=businessDays];
m6_4 -> m6_5  [key=0, style=solid, color=red];
m6_4 -> m6_21  [key=2, style=dotted, color=red];
m6_10 -> m6_20  [key=0, style=solid, color=red];
m6_10 -> m6_21  [key=2, style=dotted, color=red];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_11 -> m6_15  [key=1, style=dashed, color=red, label=businessDays];
m6_11 -> m6_16  [key=1, style=dashed, color=red, label=businessDays];
m6_11 -> m6_18  [key=1, style=dashed, color=red, label=businessDays];
m6_11 -> m6_0  [key=3, color=red, style=bold, label="Local variable int businessDays"];
m6_13 -> m6_14  [key=0, style=solid, color=red];
m6_13 -> m6_21  [key=2, style=dotted, color=red];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_21  [key=2, style=dotted, color=red];
m6_3 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_8  [key=1, style=dashed, color=red, label=totalDays];
m6_3 -> m6_10  [key=1, style=dashed, color=red, label=totalDays];
m6_3 -> m6_3  [key=3, color=red, style=bold, label="Local variable int totalDays"];
m6_6 -> m6_7  [key=0, style=solid, color=red];
m6_6 -> m6_6  [key=1, style=dashed, color=red, label=businessDays];
m6_6 -> m6_9  [key=1, style=dashed, color=red, label=businessDays];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_7 -> m6_9  [key=0, style=solid, color=red];
m6_9 -> m6_3  [key=0, style=solid, color=red];
m6_9 -> m6_10  [key=0, style=solid, color=red];
m6_8 -> m6_9  [key=0, style=solid, color=red];
m6_8 -> m6_8  [key=1, style=dashed, color=red, label=totalDays];
m6_8 -> m6_10  [key=1, style=dashed, color=red, label=totalDays];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_7  [key=0, style=solid, color=red];
m6_5 -> m6_22  [key=2, style=dotted, color=red];
m6_12 -> m6_13  [key=0, style=solid, color=red];
m6_12 -> m6_17  [key=1, style=dashed, color=red, label=totalDays];
m6_12 -> m6_19  [key=1, style=dashed, color=red, label=totalDays];
m6_12 -> m6_3  [key=3, color=red, style=bold, label="Local variable int totalDays"];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_15 -> m6_15  [key=1, style=dashed, color=red, label=businessDays];
m6_15 -> m6_18  [key=1, style=dashed, color=red, label=businessDays];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_16 -> m6_18  [key=0, style=solid, color=red];
m6_18 -> m6_12  [key=0, style=solid, color=red];
m6_18 -> m6_19  [key=0, style=solid, color=red];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_17  [key=1, style=dashed, color=red, label=totalDays];
m6_17 -> m6_19  [key=1, style=dashed, color=red, label=totalDays];
m6_14 -> m6_15  [key=0, style=solid, color=red];
m6_14 -> m6_16  [key=0, style=solid, color=red];
m6_14 -> m6_22  [key=2, style=dotted, color=red];
m6_20 -> m6_0  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid, color=red];
m6_23 -> m6_25  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_23 -> m6_26  [key=1, style=dashed, color=red, label=int];
m6_23 -> m6_27  [key=1, style=dashed, color=red, label=int];
m6_23 -> m6_28  [key=1, style=dashed, color=red, label=int];
m6_24 -> m6_25  [key=0, style=solid, color=red];
m6_24 -> m6_38  [key=2, style=dotted, color=red];
m6_24 -> m6_26  [key=1, style=dashed, color=red, label=daysInMonth];
m6_24 -> m6_27  [key=1, style=dashed, color=red, label=daysInMonth];
m6_25 -> m6_26  [key=0, style=solid, color=red];
m6_25 -> m6_39  [key=2, style=dotted, color=red];
m6_25 -> m6_30  [key=1, style=dashed, color=red, label=lastDayOfMonth];
m6_25 -> m6_36  [key=1, style=dashed, color=red, label=lastDayOfMonth];
m6_26 -> m6_27  [key=0, style=solid, color=red];
m6_26 -> m6_28  [key=0, style=solid, color=red];
m6_27 -> m6_37  [key=0, style=solid, color=red];
m6_27 -> m6_40  [key=2, style=dotted, color=red];
m6_27 -> n170  [key=2, style=dotted, color=red];
m6_28 -> m6_29  [key=0, style=solid, color=red];
m6_28 -> m6_32  [key=1, style=dashed, color=red, label=businessDays];
m6_28 -> m6_33  [key=1, style=dashed, color=red, label=businessDays];
m6_28 -> m6_35  [key=1, style=dashed, color=red, label=businessDays];
m6_28 -> m6_23  [key=3, color=red, style=bold, label="Local variable int businessDays"];
m6_30 -> m6_31  [key=0, style=solid, color=red];
m6_30 -> m6_21  [key=2, style=dotted, color=red];
m6_36 -> m6_37  [key=0, style=solid, color=red];
m6_36 -> m6_21  [key=2, style=dotted, color=red];
m6_29 -> m6_30  [key=0, style=solid, color=red];
m6_29 -> m6_34  [key=1, style=dashed, color=red, label=totalDays];
m6_29 -> m6_36  [key=1, style=dashed, color=red, label=totalDays];
m6_29 -> m6_29  [key=3, color=red, style=bold, label="Local variable int totalDays"];
m6_32 -> m6_33  [key=0, style=solid, color=red];
m6_32 -> m6_32  [key=1, style=dashed, color=red, label=businessDays];
m6_32 -> m6_35  [key=1, style=dashed, color=red, label=businessDays];
m6_33 -> m6_34  [key=0, style=solid, color=red];
m6_33 -> m6_35  [key=0, style=solid, color=red];
m6_35 -> m6_29  [key=0, style=solid, color=red];
m6_35 -> m6_36  [key=0, style=solid, color=red];
m6_34 -> m6_35  [key=0, style=solid, color=red];
m6_34 -> m6_34  [key=1, style=dashed, color=red, label=totalDays];
m6_34 -> m6_36  [key=1, style=dashed, color=red, label=totalDays];
m6_31 -> m6_32  [key=0, style=solid, color=red];
m6_31 -> m6_33  [key=0, style=solid, color=red];
m6_31 -> m6_22  [key=2, style=dotted, color=red];
m6_37 -> m6_23  [key=0, style=bold, color=blue];
m6_49 -> m6_50  [key=0, style=solid, color=red];
m6_49 -> m6_51  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_50 -> m6_51  [key=0, style=solid, color=red];
m6_50 -> m6_38  [key=2, style=dotted, color=red];
m6_51 -> m6_52  [key=0, style=solid, color=red];
m6_51 -> m6_46  [key=2, style=dotted, color=red];
m6_51 -> m6_39  [key=2, style=dotted, color=red];
m6_51 -> m6_47  [key=2, style=dotted, color=red];
m6_51 -> m6_48  [key=2, style=dotted, color=red];
m6_51 -> m6_51  [key=1, style=dashed, color=red, label=day];
m6_52 -> m6_49  [key=0, style=bold, color=blue];
m6_57 -> m6_58  [key=0, style=solid, color=red];
m6_57 -> m6_63  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_57 -> m6_66  [key=1, style=dashed, color=red, label="System.DateTime"];
m6_57 -> m6_60  [key=3, color=red, style=bold, label="method methodReturn bool NotPrecededByHoliday"];
m6_58 -> m6_59  [key=0, style=solid, color=red];
m6_58 -> m6_60  [key=0, style=solid, color=red];
m6_63 -> m6_64  [key=0, style=solid, color=red];
m6_63 -> m6_65  [key=0, style=solid, color=red];
m6_63 -> m6_21  [key=2, style=dotted, color=red];
m6_63 -> m6_22  [key=2, style=dotted, color=red];
m6_66 -> m6_67  [key=0, style=solid, color=red];
m6_66 -> m6_68  [key=0, style=solid, color=red];
m6_66 -> m6_21  [key=2, style=dotted, color=red];
m6_66 -> m6_22  [key=2, style=dotted, color=red];
m6_59 -> m6_69  [key=0, style=solid, color=red];
m6_59 -> m6_70  [key=2, style=dotted, color=red];
m6_60 -> m6_61  [key=0, style=solid, color=red];
m6_60 -> m6_68  [key=1, style=dashed, color=red, label=result];
m6_60 -> m6_60  [key=3, color=red, style=bold, label="Local variable bool result"];
m6_61 -> m6_62  [key=0, style=solid, color=red];
m6_61 -> m6_63  [key=1, style=dashed, color=red, label=i];
m6_61 -> m6_65  [key=1, style=dashed, color=red, label=i];
m6_61 -> m6_3  [key=3, color=red, style=bold, label="Local variable int i"];
m6_68 -> m6_69  [key=0, style=solid, color=red];
m6_62 -> m6_63  [key=0, style=solid, color=red];
m6_62 -> m6_66  [key=0, style=solid, color=red];
m6_65 -> m6_62  [key=0, style=solid, color=red];
m6_65 -> m6_65  [key=1, style=dashed, color=red, label=i];
m6_64 -> m6_65  [key=0, style=solid, color=red];
m6_64 -> m6_68  [key=1, style=dashed, color=red, label=result];
m6_67 -> m6_68  [key=0, style=solid, color=red];
m6_69 -> m6_57  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid, color=red];
m7_47 -> m7_48  [key=0, style=solid, color=red];
m7_47 -> m7_6  [key=2, style=dotted, color=red];
m7_48 -> m7_49  [key=0, style=solid, color=red];
m7_48 -> m7_45  [key=2, style=dotted, color=red];
m7_49 -> m7_50  [key=0, style=solid, color=red];
m7_49 -> m7_8  [key=2, style=dotted, color=red];
m7_50 -> m7_46  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid, color=red];
m7_22 -> m7_24  [key=1, style=dashed, color=red, label=int];
m7_23 -> m7_24  [key=0, style=solid, color=red];
m7_23 -> m7_6  [key=2, style=dotted, color=red];
m7_24 -> m7_25  [key=0, style=solid, color=red];
m7_24 -> m7_21  [key=2, style=dotted, color=red];
m7_25 -> m7_22  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid, color=red];
m7_33 -> m7_35  [key=1, style=dashed, color=red, label=string];
m7_34 -> m7_35  [key=0, style=solid, color=red];
m7_34 -> m7_6  [key=2, style=dotted, color=red];
m7_34 -> m7_36  [key=1, style=dashed, color=red, label=inputMonth];
m7_35 -> m7_36  [key=0, style=solid, color=red];
m7_35 -> m7_6  [key=2, style=dotted, color=red];
m7_35 -> m7_37  [key=1, style=dashed, color=red, label=actualFriday];
m7_36 -> m7_37  [key=0, style=solid, color=red];
m7_36 -> m7_39  [key=2, style=dotted, color=red];
m7_37 -> m7_38  [key=0, style=solid, color=red];
m7_37 -> m7_8  [key=2, style=dotted, color=red];
m7_38 -> m7_33  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_9 -> m7_11  [key=1, style=dashed, color=red, label=string];
m7_9 -> m7_12  [key=1, style=dashed, color=red, label=int];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_10 -> m7_6  [key=2, style=dotted, color=red];
m7_10 -> m7_12  [key=1, style=dashed, color=red, label=inputTime];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_6  [key=2, style=dotted, color=red];
m7_11 -> m7_13  [key=1, style=dashed, color=red, label=actualDate];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_12 -> m7_7  [key=2, style=dotted, color=red];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_13 -> m7_8  [key=2, style=dotted, color=red];
m7_14 -> m7_9  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_0 -> m7_2  [key=1, style=dashed, color=red, label=string];
m7_0 -> m7_3  [key=1, style=dashed, color=red, label=int];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_6  [key=2, style=dotted, color=red];
m7_1 -> m7_3  [key=1, style=dashed, color=red, label=inputTime];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_6  [key=2, style=dotted, color=red];
m7_2 -> m7_4  [key=1, style=dashed, color=red, label=actualDate];
m7_3 -> m7_4  [key=0, style=solid, color=red];
m7_3 -> m7_7  [key=2, style=dotted, color=red];
m7_4 -> m7_5  [key=0, style=solid, color=red];
m7_4 -> m7_8  [key=2, style=dotted, color=red];
m7_5 -> m7_0  [key=0, style=bold, color=blue];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_57 -> m7_58  [key=0, style=solid, color=red];
m7_57 -> m7_6  [key=2, style=dotted, color=red];
m7_58 -> m7_59  [key=0, style=solid, color=red];
m7_58 -> m7_55  [key=2, style=dotted, color=red];
m7_59 -> m7_60  [key=0, style=solid, color=red];
m7_59 -> m7_8  [key=2, style=dotted, color=red];
m7_60 -> m7_56  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid, color=red];
m7_62 -> m7_63  [key=0, style=solid, color=red];
m7_62 -> m7_6  [key=2, style=dotted, color=red];
m7_63 -> m7_64  [key=0, style=solid, color=red];
m7_63 -> m7_55  [key=2, style=dotted, color=red];
m7_64 -> m7_65  [key=0, style=solid, color=red];
m7_64 -> m7_8  [key=2, style=dotted, color=red];
m7_65 -> m7_61  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_17  [key=1, style=dashed, color=red, label=string];
m7_15 -> m7_18  [key=1, style=dashed, color=red, label=int];
m7_16 -> m7_17  [key=0, style=solid, color=red];
m7_16 -> m7_6  [key=2, style=dotted, color=red];
m7_16 -> m7_18  [key=1, style=dashed, color=red, label=inputDate];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_6  [key=2, style=dotted, color=red];
m7_17 -> m7_19  [key=1, style=dashed, color=red, label=actualDate];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_18 -> m7_21  [key=2, style=dotted, color=red];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_19 -> m7_8  [key=2, style=dotted, color=red];
m7_20 -> m7_15  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid, color=red];
m7_41 -> m7_42  [key=0, style=solid, color=red];
m7_41 -> m7_6  [key=2, style=dotted, color=red];
m7_42 -> m7_43  [key=0, style=solid, color=red];
m7_42 -> m7_45  [key=2, style=dotted, color=red];
m7_43 -> m7_44  [key=0, style=solid, color=red];
m7_43 -> m7_8  [key=2, style=dotted, color=red];
m7_44 -> m7_40  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid, color=red];
m7_26 -> m7_28  [key=1, style=dashed, color=red, label=string];
m7_27 -> m7_28  [key=0, style=solid, color=red];
m7_27 -> m7_6  [key=2, style=dotted, color=red];
m7_27 -> m7_29  [key=1, style=dashed, color=red, label=inputMonth];
m7_28 -> m7_29  [key=0, style=solid, color=red];
m7_28 -> m7_6  [key=2, style=dotted, color=red];
m7_28 -> m7_30  [key=1, style=dashed, color=red, label=actualFriday];
m7_29 -> m7_30  [key=0, style=solid, color=red];
m7_29 -> m7_32  [key=2, style=dotted, color=red];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_30 -> m7_8  [key=2, style=dotted, color=red];
m7_31 -> m7_26  [key=0, style=bold, color=blue];
m7_51 -> m7_52  [key=0, style=solid, color=red];
m7_52 -> m7_53  [key=0, style=solid, color=red];
m7_52 -> m7_6  [key=2, style=dotted, color=red];
m7_53 -> m7_54  [key=0, style=solid, color=red];
m7_53 -> m7_55  [key=2, style=dotted, color=red];
m7_54 -> m7_51  [key=0, style=bold, color=blue];
}
