digraph  {
n56 [label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext", span=""];
n0 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n1 [label="Insight = insight", span="95-95", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n3 [label="CurrentValues = InitialValues = initialValues", span="98-98", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n5 [label="InsightPeriodEndTimeUtc = insight.GeneratedTimeUtc + insight.Period", span="102-102", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", color=red, community=0];
n6 [label="var barSize = Time.Max(analysisPeriod.ToHigherResolutionEquivalent(false).ToTimeSpan(), Time.OneMinute)", span="104-104", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n7 [label="var barCount = (int)(insight.Period.Ticks / barSize.Ticks)", span="105-105", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n8 [label="AnalysisEndTimeUtc = Time.GetEndTimeForTradeBars(initialValues.ExchangeHours, insight.CloseTimeUtc, analysisPeriod.ToHigherResolutionEquivalent(false).ToTimeSpan(), barCount, false)", span="106-106", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n9 [label="_analysisPeriod = AnalysisEndTimeUtc - initialValues.TimeUtc", span="107-107", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n2 [label="_contextStorage = new Dictionary<string, object>()", span="96-96", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n4 [label="_previousEvaluationTimeUtc = CurrentValues.TimeUtc", span="100-100", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n12 [label="Entry System.TimeSpan.ToHigherResolutionEquivalent(bool)", span="752-752", cluster="System.TimeSpan.ToHigherResolutionEquivalent(bool)"];
n13 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724", cluster="QuantConnect.Resolution.ToTimeSpan()"];
n14 [label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="195-195", cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)"];
n15 [label="Entry QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="469-469", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)"];
n10 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)"];
n16 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", span="113-113", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)"];
n17 [label="_previousEvaluationTimeUtc = CurrentValues.TimeUtc", span="115-115", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)"];
n18 [label="values.TimeUtc >= InsightPeriodEndTimeUtc", span="117-117", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", color=red, community=0];
n20 [label="CurrentValues = values", span="122-122", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)"];
n19 [label="InsightPeriodClosed = true", span="119-119", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)"];
n21 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", span="113-113", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)"];
n22 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)", span="132-132", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n23 [label="object value", span="134-134", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n24 [label="_contextStorage.TryGetValue(key, out value)", span="135-135", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n25 [label="return (T)value;", span="137-137", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n26 [label="return default(T);", span="140-140", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n28 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
n27 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)", span="132-132", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Get<T>(string)"];
n29 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Set(string, object)", span="148-148", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Set(string, object)"];
n30 [label="_contextStorage[key] = value", span="150-150", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Set(string, object)"];
n31 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Set(string, object)", span="148-148", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Set(string, object)"];
n32 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", span="158-158", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)"];
n33 [label="scoreType == InsightScoreType.Magnitude", span="160-160", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)"];
n34 [label="return Insight.Magnitude.HasValue;", span="162-162", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)"];
n35 [label="return true;", span="165-165", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)"];
n36 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", span="158-158", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)"];
n37 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ToString()", span="171-171", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ToString()"];
n38 [label="return $''{Insight.Id}: {Insight.GeneratedTimeUtc}/{Insight.CloseTimeUtc} -- {Insight.Score}'';", span="173-173", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ToString()"];
n39 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ToString()", span="171-171", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ToString()"];
n40 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.GetHashCode()", span="179-179", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.GetHashCode()"];
n41 [label="return Id.GetHashCode();", span="181-181", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.GetHashCode()"];
n42 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.GetHashCode()", span="179-179", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.GetHashCode()"];
n43 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()"];
n44 [label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)", span="188-188", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n45 [label="ReferenceEquals(null, obj)", span="190-190", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n47 [label="ReferenceEquals(this, obj)", span="191-191", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n49 [label="obj.GetType() != GetType()", span="192-192", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n51 [label="return Id.Equals(((InsightAnalysisContext)obj).Id);", span="193-193", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n46 [label="return false;", span="190-190", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n53 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)"];
n48 [label="return true;", span="191-191", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n50 [label="return false;", span="192-192", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n54 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n52 [label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)", span="188-188", cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.Equals(object)"];
n55 [label="Entry System.Guid.Equals(System.Guid)", span="0-0", cluster="System.Guid.Equals(System.Guid)"];
m0_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ManualUniverseSelectionModel.cs"];
m0_16 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ManualUniverseSelectionModel.cs"];
m0_17 [label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36", cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="ManualUniverseSelectionModel.cs"];
m0_22 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_28 [label="MarketHoursDatabase.Entry entry", span="97-97", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_27 [label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="95-95", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_29 [label="var market = grp.Key.Market", span="99-99", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_35 [label="entry = MarketHours.SetEntry(market, symbolString, securityType, alwaysOpen, TimeZones.NewYork)", span="109-109", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_30 [label="var securityType = grp.Key.SecurityType", span="100-100", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_33 [label="var symbolString = MarketHoursDatabase.GetDatabaseSymbolKey(universeSymbol)", span="107-107", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_34 [label="var alwaysOpen = SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork)", span="108-108", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_37 [label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="116-116", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_36 [label="entry = MarketHours.GetEntry(market, (string) null, securityType)", span="113-113", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_32 [label="securityType == SecurityType.Base", span="102-102", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs"];
m0_31 [label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="101-101", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_38 [label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="117-117", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_26 [label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="92-92", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_25 [label="var resolution = universeSettings.Resolution", span="91-91", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_23 [label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="88-88", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_24 [label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="89-89", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_39 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs"];
m0_14 [label="Entry Unk.Order", span="", cluster="Unk.Order", file="ManualUniverseSelectionModel.cs"];
m0_21 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()", file="ManualUniverseSelectionModel.cs"];
m0_18 [label="Entry Unk.ToShortDateString", span="", cluster="Unk.ToShortDateString", file="ManualUniverseSelectionModel.cs"];
m0_48 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ManualUniverseSelectionModel.cs"];
m0_50 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ManualUniverseSelectionModel.cs"];
m0_49 [label="new { s.ID.Market, s.SecurityType }", span="95-95", cluster="lambda expression", file="ManualUniverseSelectionModel.cs"];
m0_19 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="ManualUniverseSelectionModel.cs"];
m0_20 [label="QuantConnect.TestOnEndOfDay", span="", cluster="lambda expression", file="ManualUniverseSelectionModel.cs"];
m0_45 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="ManualUniverseSelectionModel.cs"];
m0_46 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ManualUniverseSelectionModel.cs"];
m0_6 [label="throw new ArgumentNullException(nameof(symbols));", span="68-68", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs"];
m0_4 [label="AddSecurity(SecurityType.Equity, symbol, Resolution.Minute)", span="34-34", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_7 [label="Entry Unk.SetEndDate", span="", cluster="Unk.SetEndDate", file="ManualUniverseSelectionModel.cs"];
m0_8 [label="Entry Unk.SetCash", span="", cluster="Unk.SetCash", file="ManualUniverseSelectionModel.cs"];
m0_9 [label="Entry Unk.AddSecurity", span="", cluster="Unk.AddSecurity", file="ManualUniverseSelectionModel.cs"];
m0_10 [label="Entry QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="37-37", cluster="QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="ManualUniverseSelectionModel.cs"];
m0_5 [label="Exit QuantConnect.TestOnEndOfDay.Initialize()", span="29-29", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_11 [label="Portfolio.HoldStock == false", span="39-39", cluster="QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="ManualUniverseSelectionModel.cs"];
m0_12 [label="Order(symbol, 50)", span="41-41", cluster="QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="ManualUniverseSelectionModel.cs"];
m0_13 [label="Exit QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="37-37", cluster="QuantConnect.TestOnEndOfDay.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", file="ManualUniverseSelectionModel.cs"];
m0_41 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ManualUniverseSelectionModel.cs"];
m0_43 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="ManualUniverseSelectionModel.cs"];
m0_44 [label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", span="144-144", cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", file="ManualUniverseSelectionModel.cs"];
m0_47 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverseSelectionModel.cs"];
m0_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualUniverseSelectionModel.cs"];
m0_0 [label="Entry QuantConnect.TestOnEndOfDay.Initialize()", span="29-29", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_1 [label="SetStartDate(2013, 1, 1)", span="31-31", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_2 [label="SetEndDate(2014, 1, 1)", span="32-32", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_3 [label="SetCash(30000)", span="33-33", cluster="QuantConnect.TestOnEndOfDay.Initialize()", file="ManualUniverseSelectionModel.cs"];
m0_42 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", span="212-212", cluster="QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", file="ManualUniverseSelectionModel.cs"];
m0_51 [label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", span="", file="ManualUniverseSelectionModel.cs"];
m1_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpen(string, int, string)", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpen(string, int, string)", file="RegressionTests.cs"];
m1_26 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="RegressionTests.cs"];
m1_0 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_1 [label="SetStartDate(2013, 10, 07)", span="35-35", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_2 [label="SetEndDate(2013, 10, 11)", span="36-36", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_3 [label="SetCash(100000)", span="37-37", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second, fillDataForward: true, extendedMarketHours: true)", span="39-39", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_5 [label="security = Securities[''SPY'']", span="41-41", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_6 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="RegressionTests.cs"];
m1_11 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_12 [label="Time.Date != last.Date", span="52-52", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_13 [label="submittedMarketOnCloseToday = false", span="54-54", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_16 [label="!submittedMarketOnCloseToday && security.Exchange.ExchangeOpen", span="58-58", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_14 [label="MarketOnOpen(''SPY'', 100)", span="55-55", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_15 [label="last = Time", span="56-56", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_17 [label="submittedMarketOnCloseToday = true", span="60-60", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_18 [label="MarketOnClose(''SPY'', -100)", span="61-61", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_19 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionTests.cs"];
m1_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="563-563", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionTests.cs"];
m1_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="718-718", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RegressionTests.cs"];
m1_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnClose(string, int, string)", span="254-254", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnClose(string, int, string)", file="RegressionTests.cs"];
m1_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionTests.cs"];
m1_22 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs"];
m1_23 [label="var order = Orders[fill.OrderId]", span="67-67", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs"];
m1_24 [label="Console.WriteLine(Time + '' - '' + order.Type + '' - ORDER EVENT:: '' + fill)", span="68-68", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs"];
m1_25 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs"];
m1_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="487-487", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RegressionTests.cs"];
m1_27 [label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm", span="", file="RegressionTests.cs"];
m2_122 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SerializedInsight.cs"];
m2_173 [label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", file="SerializedInsight.cs"];
m2_35 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="SerializedInsight.cs"];
m2_134 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="495-495", cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SerializedInsight.cs"];
m2_167 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="399-399", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_204 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="401-401", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_205 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="403-403", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_206 [label="dataFeedsConfigString != string.Empty", span="404-404", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_207 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="406-406", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_208 [label="return dataFeeds;", span="409-409", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_209 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="399-399", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="SerializedInsight.cs"];
m2_132 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="SerializedInsight.cs"];
m2_135 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="485-485", cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SerializedInsight.cs"];
m2_5 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SerializedInsight.cs"];
m2_137 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="SerializedInsight.cs"];
m2_126 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="380-380", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_187 [label="var openOrders = brokerage.GetOpenOrders()", span="383-383", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_190 [label="resultHandler.DebugMessage($''BrokerageSetupHandler.Setup(): Open order detected.  Creating order tickets for open order {order.Symbol.Value} with quantity {order.Quantity}. Beware that this order ticket may not accurately reflect the quantity of the order if the open order is partially filled.'')", span="388-388", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_191 [label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="389-389", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_192 [label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="390-390", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_193 [label="transactionHandler.OrderTickets.AddOrUpdate(order.Id, order.ToOrderTicket(algorithm.Transactions))", span="391-391", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_188 [label=openOrders, span="384-384", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_189 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.Value + '' - '' + order.Quantity)", span="387-387", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_194 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", span="380-380", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetOpenOrders(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Interfaces.IBrokerage)", file="SerializedInsight.cs"];
m2_169 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="SerializedInsight.cs"];
m2_140 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="SerializedInsight.cs"];
m2_129 [label="Entry Lazy<Resolution>.cstr", span="", cluster="Lazy<Resolution>.cstr", file="SerializedInsight.cs"];
m2_116 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SerializedInsight.cs"];
m2_183 [label="Entry Unk.Min", span="", cluster="Unk.Min", file="SerializedInsight.cs"];
m2_201 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="SerializedInsight.cs"];
m2_21 [label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="91-91", cluster="lambda expression", file="SerializedInsight.cs"];
m2_20 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="SerializedInsight.cs"];
m2_22 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="SerializedInsight.cs"];
m2_38 [label="brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="114-114", cluster="lambda expression", file="SerializedInsight.cs"];
m2_37 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="SerializedInsight.cs"];
m2_39 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="SerializedInsight.cs"];
m2_148 [label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="176-176", cluster="lambda expression", file="SerializedInsight.cs"];
m2_149 [label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="179-179", cluster="lambda expression", file="SerializedInsight.cs"];
m2_150 [label="algorithm.SetParameters(job.Parameters)", span="182-182", cluster="lambda expression", file="SerializedInsight.cs"];
m2_151 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="183-183", cluster="lambda expression", file="SerializedInsight.cs"];
m2_152 [label="algorithm.SetLiveMode(true)", span="186-186", cluster="lambda expression", file="SerializedInsight.cs"];
m2_153 [label="algorithm.SetDateTime(DateTime.UtcNow)", span="189-189", cluster="lambda expression", file="SerializedInsight.cs"];
m2_154 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="192-192", cluster="lambda expression", file="SerializedInsight.cs"];
m2_155 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()))", span="195-195", cluster="lambda expression", file="SerializedInsight.cs"];
m2_156 [label="brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage'')", span="200-201", cluster="lambda expression", file="SerializedInsight.cs"];
m2_157 [label="algorithm.Settings.DataSubscriptionLimit = 100", span="203-203", cluster="lambda expression", file="SerializedInsight.cs"];
m2_158 [label="algorithm.Initialize()", span="207-207", cluster="lambda expression", file="SerializedInsight.cs"];
m2_160 [label="algorithm.Portfolio.CashBook", span="211-211", cluster="lambda expression", file="SerializedInsight.cs"];
m2_179 [label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_159 [label="liveJob.Brokerage != ''PaperBrokerage''", span="208-208", cluster="lambda expression", file="SerializedInsight.cs"];
m2_143 [label="args.Type == BrokerageMessageType.Error", span="156-156", cluster="lambda expression", file="SerializedInsight.cs"];
m2_144 [label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="158-158", cluster="lambda expression", file="SerializedInsight.cs"];
m2_147 [label="Entry lambda expression", span="171-221", cluster="lambda expression", file="SerializedInsight.cs"];
m2_142 [label="Entry lambda expression", span="154-160", cluster="lambda expression", file="SerializedInsight.cs"];
m2_145 [label="Exit lambda expression", span="154-160", cluster="lambda expression", file="SerializedInsight.cs"];
m2_162 [label=Exception, span="217-217", cluster="lambda expression", file="SerializedInsight.cs"];
m2_164 [label="Exit lambda expression", span="171-221", cluster="lambda expression", file="SerializedInsight.cs"];
m2_161 [label="kvp.Value.SetAmount(0)", span="213-213", cluster="lambda expression", file="SerializedInsight.cs"];
m2_163 [label="AddInitializationError(err.ToString())", span="219-219", cluster="lambda expression", file="SerializedInsight.cs"];
m2_178 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_180 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_184 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_185 [label="x.Value.Resolution", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_186 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="SerializedInsight.cs"];
m2_202 [label=order, span="390-390", cluster="lambda expression", file="SerializedInsight.cs"];
m2_203 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="SerializedInsight.cs"];
m2_127 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="SerializedInsight.cs"];
m2_131 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SerializedInsight.cs"];
m2_18 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="SerializedInsight.cs"];
m2_128 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SerializedInsight.cs"];
m2_196 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="SerializedInsight.cs"];
m2_41 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_42 [label="var liveJob = job as LiveNodePacket", span="136-136", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_46 [label="algorithm.Name = liveJob.GetAlgorithmName()", span="143-143", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_52 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="166-166", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_53 [label="var controls = job.Controls", span="169-169", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_55 [label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                        // set the option chain provider\r\n                        algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()));\r\n\r\n                        // If we're going to receive market data from IB,\r\n                        // set the default subscription limit to 100,\r\n                        // algorithms can override this setting in the Initialize method\r\n                        if (brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage''))\r\n                        {\r\n                            algorithm.Settings.DataSubscriptionLimit = 100;\r\n                        }\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.ToString());\r\n                    }\r\n                }, controls.RamAllocation)", span="171-221", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_59 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="230-230", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_60 [label="brokerage.Message += brokerageOnMessage", span="232-232", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_62 [label="brokerage.Connect()", span="238-238", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_67 [label="!brokerage.IsConnected", span="248-248", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_71 [label="var cashBalance = brokerage.GetCashBalance()", span="259-259", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_74 [label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="263-263", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_80 [label="GetOpenOrders(algorithm, resultHandler, transactionHandler, brokerage)", span="276-276", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_86 [label="var holdings = brokerage.GetAccountHoldings()", span="289-289", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_88 [label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="294-294", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_94 [label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="310-310", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_97 [label="algorithm.AddOptionContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="317-317", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_99 [label="algorithm.AddFutureContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="322-322", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_100 [label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="327-327", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_101 [label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, holding.Quantity)", span="331-331", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_102 [label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="332-342", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_107 [label="algorithm.PostInitialize()", span="352-352", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_108 [label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="355-355", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_43 [label="liveJob == null", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_47 [label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="146-146", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_44 [label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="139-139", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_45 [label="return false;", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_48 [label="AddInitializationError(''A brokerage must be specified'')", span="148-148", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_50 [label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="154-160", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_49 [label="return false;", span="149-149", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_51 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="164-164", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_54 [label="var isolator = new Isolator()", span="170-170", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_56 [label="!initializeComplete", span="223-223", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_57 [label="AddInitializationError(''Initialization timed out.'')", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_58 [label="return false;", span="226-226", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_61 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="234-234", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_63 [label=Exception, span="240-240", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_64 [label="Log.Error(err)", span="242-242", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_65 [label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="243-244", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_66 [label="return false;", span="245-245", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_68 [label="AddInitializationError(''Unable to connect to brokerage.'')", span="251-251", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_70 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="255-255", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_69 [label="return false;", span="252-252", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_72 [label=cashBalance, span="260-260", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_73 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="262-262", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_75 [label=Exception, span="266-266", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_79 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="273-273", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_76 [label="Log.Error(err)", span="268-268", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_77 [label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="269-269", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_78 [label="return false;", span="270-270", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_81 [label=Exception, span="278-278", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_85 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="285-285", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_82 [label="Log.Error(err)", span="280-280", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_83 [label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="281-281", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_84 [label="return false;", span="282-282", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_87 [label="var supportedSecurityTypes = new HashSet<SecurityType>\r\n                    {\r\n                        SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd, SecurityType.Option, SecurityType.Future, SecurityType.Crypto\r\n                    }", span="290-293", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_89 [label=holdings, span="295-295", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_91 [label="!supportedSecurityTypes.Contains(holding.Type)", span="300-300", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_93 [label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="303-304", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_90 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="297-297", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_103 [label=Exception, span="345-345", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_92 [label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="302-302", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_95 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.Value)", span="312-312", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_96 [label="holding.Type == SecurityType.Option", span="314-314", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_98 [label="holding.Type == SecurityType.Future", span="319-319", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_104 [label="Log.Error(err)", span="347-347", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_105 [label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="348-348", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_106 [label="return false;", span="349-349", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_109 [label="StartingDate = DateTime.Now", span="356-356", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_110 [label=Exception, span="358-358", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_112 [label="return Errors.Count == 0;", span="370-370", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_111 [label="AddInitializationError(err.ToString())", span="360-360", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_113 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SerializedInsight.cs"];
m2_139 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SerializedInsight.cs"];
m2_182 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="SerializedInsight.cs"];
m2_125 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="484-484", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SerializedInsight.cs"];
m2_119 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()", file="SerializedInsight.cs"];
m2_136 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="475-475", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SerializedInsight.cs"];
m2_168 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="580-580", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SerializedInsight.cs"];
m2_19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="SerializedInsight.cs"];
m2_197 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="SerializedInsight.cs"];
m2_166 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SerializedInsight.cs"];
m2_215 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="426-426", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SerializedInsight.cs"];
m2_216 [label="_factory != null", span="428-428", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SerializedInsight.cs"];
m2_217 [label="_factory.Dispose()", span="430-430", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SerializedInsight.cs"];
m2_218 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="426-426", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SerializedInsight.cs"];
m2_219 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="SerializedInsight.cs"];
m2_120 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="SerializedInsight.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SerializedInsight.cs"];
m2_1 [label="Errors = new List<string>()", span="74-74", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SerializedInsight.cs"];
m2_2 [label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="75-75", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SerializedInsight.cs"];
m2_3 [label="MaxOrders = int.MaxValue", span="76-76", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SerializedInsight.cs"];
m2_4 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SerializedInsight.cs"];
m2_211 [label="Entry Unk.>", span="", cluster="Unk.>", file="SerializedInsight.cs"];
m2_34 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SerializedInsight.cs"];
m2_130 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SerializedInsight.cs"];
m2_118 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SerializedInsight.cs"];
m2_175 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="SerializedInsight.cs"];
m2_177 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="111-111", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SerializedInsight.cs"];
m2_199 [label="Entry QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", span="890-890", cluster="QuantConnect.Orders.Order.ToOrderTicket(QuantConnect.Securities.SecurityTransactionManager)", file="SerializedInsight.cs"];
m2_133 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="130-130", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SerializedInsight.cs"];
m2_165 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="331-331", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SerializedInsight.cs"];
m2_6 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SerializedInsight.cs"];
m2_123 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SerializedInsight.cs"];
m2_170 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="440-440", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="SerializedInsight.cs"];
m2_195 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="SerializedInsight.cs"];
m2_114 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="417-417", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SerializedInsight.cs"];
m2_212 [label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="419-419", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SerializedInsight.cs"];
m2_213 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="417-417", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SerializedInsight.cs"];
m2_200 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="SerializedInsight.cs"];
m2_25 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_26 [label="var liveJob = algorithmNodePacket as LiveNodePacket", span="107-107", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_31 [label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="118-118", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_27 [label="liveJob == null", span="108-108", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_29 [label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="114-114", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_28 [label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="110-110", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_30 [label="factory = _factory", span="115-115", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_32 [label="return brokerage;", span="120-120", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_33 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SerializedInsight.cs"];
m2_141 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="SerializedInsight.cs"];
m2_121 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="SerializedInsight.cs"];
m2_36 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="55-55", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SerializedInsight.cs"];
m2_172 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SerializedInsight.cs"];
m2_7 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_8 [label="string error", span="87-87", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_10 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_11 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="92-92", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_9 [label="IAlgorithm algorithm", span="88-88", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_12 [label="!complete", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_13 [label="throw new Exception(error + '' Try re-building algorithm and remove duplicate QCAlgorithm base classes.'');", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_14 [label="return algorithm;", span="95-95", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_15 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SerializedInsight.cs"];
m2_40 [label="Entry System.Type.MatchesTypeName(string)", span="653-653", cluster="System.Type.MatchesTypeName(string)", file="SerializedInsight.cs"];
m2_17 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SerializedInsight.cs"];
m2_214 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SerializedInsight.cs"];
m2_174 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SerializedInsight.cs"];
m2_198 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="SerializedInsight.cs"];
m2_16 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="SerializedInsight.cs"];
m2_146 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SerializedInsight.cs"];
m2_171 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="SerializedInsight.cs"];
m2_24 [label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="867-867", cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="SerializedInsight.cs"];
m2_117 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SerializedInsight.cs"];
m2_138 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SerializedInsight.cs"];
m2_181 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SerializedInsight.cs"];
m2_23 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SerializedInsight.cs"];
m2_176 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="SerializedInsight.cs"];
m2_124 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="SerializedInsight.cs"];
m2_115 [label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150", cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="SerializedInsight.cs"];
m2_220 [label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span="", file="SerializedInsight.cs"];
m2_221 [label=liveJob, span="", file="SerializedInsight.cs"];
m2_222 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="SerializedInsight.cs"];
m2_223 [label="QuantConnect.Packets.AlgorithmNodePacket", span="", file="SerializedInsight.cs"];
m2_224 [label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span="", file="SerializedInsight.cs"];
m2_225 [label="QuantConnect.Interfaces.IBrokerage", span="", file="SerializedInsight.cs"];
m2_226 [label=liveJob, span="", file="SerializedInsight.cs"];
m2_227 [label=order, span="", file="SerializedInsight.cs"];
n56 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n18  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n56 -> n51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues"];
n0 -> n5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n0 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Insight"];
n0 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues"];
n1 -> n2  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n5 -> n6  [key=0, style=solid, color=red];
n6 -> n7  [key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n6 -> n13  [key=2, style=dotted];
n6 -> n14  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n7  [key=1, style=dashed, color=darkseagreen4, label=barSize];
n8 -> n9  [key=0, style=solid];
n8 -> n12  [key=2, style=dotted];
n8 -> n13  [key=2, style=dotted];
n8 -> n15  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n11  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid, color=red];
n10 -> n0  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues"];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues"];
n17 -> n18  [key=0, style=solid, color=red];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n20  [key=0, style=solid, color=red];
n20 -> n21  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n21 -> n16  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n25 -> n27  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n27 -> n22  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n31 -> n29  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldAnalyze"];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n36 -> n32  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n39 -> n37  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [key=2, style=dotted];
n42 -> n40  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label=object];
n44 -> n49  [key=1, style=dashed, color=darkseagreen4, label=object];
n44 -> n51  [key=1, style=dashed, color=darkseagreen4, label=object];
n44 -> n6  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n44 -> n35  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n45 -> n53  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n47 -> n53  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n49 -> n54  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n55  [key=2, style=dotted];
n46 -> n52  [key=0, style=solid];
n48 -> n52  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n52 -> n44  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_17 -> m0_4  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Securities.ISecurityInitializer _securityInitializer"];
m0_22 -> m0_38  [key=0, style=bold, color=crimson];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_39  [key=0, style=solid];
m0_27 -> m0_40  [key=2, style=dotted];
m0_27 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_27 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=grp];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=grp];
m0_27 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=grp];
m0_29 -> m0_35  [key=1, style=dashed, color=green, label=market];
m0_29 -> m0_36  [key=1, style=dashed, color=green, label=market];
m0_29 -> m0_27  [key=3, color=darkorchid, style=bold, label="Local variable string market"];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=market];
m0_35 -> m0_37  [key=0, style=solid, color=green];
m0_35 -> m0_44  [key=2, style=dotted, color=green];
m0_30 -> m0_35  [key=1, style=dashed, color=green, label=securityType];
m0_30 -> m0_36  [key=1, style=dashed, color=green, label=securityType];
m0_30 -> m0_32  [key=1, style=dashed, color=green, label=securityType];
m0_30 -> m0_27  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.SecurityType securityType"];
m0_30 -> m0_31  [key=0, style=solid];
m0_33 -> m0_35  [key=1, style=dashed, color=green, label=symbolString];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_42  [key=2, style=dotted, color=green];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_43  [key=2, style=dotted, color=green];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_46  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_45  [key=2, style=dotted, color=green];
m0_32 -> m0_36  [key=0, style=solid, color=green];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_33  [key=1, style=dashed, color=green, label=universeSymbol];
m0_31 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=universeSymbol];
m0_31 -> m0_41  [key=2, style=dotted];
m0_38 -> m0_27  [key=0, style=solid];
m0_38 -> m0_47  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_25 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m0_25 -> m0_26  [key=0, style=solid];
m0_23 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=securityInitializer];
m0_24 -> m0_25  [key=0, style=solid];
m0_39 -> m0_22  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_50 -> m0_48  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_20 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestOnEndOfDay"];
m0_20 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TestOnEndOfDay"];
m0_6 -> m0_12  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UniverseSettings"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityInitializer"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_16  [key=2, style=dotted];
m0_7 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_11 -> m0_10  [key=0, style=solid];
m0_11 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_12 -> m0_4  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_13 -> m0_10  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_51 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m0_51 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_11  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_22  [key=0, style=bold, color=blue];
m1_27 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m1_27 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m2_167 -> m2_204  [key=0, style=solid];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_23  [key=2, style=dotted];
m2_204 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m2_204 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> n11  [key=2, style=dotted];
m2_205 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_208  [key=0, style=solid];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_211  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_209 -> m2_167  [key=0, style=bold, color=blue];
m2_126 -> m2_187  [key=0, style=solid];
m2_126 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m2_126 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_126 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m2_126 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_195  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_196  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_197  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_198  [key=2, style=dotted];
m2_192 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_193 -> m2_188  [key=0, style=solid];
m2_193 -> m2_199  [key=2, style=dotted];
m2_193 -> m2_200  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_194  [key=0, style=solid];
m2_188 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_188 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_188 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_188 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_188 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_117  [key=2, style=dotted];
m2_194 -> m2_126  [key=0, style=bold, color=blue];
m2_201 -> m2_202  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_21 -> m2_24  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_165  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_166  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_167  [key=2, style=dotted];
m2_151 -> m2_168  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_169  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_170  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_171  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_172  [key=2, style=dotted];
m2_155 -> m2_173  [key=2, style=dotted];
m2_155 -> m2_174  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=0, style=solid];
m2_156 -> m2_175  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_176  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_162  [key=0, style=solid];
m2_160 -> m2_164  [key=0, style=solid];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_181  [key=2, style=dotted];
m2_179 -> m2_182  [key=2, style=dotted];
m2_179 -> m2_183  [key=2, style=dotted];
m2_179 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_162  [key=0, style=solid];
m2_159 -> m2_164  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [key=2, style=dotted];
m2_144 -> m2_114  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m2_145 -> m2_142  [key=0, style=bold, color=blue];
m2_162 -> m2_163  [key=0, style=solid];
m2_164 -> m2_147  [key=0, style=bold, color=blue];
m2_161 -> m2_160  [key=0, style=solid];
m2_161 -> m2_177  [key=2, style=dotted];
m2_161 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_141  [key=2, style=dotted];
m2_163 -> m2_114  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_180 -> m2_178  [key=0, style=bold, color=blue];
m2_184 -> m2_185  [key=0, style=solid];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m2_186 -> m2_184  [key=0, style=bold, color=blue];
m2_202 -> m2_203  [key=0, style=solid];
m2_203 -> m2_201  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m2_41 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_41 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m2_41 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_41 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_42 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_42 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_42 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_42 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_115  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_118  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=controls];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_17  [key=2, style=dotted];
m2_55 -> m2_120  [key=2, style=dotted];
m2_55 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_118  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_67  [key=0, style=solid];
m2_62 -> m2_121  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_124  [key=2, style=dotted];
m2_74 -> m2_72  [key=0, style=solid];
m2_74 -> m2_125  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_85  [key=0, style=solid];
m2_80 -> m2_126  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_127  [key=2, style=dotted];
m2_86 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_129  [key=2, style=dotted];
m2_88 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m2_88 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m2_88 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_101  [key=0, style=solid];
m2_94 -> m2_133  [key=2, style=dotted];
m2_97 -> m2_101  [key=0, style=solid];
m2_97 -> m2_134  [key=2, style=dotted];
m2_99 -> m2_101  [key=0, style=solid];
m2_99 -> m2_135  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_136  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_137  [key=2, style=dotted];
m2_102 -> m2_89  [key=0, style=solid];
m2_102 -> m2_138  [key=2, style=dotted];
m2_102 -> m2_139  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_140  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_46  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=0, style=solid];
m2_47 -> m2_116  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_114  [key=2, style=dotted];
m2_45 -> m2_113  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_114  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m2_50 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m2_50 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=brokerageOnMessage];
m2_49 -> m2_113  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_117  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_119  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_59  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_114  [key=2, style=dotted];
m2_58 -> m2_112  [key=0, style=solid];
m2_58 -> m2_113  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_117  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_122  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_123  [key=2, style=dotted];
m2_65 -> m2_114  [key=2, style=dotted];
m2_66 -> m2_112  [key=0, style=solid];
m2_66 -> m2_113  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_114  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_117  [key=2, style=dotted];
m2_69 -> m2_112  [key=0, style=solid];
m2_69 -> m2_113  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_75  [key=0, style=solid];
m2_72 -> m2_79  [key=0, style=solid];
m2_72 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=cash];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_117  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_117  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_122  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_114  [key=2, style=dotted];
m2_78 -> m2_112  [key=0, style=solid];
m2_78 -> m2_113  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_117  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_122  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_114  [key=2, style=dotted];
m2_84 -> m2_112  [key=0, style=solid];
m2_84 -> m2_113  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_128  [key=2, style=dotted];
m2_87 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
m2_87 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_103  [key=0, style=solid];
m2_89 -> m2_107  [key=0, style=solid];
m2_89 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_89 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=holding];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_94  [key=0, style=solid];
m2_91 -> m2_130  [key=2, style=dotted];
m2_93 -> m2_89  [key=0, style=solid];
m2_93 -> m2_132  [key=2, style=dotted];
m2_93 -> m2_114  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_117  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_131  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_117  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_122  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_114  [key=2, style=dotted];
m2_106 -> m2_112  [key=0, style=solid];
m2_106 -> m2_113  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_112  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_141  [key=2, style=dotted];
m2_111 -> m2_114  [key=2, style=dotted];
m2_113 -> m2_41  [key=0, style=bold, color=blue];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_218  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_219  [key=2, style=dotted];
m2_218 -> m2_215  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_114 -> m2_212  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_214  [key=2, style=dotted];
m2_213 -> m2_114  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_26 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_36  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_28 -> m2_33  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_25  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_7 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_8 -> m2_9  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_17  [key=2, style=dotted];
m2_10 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_18  [key=2, style=dotted];
m2_11 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_11 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m2_9 -> m2_10  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_19  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_7  [key=0, style=bold, color=blue];
m2_220 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_220 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m2_221 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_222 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_222 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_223 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_224 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m2_225 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m2_226 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_226 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m2_227 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=order];
}
