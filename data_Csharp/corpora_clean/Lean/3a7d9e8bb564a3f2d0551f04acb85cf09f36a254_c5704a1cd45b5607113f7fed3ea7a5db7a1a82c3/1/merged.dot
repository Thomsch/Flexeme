digraph  {
n272 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider", span=""];
n273 [label=string, span=""];
n274 [label="QuantConnect.SecurityType", span=""];
n275 [label=string, span=""];
n276 [label=string, span=""];
n277 [label=lookupFunc, span=""];
n278 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData", span=""];
n279 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData", span=""];
n280 [label=manualResetEvent, span=""];
n0 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()", span="62-62", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n1 [label="_symbolFundamentalData = new SymbolFundamentalData()", span="64-64", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n2 [label="_symbolFundamentalData.Connect()", span="65-65", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n8 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.SymbolFundamentalData()", span="491-491", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.SymbolFundamentalData()"];
n3 [label="_symbolFundamentalData.SetClientName(''SymbolFundamentalData'')", span="66-66", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n9 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", span="637-637", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()"];
n4 [label="LoadSymbols()", span="68-68", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n10 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", span="647-647", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)"];
n5 [label="_symbols = _symbolUniverse.ToDictionary(kv => kv.Symbol, kv => kv.Ticker)", span="70-70", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n11 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()", span="159-159", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n6 [label="_tickers = _symbolUniverse.ToDictionary(kv => kv.Ticker, kv => kv.Symbol)", span="71-71", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n12 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
n13 [label="Entry lambda expression", span="70-70", cluster="lambda expression"];
n16 [label="Entry lambda expression", span="70-70", cluster="lambda expression"];
n7 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()", span="62-62", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()"];
n19 [label="Entry lambda expression", span="71-71", cluster="lambda expression"];
n22 [label="Entry lambda expression", span="71-71", cluster="lambda expression"];
n14 [label="kv.Symbol", span="70-70", cluster="lambda expression"];
n15 [label="Exit lambda expression", span="70-70", cluster="lambda expression"];
n17 [label="kv.Ticker", span="70-70", cluster="lambda expression"];
n18 [label="Exit lambda expression", span="70-70", cluster="lambda expression"];
n20 [label="kv.Ticker", span="71-71", cluster="lambda expression"];
n21 [label="Exit lambda expression", span="71-71", cluster="lambda expression"];
n23 [label="kv.Symbol", span="71-71", cluster="lambda expression"];
n24 [label="Exit lambda expression", span="71-71", cluster="lambda expression"];
n25 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)", span="79-79", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)"];
n26 [label="return _symbols.ContainsKey(symbol) ? _symbols[symbol] : string.Empty;", span="81-81", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)"];
n27 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)", span="79-79", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)"];
n28 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n29 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="94-94", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)"];
n30 [label="return _tickers.ContainsKey(ticker) ? _tickers[ticker] : Symbol.Empty;", span="96-96", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)"];
n31 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="94-94", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)"];
n32 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="107-107", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n33 [label="Func<Symbol, string> lookupFunc", span="109-109", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n34 [label="securityType == SecurityType.Option ||\r\n                securityType == SecurityType.Future", span="112-113", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n37 [label="var result = _symbolUniverse.Where(x => lookupFunc(x.Symbol) == lookupName &&\r\n                                            x.Symbol.ID.SecurityType == securityType && \r\n                                            (securityCurrency == null || x.SecurityCurrency == securityCurrency) && \r\n                                            (securityExchange == null || x.SecurityExchange == securityExchange))", span="122-125", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n66 [label="lookupFunc(x.Symbol) == lookupName &&\r\n                                            x.Symbol.ID.SecurityType == securityType && \r\n                                            (securityCurrency == null || x.SecurityCurrency == securityCurrency) && \r\n                                            (securityExchange == null || x.SecurityExchange == securityExchange)", span="122-125", cluster="lambda expression"];
n38 [label="result.Count() == 0 && securityType == SecurityType.Future", span="127-127", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n39 [label="result = _incompleteFutures.Where(x => lookupFunc(x.Symbol) == lookupName &&\r\n                                            x.Symbol.ID.SecurityType == securityType &&\r\n                                            (securityCurrency == null || x.SecurityCurrency == securityCurrency) &&\r\n                                            (securityExchange == null || x.SecurityExchange == securityExchange))\r\n                                            .ToList()", span="129-133", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n70 [label="lookupFunc(x.Symbol) == lookupName &&\r\n                                            x.Symbol.ID.SecurityType == securityType &&\r\n                                            (securityCurrency == null || x.SecurityCurrency == securityCurrency) &&\r\n                                            (securityExchange == null || x.SecurityExchange == securityExchange)", span="129-132", cluster="lambda expression"];
n35 [label="lookupFunc = symbol => symbol.HasUnderlying ? symbol.Underlying.Value : string.Empty", span="115-115", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n36 [label="lookupFunc = symbol => symbol.Value", span="119-119", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n60 [label="symbol.HasUnderlying ? symbol.Underlying.Value : string.Empty", span="115-115", cluster="lambda expression"];
n63 [label="symbol.Value", span="119-119", cluster="lambda expression"];
n51 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n65 [label="Entry lambda expression", span="122-125", cluster="lambda expression"];
n49 [label="return result.Select(x => x.Symbol);", span="156-156", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n52 [label="Entry Unk.Count", span="", cluster="Unk.Count"];
n40 [label=result, span="136-136", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n53 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n69 [label="Entry lambda expression", span="129-132", cluster="lambda expression"];
n41 [label="var expirationDate = _symbolFundamentalData.Request(item.Ticker).Item1", span="138-138", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n43 [label="_symbols.Remove(item.Symbol)", span="144-144", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n44 [label="_incompleteFutures.Remove(item)", span="145-145", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n45 [label="item.Symbol = Symbol.CreateFuture(item.Symbol.Underlying.Value, item.Symbol.ID.Market, expirationDate)", span="147-147", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n42 [label="expirationDate != DateTime.MinValue", span="142-142", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n54 [label="Entry Unk.Request", span="", cluster="Unk.Request"];
n55 [label="Entry Unk.Remove", span="", cluster="Unk.Remove"];
n46 [label="_tickers[item.Ticker] = item.Symbol", span="149-149", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n56 [label="Entry Unk.CreateFuture", span="", cluster="Unk.CreateFuture"];
n47 [label="_symbols[item.Symbol] = item.Ticker", span="150-150", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n48 [label="_symbolUniverse.Add(item)", span="151-151", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n57 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n50 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="107-107", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LookupSymbols(string, QuantConnect.SecurityType, string, string)"];
n58 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n72 [label="Entry lambda expression", span="156-156", cluster="lambda expression"];
n59 [label="Entry lambda expression", span="115-115", cluster="lambda expression"];
n61 [label="Exit lambda expression", span="115-115", cluster="lambda expression"];
n62 [label="Entry lambda expression", span="119-119", cluster="lambda expression"];
n64 [label="Exit lambda expression", span="119-119", cluster="lambda expression"];
n67 [label="Exit lambda expression", span="122-125", cluster="lambda expression"];
n68 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n71 [label="Exit lambda expression", span="129-132", cluster="lambda expression"];
n73 [label="x.Symbol", span="156-156", cluster="lambda expression"];
n74 [label="Exit lambda expression", span="156-156", cluster="lambda expression"];
n75 [label="string uri = ''http://www.dtniq.com/product/mktsymbols_v2.zip''", span="162-162", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n76 [label="int columnSymbol = 0", span="165-165", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n100 [label="Log.Trace(''Loading IQFeed symbol universe file ({0})...'', uri)", span="206-206", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n101 [label="reader = new RemoteFileSubscriptionStreamReader(uri, Globals.Cache, todayFileName)", span="207-207", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n77 [label="int columnDescription = 1", span="166-166", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n113 [label="_symbolUniverse.Add(new SymbolData\r\n                        {\r\n                            Symbol = Symbol.Create(columns[columnSymbol], SecurityType.Equity, Market.USA),\r\n                            SecurityCurrency = ''USD'',\r\n                            SecurityExchange = Market.USA,\r\n                            Ticker = columns[columnSymbol]\r\n                        })", span="233-239", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n116 [label="var ticker = columns[columnSymbol]", span="265-265", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n136 [label="_symbolUniverse.Add(new SymbolData\r\n                        {\r\n                            Symbol = Symbol.CreateOption(underlying,\r\n                                                        Market.USA,\r\n                                                        OptionStyle.American,\r\n                                                        optionType,\r\n                                                        strikePrice,\r\n                                                        expirationDate),\r\n                            SecurityCurrency = ''USD'',\r\n                            SecurityExchange = Market.USA,\r\n                            Ticker = columns[columnSymbol]\r\n                        })", span="306-317", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n138 [label="columns[columnSymbol].EndsWith(''.FXCM'')", span="324-324", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n139 [label="var symbol = columns[columnSymbol].Replace(''.FXCM'', string.Empty)", span="326-326", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n140 [label="_symbolUniverse.Add(new SymbolData\r\n                            {\r\n                                Symbol = Symbol.Create(columns[columnSymbol], SecurityType.Forex, Market.FXCM),\r\n                                SecurityCurrency = ''USD'',\r\n                                SecurityExchange = Market.FXCM,\r\n                                Ticker = columns[columnSymbol]\r\n                            })", span="328-334", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n143 [label="columns[columnSymbol].EndsWith(''#'')", span="357-357", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n144 [label="var futuresTicker = columns[columnSymbol].TrimStart(new [] { '@' })", span="360-360", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n161 [label="var exchangeSymbol = _symbolFundamentalData.Request(columns[columnSymbol]).Item2", span="404-404", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n167 [label="_incompleteFutures.Add(new SymbolData\r\n                        {\r\n                            Symbol = Symbol.CreateFuture(underlyingString,\r\n                                                        market,\r\n                                                        expirationYearMonth),\r\n                            SecurityCurrency = ''USD'',\r\n                            SecurityExchange = market,\r\n                            Ticker = columns[columnSymbol]\r\n                        })", span="420-428", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n78 [label="int columnExchange = 2", span="167-167", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n79 [label="int columnListedMarket = 3", span="168-168", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n80 [label="int columnSecurityType = 4", span="169-169", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n81 [label="int columnSIC = 5", span="170-170", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n111 [label="columns[columnSecurityType]", span="229-229", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n82 [label="int columnFrontMonth = 6", span="171-171", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n83 [label="int columnNAICS = 7", span="172-172", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n84 [label="int totalColumns = 8", span="173-173", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n85 [label="!Directory.Exists(Globals.Cache)", span="175-175", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n109 [label="columns.Length != totalColumns", span="223-223", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n86 [label="Directory.CreateDirectory(Globals.Cache)", span="175-175", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n87 [label="IStreamReader reader", span="178-178", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n173 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)"];
n174 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)"];
n88 [label="var dayOfWeek = DateTimeFormatInfo.CurrentInfo.Calendar.GetWeekOfYear(DateTime.Today, CalendarWeekRule.FirstDay, DayOfWeek.Monday)", span="181-181", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n89 [label="var thisYearWeek = DateTime.Today.ToString(''yyyy'') + ''-'' + dayOfWeek.ToString()", span="182-182", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n175 [label="Entry System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)", span="0-0", cluster="System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)"];
n90 [label="var todayFileName = ''IQFeed-symbol-universe-'' + thisYearWeek + ''.zip''", span="184-184", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n176 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n177 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()"];
n91 [label="var todayFullName = Path.Combine(Globals.Cache, todayFileName)", span="185-185", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n92 [label="var iqfeedNameMapFileName = ''IQFeed-symbol-map.json''", span="187-187", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n178 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)"];
n99 [label="!File.Exists(todayFullName)", span="204-204", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n103 [label="reader = new LocalFileSubscriptionStreamReader(todayFullName)", span="212-212", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n93 [label="var iqfeedNameMapFullName = Path.Combine(''IQFeed'', iqfeedNameMapFileName)", span="188-188", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n94 [label="var iqfeedNameMap = new Dictionary<string, string>()", span="194-194", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n95 [label="var mapExists = File.Exists(iqfeedNameMapFullName)", span="196-196", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n98 [label="iqfeedNameMap = JsonConvert.DeserializeObject<Dictionary<string, string>>(File.ReadAllText(iqfeedNameMapFullName))", span="201-201", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n170 [label="File.WriteAllText(iqfeedNameMapFullName, JsonConvert.SerializeObject(iqfeedNameMap))", span="440-440", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n179 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n157 [label="iqfeedNameMap.ContainsKey(underlyingString)", span="395-395", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n158 [label="underlyingString = iqfeedNameMap[underlyingString]", span="396-396", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n160 [label="!iqfeedNameMap.ContainsKey(underlyingString)", span="401-401", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n163 [label="iqfeedNameMap[underlyingString] = exchangeSymbol", span="407-407", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n96 [label=mapExists, span="198-198", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n180 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)"];
n159 [label="!mapExists", span="399-399", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n168 [label="!mapExists", span="437-437", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n97 [label="Log.Trace(''Loading IQFeed futures symbol map file...'')", span="200-200", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n181 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n182 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)"];
n183 [label="Entry Unk.>", span="", cluster="Unk.>"];
n102 [label="Log.Trace(''Found up-to-date IQFeed symbol universe file in local cache. Loading it...'')", span="211-211", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n184 [label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123", cluster="QuantConnect.Logging.Log.Trace(string, params object[])"];
n104 [label="_symbolUniverse = new List<SymbolData>()", span="215-215", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n186 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string, string)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string, string)"];
n106 [label="!reader.EndOfStream", span="218-218", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n107 [label="var line = reader.ReadLine()", span="220-220", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n185 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(string, string, string)", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(string, string, string)"];
n105 [label="_incompleteFutures = new List<SymbolData>()", span="216-216", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n187 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n108 [label="var columns = line.Split('\t')", span="221-221", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n188 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.IStreamReader.ReadLine()", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.IStreamReader.ReadLine()"];
n110 [label="Log.Trace(''Discrepancy found while parsing IQFeed symbol universe file. Expected 8 columns, but arrived {0}. Line: {1}'', columns.Length, line)", span="225-225", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n128 [label="Log.Trace(''Discrepancy found while parsing IQFeed option strike price in symbol universe file. Strike price {0}. Line: {1}'', strikePriceString, line)", span="284-284", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n131 [label="Log.Trace(''Discrepancy found while parsing IQFeed option expiration day in symbol universe file. Day {0}. Line: {1}'', dayString, line)", span="292-292", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n134 [label="Log.Trace(''Discrepancy found while parsing IQFeed option expiration year in symbol universe file. Year {0}. Line: {1}'', yearString, line)", span="300-300", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n150 [label="Log.Trace(''Discrepancy found while parsing IQFeed future contract expiration year in symbol universe file. Year {0}. Line: {1}'', expirationYearString, line)", span="371-371", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n152 [label="Log.Trace(''Discrepancy found while parsing IQFeed future contract expiration month in symbol universe file. Month {0}. Line: {1}'', expirationMonthString, line)", span="377-377", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n189 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n112 [label="''EQUITY''", span="231-231", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n114 [label="''IEOPTION''", span="242-242", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n137 [label="''FOREX''", span="321-321", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n141 [label="''FUTURE''", span="338-338", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n115 [label="var symbology = new Dictionary<string, Tuple<int, OptionRight>>\r\n                        {\r\n                            { ''A'', Tuple.Create(1, OptionRight.Call) }, { ''M'', Tuple.Create(1, OptionRight.Put) },\r\n                            { ''B'', Tuple.Create(2, OptionRight.Call) }, { ''N'', Tuple.Create(2, OptionRight.Put) },\r\n                            { ''C'', Tuple.Create(3, OptionRight.Call) }, { ''O'', Tuple.Create(3, OptionRight.Put) },\r\n                            { ''D'', Tuple.Create(4, OptionRight.Call) }, { ''P'', Tuple.Create(4, OptionRight.Put) },\r\n                            { ''E'', Tuple.Create(5, OptionRight.Call) }, { ''Q'', Tuple.Create(5, OptionRight.Put) },\r\n                            { ''F'', Tuple.Create(6, OptionRight.Call) }, { ''R'', Tuple.Create(6, OptionRight.Put) },\r\n                            { ''G'', Tuple.Create(7, OptionRight.Call) }, { ''S'', Tuple.Create(7, OptionRight.Put) },\r\n                            { ''H'', Tuple.Create(8, OptionRight.Call) }, { ''T'', Tuple.Create(8, OptionRight.Put) },\r\n                            { ''I'', Tuple.Create(9, OptionRight.Call) }, { ''U'', Tuple.Create(9, OptionRight.Put) },\r\n                            { ''J'', Tuple.Create(10, OptionRight.Call) }, { ''V'', Tuple.Create(10, OptionRight.Put) },\r\n                            { ''K'', Tuple.Create(11, OptionRight.Call) }, { ''W'', Tuple.Create(11, OptionRight.Put) },\r\n                            { ''L'', Tuple.Create(12, OptionRight.Call) }, { ''X'', Tuple.Create(12, OptionRight.Put) },\r\n\r\n                        }", span="245-260", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n193 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
n117 [label="var letterRange = symbology.Keys\r\n                                        .Select(x => x[0])\r\n                                        .ToArray()", span="266-268", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n120 [label="var lookupResult = symbology[ticker[optionTypeDelimiter].ToString()]", span="272-272", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n118 [label="var optionTypeDelimiter = ticker.LastIndexOfAny(letterRange)", span="269-269", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n119 [label="var strikePriceString = ticker.Substring(optionTypeDelimiter+1, ticker.Length - optionTypeDelimiter - 1)", span="270-270", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n123 [label="var dayString = ticker.Substring(optionTypeDelimiter - 2, 2)", span="276-276", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n124 [label="var yearString = ticker.Substring(optionTypeDelimiter - 4, 2)", span="277-277", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n125 [label="var underlying = ticker.Substring(0, optionTypeDelimiter - 4)", span="278-278", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n194 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
n212 [label="Entry lambda expression", span="267-267", cluster="lambda expression"];
n195 [label="Entry Unk.LastIndexOfAny", span="", cluster="Unk.LastIndexOfAny"];
n196 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n127 [label="!Decimal.TryParse(strikePriceString, out strikePrice)", span="282-282", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n121 [label="var month = lookupResult.Item1", span="273-273", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n197 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()"];
n122 [label="var optionType = lookupResult.Item2", span="274-274", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n135 [label="var expirationDate = new DateTime(2000 + year, month, day)", span="304-304", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n130 [label="!int.TryParse(dayString, out day)", span="290-290", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n133 [label="!int.TryParse(yearString, out year)", span="298-298", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n126 [label="decimal strikePrice", span="281-281", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n129 [label="int day", span="288-288", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n198 [label="Entry decimal.TryParse(string, out decimal)", span="0-0", cluster="decimal.TryParse(string, out decimal)"];
n132 [label="int year", span="296-296", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n199 [label="Entry int.TryParse(string, out int)", span="0-0", cluster="int.TryParse(string, out int)"];
n200 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)"];
n202 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)"];
n203 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)"];
n142 [label="var futuresExpirationSymbology = new Dictionary<string, int>\r\n                        {\r\n                            { ''F'', 1 },\r\n                            { ''G'', 2 },\r\n                            { ''H'', 3 },\r\n                            { ''J'', 4 },\r\n                            { ''K'', 5 },\r\n                            { ''M'', 6 },\r\n                            { ''N'', 7 },\r\n                            { ''Q'', 8 },\r\n                            { ''U'', 9 },\r\n                            { ''V'', 10 },\r\n                            { ''X'', 11 },\r\n                            { ''Z'', 12 }\r\n                        }", span="340-354", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n151 [label="!futuresExpirationSymbology.ContainsKey(expirationMonthString)", span="375-375", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n153 [label="var expirationMonth = futuresExpirationSymbology[expirationMonthString]", span="381-381", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n145 [label="var expirationYearString = futuresTicker.Substring(futuresTicker.Length - 2, 2)", span="361-361", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n204 [label="Entry string.TrimStart(params char[])", span="0-0", cluster="string.TrimStart(params char[])"];
n146 [label="var expirationMonthString = futuresTicker.Substring(futuresTicker.Length - 3, 1)", span="362-362", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n147 [label="var underlyingString = futuresTicker.Substring(0, futuresTicker.Length - 3)", span="363-363", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n149 [label="!int.TryParse(expirationYearString, out expirationYearShort)", span="369-369", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n148 [label="int expirationYearShort", span="367-367", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n165 [label="Log.Trace(''IQFeed futures ticker {0} had no exchange root symbol assigned in IQFeed system.'', underlyingString)", span="412-412", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n154 [label="var exprirationYear = 2000 + expirationYearShort", span="382-382", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n155 [label="var expirationYearMonth = new DateTime(exprirationYear, expirationMonth, DateTime.DaysInMonth(exprirationYear, expirationMonth))", span="388-388", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n156 [label="expirationYearMonth < DateTime.Now.Date.AddDays(-1.0)", span="390-390", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n205 [label="Entry System.DateTime.DaysInMonth(int, int)", span="0-0", cluster="System.DateTime.DaysInMonth(int, int)"];
n206 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)"];
n166 [label="var market = Market.USA", span="418-418", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n162 [label="!string.IsNullOrEmpty(exchangeSymbol)", span="405-405", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n207 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)", span="499-499", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n164 [label="underlyingString = exchangeSymbol", span="408-408", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n208 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n190 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.SymbolData()", span="447-447", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.SymbolData()"];
n191 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)"];
n192 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n209 [label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="119-119", cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)"];
n201 [label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="96-96", cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)"];
n169 [label="Log.Trace(''Saving IQFeed futures symbol map file...'')", span="439-439", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n171 [label="Log.Trace(''Finished loading IQFeed symbol universe file.'')", span="443-443", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n210 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject"];
n211 [label="Entry Unk.WriteAllText", span="", cluster="Unk.WriteAllText"];
n172 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()", span="159-159", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.LoadSymbols()"];
n213 [label="x[0]", span="267-267", cluster="lambda expression"];
n214 [label="Exit lambda expression", span="267-267", cluster="lambda expression"];
n215 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData)", span="457-457", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData)"];
n216 [label="return string.Equals(Ticker, other.Ticker) &&\r\n                    string.Equals(SecurityCurrency, other.SecurityCurrency) &&\r\n                    string.Equals(SecurityExchange, other.SecurityExchange) &&\r\n                    Equals(Symbol, other.Symbol);", span="459-462", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData)"];
n217 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData)", span="457-457", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData)"];
n218 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)"];
n219 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)"];
n220 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)", span="465-465", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n221 [label="ReferenceEquals(null, obj)", span="467-467", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n223 [label="ReferenceEquals(this, obj)", span="468-468", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n225 [label="obj.GetType() != this.GetType()", span="469-469", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n227 [label="return Equals((SymbolData)obj);", span="470-470", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n222 [label="return false;", span="467-467", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n229 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)"];
n224 [label="return true;", span="468-468", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n226 [label="return false;", span="469-469", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n230 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n228 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)", span="465-465", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.Equals(object)"];
n231 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()", span="473-473", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n232 [label="var hashCode = (Ticker != null ? Ticker.GetHashCode() : 0)", span="477-477", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n233 [label="hashCode = (hashCode * 397) ^ (SecurityCurrency != null ? SecurityCurrency.GetHashCode() : 0)", span="478-478", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n238 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()"];
n234 [label="hashCode = (hashCode * 397) ^ (SecurityExchange != null ? SecurityExchange.GetHashCode() : 0)", span="479-479", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n235 [label="hashCode = (hashCode * 397) ^ (Symbol != null ? Symbol.GetHashCode() : 0)", span="480-480", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n236 [label="return hashCode;", span="481-481", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n239 [label="Entry QuantConnect.Symbol.GetHashCode()", span="253-253", cluster="QuantConnect.Symbol.GetHashCode()"];
n237 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()", span="473-473", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData.GetHashCode()"];
n240 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.SymbolFundamentalData()", span="491-491", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.SymbolFundamentalData()"];
n241 [label="int timeout = 180", span="501-501", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n249 [label="Subscribe(ticker)", span="524-524", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n252 [label="Unsubscribe(ticker)", span="531-531", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n242 [label="var manualResetEvent = new ManualResetEvent(false)", span="502-502", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n251 [label="Log.Error(''SymbolFundamentalData.Request() failed to receive response from IQFeed within {0} seconds'', timeout)", span="528-528", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n243 [label="var expiry = DateTime.MinValue", span="504-504", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n257 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)"];
n245 [label="EventHandler<Level1FundamentalEventArgs> dataEventHandler = (sender, e) =>\r\n                {\r\n                    expiry = e.ExpirationDate;\r\n                    rootSymbol = e.ExchangeRoot;\r\n                    manualResetEvent.Set();\r\n                }", span="507-512", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n265 [label="manualResetEvent.Set()", span="511-511", cluster="lambda expression"];
n246 [label="EventHandler<Level1SummaryUpdateEventArgs> noDataEventHandler = (sender, e) =>\r\n                {\r\n                    if (e.NotFound)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }", span="513-519", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n270 [label="manualResetEvent.Set()", span="517-517", cluster="lambda expression"];
n250 [label="!manualResetEvent.WaitOne()", span="526-526", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n244 [label="var rootSymbol = string.Empty", span="505-505", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n263 [label="expiry = e.ExpirationDate", span="509-509", cluster="lambda expression"];
n264 [label="rootSymbol = e.ExchangeRoot", span="510-510", cluster="lambda expression"];
n247 [label="Level1FundamentalEvent += dataEventHandler", span="521-521", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n254 [label="Level1FundamentalEvent -= dataEventHandler", span="535-535", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n269 [label="e.NotFound", span="515-515", cluster="lambda expression"];
n248 [label="Level1SummaryUpdateEvent += noDataEventHandler", span="522-522", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n253 [label="Level1SummaryUpdateEvent -= noDataEventHandler", span="533-533", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n258 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", span="670-670", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)"];
n259 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()"];
n260 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])"];
n261 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", span="688-688", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)"];
n255 [label="return Tuple.Create(expiry, rootSymbol);", span="537-537", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n256 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)", span="499-499", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData.Request(string)"];
n262 [label="Entry lambda expression", span="507-512", cluster="lambda expression"];
n266 [label="Exit lambda expression", span="507-512", cluster="lambda expression"];
n267 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()"];
n268 [label="Entry lambda expression", span="513-519", cluster="lambda expression"];
n271 [label="Exit lambda expression", span="513-519", cluster="lambda expression"];
m0_1 [label="Status = AlgorithmStatus.Running", span="91-91", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=green, community=0, file="AlphaRuntimeStatistics.cs"];
m1_17 [label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", span="51-51", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_18 [label="var logInDialog = new LoginDialog(AuthorizationManager.GetInstance(), previousCredentials)", span="53-53", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", color=green, community=0, file="AuthenticationCommand.cs"];
m1_19 [label="VsUtils.DisplayDialogWindow(logInDialog)", span="54-54", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_20 [label="var credentials = logInDialog.GetCredentials()", span="56-56", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_22 [label="VSActivityLog.Info(''Logged in successfully. Storing credentials'')", span="60-60", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", color=green, community=0, file="AuthenticationCommand.cs"];
m1_21 [label="credentials.HasValue", span="58-58", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_23 [label="CredentialsManager.StoreCredentials(credentials.Value)", span="61-61", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_24 [label="VsUtils.DisplayInStatusBar(serviceProvider, ''Logged into QuantConnect'')", span="62-62", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_26 [label="VSActivityLog.Info(''Login cancelled'')", span="67-67", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_25 [label="return true;", span="63-63", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_27 [label="return false;", span="68-68", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_28 [label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", span="51-51", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_13 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="34-34", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="AuthenticationCommand.cs"];
m1_31 [label="Entry QuantConnect.VisualStudioPlugin.LoginDialog.GetCredentials()", span="89-89", cluster="QuantConnect.VisualStudioPlugin.LoginDialog.GetCredentials()", file="AuthenticationCommand.cs"];
m1_15 [label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", span="30-30", cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="AuthenticationCommand.cs"];
m1_39 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", span="68-68", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthenticationCommand.cs"];
m1_32 [label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", span="45-45", cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthenticationCommand.cs"];
m1_12 [label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", span="26-26", cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", file="AuthenticationCommand.cs"];
m1_30 [label="Entry Unk.DisplayDialogWindow", span="", cluster="Unk.DisplayDialogWindow", file="AuthenticationCommand.cs"];
m1_16 [label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", span="72-72", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_37 [label="return AuthorizationManager.GetInstance().Login(credentials);", span="80-80", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_36 [label="var credentials = previousCredentials.Value", span="79-79", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_34 [label="!previousCredentials.HasValue", span="74-74", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_35 [label="return false;", span="76-76", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_38 [label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", span="72-72", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_40 [label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", span="87-87", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs"];
m1_41 [label="AuthorizationManager.GetInstance().Logout()", span="89-89", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs"];
m1_42 [label="VsUtils.DisplayInStatusBar(serviceProvider, ''Logged out of QuantConnect'')", span="90-90", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs"];
m1_43 [label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", span="87-87", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs"];
m1_14 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthenticationCommand.cs"];
m1_29 [label="Entry QuantConnect.VisualStudioPlugin.LoginDialog.LoginDialog(QuantConnect.VisualStudioPlugin.AuthorizationManager, QuantConnect.VisualStudioPlugin.Credentials?)", span="37-37", cluster="QuantConnect.VisualStudioPlugin.LoginDialog.LoginDialog(QuantConnect.VisualStudioPlugin.AuthorizationManager, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs"];
m1_0 [label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_10 [label="return LoginWithDialog(serviceProvider, previousCredentials);", span="48-48", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_2 [label="var authorizationManager = AuthorizationManager.GetInstance()", span="34-34", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_5 [label="return true;", span="38-38", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_1 [label="VSActivityLog.Info(''Logging in'')", span="32-32", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_4 [label="VSActivityLog.Info(''Already logged in'')", span="37-37", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_8 [label="VSActivityLog.Info(''Logged in with previously storred credentials'')", span="44-44", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_7 [label="!explicitLogin && LoggedInWithLastStorredPassword(previousCredentials)", span="42-42", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_6 [label="var previousCredentials = CredentialsManager.GetLastCredential()", span="41-41", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_3 [label="authorizationManager.IsLoggedIn()", span="35-35", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_9 [label="return true;", span="45-45", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_11 [label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30", cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs"];
m1_44 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", span="91-91", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthenticationCommand.cs"];
m1_33 [label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="AuthenticationCommand.cs"];
m1_45 [label="QuantConnect.VisualStudioPlugin.AuthenticationCommand", span="", file="AuthenticationCommand.cs"];
m2_88 [label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33", cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_44 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="180-180", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_45 [label="return new ImmediateFillModel();", span="182-182", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_46 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="180-180", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_47 [label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", span="26-26", cluster="QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_64 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="216-216", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_65 [label="security.Type", span="218-218", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_66 [label="SecurityType.Base", span="220-220", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_69 [label="SecurityType.Forex", span="224-224", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_73 [label="SecurityType.Commodity", span="229-229", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_67 [label="SecurityType.Equity", span="221-221", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_68 [label="return new ConstantSlippageModel(0);", span="222-222", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_70 [label="SecurityType.Cfd", span="225-225", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_71 [label="SecurityType.Crypto", span="226-226", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_72 [label="return new ConstantSlippageModel(0);", span="227-227", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_74 [label="SecurityType.Option", span="230-230", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_75 [label="SecurityType.Future", span="231-231", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_76 [label="return new ConstantSlippageModel(0);", span="233-233", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_77 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="216-216", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_3 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_4 [label="message = null", span="89-89", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_5 [label="return true;", span="90-90", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_6 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_78 [label="Entry QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", span="30-30", cluster="QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_19 [label="Entry lambda expression", span="134-139", cluster="lambda expression", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_20 [label="ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            })", span="134-139", cluster="lambda expression", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_21 [label="Exit lambda expression", span="134-139", cluster="lambda expression", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_23 [label="Entry QuantConnect.Orders.OrderType.IsLimitOrder()", span="60-60", cluster="QuantConnect.Orders.OrderType.IsLimitOrder()", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_25 [label="Entry QuantConnect.Orders.OrderType.IsStopOrder()", span="70-70", cluster="QuantConnect.Orders.OrderType.IsStopOrder()", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_22 [label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20", cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_7 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="101-101", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_8 [label="message = null", span="103-103", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_9 [label="return true;", span="104-104", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_10 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="101-101", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_11 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="117-117", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_12 [label="return true;", span="119-119", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_13 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="117-117", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_24 [label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="211-211", cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_63 [label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38", cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_62 [label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31", cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_27 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="147-147", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_28 [label="AccountType == AccountType.Cash", span="149-149", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_30 [label="security.Type", span="154-154", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_29 [label="return 1m;", span="151-151", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_31 [label="SecurityType.Equity", span="156-156", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_33 [label="SecurityType.Forex", span="159-159", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_36 [label="SecurityType.Crypto", span="163-163", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_38 [label="SecurityType.Base", span="166-166", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_32 [label="return 2m;", span="157-157", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_34 [label="SecurityType.Cfd", span="160-160", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_35 [label="return 50m;", span="161-161", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_37 [label="return 1m;", span="164-164", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_39 [label="SecurityType.Commodity", span="167-167", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_40 [label="SecurityType.Option", span="168-168", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_41 [label="SecurityType.Future", span="169-169", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_42 [label="return 1m;", span="171-171", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_43 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="147-147", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_79 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="243-243", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_80 [label="accountType == AccountType.Cash", span="245-245", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_81 [label="security.Type", span="247-247", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_86 [label="return new ImmediateSettlementModel();", span="257-257", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_82 [label="SecurityType.Equity", span="249-249", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_84 [label="SecurityType.Option", span="252-252", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_83 [label="return new DelayedSettlementModel(Equity.DefaultSettlementDays, Equity.DefaultSettlementTime);", span="250-250", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_85 [label="return new DelayedSettlementModel(Option.DefaultSettlementDays, Option.DefaultSettlementTime);", span="253-253", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_87 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="243-243", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_18 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_89 [label="Entry QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", span="23-23", cluster="QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_26 [label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249", cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_48 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="190-190", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_49 [label="security.Type", span="192-192", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_50 [label="SecurityType.Base", span="194-194", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_55 [label="SecurityType.Equity", span="200-200", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_59 [label="SecurityType.Commodity", span="205-205", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_51 [label="SecurityType.Forex", span="195-195", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_52 [label="SecurityType.Cfd", span="196-196", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_53 [label="SecurityType.Crypto", span="197-197", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_54 [label="return new ConstantFeeModel(0m);", span="198-198", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_56 [label="SecurityType.Option", span="201-201", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_57 [label="SecurityType.Future", span="202-202", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_58 [label="return new InteractiveBrokersFeeModel();", span="203-203", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_60 [label="return new ConstantFeeModel(0m);", span="207-207", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_61 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="190-190", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_0 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_1 [label="AccountType = accountType", span="73-73", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_2 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_14 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="130-130", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_15 [label="var splitFactor = split.SplitFactor", span="133-133", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_16 [label="tickets.ForEach(ticket => ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            }))", span="134-139", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_17 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="130-130", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_90 [label="QuantConnect.Brokerages.DefaultBrokerageModel", span="", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m2_91 [label=splitFactor, span="", file="BasicTemplateCryptoFrameworkAlgorithm.cs"];
m3_0 [label="Entry QuantConnect.Lean.Engine.Server.LocalLeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="17-17", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_1 [label="Exit QuantConnect.Lean.Engine.Server.LocalLeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="17-17", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_2 [label="Entry QuantConnect.Lean.Engine.Server.LocalLeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="26-26", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_3 [label="Exit QuantConnect.Lean.Engine.Server.LocalLeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="26-26", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_4 [label="Entry QuantConnect.Lean.Engine.Server.LocalLeanManagement.Update()", span="34-34", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Update()", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_5 [label="Exit QuantConnect.Lean.Engine.Server.LocalLeanManagement.Update()", span="34-34", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Update()", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_6 [label="Entry QuantConnect.Lean.Engine.Server.LocalLeanManagement.Dispose()", span="40-40", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Dispose()", file="BasicTemplateFrameworkAlgorithm.cs"];
m3_7 [label="Exit QuantConnect.Lean.Engine.Server.LocalLeanManagement.Dispose()", span="40-40", cluster="QuantConnect.Lean.Engine.Server.LocalLeanManagement.Dispose()", file="BasicTemplateFrameworkAlgorithm.cs"];
m4_48 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="CashBuyingPowerModel.cs"];
m4_160 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CashBuyingPowerModel.cs"];
m4_98 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="261-261", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_99 [label="return 0;", span="264-264", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_100 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="261-261", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_95 [label="Entry QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string)", span="42-42", cluster="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string)", file="CashBuyingPowerModel.cs"];
m4_44 [label="Entry decimal.Normalize()", span="236-236", cluster="decimal.Normalize()", file="CashBuyingPowerModel.cs"];
m4_41 [label="Entry QuantConnect.Securities.HasSufficientBuyingPowerForOrderResult.HasSufficientBuyingPowerForOrderResult(bool, string)", span="37-37", cluster="QuantConnect.Securities.HasSufficientBuyingPowerForOrderResult.HasSufficientBuyingPowerForOrderResult(bool, string)", file="CashBuyingPowerModel.cs"];
m4_43 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="320-320", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_129 [label="var baseCurrency = security as IBaseCurrencySymbol", span="322-322", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_132 [label="var targetCurrency = order.Direction == OrderDirection.Buy\r\n                ? security.QuoteCurrency.Symbol\r\n                : baseCurrency.BaseCurrencySymbol", span="326-328", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_134 [label="portfolio.Securities.Values", span="331-331", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_141 [label="var openOrders = portfolio.Transactions.GetOpenOrders(x =>\r\n                {\r\n                    OrderDirection dir;\r\n                    return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);\r\n                }\r\n            )", span="347-358", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_144 [label="var orderSecurity = portfolio.Securities[openOrder.Symbol]", span="364-364", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_149 [label="quantityInTargetCurrency *= GetOrderPrice(security, openOrder)", span="373-373", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_130 [label="baseCurrency == null", span="323-323", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_131 [label="return 0;", span="323-323", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_133 [label="var symbolDirectionPairs = new Dictionary<Symbol, OrderDirection>()", span="330-330", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_137 [label="basePortfolioSecurity.BaseCurrencySymbol == targetCurrency", span="336-336", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_139 [label="portfolioSecurity.QuoteCurrency.Symbol == targetCurrency", span="340-340", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_148 [label="orderSecurity.QuoteCurrency.Symbol == targetCurrency", span="371-371", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_138 [label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Sell)", span="338-338", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_140 [label="symbolDirectionPairs.Add(portfolioSecurity.Symbol, OrderDirection.Buy)", span="342-342", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_135 [label="var basePortfolioSecurity = portfolioSecurity as IBaseCurrencySymbol", span="333-333", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_136 [label="basePortfolioSecurity == null", span="334-334", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_142 [label="var openOrdersReservedQuantity = 0m", span="361-361", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_143 [label=openOrders, span="362-362", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_150 [label="openOrdersReservedQuantity += quantityInTargetCurrency", span="376-376", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_151 [label="return openOrdersReservedQuantity;", span="380-380", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_147 [label="var quantityInTargetCurrency = openOrder.AbsoluteQuantity", span="370-370", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_145 [label="var orderBaseCurrency = orderSecurity as IBaseCurrencySymbol", span="365-365", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_146 [label="orderBaseCurrency != null", span="367-367", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_152 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="320-320", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOpenOrdersReservedQuantity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_156 [label="Entry lambda expression", span="347-357", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m4_158 [label="return symbolDirectionPairs.TryGetValue(x.Symbol, out dir) &&\r\n                           // same direction of our order\r\n                           dir == x.Direction &&\r\n                           // don't count our current order\r\n                           x.Id != order.Id &&\r\n                           // only count working orders\r\n                           (x.Type == OrderType.Limit || x.Type == OrderType.StopMarket);", span="350-356", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m4_157 [label="OrderDirection dir", span="349-349", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m4_159 [label="Exit lambda expression", span="347-357", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m4_42 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="295-295", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_117 [label="var orderPrice = 0m", span="297-297", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_118 [label="order.Type", span="298-298", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_120 [label="orderPrice = security.Price", span="301-301", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_122 [label="orderPrice = ((LimitOrder)order).LimitPrice", span="305-305", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_124 [label="orderPrice = ((StopMarketOrder)order).StopPrice", span="309-309", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_126 [label="orderPrice = ((StopLimitOrder)order).LimitPrice", span="313-313", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_119 [label="OrderType.Market", span="300-300", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_121 [label="OrderType.Limit", span="304-304", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_123 [label="OrderType.StopMarket", span="308-308", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_125 [label="OrderType.StopLimit", span="312-312", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_127 [label="return orderPrice;", span="317-317", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_128 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="295-295", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetOrderPrice(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_154 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CashBuyingPowerModel.cs"];
m4_96 [label="Entry QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string, bool)", span="55-55", cluster="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult.GetMaximumOrderQuantityForTargetValueResult(decimal, string, bool)", file="CashBuyingPowerModel.cs"];
m4_47 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="146-146", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_50 [label="targetPortfolioValue < 0", span="149-149", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_52 [label="var baseCurrency = security as IBaseCurrencySymbol", span="154-154", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_55 [label="targetPortfolioValue == 0", span="161-161", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_56 [label="return new GetMaximumOrderQuantityForTargetValueResult(-portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount);", span="163-163", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_57 [label="var baseCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount,\r\n                baseCurrency.BaseCurrencySymbol)", span="167-169", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_58 [label="var quoteCurrencyPosition = portfolio.CashBook.ConvertToAccountCurrency(\r\n                portfolio.CashBook[security.QuoteCurrency.Symbol].Amount,\r\n                security.QuoteCurrency.Symbol)", span="172-174", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_59 [label="var targetOrderValue = Math.Abs(targetPortfolioValue - baseCurrencyPosition)", span="177-177", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_60 [label="var direction = targetPortfolioValue > baseCurrencyPosition ? OrderDirection.Buy : OrderDirection.Sell", span="178-178", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_61 [label="var unitPrice = direction == OrderDirection.Buy ? security.AskPrice : security.BidPrice", span="181-181", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_62 [label="unitPrice *= security.QuoteCurrency.ConversionRate * security.SymbolProperties.ContractMultiplier", span="182-182", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_64 [label="security.QuoteCurrency.ConversionRate == 0", span="186-186", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_65 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The internal cash feed required for converting {security.QuoteCurrency.Symbol} to {CashBook.AccountCurrency} does not have any data yet (or market may be closed).'');", span="188-188", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_66 [label="security.SymbolProperties.ContractMultiplier == 0", span="191-191", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_67 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The contract multiplier for the {security.Symbol.Value} security is zero. The symbol properties database may be out of date.'');", span="193-193", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_68 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The price of the {security.Symbol.Value} security is zero because it does not have any market data yet. When the security price is set this security will be ready for trading.'');", span="197-197", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_70 [label="var currency = direction == OrderDirection.Buy ? security.QuoteCurrency.Symbol : baseCurrency.BaseCurrencySymbol", span="202-202", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_78 [label="orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="218-218", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_80 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The order quantity is less than the lot size of {security.SymbolProperties.LotSize} and has been rounded to zero.'', false);", span="221-221", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_84 [label="var order = new MarketOrder(security.Symbol, orderQuantity, DateTime.UtcNow)", span="235-235", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_86 [label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="237-237", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_88 [label="feeToPriceRatio -= feeToPriceRatio % security.SymbolProperties.LotSize", span="241-241", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_89 [label="feeToPriceRatio < security.SymbolProperties.LotSize", span="242-242", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_90 [label="feeToPriceRatio = security.SymbolProperties.LotSize", span="244-244", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_51 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, ''The cash model does not allow shorting.'');", span="151-151", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_53 [label="baseCurrency == null", span="155-155", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_54 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, ''The security type must be SecurityType.Crypto or SecurityType.Forex.'');", span="157-157", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_69 [label="var cashRemaining = direction == OrderDirection.Buy ? quoteCurrencyPosition : baseCurrencyPosition", span="201-201", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_77 [label="var orderQuantity = targetOrderValue / unitPrice", span="215-215", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_92 [label="cashRequired > cashRemaining || orderValue + orderFees > targetOrderValue", span="250-250", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_93 [label="return new GetMaximumOrderQuantityForTargetValueResult((direction == OrderDirection.Sell ? -1 : 1) * orderQuantity);", span="253-253", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_63 [label="unitPrice == 0", span="184-184", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_85 [label="orderValue = orderQuantity * unitPrice", span="236-236", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_87 [label="feeToPriceRatio = orderFees / unitPrice", span="240-240", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_71 [label="cashRemaining <= 0", span="203-203", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_72 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The portfolio does not hold any {currency} for the order.'');", span="205-205", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_83 [label="return new GetMaximumOrderQuantityForTargetValueResult(0, $''The portfolio does not hold enough {currency} including the order fees.'');", span="231-231", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_73 [label="decimal cashRequired", span="209-209", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_74 [label="decimal orderValue", span="210-210", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_75 [label="decimal orderFees", span="211-211", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_76 [label="var feeToPriceRatio = 0m", span="212-212", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_81 [label="orderQuantity -= feeToPriceRatio", span="228-228", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_79 [label="orderQuantity == 0", span="219-219", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_82 [label="orderQuantity <= 0", span="229-229", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_91 [label="cashRequired = orderValue", span="248-248", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_94 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="146-146", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_3 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="45-45", cluster="QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_4 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="45-45", cluster="QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModel.cs"];
m4_155 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="278-278", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBuyingPowerModel.cs"];
m4_116 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_101 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="274-274", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_102 [label="var baseCurrency = security as IBaseCurrencySymbol", span="276-276", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_105 [label="var baseCurrencyPosition = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="279-279", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_106 [label="var quoteCurrencyPosition = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="280-280", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_107 [label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security) / security.QuoteCurrency.ConversionRate", span="283-283", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_110 [label="direction == OrderDirection.Buy", span="286-286", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_112 [label="direction == OrderDirection.Sell", span="289-289", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_103 [label="baseCurrency == null", span="277-277", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_104 [label="return 0;", span="277-277", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_113 [label="return baseCurrencyPosition;", span="290-290", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_111 [label="return quoteCurrencyPosition / unitPrice;", span="287-287", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_108 [label="unitPrice == 0", span="284-284", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_109 [label="return 0;", span="284-284", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_114 [label="return 0;", span="292-292", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_115 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="274-274", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="CashBuyingPowerModel.cs"];
m4_97 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="CashBuyingPowerModel.cs"];
m4_0 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_1 [label="return 1m;", span="34-34", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_2 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="CashBuyingPowerModel.cs"];
m4_5 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_6 [label="var baseCurrency = security as IBaseCurrencySymbol", span="59-59", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_8 [label="return new HasSufficientBuyingPowerForOrderResult(false, $''The '{security.Symbol.Value}' security is not supported by this cash model. Currently only SecurityType.Crypto and SecurityType.Forex are supported.'');", span="62-62", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_11 [label="order.Direction == OrderDirection.Buy", span="67-67", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_12 [label="totalQuantity = portfolio.CashBook[security.QuoteCurrency.Symbol].Amount", span="70-70", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_13 [label="orderQuantity = order.AbsoluteQuantity * GetOrderPrice(security, order)", span="71-71", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_14 [label="totalQuantity = portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount", span="76-76", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_15 [label="orderQuantity = order.AbsoluteQuantity", span="77-77", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_16 [label="var openOrdersReservedQuantity = GetOpenOrdersReservedQuantity(portfolio, security, order)", span="81-81", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_19 [label="order.Direction == OrderDirection.Sell", span="85-85", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_24 [label="order.Type == OrderType.Market", span="97-97", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_25 [label="var holdingsValue =\r\n                    portfolio.CashBook.Convert(\r\n                        portfolio.CashBook[baseCurrency.BaseCurrencySymbol].Amount, baseCurrency.BaseCurrencySymbol, security.QuoteCurrency.Symbol)", span="100-102", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_26 [label="var targetValue =\r\n                    portfolio.CashBook.ConvertToAccountCurrency(totalQuantity - openOrdersReservedQuantity + holdingsValue,\r\n                        security.QuoteCurrency.Symbol)", span="105-107", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_27 [label="var maximumQuantity =\r\n                    GetMaximumOrderQuantityForTargetValue(portfolio, security, targetValue).Quantity * GetOrderPrice(security, order)", span="110-111", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_30 [label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {security.QuoteCurrency.Symbol}, {openOrdersReservedQuantity.Normalize()} {security.QuoteCurrency.Symbol} of which are reserved for open orders, but your Buy order is for {order.AbsoluteQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Your order requires a total value of {orderQuantity.Normalize()} {security.QuoteCurrency.Symbol}, but only a total value of {(Math.Abs(maximumQuantity) + holdingsValue).Normalize()} {security.QuoteCurrency.Symbol} is available.''", span="116-116", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="CashBuyingPowerModel.cs"];
m4_33 [label="order.Type == OrderType.Limit", span="124-124", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_34 [label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="126-126", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_35 [label="orderFee = portfolio.CashBook.Convert(orderFee, CashBook.AccountCurrency, security.QuoteCurrency.Symbol)", span="127-127", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_38 [label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {security.QuoteCurrency.Symbol}, {openOrdersReservedQuantity.Normalize()} {security.QuoteCurrency.Symbol} of which are reserved for open orders, but your Buy order is for {order.AbsoluteQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Your order requires a total value of {orderQuantity.Normalize()} {security.QuoteCurrency.Symbol}, but only a total value of {(totalQuantity - openOrdersReservedQuantity - orderFee).Normalize()} {security.QuoteCurrency.Symbol} is available.''", span="133-133", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_7 [label="baseCurrency == null", span="60-60", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_22 [label="reason = $''Your portfolio holds {totalQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}, {openOrdersReservedQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol} of which are reserved for open orders, but your Sell order is for {orderQuantity.Normalize()} {baseCurrency.BaseCurrencySymbol}. Cash Modeling trading does not permit short holdings so ensure you only sell what you have, including any additional open orders.''", span="91-91", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_9 [label="decimal totalQuantity", span="65-65", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_10 [label="decimal orderQuantity", span="66-66", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_20 [label="isSufficient = orderQuantity <= totalQuantity - openOrdersReservedQuantity", span="88-88", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_36 [label="isSufficient = orderQuantity <= totalQuantity - openOrdersReservedQuantity - orderFee", span="130-130", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_28 [label="isSufficient = orderQuantity <= Math.Abs(maximumQuantity)", span="113-113", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_17 [label="bool isSufficient", span="83-83", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_18 [label="var reason = string.Empty", span="84-84", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_23 [label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="94-94", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_31 [label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="119-119", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_39 [label="return new HasSufficientBuyingPowerForOrderResult(isSufficient, reason);", span="136-136", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_21 [label="!isSufficient", span="89-89", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_32 [label="var orderFee = 0m", span="123-123", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_29 [label="!isSufficient", span="114-114", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_37 [label="!isSufficient", span="131-131", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_40 [label="Exit QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_46 [label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="116-116", cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="CashBuyingPowerModel.cs"];
m4_49 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModel.cs"];
m4_45 [label="Entry QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="102-102", cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="CashBuyingPowerModel.cs"];
m4_161 [label="QuantConnect.Securities.CashBuyingPowerModel", span="", file="CashBuyingPowerModel.cs"];
m4_162 [label="QuantConnect.Orders.Order", span="", file="CashBuyingPowerModel.cs"];
m4_163 [label=symbolDirectionPairs, span="", file="CashBuyingPowerModel.cs"];
m5_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CustomFrameworkModelsAlgorithm.cs"];
m5_1 [label="Line = line", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CustomFrameworkModelsAlgorithm.cs"];
m5_2 [label="Exception = exception", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CustomFrameworkModelsAlgorithm.cs"];
m5_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CustomFrameworkModelsAlgorithm.cs"];
m5_4 [label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", span="", file="CustomFrameworkModelsAlgorithm.cs"];
m7_18 [label="return GetEntry(market, stringSymbol, securityType).DataTimeZone;", span="112-112", cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="FileSystemDataFeedTests.cs"];
m7_16 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="109-109", cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="FileSystemDataFeedTests.cs"];
m7_17 [label="var stringSymbol = symbol == null ? string.Empty : symbol.Value", span="111-111", cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="FileSystemDataFeedTests.cs"];
m7_19 [label="Exit QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="109-109", cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="FileSystemDataFeedTests.cs"];
m7_49 [label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="FileSystemDataFeedTests.cs"];
m7_66 [label="Entry Unk.AlwaysOpen", span="", cluster="Unk.AlwaysOpen", file="FileSystemDataFeedTests.cs"];
m7_53 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="FileSystemDataFeedTests.cs"];
m7_3 [label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46", cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="FileSystemDataFeedTests.cs"];
m7_20 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="120-120", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_21 [label=DataFolderMarketHoursDatabaseLock, span="122-122", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_22 [label="_dataFolderMarketHoursDatabase == null", span="124-124", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_23 [label="var path = Path.Combine(Globals.DataFolder, ''market-hours'', ''market-hours-database.json'')", span="126-126", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_25 [label="return _dataFolderMarketHoursDatabase;", span="130-130", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_24 [label="_dataFolderMarketHoursDatabase = FromFile(path)", span="127-127", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_26 [label="Exit QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="120-120", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="FileSystemDataFeedTests.cs"];
m7_4 [label="Entry QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase()", span="64-64", cluster="QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase()", file="FileSystemDataFeedTests.cs"];
m7_5 [label="Exit QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase()", span="64-64", cluster="QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase()", file="FileSystemDataFeedTests.cs"];
m7_47 [label="Exit QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_15 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_33 [label="Entry entry", span="155-155", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_34 [label="var key = new SecurityDatabaseKey(market, symbol, securityType)", span="156-156", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_36 [label="!_entries.TryGetValue(new SecurityDatabaseKey(market, null, securityType), out entry)", span="160-160", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_37 [label="securityType == SecurityType.Base", span="162-162", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_38 [label="overrideTimeZone == null", span="164-164", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_41 [label="return new Entry(overrideTimeZone, SecurityExchangeHours.AlwaysOpen(overrideTimeZone));", span="170-170", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_44 [label="overrideTimeZone != null && !entry.ExchangeHours.TimeZone.Equals(overrideTimeZone)", span="181-181", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_45 [label="return new Entry(overrideTimeZone, new SecurityExchangeHours(overrideTimeZone, entry.ExchangeHours.Holidays, entry.ExchangeHours.MarketHours));", span="183-183", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_35 [label="!_entries.TryGetValue(key, out entry)", span="157-157", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_40 [label="Log.Error(''MarketHoursDatabase.GetExchangeHours(): Custom data no time zone specified, default to UTC. '' + key)", span="167-167", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_42 [label="Log.Error(string.Format(''MarketHoursDatabase.GetExchangeHours(): Unable to locate exchange hours for {0}.'' + ''Available keys: {1}'', key, string.Join('', '', _entries.Keys)))", span="173-173", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_43 [label="throw new ArgumentException(''Unable to locate exchange hours for '' + key);", span="176-176", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_46 [label="return entry;", span="187-187", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_39 [label="overrideTimeZone = TimeZones.Utc", span="166-166", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_50 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FileSystemDataFeedTests.cs"];
m7_2 [label="Exit QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Securities.SecurityDatabaseKey, QuantConnect.Securities.MarketHoursDatabase.Entry>)", span="59-59", cluster="QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Securities.SecurityDatabaseKey, QuantConnect.Securities.MarketHoursDatabase.Entry>)", file="FileSystemDataFeedTests.cs"];
m7_0 [label="Entry QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Securities.SecurityDatabaseKey, QuantConnect.Securities.MarketHoursDatabase.Entry>)", span="59-59", cluster="QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Securities.SecurityDatabaseKey, QuantConnect.Securities.MarketHoursDatabase.Entry>)", file="FileSystemDataFeedTests.cs"];
m7_1 [label="_entries = exchangeHours.ToDictionary()", span="61-61", cluster="QuantConnect.Securities.MarketHoursDatabase.MarketHoursDatabase(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Securities.SecurityDatabaseKey, QuantConnect.Securities.MarketHoursDatabase.Entry>)", file="FileSystemDataFeedTests.cs"];
m7_60 [label="Exit QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", span="208-208", cluster="QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", file="FileSystemDataFeedTests.cs"];
m7_51 [label="Entry QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", span="208-208", cluster="QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", file="FileSystemDataFeedTests.cs"];
m7_58 [label="DataTimeZone = dataTimeZone", span="210-210", cluster="QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", file="FileSystemDataFeedTests.cs"];
m7_59 [label="ExchangeHours = exchangeHours", span="211-211", cluster="QuantConnect.Securities.MarketHoursDatabase.Entry.Entry(DateTimeZone, QuantConnect.Securities.SecurityExchangeHours)", file="FileSystemDataFeedTests.cs"];
m7_32 [label="Entry Unk.>", span="", cluster="Unk.>", file="FileSystemDataFeedTests.cs"];
m7_55 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="FileSystemDataFeedTests.cs"];
m7_48 [label="Entry QuantConnect.Securities.SecurityDatabaseKey.SecurityDatabaseKey(string, string, QuantConnect.SecurityType)", span="50-50", cluster="QuantConnect.Securities.SecurityDatabaseKey.SecurityDatabaseKey(string, string, QuantConnect.SecurityType)", file="FileSystemDataFeedTests.cs"];
m7_65 [label="Entry Entry.cstr", span="", cluster="Entry.cstr", file="FileSystemDataFeedTests.cs"];
m7_52 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="73-73", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_13 [label="return GetEntry(market, stringSymbol, securityType, overrideTimeZone).ExchangeHours;", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_11 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_12 [label="var stringSymbol = symbol == null ? string.Empty : symbol.Value", span="97-97", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_14 [label="Exit QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_56 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="FileSystemDataFeedTests.cs"];
m7_57 [label="Entry QuantConnect.Securities.SecurityExchangeHours.SecurityExchangeHours(DateTimeZone, System.Collections.Generic.IEnumerable<System.DateTime>, System.Collections.Generic.IReadOnlyDictionary<System.DayOfWeek, QuantConnect.Securities.LocalMarketHours>)", span="88-88", cluster="QuantConnect.Securities.SecurityExchangeHours.SecurityExchangeHours(DateTimeZone, System.Collections.Generic.IEnumerable<System.DateTime>, System.Collections.Generic.IReadOnlyDictionary<System.DayOfWeek, QuantConnect.Securities.LocalMarketHours>)", file="FileSystemDataFeedTests.cs"];
m7_6 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", span="77-77", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_7 [label="configuration.SecurityType == SecurityType.Base && overrideTimeZone == null", span="80-80", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_8 [label="overrideTimeZone = configuration.ExchangeTimeZone", span="80-80", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_9 [label="return GetExchangeHours(configuration.Market, configuration.Symbol, configuration.SecurityType, overrideTimeZone);", span="81-81", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_10 [label="Exit QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", span="77-77", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_64 [label="Exit QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="217-217", cluster="QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_61 [label="Entry QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="217-217", cluster="QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_62 [label="var tz = overrideTimeZone ?? TimeZones.Utc", span="219-219", cluster="QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_63 [label="return new Entry(tz, SecurityExchangeHours.AlwaysOpen(tz));", span="220-220", cluster="QuantConnect.Securities.MarketHoursDatabase.AlwaysOpenMarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="FileSystemDataFeedTests.cs"];
m7_28 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromFile(string)", span="138-138", cluster="QuantConnect.Securities.MarketHoursDatabase.FromFile(string)", file="FileSystemDataFeedTests.cs"];
m7_29 [label="return JsonConvert.DeserializeObject<MarketHoursDatabase>(File.ReadAllText(path));", span="140-140", cluster="QuantConnect.Securities.MarketHoursDatabase.FromFile(string)", file="FileSystemDataFeedTests.cs"];
m7_30 [label="Exit QuantConnect.Securities.MarketHoursDatabase.FromFile(string)", span="138-138", cluster="QuantConnect.Securities.MarketHoursDatabase.FromFile(string)", file="FileSystemDataFeedTests.cs"];
m7_54 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="FileSystemDataFeedTests.cs"];
m7_27 [label="Entry System.IO.Path.Combine(string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string)", file="FileSystemDataFeedTests.cs"];
m7_67 [label="QuantConnect.Securities.MarketHoursDatabase", span="", file="FileSystemDataFeedTests.cs"];
m7_68 [label="QuantConnect.Securities.MarketHoursDatabase.Entry", span="", file="FileSystemDataFeedTests.cs"];
m8_37 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="GDAXBrokerage.Messaging.cs"];
m8_7 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", span="67-67", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_8 [label="File.Exists(_commandJsonFilePath)", span="69-69", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_11 [label="yield return _commands.Dequeue();", span="77-77", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_9 [label="ReadCommandFile()", span="72-72", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_10 [label="_commands.Count != 0", span="75-75", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_12 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", span="67-67", cluster="QuantConnect.Queues.FileCommandQueueHandler.GetCommands()", file="GDAXBrokerage.Messaging.cs"];
m8_38 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="GDAXBrokerage.Messaging.cs"];
m8_0 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler()", span="40-40", cluster="QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler()", file="GDAXBrokerage.Messaging.cs"];
m8_1 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler()", span="40-40", cluster="QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler()", file="GDAXBrokerage.Messaging.cs"];
m8_35 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="GDAXBrokerage.Messaging.cs"];
m8_36 [label="Entry Unk.DeserializeObject", span="", cluster="Unk.DeserializeObject", file="GDAXBrokerage.Messaging.cs"];
m8_39 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="GDAXBrokerage.Messaging.cs"];
m8_15 [label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0", cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="GDAXBrokerage.Messaging.cs"];
m8_13 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="GDAXBrokerage.Messaging.cs"];
m8_40 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.Dispose()", span="125-125", cluster="QuantConnect.Queues.FileCommandQueueHandler.Dispose()", file="GDAXBrokerage.Messaging.cs"];
m8_41 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.Dispose()", span="125-125", cluster="QuantConnect.Queues.FileCommandQueueHandler.Dispose()", file="GDAXBrokerage.Messaging.cs"];
m8_14 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", span="84-84", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_16 [label="object deserialized", span="86-86", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_17 [label="!File.Exists(_commandJsonFilePath)", span="89-89", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_18 [label="return;", span="89-89", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_19 [label="var contents = File.ReadAllText(_commandJsonFilePath)", span="90-90", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_20 [label="deserialized = JsonConvert.DeserializeObject(contents, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="91-91", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_21 [label=Exception, span="93-93", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_24 [label="File.Delete(_commandJsonFilePath)", span="100-100", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_22 [label="Log.Error(err)", span="95-95", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_23 [label="deserialized = null", span="96-96", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_25 [label="var enumerable = deserialized as IEnumerable<ICommand>", span="103-103", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_30 [label="var item = deserialized as ICommand", span="114-114", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_26 [label="enumerable != null", span="104-104", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_27 [label=enumerable, span="106-106", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_28 [label="_commands.Enqueue(command)", span="108-108", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_29 [label="return;", span="110-110", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_31 [label="item != null", span="115-115", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_32 [label="_commands.Enqueue(item)", span="117-117", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_33 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", span="84-84", cluster="QuantConnect.Queues.FileCommandQueueHandler.ReadCommandFile()", file="GDAXBrokerage.Messaging.cs"];
m8_5 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="59-59", cluster="QuantConnect.Queues.FileCommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs"];
m8_6 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="59-59", cluster="QuantConnect.Queues.FileCommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs"];
m8_2 [label="Entry QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler(string)", span="49-49", cluster="QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler(string)", file="GDAXBrokerage.Messaging.cs"];
m8_3 [label="_commandJsonFilePath = commandJsonFilePath", span="51-51", cluster="QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler(string)", file="GDAXBrokerage.Messaging.cs"];
m8_4 [label="Exit QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler(string)", span="49-49", cluster="QuantConnect.Queues.FileCommandQueueHandler.FileCommandQueueHandler(string)", file="GDAXBrokerage.Messaging.cs"];
m8_42 [label="QuantConnect.Queues.FileCommandQueueHandler", span="", file="GDAXBrokerage.Messaging.cs"];
m10_12 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="96-96", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="GDAXFill.cs"];
m10_13 [label="Exit QuantConnect.Interfaces.IBrokerage.Connect()", span="96-96", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="GDAXFill.cs"];
m10_14 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="101-101", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="GDAXFill.cs"];
m10_15 [label="Exit QuantConnect.Interfaces.IBrokerage.Disconnect()", span="101-101", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="GDAXFill.cs"];
m10_0 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="58-58", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="GDAXFill.cs"];
m10_1 [label="Exit QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="58-58", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="GDAXFill.cs"];
m10_10 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="91-91", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_11 [label="Exit QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="91-91", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_4 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="70-70", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="GDAXFill.cs"];
m10_5 [label="Exit QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="70-70", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="GDAXFill.cs"];
m10_6 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_7 [label="Exit QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_8 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="84-84", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_9 [label="Exit QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="84-84", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXFill.cs"];
m10_2 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="64-64", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="GDAXFill.cs"];
m10_3 [label="Exit QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="64-64", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="GDAXFill.cs"];
m11_6 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IntrinioConfig.cs"];
m11_0 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="IntrinioConfig.cs"];
m11_1 [label="_user = user", span="35-35", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", color=red, community=0, file="IntrinioConfig.cs"];
m11_2 [label="_password = password", span="36-36", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", color=red, community=0, file="IntrinioConfig.cs"];
m11_3 [label="!IntrinioConfig.IsInitialized", span="38-38", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", color=red, community=0, file="IntrinioConfig.cs"];
m11_4 [label="throw new InvalidOperationException(''Please set a valid Intrinio user and password.'');", span="40-40", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="IntrinioConfig.cs"];
m11_5 [label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="IntrinioConfig.cs"];
m12_33 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="IntrinioEconomicData.cs"];
m12_36 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="IntrinioEconomicData.cs"];
m12_31 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IntrinioEconomicData.cs"];
m12_4 [label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="100-100", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_5 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="120-120", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_32 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="207-207", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_54 [label="IntrinioDataTransformation.AnnualyRoc", span="215-215", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_51 [label=dataTransformation, span="210-210", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_55 [label="item = ''yr_change''", span="216-216", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_56 [label="IntrinioDataTransformation.CompoundedAnnualRoc", span="218-218", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_57 [label="item = ''c_annual_roc''", span="219-219", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_58 [label="IntrinioDataTransformation.AnnualyCCRoc", span="221-221", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_59 [label="item = ''cc_annual_roc''", span="222-222", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_60 [label="IntrinioDataTransformation.CCRoc", span="224-224", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_61 [label="item = ''cc_roc''", span="225-225", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_62 [label="IntrinioDataTransformation.Level", span="227-227", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_63 [label="item = ''level''", span="228-228", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_53 [label="item = ''change''", span="213-213", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_52 [label="IntrinioDataTransformation.Roc", span="212-212", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_70 [label="return item;", span="240-240", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_50 [label="var item = ''level''", span="209-209", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_64 [label="IntrinioDataTransformation.Ln", span="230-230", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_66 [label="IntrinioDataTransformation.Pc", span="233-233", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_68 [label="IntrinioDataTransformation.AnnualyPc", span="236-236", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_65 [label="item = ''log''", span="231-231", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_67 [label="item = ''percent_change''", span="234-234", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_69 [label="item = ''yr_percent_change''", span="237-237", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_71 [label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="207-207", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_2 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="100-100", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_3 [label="_dataTransformation = dataTransformation", span="102-102", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="IntrinioEconomicData.cs"];
m12_38 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="51-51", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="IntrinioEconomicData.cs"];
m12_0 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="35-35", cluster="QuantConnect.Lean.Engine.Server.ILeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="IntrinioEconomicData.cs"];
m12_1 [label="Exit QuantConnect.Lean.Engine.Server.ILeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="35-35", cluster="QuantConnect.Lean.Engine.Server.ILeanManagement.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="IntrinioEconomicData.cs"];
m12_35 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="IntrinioEconomicData.cs"];
m12_37 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="75-75", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="IntrinioEconomicData.cs"];
m12_30 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="IntrinioEconomicData.cs"];
m12_12 [label="SubscriptionDataSource subscription", span="138-138", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_6 [label="!IntrinioConfig.IsInitialized", span="123-123", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_10 [label="!IntrinioConfig.IsInitialized", span="131-131", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_13 [label="var intrinioApiCallLimit = 1000 - (int)(DateTime.Now - LastIntrinoAPICall).TotalMilliseconds", span="139-139", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_11 [label="throw new InvalidOperationException(''Please set a valid Intrinio user and password using the 'IntrinioEconomicData.SetUserAndPassword' static method. '' +\r\n                    ''For local backtesting, the user and password can be set in the 'config.json' file.'');", span="133-134", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="IntrinioEconomicData.cs"];
m12_14 [label="_firstTime || intrinioApiCallLimit > 0", span="143-143", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_16 [label=isLiveMode, span="146-146", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_21 [label="var url = $''{_baseUrl}identifier={config.Symbol.Value}&item={item}&sort_order={order}''", span="160-160", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_7 [label="var user = Config.Get(''intrinio-username'')", span="126-126", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_9 [label="IntrinioConfig.SetUserAndPassword(user, password)", span="128-128", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_27 [label="return subscription;", span="176-176", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_15 [label="var order = string.Empty", span="145-145", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_26 [label="subscription = new SubscriptionDataSource('''', SubscriptionTransportMedium.LocalFile)", span="174-174", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_17 [label="order = ''desc''", span="149-149", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_18 [label="order = ''asc''", span="154-154", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_20 [label="var item = GetStringForDataTransformation(_dataTransformation)", span="159-159", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_22 [label="var byteKey = Encoding.ASCII.GetBytes($''{IntrinioConfig.User}:{IntrinioConfig.Password}'')", span="161-161", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_24 [label="subscription = new SubscriptionDataSource(url, SubscriptionTransportMedium.RemoteFile, FileFormat.Csv,\r\n                                                          authorizationHeaders)", span="168-169", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_8 [label="var password = Config.Get(''intrinio-password'')", span="127-127", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_25 [label="LastIntrinoAPICall = DateTime.Now", span="170-170", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_19 [label="_firstTime = false", span="156-156", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_23 [label="var authorizationHeaders = new List<KeyValuePair<string, string>>\r\n                {\r\n                    new KeyValuePair<string, string>(''Authorization'',\r\n                                                     $''Basic ({Convert.ToBase64String(byteKey)})'')\r\n                }", span="162-166", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_28 [label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="120-120", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IntrinioEconomicData.cs"];
m12_29 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="IntrinioEconomicData.cs"];
m12_72 [label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", span="", file="IntrinioEconomicData.cs"];
m14_2 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="ManualPortfolioSelectionModel.cs"];
m14_3 [label="symbols == null", span="52-52", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, file="ManualPortfolioSelectionModel.cs"];
m14_4 [label="throw new ArgumentNullException(nameof(symbols));", span="54-54", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, file="ManualPortfolioSelectionModel.cs"];
m14_5 [label="_symbols = symbols.ToList()", span="57-57", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, file="ManualPortfolioSelectionModel.cs"];
m14_6 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="ManualPortfolioSelectionModel.cs"];
m14_31 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="ManualPortfolioSelectionModel.cs"];
m14_32 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ManualPortfolioSelectionModel.cs"];
m14_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualPortfolioSelectionModel.cs"];
m14_24 [label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="92-92", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_15 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_16 [label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="80-80", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_26 [label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="94-94", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_17 [label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="81-81", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_18 [label="var resolution = universeSettings.Resolution", span="83-83", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_19 [label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="84-84", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_25 [label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_20 [label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="87-87", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_21 [label="var market = grp.Key.Market", span="89-89", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_22 [label="var securityType = grp.Key.SecurityType", span="90-90", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_23 [label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_27 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs"];
m14_8 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ManualPortfolioSelectionModel.cs"];
m14_9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ManualPortfolioSelectionModel.cs"];
m14_10 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs"];
m14_11 [label="_symbols = symbols.ToList()", span="68-68", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs"];
m14_12 [label="_universeSettings = universeSettings", span="69-69", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs"];
m14_13 [label="_securityInitializer = securityInitializer", span="70-70", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs"];
m14_14 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs"];
m14_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ManualPortfolioSelectionModel.cs"];
m14_33 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs"];
m14_30 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ManualPortfolioSelectionModel.cs"];
m14_0 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs"];
m14_1 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs"];
m14_34 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="ManualPortfolioSelectionModel.cs"];
m14_35 [label="new { s.ID.Market, s.SecurityType }", span="87-87", cluster="lambda expression", file="ManualPortfolioSelectionModel.cs"];
m14_36 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="ManualPortfolioSelectionModel.cs"];
m14_37 [label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span="", file="ManualPortfolioSelectionModel.cs"];
m15_7 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_8 [label="var security = algorithm.Securities[symbol]", span="68-68", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_10 [label="return new PortfolioTarget(symbol, 0);", span="71-71", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_11 [label="var quantity = percent * algorithm.Portfolio.TotalPortfolioValue / security.Price", span="74-74", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m15_14 [label="return new PortfolioTarget(symbol, quantity);", span="80-80", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", color=red, community=0, file="PortfolioTarget.cs"];
m15_9 [label="security.Price == 0", span="69-69", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_12 [label="var remainder = quantity % security.SymbolProperties.LotSize", span="77-77", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m15_13 [label="quantity = quantity - remainder", span="78-78", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m15_15 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, double)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, double)", file="PortfolioTarget.cs"];
m15_5 [label="return Percent(algorithm, symbol, (decimal) percent);", span="56-56", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, double)", file="PortfolioTarget.cs"];
m15_6 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, double)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Symbol, double)", file="PortfolioTarget.cs"];
m15_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_1 [label="Symbol = symbol", span="42-42", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_2 [label="Quantity = quantity", span="43-43", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_3 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_16 [label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget", span="", file="PortfolioTarget.cs"];
m16_222 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="QCAlgorithm.Python.cs"];
m16_217 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="74-74", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="QCAlgorithm.Python.cs"];
m16_28 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager()", span="51-51", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager()", file="QCAlgorithm.Python.cs"];
m16_101 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="92-92", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m16_41 [label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="328-328", cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.Python.cs"];
m16_164 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="390-390", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.Python.cs"];
m16_30 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="222-222", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="QCAlgorithm.Python.cs"];
m16_0 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="34-34", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_1 [label="string fillsFile = ''TestData\\test_cash_fills.xml''", span="39-39", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_2 [label="string equityFile = ''TestData\\test_cash_equity.xml''", span="40-40", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_3 [label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                x.Get<string>(''Symbol''),\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''))\r\n                ).ToList()", span="42-48", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_4 [label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="50-52", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_5 [label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="54-54", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_13 [label="i < fills.Count", span="64-64", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_14 [label="var fill = fills[i]", span="67-67", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_11 [label="portfolio.SetCash(equity[0])", span="62-62", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_20 [label="Assert.AreEqual(equity[i + 1], portfolio.TotalPortfolioValue, ''Failed on '' + i)", span="77-77", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_6 [label="var subscriptions = new SubscriptionManager()", span="57-57", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_7 [label="var securities = new SecurityManager()", span="58-58", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_8 [label="securities.Add(''CASH'', new Security(subscriptions.Add(SecurityType.Base, ''CASH''), leverage: 10))", span="59-59", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_9 [label="var transactions = new SecurityTransactionManager(securities)", span="60-60", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_10 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="61-61", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_18 [label="securities.Update(time, updateData)", span="74-74", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_19 [label="portfolio.ProcessFill(fill)", span="76-76", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_12 [label="int i = 0", span="64-64", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_15 [label="var time = DateTime.Today.AddDays(i)", span="68-68", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_17 [label="updateData.Add(0, new List<BaseData> {new IndicatorDataPoint(''CASH'', time, i + 1)})", span="73-73", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_21 [label="i++", span="64-64", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_16 [label="var updateData = new Dictionary<int, List<BaseData>>()", span="72-72", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_22 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="34-34", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="QCAlgorithm.Python.cs"];
m16_113 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_43 [label="Entry lambda expression", span="42-47", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_48 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_44 [label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                x.Get<string>(''Symbol''),\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''))", span="42-47", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_45 [label="Exit lambda expression", span="42-47", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_49 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="51-51", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_50 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_104 [label="Entry lambda expression", span="92-97", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_107 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_110 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_105 [label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                x.Get<string>(''Symbol''),\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''))", span="92-97", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_106 [label="Exit lambda expression", span="92-97", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_108 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="101-101", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_109 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_111 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="105-105", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_112 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_114 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="109-109", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_115 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="QCAlgorithm.Python.cs"];
m16_165 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="QCAlgorithm.Python.cs"];
m16_103 [label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="59-59", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.Python.cs"];
m16_161 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="107-107", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="QCAlgorithm.Python.cs"];
m16_221 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="QCAlgorithm.Python.cs"];
m16_100 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="44-44", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="QCAlgorithm.Python.cs"];
m16_167 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="483-483", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="QCAlgorithm.Python.cs"];
m16_40 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Python.cs"];
m16_157 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", span="109-109", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="QCAlgorithm.Python.cs"];
m16_24 [label="Entry Unk.Descendants", span="", cluster="Unk.Descendants", file="QCAlgorithm.Python.cs"];
m16_166 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="QCAlgorithm.Python.cs"];
m16_32 [label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="82-82", cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m16_160 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs"];
m16_39 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", file="QCAlgorithm.Python.cs"];
m16_26 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="QCAlgorithm.Python.cs"];
m16_29 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager()", span="61-61", cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="QCAlgorithm.Python.cs"];
m16_47 [label="Entry Unk.>", span="", cluster="Unk.>", file="QCAlgorithm.Python.cs"];
m16_52 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="82-82", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_53 [label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="87-87", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_54 [label="string equityFile = ''TestData\\test_forex_equity.xml''", span="88-88", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_57 [label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                x.Get<string>(''Symbol''),\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''))\r\n                ).ToList()", span="92-98", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_55 [label="string mchQuantityFile = ''TestData\\test_forex_fills_mch_quantity.xml''", span="89-89", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_58 [label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="100-102", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_56 [label="string jwbQuantityFile = ''TestData\\test_forex_fills_jwb_quantity.xml''", span="90-90", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_59 [label="var mchQuantity = XDocument.Load(mchQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="104-106", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_60 [label="var jwbQuantity = XDocument.Load(jwbQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="108-110", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_61 [label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="112-112", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_80 [label="i < fills.Count", span="137-137", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_81 [label="var fill = fills[i]", span="140-140", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_66 [label="portfolio.SetCash(equity[0])", span="119-119", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_94 [label="Assert.AreEqual((double) equity[i + 1], (double)portfolio.TotalPortfolioValue, 2e-2)", span="169-169", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_67 [label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="120-120", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_95 [label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Quantity)", span="170-170", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_68 [label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="121-121", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_96 [label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Quantity)", span="171-171", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_62 [label="var subscriptions = new SubscriptionManager()", span="115-115", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_63 [label="var securities = new SecurityManager()", span="116-116", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_72 [label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(jwbCash, subscriptions.Add(SecurityType.Forex, ''MCHJWB''), leverage: 10)", span="127-127", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_73 [label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(usdCash, subscriptions.Add(SecurityType.Forex, ''MCHUSD''), leverage: 10)", span="128-128", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_74 [label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(mchCash, subscriptions.Add(SecurityType.Forex, ''USDJWB''), leverage: 10)", span="129-129", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_78 [label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions)", span="135-135", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_64 [label="var transactions = new SecurityTransactionManager(securities)", span="117-117", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_65 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="118-118", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_75 [label="securities.Add(mchJwbSecurity)", span="131-131", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_76 [label="securities.Add(usdJwbSecurity)", span="132-132", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_77 [label="securities.Add(mchUsdSecurity)", span="133-133", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_91 [label="securities.Update(time, updateData)", span="156-156", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_69 [label="var jwbCash = portfolio.CashBook[''JWB'']", span="123-123", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_70 [label="var mchCash = portfolio.CashBook[''MCH'']", span="124-124", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_71 [label="var usdCash = portfolio.CashBook[''USD'']", span="125-125", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_92 [label="portfolio.CashBook.Update(updateData)", span="157-157", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_93 [label="portfolio.ProcessFill(fill)", span="158-158", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_79 [label="int i = 0", span="137-137", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_82 [label="var time = DateTime.Today.AddDays(i)", span="141-141", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_83 [label="decimal mchJwb = i + 1", span="145-145", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_84 [label="decimal mchUsd = (i + 1)/(i + 2m)", span="146-146", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_85 [label="decimal usdJwb = i + 2", span="147-147", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_97 [label="i++", span="137-137", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_88 [label="updateData.Add(0, new List<BaseData> {new IndicatorDataPoint(''MCHJWB'', time, mchJwb)})", span="152-152", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_89 [label="updateData.Add(1, new List<BaseData> {new IndicatorDataPoint(''MCHUSD'', time, mchUsd)})", span="153-153", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_90 [label="updateData.Add(2, new List<BaseData> {new IndicatorDataPoint(''JWBUSD'', time, usdJwb)})", span="154-154", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_86 [label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="148-148", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_87 [label="var updateData = new Dictionary<int, List<BaseData>>()", span="151-151", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_98 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="82-82", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="QCAlgorithm.Python.cs"];
m16_223 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="QCAlgorithm.Python.cs"];
m16_99 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="QCAlgorithm.Python.cs"];
m16_35 [label="Entry Unk.SetCash", span="", cluster="Unk.SetCash", file="QCAlgorithm.Python.cs"];
m16_46 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", span="92-92", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", file="QCAlgorithm.Python.cs"];
m16_27 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="QCAlgorithm.Python.cs"];
m16_162 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="471-471", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Python.cs"];
m16_34 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="61-61", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QCAlgorithm.Python.cs"];
m16_159 [label="Entry QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", span="403-403", cluster="QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", file="QCAlgorithm.Python.cs"];
m16_170 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="244-244", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_171 [label="var securities = new SecurityManager()", span="246-246", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_172 [label="var transactions = new SecurityTransactionManager(securities)", span="247-247", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_173 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="248-248", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_182 [label="securities.Add(new Security(config1, 2, false))", span="259-259", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_183 [label="securities[''AAPL''].Holdings.SetHoldings(100, 100)", span="260-260", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_184 [label="securities[''AAPL''].Update(time, new TradeBar{Time = time, Value = 100})", span="261-261", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_185 [label="Console.WriteLine(''AAPL TMU: '' + securities[''AAPL''].MarginModel.GetMaintenanceMargin(securities[''AAPL'']))", span="262-262", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_186 [label="Console.WriteLine(''AAPL Value: '' + securities[''AAPL''].Holdings.HoldingsValue)", span="263-263", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_189 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(usdCash, config2, 100, false))", span="268-268", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_190 [label="securities[''EURUSD''].Holdings.SetHoldings(1.1m, 1000)", span="269-269", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_191 [label="securities[''EURUSD''].Update(time, new TradeBar { Time = time, Value = 1.1m })", span="270-270", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_192 [label="Console.WriteLine(''EURUSD TMU: '' + securities[''EURUSD''].MarginModel.GetMaintenanceMargin(securities[''EURUSD'']))", span="271-271", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_193 [label="Console.WriteLine(''EURUSD Value: '' + securities[''EURUSD''].Holdings.HoldingsValue)", span="272-272", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_196 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(gbpCash, config3, 100, false))", span="277-277", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_197 [label="securities[''EURGBP''].Holdings.SetHoldings(1m, 1000)", span="278-278", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_198 [label="securities[''EURGBP''].Update(time, new TradeBar { Time = time, Value = 1m })", span="279-279", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_199 [label="Console.WriteLine(''EURGBP TMU: '' + securities[''EURGBP''].MarginModel.GetMaintenanceMargin(securities[''EURGBP'']))", span="280-280", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_200 [label="Console.WriteLine(''EURGBP Value: '' + securities[''EURGBP''].Holdings.HoldingsValue)", span="281-281", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_211 [label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="298-298", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_214 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="302-302", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_174 [label="portfolio.CashBook[''USD''].Quantity = 1000", span="249-249", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_175 [label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="250-250", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_176 [label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="251-251", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_177 [label="var eurCash = portfolio.CashBook[''EUR'']", span="253-253", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_178 [label="var gbpCash = portfolio.CashBook[''GBP'']", span="254-254", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_179 [label="var usdCash = portfolio.CashBook[''USD'']", span="255-255", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_202 [label="Console.WriteLine(portfolio.CashBook[''USD''])", span="285-285", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_203 [label="Console.WriteLine(portfolio.CashBook[''EUR''])", span="286-286", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_204 [label="Console.WriteLine(portfolio.CashBook[''GBP''])", span="287-287", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_205 [label="Console.WriteLine(''CashBook: '' + portfolio.CashBook.TotalValueInAccountCurrency)", span="288-288", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_207 [label="Console.WriteLine(''Total Margin Used: '' + portfolio.TotalMarginUsed)", span="292-292", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_208 [label="Console.WriteLine(''Total Free Margin: '' + portfolio.MarginRemaining)", span="293-293", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_209 [label="Console.WriteLine(''Total Portfolio Value: '' + portfolio.TotalPortfolioValue)", span="294-294", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_180 [label="var time = DateTime.Now", span="257-257", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_181 [label="var config1 = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''AAPL'', Resolution.Minute, true, true, true, true, true, 0)", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_187 [label="Console.WriteLine()", span="265-265", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_188 [label="var config2 = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Forex, ''EURUSD'', Resolution.Minute, true, true, true, true, true, 1)", span="267-267", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_194 [label="Console.WriteLine()", span="274-274", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_195 [label="var config3 = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Forex, ''EURGBP'', Resolution.Minute, true, true, true, true, true, 2)", span="276-276", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_201 [label="Console.WriteLine()", span="283-283", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_206 [label="Console.WriteLine()", span="290-290", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_210 [label="var acceptedOrder = new MarketOrder(''AAPL'', 101, DateTime.Now) {Price = 100}", span="297-297", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_212 [label="Assert.IsTrue(sufficientCapital)", span="299-299", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_213 [label="var rejectedOrder = new MarketOrder(''AAPL'', 102, DateTime.Now) { Price = 100 }", span="301-301", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_215 [label="Assert.IsFalse(sufficientCapital)", span="303-303", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_216 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="244-244", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="QCAlgorithm.Python.cs"];
m16_163 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.Python.cs"];
m16_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Python.cs"];
m16_116 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="179-179", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_117 [label="int quantity = 1000", span="181-181", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_118 [label="var securities = new SecurityManager()", span="182-182", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_121 [label="portfolio.CashBook[''USD''].Quantity = quantity", span="185-185", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_127 [label="var order = new MarketOrder(''AAPL'', quantity, time) {Price = buyPrice}", span="194-194", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_128 [label="var fill = new OrderEvent(order){FillPrice = buyPrice, FillQuantity = quantity}", span="195-195", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_132 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="202-202", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_133 [label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="203-203", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_140 [label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="216-216", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_141 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="217-217", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_142 [label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="218-218", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_149 [label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="231-231", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_150 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="232-232", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_151 [label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="233-233", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_154 [label="Assert.AreEqual(-quantity, marginCallOrders[0].Quantity)", span="239-239", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_119 [label="var transactions = new SecurityTransactionManager(securities)", span="183-183", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_120 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="184-184", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_123 [label="securities.Add(new Security(config, 1, false))", span="188-188", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_126 [label="securities[''AAPL''].Update(time, new TradeBar(time, ''AAPL'', buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="192-192", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_139 [label="securities[''AAPL''].Update(time, new TradeBar(time, ''AAPL'', highPrice, highPrice, highPrice, highPrice, 1))", span="214-214", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_148 [label="securities[''AAPL''].Update(time, new TradeBar(time, ''AAPL'', lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="229-229", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_135 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="207-207", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_144 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="222-222", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_129 [label="Assert.AreEqual(portfolio.CashBook[''USD''].Quantity, fill.FillPrice*fill.FillQuantity)", span="197-197", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_130 [label="portfolio.ProcessFill(fill)", span="199-199", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_131 [label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="201-201", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_152 [label="var marginCallOrders = portfolio.ScanForMarginCall()", span="237-237", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_155 [label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, marginCallOrders[0].Price*marginCallOrders[0].Quantity)", span="240-240", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_122 [label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''AAPL'', Resolution.Minute, true, true, true, true, true, 0)", span="187-187", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_124 [label="var time = DateTime.Now", span="190-190", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_125 [label="decimal buyPrice = 1m", span="191-191", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_134 [label="var newOrder = new MarketOrder(''AAPL'', 1, time.AddSeconds(1)) {Price = buyPrice}", span="206-206", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_137 [label="time = time.AddDays(1)", span="212-212", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_138 [label="decimal highPrice = buyPrice * 2", span="213-213", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_147 [label="decimal lowPrice = buyPrice/2", span="228-228", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_136 [label="Assert.IsFalse(sufficientCapital)", span="208-208", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_143 [label="var anotherOrder = new MarketOrder(''AAPL'', 1, time.AddSeconds(1)) { Price = highPrice }", span="221-221", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_146 [label="time = time.AddDays(1)", span="227-227", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_145 [label="Assert.IsTrue(sufficientCapital)", span="223-223", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_153 [label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="238-238", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_156 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="179-179", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="QCAlgorithm.Python.cs"];
m16_42 [label="Entry Unk.ProcessFill", span="", cluster="Unk.ProcessFill", file="QCAlgorithm.Python.cs"];
m16_23 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="QCAlgorithm.Python.cs"];
m16_102 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="QCAlgorithm.Python.cs"];
m16_169 [label="Entry Unk.GreaterOrEqual", span="", cluster="Unk.GreaterOrEqual", file="QCAlgorithm.Python.cs"];
m16_33 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="58-58", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Python.cs"];
m16_168 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="QCAlgorithm.Python.cs"];
m16_51 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="QCAlgorithm.Python.cs"];
m16_218 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="365-365", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="QCAlgorithm.Python.cs"];
m16_25 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="QCAlgorithm.Python.cs"];
m16_158 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long)", span="163-163", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long)", file="QCAlgorithm.Python.cs"];
m16_31 [label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82", cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Python.cs"];
m16_219 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="78-78", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="QCAlgorithm.Python.cs"];
m16_36 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.Python.cs"];
m16_220 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54", cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m17_49 [label="Entry lambda expression", span="818-818", cluster="lambda expression", file="RegressionTests.cs"];
m17_50 [label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="818-818", cluster="lambda expression", file="RegressionTests.cs"];
m17_51 [label="Exit lambda expression", span="818-818", cluster="lambda expression", file="RegressionTests.cs"];
m17_0 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_1 [label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_3 [label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="30-30", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_7 [label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="38-38", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_2 [label="QuantConnect.Configuration.Config.Set(''forward-console-messages'', ''false'')", span="28-28", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_4 [label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="33-33", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_5 [label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="34-34", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_6 [label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="35-35", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_8 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m17_46 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="828-828", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m17_54 [label="Algorithm = algorithm", span="830-830", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m17_55 [label="Statistics = statistics", span="831-831", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m17_56 [label="Language = language", span="832-832", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m17_57 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="828-828", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m17_53 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="RegressionTests.cs"];
m17_11 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_12 [label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="43-64", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_13 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="66-87", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_42 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="745-818", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs"];
m17_14 [label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Total Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="89-122", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs"];
m17_15 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="124-145", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_16 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="147-168", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_17 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="170-191", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_18 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="193-214", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_19 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="216-237", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_20 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="239-260", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_21 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="262-283", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_22 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="285-306", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_23 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="308-329", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_24 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="331-352", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_25 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="354-375", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_26 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="377-398", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_27 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="400-421", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_28 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="423-444", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_29 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="446-467", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_30 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="469-490", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_31 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="492-513", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_32 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="515-536", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_33 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="538-559", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_34 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="561-582", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_35 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="584-605", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_36 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="607-628", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_37 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="630-651", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_38 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="653-674", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_39 [label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="676-697", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_40 [label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="699-720", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_41 [label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="722-743", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_43 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m17_52 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="RegressionTests.cs"];
m17_10 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="43-43", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="RegressionTests.cs"];
m17_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RegressionTests.cs"];
m17_48 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="RegressionTests.cs"];
m17_9 [label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118", cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs"];
m17_44 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs"];
m17_58 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", file="RegressionTests.cs"];
m19_157 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_249 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="SimplePortfolioConstructionModel.cs"];
m19_180 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SimplePortfolioConstructionModel.cs"];
m19_215 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="SimplePortfolioConstructionModel.cs"];
m19_144 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="SimplePortfolioConstructionModel.cs"];
m19_147 [label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="42-42", cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="SimplePortfolioConstructionModel.cs"];
m19_138 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SimplePortfolioConstructionModel.cs"];
m19_152 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SimplePortfolioConstructionModel.cs"];
m19_190 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="SimplePortfolioConstructionModel.cs"];
m19_216 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="SimplePortfolioConstructionModel.cs"];
m19_159 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SimplePortfolioConstructionModel.cs"];
m19_153 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SimplePortfolioConstructionModel.cs"];
m19_178 [label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_250 [label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="449-449", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_251 [label="var path = Path.GetDirectoryName(csvFileName)", span="451-451", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_254 [label="var writer = new StreamWriter(csvFileName)", span="455-455", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_255 [label=orders, span="457-457", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_252 [label="path != null && !Directory.Exists(path)", span="452-452", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_253 [label="Directory.CreateDirectory(path)", span="453-453", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_257 [label="writer.WriteLine(line)", span="465-465", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_256 [label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="459-464", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_258 [label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="SimplePortfolioConstructionModel.cs"];
m19_137 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="SimplePortfolioConstructionModel.cs"];
m19_266 [label="Entry lambda expression", span="449-449", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_219 [label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken)", span="250-250", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_223 [label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="257-257", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_200 [label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="136-136", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_206 [label="algorithm.BrokerageMessageHandler.Handle(message)", span="205-205", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_207 [label="algorithm.OnBrokerageMessage(message)", span="208-208", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_210 [label="algorithm.OnBrokerageDisconnect()", span="212-212", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_212 [label="algorithm.OnBrokerageReconnect()", span="215-215", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_222 [label="algorithm.RunTimeError = err", span="256-256", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_199 [label="Entry lambda expression", span="133-141", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_208 [label="message.Type", span="209-209", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_218 [label="Entry lambda expression", span="242-262", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_229 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_201 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="138-139", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_202 [label="Exit lambda expression", span="133-141", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_205 [label="Entry lambda expression", span="203-218", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_209 [label="BrokerageMessageType.Disconnect", span="211-211", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_211 [label="BrokerageMessageType.Reconnect", span="214-214", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_213 [label="Exit lambda expression", span="203-218", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_220 [label=Exception, span="252-252", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_225 [label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="261-261", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_221 [label="Log.Error(err)", span="255-255", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_224 [label="return;", span="258-258", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_226 [label="Exit lambda expression", span="242-262", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_230 [label="x.Status.IsFill()", span="317-317", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_231 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_267 [label="x.Status.IsFill()", span="449-449", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_268 [label="Exit lambda expression", span="449-449", cluster="lambda expression", file="SimplePortfolioConstructionModel.cs"];
m19_227 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)", file="SimplePortfolioConstructionModel.cs"];
m19_154 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_167 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="SimplePortfolioConstructionModel.cs"];
m19_163 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="SimplePortfolioConstructionModel.cs"];
m19_148 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="SimplePortfolioConstructionModel.cs"];
m19_161 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="SimplePortfolioConstructionModel.cs"];
m19_168 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()", file="SimplePortfolioConstructionModel.cs"];
m19_5 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_6 [label="var algorithm = default(IAlgorithm)", span="85-85", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_7 [label="var algorithmManager = manager", span="86-86", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_13 [label="_systemHandlers.Notify.SetAuthentication(job)", span="98-98", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_14 [label="_algorithmHandlers.Results.Initialize(job, _systemHandlers.Notify, _systemHandlers.Api, _algorithmHandlers.DataFeed, _algorithmHandlers.Setup, _algorithmHandlers.Transactions)", span="101-101", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_18 [label="algorithm = _algorithmHandlers.Setup.CreateAlgorithmInstance(job, assemblyPath)", span="110-110", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_21 [label="brokerage = _algorithmHandlers.Setup.CreateBrokerage(job, algorithm, out factory)", span="117-117", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_22 [label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="120-120", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_24 [label="var historyProvider = GetHistoryProvider(job.HistoryProvider)", span="126-126", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_28 [label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", span="133-141", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_30 [label="algorithm.BrokerageMessageHandler = factory.CreateBrokerageMessageHandler(algorithm, job, _systemHandlers.Api)", span="146-146", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_31 [label="initializeComplete = _algorithmHandlers.Setup.Setup(algorithm, brokerage, job, _algorithmHandlers.Results, _algorithmHandlers.Transactions, _algorithmHandlers.RealTime)", span="149-149", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_39 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="163-163", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_44 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="171-171", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_53 [label="job is LiveNodePacket", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_57 [label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="195-195", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_60 [label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="200-200", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_69 [label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="234-234", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_71 [label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="242-262", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_76 [label="HandleAlgorithmError(job, algorithm.RunTimeError)", span="274-274", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_78 [label="HandleAlgorithmError(job, err)", span="280-280", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_109 [label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="344-347", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_110 [label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="349-349", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_8 [label="var initializeComplete = false", span="91-91", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_108 [label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="343-343", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_9 [label="Thread threadFeed = null", span="92-92", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_10 [label="Thread threadTransactions = null", span="93-93", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_121 [label="threadFeed != null && threadFeed.IsAlive", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_122 [label="threadFeed.Abort()", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_11 [label="Thread threadResults = null", span="94-94", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_123 [label="threadTransactions != null && threadTransactions.IsAlive", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_124 [label="threadTransactions.Abort()", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_12 [label="Thread threadRealTime = null", span="95-95", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_15 [label="threadResults = new Thread(_algorithmHandlers.Results.Run, 0) { IsBackground = true, Name = ''Result Thread'' }", span="103-103", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_16 [label="threadResults.Start()", span="104-104", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_125 [label="threadResults != null && threadResults.IsAlive", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_126 [label="threadResults.Abort()", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_17 [label="IBrokerage brokerage = null", span="106-106", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_19 [label="_systemHandlers.LeanManagement.SetAlgorithm(algorithm)", span="113-113", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_23 [label="algorithm.Transactions.SetOrderProcessor(_algorithmHandlers.Transactions)", span="123-123", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_29 [label="algorithm.HistoryProvider = historyProvider", span="143-143", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_32 [label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="152-152", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_33 [label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || _algorithmHandlers.Setup.Errors.Count > 0", span="155-155", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_35 [label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="159-159", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_51 [label="algorithm != null && algorithm.HistoryProvider != null", span="182-182", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_52 [label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="184-184", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_58 [label="algorithm.SetLocked()", span="196-196", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_59 [label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="199-199", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_61 [label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="203-218", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_75 [label="algorithm.RunTimeError != null", span="272-272", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_79 [label="var trades = algorithm.TradeBuilder.ClosedTrades", span="285-285", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_95 [label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="316-316", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_96 [label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="317-317", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_98 [label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="320-321", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_99 [label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="324-326", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_100 [label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_101 [label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_102 [label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="331-331", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_104 [label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_20 [label="IBrokerageFactory factory", span="116-116", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_26 [label="(historyProvider as BrokerageHistoryProvider).SetBrokerage(brokerage)", span="129-129", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_54 [label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_127 [label="brokerage != null", span="382-382", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_129 [label="brokerage.Disconnect()", span="385-385", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_25 [label="historyProvider is BrokerageHistoryProvider", span="127-127", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_27 [label="var historyDataCacheProvider = new ZipDataCacheProvider(_algorithmHandlers.DataProvider)", span="132-132", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_55 [label=initializeComplete, span="189-189", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_34 [label="initializeComplete = false", span="157-157", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_40 [label=Exception, span="166-166", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_45 [label="Log.Trace(''JOB HANDLERS: '')", span="176-176", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_36 [label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="160-160", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_37 [label="Log.Error(''Engine.Run(): '' + errorMessage)", span="161-161", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_38 [label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="162-162", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_41 [label="Log.Error(err)", span="168-168", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_42 [label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="169-169", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_43 [label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="170-170", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_46 [label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="177-177", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_47 [label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="178-178", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_48 [label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="179-179", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_49 [label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="180-180", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_50 [label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="181-181", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_56 [label="var startTime = DateTime.Now", span="192-192", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_116 [label="_algorithmHandlers.Results.Exit()", span="363-363", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_107 [label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="342-342", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_62 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="221-221", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_63 [label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="224-224", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_64 [label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="225-225", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_66 [label="threadFeed.Start()", span="229-229", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_65 [label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="226-226", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_67 [label="threadTransactions.Start()", span="230-230", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_68 [label="threadRealTime.Start()", span="231-231", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_70 [label="var isolator = new Isolator()", span="239-239", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_72 [label="!complete", span="264-264", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_73 [label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="266-266", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_74 [label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="267-268", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_77 [label=Exception, span="277-277", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_80 [label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="286-286", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_81 [label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="287-287", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_92 [label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey) &&\r\n                                charts.ContainsKey(benchmarkKey) &&\r\n                                charts[benchmarkKey].Series.ContainsKey(benchmarkKey)", span="307-311", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_93 [label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="314-314", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_94 [label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="315-315", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_97 [label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="318-318", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_82 [label="var holdings = new Dictionary<string, Holding>()", span="288-288", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_83 [label="var banner = new Dictionary<string, string>()", span="289-289", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_84 [label="var statisticsResults = new StatisticsResults()", span="290-290", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_103 [label="banner.Add(''Return'', netReturn.ToString(''P''))", span="332-332", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_85 [label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="292-292", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_86 [label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="293-293", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_87 [label="SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="295-295", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_88 [label="string strategyEquityKey = ''Strategy Equity''", span="301-301", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_89 [label="string equityKey = ''Equity''", span="302-302", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_90 [label="string dailyPerformanceKey = ''Daily Performance''", span="303-303", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_91 [label="string benchmarkKey = ''Benchmark''", span="304-304", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_105 [label=Exception, span="336-336", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_106 [label="Log.Error(err, ''Error generating statistics packet'')", span="338-338", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_111 [label=Exception, span="351-351", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_113 [label="_algorithmHandlers.Transactions.Exit()", span="357-357", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_112 [label="Log.Error(err, ''Error sending analysis results'')", span="353-353", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_114 [label="_algorithmHandlers.DataFeed.Exit()", span="358-358", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_115 [label="_algorithmHandlers.RealTime.Exit()", span="359-359", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_117 [label="var ts = Stopwatch.StartNew()", span="366-366", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_118 [label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="367-371", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_119 [label="Thread.Sleep(100)", span="373-373", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_120 [label="Log.Trace(''Waiting for threads to exit...'')", span="374-374", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_128 [label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="384-384", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_130 [label="_algorithmHandlers.Setup != null", span="387-387", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_131 [label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="389-389", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_133 [label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="392-392", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_132 [label="_algorithmHandlers.Setup.Dispose()", span="390-390", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_134 [label=Exception, span="394-394", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_135 [label="Log.Error(err, ''Error running algorithm'')", span="396-396", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_136 [label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="SimplePortfolioConstructionModel.cs"];
m19_185 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SimplePortfolioConstructionModel.cs"];
m19_171 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="SimplePortfolioConstructionModel.cs"];
m19_143 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="SimplePortfolioConstructionModel.cs"];
m19_198 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="SimplePortfolioConstructionModel.cs"];
m19_150 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="SimplePortfolioConstructionModel.cs"];
m19_169 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="SimplePortfolioConstructionModel.cs"];
m19_172 [label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_233 [label="Log.Error(err, ''Breaking out of parent try catch:'')", span="418-418", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_237 [label="var message = ''Runtime Error: '' + err", span="422-422", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_240 [label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="425-425", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_241 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="426-426", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_234 [label="_algorithmHandlers.DataFeed != null", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_235 [label="_algorithmHandlers.DataFeed.Exit()", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_236 [label="_algorithmHandlers.Results != null", span="420-420", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_238 [label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="423-423", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_239 [label="_algorithmHandlers.Results.LogMessage(message)", span="424-424", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_242 [label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="SimplePortfolioConstructionModel.cs"];
m19_259 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65", cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SimplePortfolioConstructionModel.cs"];
m19_264 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SimplePortfolioConstructionModel.cs"];
m19_162 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="SimplePortfolioConstructionModel.cs"];
m19_262 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="SimplePortfolioConstructionModel.cs"];
m19_149 [label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45", cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="SimplePortfolioConstructionModel.cs"];
m19_140 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="SimplePortfolioConstructionModel.cs"];
m19_165 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SimplePortfolioConstructionModel.cs"];
m19_156 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="SimplePortfolioConstructionModel.cs"];
m19_164 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SimplePortfolioConstructionModel.cs"];
m19_263 [label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(string)", file="SimplePortfolioConstructionModel.cs"];
m19_197 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="SimplePortfolioConstructionModel.cs"];
m19_191 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="SimplePortfolioConstructionModel.cs"];
m19_145 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="SimplePortfolioConstructionModel.cs"];
m19_196 [label="Entry System.Threading.Thread.Abort()", span="0-0", cluster="System.Threading.Thread.Abort()", file="SimplePortfolioConstructionModel.cs"];
m19_204 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SimplePortfolioConstructionModel.cs"];
m19_186 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="SimplePortfolioConstructionModel.cs"];
m19_261 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)", file="SimplePortfolioConstructionModel.cs"];
m19_260 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="SimplePortfolioConstructionModel.cs"];
m19_195 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="SimplePortfolioConstructionModel.cs"];
m19_181 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="SimplePortfolioConstructionModel.cs"];
m19_265 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="SimplePortfolioConstructionModel.cs"];
m19_194 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="SimplePortfolioConstructionModel.cs"];
m19_192 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="SimplePortfolioConstructionModel.cs"];
m19_146 [label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="SimplePortfolioConstructionModel.cs"];
m19_244 [label="historyProvider.IsNullOrEmpty()", span="435-435", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="SimplePortfolioConstructionModel.cs"];
m19_246 [label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="439-439", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="SimplePortfolioConstructionModel.cs"];
m19_245 [label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="437-437", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="SimplePortfolioConstructionModel.cs"];
m19_247 [label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="SimplePortfolioConstructionModel.cs"];
m19_248 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="SimplePortfolioConstructionModel.cs"];
m19_139 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="SimplePortfolioConstructionModel.cs"];
m19_232 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="SimplePortfolioConstructionModel.cs"];
m19_174 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SimplePortfolioConstructionModel.cs"];
m19_214 [label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27", cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="SimplePortfolioConstructionModel.cs"];
m19_160 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="SimplePortfolioConstructionModel.cs"];
m19_183 [label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40", cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="SimplePortfolioConstructionModel.cs"];
m19_0 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_1 [label="_liveMode = liveMode", span="72-72", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_2 [label="_systemHandlers = systemHandlers", span="73-73", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_3 [label="_algorithmHandlers = algorithmHandlers", span="74-74", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_4 [label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_141 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="SimplePortfolioConstructionModel.cs"];
m19_188 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="SimplePortfolioConstructionModel.cs"];
m19_217 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="SimplePortfolioConstructionModel.cs"];
m19_142 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SimplePortfolioConstructionModel.cs"];
m19_203 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="SimplePortfolioConstructionModel.cs"];
m19_228 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="SimplePortfolioConstructionModel.cs"];
m19_166 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SimplePortfolioConstructionModel.cs"];
m19_175 [label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55", cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="SimplePortfolioConstructionModel.cs"];
m19_173 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SimplePortfolioConstructionModel.cs"];
m19_151 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SimplePortfolioConstructionModel.cs"];
m19_177 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SimplePortfolioConstructionModel.cs"];
m19_187 [label="Entry long.ToString(string)", span="0-0", cluster="long.ToString(string)", file="SimplePortfolioConstructionModel.cs"];
m19_158 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SimplePortfolioConstructionModel.cs"];
m19_243 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="SimplePortfolioConstructionModel.cs"];
m19_182 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SimplePortfolioConstructionModel.cs"];
m19_170 [label="Entry System.TimeSpan.ToString(string)", span="0-0", cluster="System.TimeSpan.ToString(string)", file="SimplePortfolioConstructionModel.cs"];
m19_176 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SimplePortfolioConstructionModel.cs"];
m19_184 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="SimplePortfolioConstructionModel.cs"];
m19_193 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="SimplePortfolioConstructionModel.cs"];
m19_155 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="SimplePortfolioConstructionModel.cs"];
m19_189 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SimplePortfolioConstructionModel.cs"];
m19_269 [label="QuantConnect.Lean.Engine.Engine", span="", file="SimplePortfolioConstructionModel.cs"];
m19_270 [label=algorithm, span="", file="SimplePortfolioConstructionModel.cs"];
m19_271 [label="QuantConnect.Packets.AlgorithmNodePacket", span="", file="SimplePortfolioConstructionModel.cs"];
m19_272 [label=algorithmManager, span="", file="SimplePortfolioConstructionModel.cs"];
m19_273 [label=isolator, span="", file="SimplePortfolioConstructionModel.cs"];
m20_0 [label="Entry QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="31-31", cluster="QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="SubscriptionSynchronizerTests.cs"];
m20_1 [label="Exit QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="31-31", cluster="QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="SubscriptionSynchronizerTests.cs"];
m21_84 [label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94", cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_103 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="UniverseSelection.cs"];
m21_81 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="202-202", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="UniverseSelection.cs"];
m21_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", file="UniverseSelection.cs"];
m21_1 [label="_dataFeed = dataFeed", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", file="UniverseSelection.cs"];
m21_2 [label="_algorithm = algorithm", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", file="UniverseSelection.cs"];
m21_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", file="UniverseSelection.cs"];
m21_87 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UniverseSelection.cs"];
m21_112 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="UniverseSelection.cs"];
m21_111 [label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="63-63", cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="UniverseSelection.cs"];
m21_90 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="UniverseSelection.cs"];
m21_100 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="UniverseSelection.cs"];
m21_105 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="UniverseSelection.cs"];
m21_115 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="UniverseSelection.cs"];
m21_116 [label="new[] { dateTimeUtc }", span="82-82", cluster="lambda expression", color=red, community=0, file="UniverseSelection.cs"];
m21_119 [label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="125-125", cluster="lambda expression", file="UniverseSelection.cs"];
m21_118 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="UniverseSelection.cs"];
m21_123 [label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="149-149", cluster="lambda expression", file="UniverseSelection.cs"];
m21_122 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="UniverseSelection.cs"];
m21_117 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="UniverseSelection.cs"];
m21_120 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="UniverseSelection.cs"];
m21_124 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="UniverseSelection.cs"];
m21_135 [label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Remove(T)", file="UniverseSelection.cs"];
m21_101 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="UniverseSelection.cs"];
m21_99 [label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="119-119", cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m21_133 [label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="237-237", cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m21_97 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="UniverseSelection.cs"];
m21_108 [label="Entry QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="188-188", cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_110 [label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="219-219", cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m21_80 [label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="82-82", cluster="QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", file="UniverseSelection.cs"];
m21_137 [label="Entry QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", span="92-92", cluster="QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", file="UniverseSelection.cs"];
m21_82 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="UniverseSelection.cs"];
m21_17 [label="var exchangeHours = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours", span="85-85", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_4 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_5 [label="var algorithmEndDateUtc = _algorithm.EndDate.ConvertToUtc(_algorithm.TimeZone)", span="61-61", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_6 [label="dateTimeUtc > algorithmEndDateUtc", span="62-62", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_9 [label="var fineFiltered = universe as FineFundamentalFilteredUniverse", span="70-70", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_11 [label="selectSymbolsResult = universe.SelectSymbols(dateTimeUtc, universeData)", span="74-74", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_15 [label="var factory = new FineFundamentalSubscriptionEnumeratorFactory(_algorithm.LiveMode, x => new[] { dateTimeUtc })", span="82-82", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_21 [label="var request = new SubscriptionRequest(true, universe, security, new SubscriptionDataConfig(config), dateTimeUtc, dateTimeUtc)", span="91-91", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_25 [label="selectSymbolsResult = fineFiltered.FineFundamentalUniverse.PerformSelection(dateTimeUtc, fineCollection)", span="102-102", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_26 [label="selectSymbolsResult = universe.PerformSelection(dateTimeUtc, universeData)", span="107-107", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_35 [label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="128-128", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_37 [label="universe.Members.Values", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_39 [label="!universe.CanRemoveMember(dateTimeUtc, member)", span="141-141", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_43 [label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="152-152", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_46 [label="keys.Any() && keys.Single() != dateTimeUtc", span="161-161", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_49 [label="!_pendingSecurityAdditions.TryGetValue(dateTimeUtc, out pendingAdditions)", span="168-168", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_51 [label="_pendingSecurityAdditions[dateTimeUtc] = pendingAdditions", span="172-172", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_55 [label="security = universe.CreateSecurity(symbol, _algorithm, _marketHoursDatabase, _symbolPropertiesDatabase)", span="182-182", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_58 [label="universe.GetSubscriptionRequests(security, dateTimeUtc, algorithmEndDateUtc)", span="188-188", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_63 [label="var addedMember = universe.AddMember(dateTimeUtc, security)", span="202-202", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_70 [label="_dataFeed.AddSubscription(new SubscriptionRequest(false, universe, security, new SubscriptionDataConfig(security.Subscriptions.First()), dateTimeUtc, algorithmEndDateUtc))", span="223-223", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_72 [label="Log.Debug(''UniverseSelection.ApplyUniverseSelection(): '' + dateTimeUtc + '': '' + securityChanges)", span="229-229", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_7 [label="return SecurityChanges.None;", span="64-64", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_8 [label="IEnumerable<Symbol> selectSymbolsResult", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_10 [label="fineFiltered != null", span="71-71", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_12 [label="var fineCollection = new BaseDataCollection()", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_14 [label=selectSymbolsResult, span="80-80", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_13 [label="var dataProvider = new DefaultDataProvider()", span="78-78", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_24 [label="fineCollection.Data.Add(enumerator.Current)", span="96-96", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_22 [label="var enumerator = factory.CreateEnumerator(request, dataProvider)", span="92-92", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_16 [label="var config = FineFundamentalUniverse.CreateConfiguration(symbol)", span="83-83", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_18 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, CashBook.AccountCurrency)", span="86-86", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_20 [label="var security = new Equity(symbol, exchangeHours, quoteCash, symbolProperties)", span="89-89", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_19 [label="var quoteCash = _algorithm.Portfolio.CashBook[symbolProperties.QuoteCurrency]", span="87-87", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_23 [label="enumerator.MoveNext()", span="94-94", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m21_27 [label="ReferenceEquals(selectSymbolsResult, Universe.Unchanged)", span="111-111", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_29 [label="var selections = selectSymbolsResult.ToHashSet()", span="117-117", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_28 [label="return SecurityChanges.None;", span="113-113", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_30 [label="var additions = new List<Security>()", span="119-119", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_38 [label="selections.Contains(member.Symbol)", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_52 [label=selections, span="176-176", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_31 [label="var removals = new List<Security>()", span="120-120", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_65 [label="additions.Add(security)", span="206-206", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_66 [label="var securityChanges = additions.Count + removals.Count != 0\r\n                ? new SecurityChanges(additions, removals)\r\n                : SecurityChanges.None", span="212-214", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_67 [label="additions.Count > 0", span="217-217", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_32 [label="_pendingRemovals.ToList()", span="123-123", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_40 [label="removals.Add(member)", span="146-146", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_33 [label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="125-125", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_34 [label="!member.HoldStock && !openOrders.Any()", span="126-126", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_36 [label="_pendingRemovals.Remove(member)", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_45 [label="var keys = _pendingSecurityAdditions.Keys", span="160-160", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_41 [label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="149-149", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_42 [label="!member.HoldStock && !openOrders.Any()", span="150-150", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_44 [label="_pendingRemovals.Add(member)", span="156-156", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_47 [label="_pendingSecurityAdditions.Clear()", span="164-164", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_48 [label="Dictionary<Symbol, Security> pendingAdditions", span="167-167", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_50 [label="pendingAdditions = new Dictionary<Symbol, Security>()", span="171-171", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_54 [label="!pendingAdditions.TryGetValue(symbol, out security) && !_algorithm.Securities.TryGetValue(symbol, out security)", span="180-180", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_56 [label="pendingAdditions.Add(symbol, security)", span="183-183", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_53 [label="Security security", span="179-179", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_57 [label="var addedSubscription = false", span="186-186", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_62 [label=addedSubscription, span="200-200", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_59 [label="_dataFeed.AddSubscription(request)", span="191-191", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_60 [label="!request.IsUniverseSubscription", span="194-194", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_61 [label="addedSubscription = true", span="196-196", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_64 [label=addedMember, span="204-204", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_68 [label="var addedSecurities = _algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(_algorithm.Securities, _algorithm.SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, _algorithm.BrokerageModel.DefaultMarkets, securityChanges)", span="219-219", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_71 [label="securityChanges != SecurityChanges.None", span="227-227", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_73 [label="return securityChanges;", span="232-232", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_69 [label=addedSecurities, span="220-220", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_74 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_107 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="UniverseSelection.cs"];
m21_96 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="235-235", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_125 [label="universe.RemoveMember(dateTimeUtc, member)", span="238-238", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_126 [label="member.Cache.Reset()", span="243-243", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_127 [label="universe.GetSubscriptionRequests(member, dateTimeUtc, algorithmEndDateUtc)", span="244-244", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_129 [label="removals.Remove(member)", span="248-248", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_131 [label="SymbolCache.TryRemove(member.Symbol)", span="257-257", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_128 [label="subscription.IsUniverseSubscription", span="246-246", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_130 [label="_dataFeed.RemoveSubscription(subscription.Configuration)", span="252-252", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_132 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="235-235", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m21_109 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="UniverseSelection.cs"];
m21_93 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="UniverseSelection.cs"];
m21_89 [label="Entry QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="139-139", cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_77 [label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="46-46", cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="UniverseSelection.cs"];
m21_114 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="UniverseSelection.cs"];
m21_76 [label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="163-163", cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m21_94 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="317-317", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="UniverseSelection.cs"];
m21_95 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="UniverseSelection.cs"];
m21_78 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="25-25", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="UniverseSelection.cs"];
m21_136 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="UniverseSelection.cs"];
m21_79 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="UniverseSelection.cs"];
m21_75 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="UniverseSelection.cs"];
m21_102 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="UniverseSelection.cs"];
m21_104 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="UniverseSelection.cs"];
m21_86 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="57-57", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UniverseSelection.cs"];
m21_88 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="UniverseSelection.cs"];
m21_98 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UniverseSelection.cs"];
m21_85 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="UniverseSelection.cs"];
m21_121 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="UniverseSelection.cs"];
m21_91 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="UniverseSelection.cs"];
m21_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="UniverseSelection.cs"];
m21_106 [label="Entry Unk.CreateSecurity", span="", cluster="Unk.CreateSecurity", file="UniverseSelection.cs"];
m21_134 [label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="199-199", cluster="QuantConnect.Securities.SecurityCache.Reset()", file="UniverseSelection.cs"];
m21_83 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="UniverseSelection.cs"];
m21_138 [label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", span="", file="UniverseSelection.cs"];
m21_139 [label="System.DateTime", span="", file="UniverseSelection.cs"];
m21_140 [label=member, span="", file="UniverseSelection.cs"];
m21_141 [label=member, span="", file="UniverseSelection.cs"];
n272 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n272 -> n167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
n273 -> n66  [key=1, style=dashed, color=darkseagreen4, label=string];
n273 -> n70  [key=1, style=dashed, color=darkseagreen4, label=string];
n274 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
n274 -> n70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
n275 -> n66  [key=1, style=dashed, color=darkseagreen4, label=string];
n275 -> n70  [key=1, style=dashed, color=darkseagreen4, label=string];
n276 -> n66  [key=1, style=dashed, color=darkseagreen4, label=string];
n276 -> n70  [key=1, style=dashed, color=darkseagreen4, label=string];
n277 -> n66  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n277 -> n70  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n278 -> n216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n278 -> n235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolData"];
n279 -> n247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n279 -> n248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n279 -> n249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n279 -> n252  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n279 -> n253  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n279 -> n254  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.SymbolFundamentalData"];
n280 -> n265  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n280 -> n270  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n8  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n8 -> n240  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n5 -> n13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n5 -> n16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n11 -> n75  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n6 -> n19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n6 -> n22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n13 -> n14  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n7 -> n0  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n15 -> n13  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n18 -> n16  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n21 -> n19  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n24 -> n22  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n27 -> n25  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n28  [key=2, style=dotted];
n31 -> n29  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
n32 -> n37  [key=1, style=dashed, color=darkseagreen4, label=string];
n32 -> n66  [key=1, style=dashed, color=darkseagreen4, label=string];
n32 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
n32 -> n39  [key=1, style=dashed, color=darkseagreen4, label=string];
n32 -> n70  [key=1, style=dashed, color=darkseagreen4, label=string];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n51  [key=2, style=dotted];
n37 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n37 -> n49  [key=1, style=dashed, color=darkseagreen4, label=result];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n49  [key=0, style=solid];
n38 -> n52  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n51  [key=2, style=dotted];
n39 -> n53  [key=2, style=dotted];
n39 -> n69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n39 -> n49  [key=1, style=dashed, color=darkseagreen4, label=result];
n70 -> n71  [key=0, style=solid];
n70 -> n68  [key=2, style=dotted];
n35 -> n37  [key=0, style=solid];
n35 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n35 -> n66  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n35 -> n39  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n35 -> n70  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n36 -> n37  [key=0, style=solid];
n36 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n36 -> n66  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n36 -> n39  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n36 -> n70  [key=1, style=dashed, color=darkseagreen4, label=lookupFunc];
n60 -> n61  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n58  [key=2, style=dotted];
n49 -> n72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n40 -> n41  [key=0, style=solid];
n40 -> n49  [key=0, style=solid];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=item];
n40 -> n44  [key=1, style=dashed, color=darkseagreen4, label=item];
n40 -> n45  [key=1, style=dashed, color=darkseagreen4, label=item];
n69 -> n70  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n54  [key=2, style=dotted];
n41 -> n45  [key=1, style=dashed, color=darkseagreen4, label=expirationDate];
n43 -> n44  [key=0, style=solid];
n43 -> n55  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n55  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n56  [key=2, style=dotted];
n45 -> n45  [key=1, style=dashed, color=darkseagreen4, label=item];
n45 -> n47  [key=1, style=dashed, color=darkseagreen4, label=item];
n45 -> n48  [key=1, style=dashed, color=darkseagreen4, label=item];
n42 -> n43  [key=0, style=solid];
n42 -> n40  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n48 -> n40  [key=0, style=solid];
n48 -> n57  [key=2, style=dotted];
n50 -> n32  [key=0, style=bold, color=blue];
n72 -> n73  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n61 -> n59  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n64 -> n62  [key=0, style=bold, color=blue];
n67 -> n65  [key=0, style=bold, color=blue];
n71 -> n69  [key=0, style=bold, color=blue];
n73 -> n74  [key=0, style=solid];
n74 -> n72  [key=0, style=bold, color=blue];
n75 -> n76  [key=0, style=solid];
n75 -> n100  [key=1, style=dashed, color=darkseagreen4, label=uri];
n75 -> n101  [key=1, style=dashed, color=darkseagreen4, label=uri];
n76 -> n77  [key=0, style=solid];
n76 -> n113  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n116  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n136  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n138  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n139  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n140  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n143  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n144  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n161  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n76 -> n167  [key=1, style=dashed, color=darkseagreen4, label=columnSymbol];
n100 -> n101  [key=0, style=solid];
n100 -> n184  [key=2, style=dotted];
n101 -> n104  [key=0, style=solid];
n101 -> n185  [key=2, style=dotted];
n101 -> n106  [key=1, style=dashed, color=darkseagreen4, label=reader];
n101 -> n107  [key=1, style=dashed, color=darkseagreen4, label=reader];
n77 -> n78  [key=0, style=solid];
n113 -> n106  [key=0, style=solid];
n113 -> n190  [key=2, style=dotted];
n113 -> n191  [key=2, style=dotted];
n113 -> n192  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n118  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n116 -> n119  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n116 -> n120  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n116 -> n123  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n116 -> n124  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n116 -> n125  [key=1, style=dashed, color=darkseagreen4, label=ticker];
n136 -> n106  [key=0, style=solid];
n136 -> n190  [key=2, style=dotted];
n136 -> n201  [key=2, style=dotted];
n136 -> n192  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n106  [key=0, style=solid];
n138 -> n202  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n203  [key=2, style=dotted];
n140 -> n106  [key=0, style=solid];
n140 -> n190  [key=2, style=dotted];
n140 -> n191  [key=2, style=dotted];
n140 -> n192  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n106  [key=0, style=solid];
n143 -> n202  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n204  [key=2, style=dotted];
n144 -> n146  [key=1, style=dashed, color=darkseagreen4, label=futuresTicker];
n144 -> n147  [key=1, style=dashed, color=darkseagreen4, label=futuresTicker];
n161 -> n162  [key=0, style=solid];
n161 -> n207  [key=2, style=dotted];
n161 -> n163  [key=1, style=dashed, color=darkseagreen4, label=exchangeSymbol];
n161 -> n164  [key=1, style=dashed, color=darkseagreen4, label=exchangeSymbol];
n167 -> n106  [key=0, style=solid];
n167 -> n190  [key=2, style=dotted];
n167 -> n209  [key=2, style=dotted];
n167 -> n192  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n111  [key=1, style=dashed, color=darkseagreen4, label=columnSecurityType];
n81 -> n82  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n114  [key=0, style=solid];
n111 -> n137  [key=0, style=solid];
n111 -> n141  [key=0, style=solid];
n111 -> n106  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n109  [key=1, style=dashed, color=darkseagreen4, label=totalColumns];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n85 -> n173  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n111  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n174  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n175  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n176  [key=2, style=dotted];
n89 -> n177  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n101  [key=1, style=dashed, color=darkseagreen4, label=todayFileName];
n91 -> n92  [key=0, style=solid];
n91 -> n178  [key=2, style=dotted];
n91 -> n99  [key=1, style=dashed, color=darkseagreen4, label=todayFullName];
n91 -> n103  [key=1, style=dashed, color=darkseagreen4, label=todayFullName];
n92 -> n93  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=0, style=solid];
n99 -> n180  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n186  [key=2, style=dotted];
n103 -> n106  [key=1, style=dashed, color=darkseagreen4, label=reader];
n103 -> n107  [key=1, style=dashed, color=darkseagreen4, label=reader];
n93 -> n94  [key=0, style=solid];
n93 -> n178  [key=2, style=dotted];
n93 -> n95  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMapFullName];
n93 -> n98  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMapFullName];
n93 -> n170  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMapFullName];
n94 -> n95  [key=0, style=solid];
n94 -> n179  [key=2, style=dotted];
n94 -> n157  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n94 -> n158  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n94 -> n160  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n94 -> n163  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n94 -> n170  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n95 -> n96  [key=0, style=solid];
n95 -> n180  [key=2, style=dotted];
n95 -> n159  [key=1, style=dashed, color=darkseagreen4, label=mapExists];
n95 -> n168  [key=1, style=dashed, color=darkseagreen4, label=mapExists];
n98 -> n99  [key=0, style=solid];
n98 -> n182  [key=2, style=dotted];
n98 -> n183  [key=2, style=dotted];
n98 -> n157  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n98 -> n158  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n98 -> n160  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n98 -> n163  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n98 -> n170  [key=1, style=dashed, color=darkseagreen4, label=iqfeedNameMap];
n170 -> n171  [key=0, style=solid];
n170 -> n210  [key=2, style=dotted];
n170 -> n211  [key=2, style=dotted];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=0, style=solid];
n157 -> n28  [key=2, style=dotted];
n158 -> n166  [key=0, style=solid];
n158 -> n158  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n158 -> n167  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n160 -> n161  [key=0, style=solid];
n160 -> n166  [key=0, style=solid];
n160 -> n28  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n99  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n166  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n171  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n181  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n181  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n187  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n168  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n188  [key=2, style=dotted];
n107 -> n110  [key=1, style=dashed, color=darkseagreen4, label=line];
n107 -> n128  [key=1, style=dashed, color=darkseagreen4, label=line];
n107 -> n131  [key=1, style=dashed, color=darkseagreen4, label=line];
n107 -> n134  [key=1, style=dashed, color=darkseagreen4, label=line];
n107 -> n150  [key=1, style=dashed, color=darkseagreen4, label=line];
n107 -> n152  [key=1, style=dashed, color=darkseagreen4, label=line];
n105 -> n106  [key=0, style=solid];
n105 -> n187  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n189  [key=2, style=dotted];
n108 -> n110  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n111  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n113  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n116  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n136  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n138  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n139  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n140  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n143  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n144  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n161  [key=1, style=dashed, color=darkseagreen4, label=columns];
n108 -> n167  [key=1, style=dashed, color=darkseagreen4, label=columns];
n110 -> n106  [key=0, style=solid];
n110 -> n184  [key=2, style=dotted];
n128 -> n106  [key=0, style=solid];
n128 -> n184  [key=2, style=dotted];
n131 -> n106  [key=0, style=solid];
n131 -> n184  [key=2, style=dotted];
n134 -> n106  [key=0, style=solid];
n134 -> n184  [key=2, style=dotted];
n150 -> n106  [key=0, style=solid];
n150 -> n184  [key=2, style=dotted];
n152 -> n106  [key=0, style=solid];
n152 -> n184  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n179  [key=2, style=dotted];
n115 -> n193  [key=2, style=dotted];
n115 -> n117  [key=1, style=dashed, color=darkseagreen4, label=symbology];
n115 -> n120  [key=1, style=dashed, color=darkseagreen4, label=symbology];
n117 -> n118  [key=0, style=solid];
n117 -> n58  [key=2, style=dotted];
n117 -> n194  [key=2, style=dotted];
n117 -> n212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n120 -> n121  [key=0, style=solid];
n120 -> n197  [key=2, style=dotted];
n120 -> n122  [key=1, style=dashed, color=darkseagreen4, label=lookupResult];
n118 -> n119  [key=0, style=solid];
n118 -> n195  [key=2, style=dotted];
n118 -> n120  [key=1, style=dashed, color=darkseagreen4, label=optionTypeDelimiter];
n118 -> n123  [key=1, style=dashed, color=darkseagreen4, label=optionTypeDelimiter];
n118 -> n124  [key=1, style=dashed, color=darkseagreen4, label=optionTypeDelimiter];
n118 -> n125  [key=1, style=dashed, color=darkseagreen4, label=optionTypeDelimiter];
n119 -> n120  [key=0, style=solid];
n119 -> n196  [key=2, style=dotted];
n119 -> n127  [key=1, style=dashed, color=darkseagreen4, label=strikePriceString];
n119 -> n128  [key=1, style=dashed, color=darkseagreen4, label=strikePriceString];
n123 -> n124  [key=0, style=solid];
n123 -> n196  [key=2, style=dotted];
n123 -> n130  [key=1, style=dashed, color=darkseagreen4, label=dayString];
n123 -> n131  [key=1, style=dashed, color=darkseagreen4, label=dayString];
n124 -> n125  [key=0, style=solid];
n124 -> n196  [key=2, style=dotted];
n124 -> n133  [key=1, style=dashed, color=darkseagreen4, label=yearString];
n124 -> n134  [key=1, style=dashed, color=darkseagreen4, label=yearString];
n125 -> n126  [key=0, style=solid];
n125 -> n196  [key=2, style=dotted];
n125 -> n136  [key=1, style=dashed, color=darkseagreen4, label=underlying];
n212 -> n213  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n129  [key=0, style=solid];
n127 -> n198  [key=2, style=dotted];
n127 -> n136  [key=1, style=dashed, color=darkseagreen4, label=strikePrice];
n121 -> n122  [key=0, style=solid];
n121 -> n135  [key=1, style=dashed, color=darkseagreen4, label=month];
n122 -> n123  [key=0, style=solid];
n122 -> n136  [key=1, style=dashed, color=darkseagreen4, label=optionType];
n135 -> n136  [key=0, style=solid];
n135 -> n200  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=0, style=solid];
n130 -> n199  [key=2, style=dotted];
n130 -> n135  [key=1, style=dashed, color=darkseagreen4, label=day];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n133 -> n199  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n179  [key=2, style=dotted];
n142 -> n151  [key=1, style=dashed, color=darkseagreen4, label=futuresExpirationSymbology];
n142 -> n153  [key=1, style=dashed, color=darkseagreen4, label=futuresExpirationSymbology];
n142 -> n142  [key=3, color=darkorchid, style=bold, label="method methodReturn string SaveLogs"];
n151 -> n152  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n151 -> n28  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n155  [key=1, style=dashed, color=darkseagreen4, label=expirationMonth];
n145 -> n146  [key=0, style=solid];
n145 -> n196  [key=2, style=dotted];
n145 -> n149  [key=1, style=dashed, color=darkseagreen4, label=expirationYearString];
n145 -> n150  [key=1, style=dashed, color=darkseagreen4, label=expirationYearString];
n146 -> n147  [key=0, style=solid];
n146 -> n196  [key=2, style=dotted];
n146 -> n151  [key=1, style=dashed, color=darkseagreen4, label=expirationMonthString];
n146 -> n152  [key=1, style=dashed, color=darkseagreen4, label=expirationMonthString];
n146 -> n153  [key=1, style=dashed, color=darkseagreen4, label=expirationMonthString];
n147 -> n148  [key=0, style=solid];
n147 -> n196  [key=2, style=dotted];
n147 -> n157  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n147 -> n158  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n147 -> n160  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n147 -> n163  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n147 -> n165  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n147 -> n167  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n149 -> n150  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n149 -> n199  [key=2, style=dotted];
n149 -> n154  [key=1, style=dashed, color=darkseagreen4, label=expirationYearShort];
n148 -> n149  [key=0, style=solid];
n165 -> n166  [key=0, style=solid];
n165 -> n184  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n200  [key=2, style=dotted];
n155 -> n205  [key=2, style=dotted];
n155 -> n167  [key=1, style=dashed, color=darkseagreen4, label=expirationYearMonth];
n156 -> n157  [key=0, style=solid];
n156 -> n106  [key=0, style=solid];
n156 -> n206  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n162 -> n165  [key=0, style=solid];
n162 -> n208  [key=2, style=dotted];
n207 -> n241  [key=0, style=solid];
n207 -> n249  [key=1, style=dashed, color=darkseagreen4, label=string];
n207 -> n252  [key=1, style=dashed, color=darkseagreen4, label=string];
n164 -> n166  [key=0, style=solid];
n164 -> n167  [key=1, style=dashed, color=darkseagreen4, label=underlyingString];
n169 -> n170  [key=0, style=solid];
n169 -> n181  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n181  [key=2, style=dotted];
n172 -> n11  [key=0, style=bold, color=blue];
n213 -> n214  [key=0, style=solid];
n214 -> n212  [key=0, style=bold, color=blue];
n215 -> n216  [key=0, style=solid];
n216 -> n217  [key=0, style=solid];
n216 -> n218  [key=2, style=dotted];
n216 -> n219  [key=2, style=dotted];
n217 -> n215  [key=0, style=bold, color=blue];
n220 -> n221  [key=0, style=solid];
n220 -> n223  [key=1, style=dashed, color=darkseagreen4, label=object];
n220 -> n225  [key=1, style=dashed, color=darkseagreen4, label=object];
n220 -> n227  [key=1, style=dashed, color=darkseagreen4, label=object];
n221 -> n222  [key=0, style=solid];
n221 -> n223  [key=0, style=solid];
n221 -> n229  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=0, style=solid];
n223 -> n229  [key=2, style=dotted];
n225 -> n226  [key=0, style=solid];
n225 -> n227  [key=0, style=solid];
n225 -> n230  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n215  [key=2, style=dotted];
n222 -> n228  [key=0, style=solid];
n224 -> n228  [key=0, style=solid];
n226 -> n228  [key=0, style=solid];
n228 -> n220  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid];
n232 -> n233  [key=0, style=solid];
n232 -> n238  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n238  [key=2, style=dotted];
n233 -> n233  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
n234 -> n235  [key=0, style=solid];
n234 -> n238  [key=2, style=dotted];
n234 -> n234  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
n235 -> n236  [key=0, style=solid];
n235 -> n239  [key=2, style=dotted];
n235 -> n235  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
n236 -> n237  [key=0, style=solid];
n237 -> n231  [key=0, style=bold, color=blue];
n240 -> n8  [key=0, style=bold, color=blue];
n241 -> n242  [key=0, style=solid];
n241 -> n251  [key=1, style=dashed, color=darkseagreen4, label=timeout];
n249 -> n250  [key=0, style=solid];
n249 -> n258  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n261  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n257  [key=2, style=dotted];
n242 -> n245  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n242 -> n265  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n242 -> n246  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n242 -> n270  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n242 -> n250  [key=1, style=dashed, color=darkseagreen4, label=manualResetEvent];
n251 -> n252  [key=0, style=solid];
n251 -> n260  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n245 -> n246  [key=0, style=solid];
n245 -> n263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
n245 -> n264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
n245 -> n247  [key=1, style=dashed, color=darkseagreen4, label=dataEventHandler];
n245 -> n254  [key=1, style=dashed, color=darkseagreen4, label=dataEventHandler];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
n246 -> n248  [key=1, style=dashed, color=darkseagreen4, label=noDataEventHandler];
n246 -> n253  [key=1, style=dashed, color=darkseagreen4, label=noDataEventHandler];
n270 -> n271  [key=0, style=solid];
n270 -> n267  [key=2, style=dotted];
n250 -> n251  [key=0, style=solid];
n250 -> n252  [key=0, style=solid];
n250 -> n259  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n263 -> n255  [key=1, style=dashed, color=darkseagreen4, label=expiry];
n263 -> n266  [key=1, style=dashed, color=darkseagreen4, label=expiry];
n264 -> n265  [key=0, style=solid];
n264 -> n255  [key=1, style=dashed, color=darkseagreen4, label=rootSymbol];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=rootSymbol];
n247 -> n248  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n253 -> n254  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n193  [key=2, style=dotted];
n256 -> n207  [key=0, style=bold, color=blue];
n262 -> n263  [key=0, style=solid];
n262 -> n264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
n266 -> n262  [key=0, style=bold, color=blue];
n268 -> n269  [key=0, style=solid];
n271 -> n268  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_17 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="System.IServiceProvider"];
m1_18 -> m1_19  [key=0, style=solid, color=green];
m1_18 -> m1_29  [key=2, style=dotted, color=green];
m1_18 -> m1_13  [key=2, style=dotted, color=green];
m1_18 -> m1_20  [key=1, style=dashed, color=green, label=logInDialog];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_30  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_31  [key=2, style=dotted];
m1_20 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=credentials];
m1_20 -> m1_5  [key=3, color=darkorchid, style=bold, label="Property variable System.DateTime Time"];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_12  [key=2, style=dotted, color=green];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_21 -> m1_26  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_32  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_33  [key=2, style=dotted];
m1_26 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_8  [key=3, color=darkorchid, style=bold, label="Property variable System.Collections.Generic.List<QuantConnect.Lean.Engine.RealTime.RealTimeEvent> Events"];
m1_25 -> m1_28  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_17  [key=0, style=bold, color=blue];
m1_31 -> m1_10  [key=3, color=darkorchid, style=bold, label="Property variable System.Collections.Generic.Dictionary<QuantConnect.SecurityType, QuantConnect.Packets.MarketToday> MarketToday"];
m1_16 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.Credentials?"];
m1_16 -> m1_34  [key=0, style=solid];
m1_37 -> m1_13  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_38  [key=0, style=solid];
m1_38 -> m1_16  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="System.IServiceProvider"];
m1_41 -> m1_13  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_44  [key=2, style=dotted];
m1_42 -> m1_33  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_40  [key=0, style=bold, color=blue];
m1_0 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.IServiceProvider"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_10 -> m1_17  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_5 -> m1_11  [key=0, style=solid];
m1_1 -> m1_12  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_8 -> m1_12  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_7 -> m1_10  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_6 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=previousCredentials];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_15  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [key=0, style=solid];
m1_3 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_0  [key=0, style=bold, color=blue];
m1_45 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.AuthenticationCommand"];
m1_45 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.AuthenticationCommand"];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=2, style=dotted];
m2_46 -> m2_44  [key=0, style=bold, color=blue];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_69  [key=0, style=solid];
m2_65 -> m2_73  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_77  [key=0, style=solid];
m2_68 -> m2_78  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_77  [key=0, style=solid];
m2_72 -> m2_78  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=2, style=dotted];
m2_77 -> m2_64  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_3  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_23  [key=2, style=dotted];
m2_20 -> m2_24  [key=2, style=dotted];
m2_20 -> m2_25  [key=2, style=dotted];
m2_20 -> m2_26  [key=2, style=dotted];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_7  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_36  [key=0, style=solid];
m2_30 -> m2_38  [key=0, style=solid];
m2_29 -> m2_43  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_32 -> m2_43  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_43  [key=0, style=solid];
m2_37 -> m2_43  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_27  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_86  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_84  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_89  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_83 -> m2_87  [key=0, style=solid];
m2_83 -> m2_88  [key=2, style=dotted];
m2_85 -> m2_87  [key=0, style=solid];
m2_85 -> m2_88  [key=2, style=dotted];
m2_87 -> m2_79  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_55  [key=0, style=solid];
m2_49 -> m2_59  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_61  [key=0, style=solid];
m2_54 -> m2_62  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_61  [key=0, style=solid];
m2_58 -> m2_63  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=2, style=dotted];
m2_61 -> m2_48  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=splitFactor];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_16 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_14  [key=0, style=bold, color=blue];
m2_90 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.DefaultBrokerageModel"];
m2_90 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.DefaultBrokerageModel"];
m2_91 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=splitFactor];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_6  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_98  [key=0, style=bold, color=blue];
m4_43 -> m4_129  [key=0, style=solid];
m4_43 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_43 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_43 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_43 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_43 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_43 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_43 -> m4_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m4_43 -> m4_99  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetOpenOrdersReservedQuantity"];
m4_43 -> m4_142  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetOpenOrdersReservedQuantity"];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label=targetCurrency];
m4_132 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label=targetCurrency];
m4_132 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=targetCurrency];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_141  [key=0, style=solid];
m4_134 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=portfolioSecurity];
m4_134 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label=portfolioSecurity];
m4_134 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=portfolioSecurity];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_155  [key=2, style=dotted];
m4_141 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_141 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=openOrders];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=orderSecurity];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_42  [key=2, style=dotted];
m4_149 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=quantityInTargetCurrency];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [key=0, style=solid];
m4_131 -> m4_152  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> n179  [key=2, style=dotted];
m4_133 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectionPairs];
m4_133 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectionPairs];
m4_133 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectionPairs];
m4_133 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectionPairs];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_134  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_150  [key=0, style=solid];
m4_138 -> m4_134  [key=0, style=solid];
m4_138 -> m4_154  [key=2, style=dotted];
m4_140 -> m4_134  [key=0, style=solid];
m4_140 -> m4_154  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label=basePortfolioSecurity];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_134  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_142 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_142 -> m4_32  [key=3, color=darkorchid, style=bold, label="Local variable decimal openOrdersReservedQuantity"];
m4_142 -> m4_147  [key=3, color=darkorchid, style=bold, label="Local variable decimal openOrdersReservedQuantity"];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_151  [key=0, style=solid];
m4_143 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=openOrder];
m4_143 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=openOrder];
m4_150 -> m4_143  [key=0, style=solid];
m4_150 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_150 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_151 -> m4_152  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=quantityInTargetCurrency];
m4_147 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=quantityInTargetCurrency];
m4_147 -> m4_42  [key=3, color=darkorchid, style=bold, label="Local variable decimal quantityInTargetCurrency"];
m4_145 -> m4_146  [key=0, style=solid];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_143  [key=0, style=solid];
m4_152 -> m4_43  [key=0, style=bold, color=blue];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_160  [key=2, style=dotted];
m4_158 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=dir];
m4_157 -> m4_158  [key=0, style=solid];
m4_159 -> m4_156  [key=0, style=bold, color=blue];
m4_42 -> m4_117  [key=0, style=solid];
m4_42 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_42 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_42 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_42 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_42 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_42 -> m4_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m4_42 -> m4_43  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
m4_42 -> m4_143  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_32  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderPrice"];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_121  [key=0, style=solid];
m4_118 -> m4_123  [key=0, style=solid];
m4_118 -> m4_125  [key=0, style=solid];
m4_120 -> m4_127  [key=0, style=solid];
m4_122 -> m4_127  [key=0, style=solid];
m4_124 -> m4_127  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_42  [key=0, style=bold, color=blue];
m4_47 -> m4_50  [key=0, style=solid];
m4_47 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_47 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_47 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_47 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_47 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_47 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_47 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_47 -> m4_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
m4_47 -> m4_26  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal targetPortfolioValue"];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_52 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_52 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_57  [key=0, style=solid];
m4_56 -> m4_94  [key=0, style=solid];
m4_56 -> m4_95  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_46  [key=2, style=dotted];
m4_57 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=baseCurrencyPosition];
m4_57 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=baseCurrencyPosition];
m4_57 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=baseCurrencyPosition];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_46  [key=2, style=dotted];
m4_58 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrencyPosition];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_48  [key=2, style=dotted];
m4_59 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m4_59 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=direction];
m4_60 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=direction];
m4_60 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=direction];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m4_62 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m4_62 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m4_62 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_65 -> m4_94  [key=0, style=solid];
m4_65 -> m4_95  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=0, style=solid];
m4_67 -> m4_94  [key=0, style=solid];
m4_67 -> m4_95  [key=2, style=dotted];
m4_68 -> m4_94  [key=0, style=solid];
m4_68 -> m4_95  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=currency];
m4_70 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=currency];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_78 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_80 -> m4_94  [key=0, style=solid];
m4_80 -> m4_96  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_97  [key=2, style=dotted];
m4_84 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=order];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_49  [key=2, style=dotted];
m4_86 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=orderFees];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_51 -> m4_94  [key=0, style=solid];
m4_51 -> m4_95  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_55  [key=0, style=solid];
m4_54 -> m4_94  [key=0, style=solid];
m4_54 -> m4_95  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=cashRemaining];
m4_69 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=cashRemaining];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderQuantity"];
m4_92 -> m4_80  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_95  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_69  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=orderValue];
m4_85 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=orderValue];
m4_87 -> m4_88  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [key=0, style=solid];
m4_72 -> m4_94  [key=0, style=solid];
m4_72 -> m4_95  [key=2, style=dotted];
m4_83 -> m4_94  [key=0, style=solid];
m4_83 -> m4_95  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m4_76 -> m4_32  [key=3, color=darkorchid, style=bold, label="Local variable decimal feeToPriceRatio"];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_81 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_81 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_81 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_84  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_94 -> m4_47  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_3  [key=0, style=bold, color=blue];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_101 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_101 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_101 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m4_101 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m4_101 -> m4_99  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetBuyingPower"];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label=baseCurrencyPosition];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrencyPosition];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_97  [key=2, style=dotted];
m4_107 -> m4_116  [key=2, style=dotted];
m4_107 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_105  [key=0, style=solid];
m4_104 -> m4_115  [key=0, style=solid];
m4_113 -> m4_115  [key=0, style=solid];
m4_111 -> m4_115  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_110  [key=0, style=solid];
m4_109 -> m4_115  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_115 -> m4_101  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_5 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_5 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_5 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_5 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_5 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_5 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_30  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m4_5 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_5 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_5 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m4_5 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_6 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_6 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_6 -> m4_30  [key=1, style=dashed, color=green, label=baseCurrency];
m4_6 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m4_8 -> m4_40  [key=0, style=solid];
m4_8 -> m4_41  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_12 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_12 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_12 -> m4_30  [key=1, style=dashed, color=green, label=totalQuantity];
m4_12 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_12 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_13 -> m4_16  [key=0, style=solid];
m4_13 -> m4_42  [key=2, style=dotted];
m4_13 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_13 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_13 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_13 -> m4_30  [key=1, style=dashed, color=green, label=orderQuantity];
m4_13 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_13 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_14 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_14 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_14 -> m4_30  [key=1, style=dashed, color=green, label=totalQuantity];
m4_14 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_14 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=totalQuantity];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_15 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_15 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_15 -> m4_30  [key=1, style=dashed, color=green, label=orderQuantity];
m4_15 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_15 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_43  [key=2, style=dotted];
m4_16 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_16 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_16 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_16 -> m4_30  [key=1, style=dashed, color=green, label=openOrdersReservedQuantity];
m4_16 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_16 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=openOrdersReservedQuantity];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_32  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_45  [key=2, style=dotted];
m4_25 -> m4_30  [key=1, style=dashed, color=green, label=holdingsValue];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_46  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_47  [key=2, style=dotted];
m4_27 -> m4_42  [key=2, style=dotted];
m4_27 -> m4_30  [key=1, style=dashed, color=green, label=maximumQuantity];
m4_30 -> m4_31  [key=0, style=solid, color=green];
m4_30 -> m4_44  [key=2, style=dotted, color=green];
m4_30 -> m4_48  [key=2, style=dotted, color=green];
m4_30 -> m4_39  [key=1, style=dashed, color=green, label=reason];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_49  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_45  [key=2, style=dotted];
m4_35 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m4_35 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_44  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_44  [key=2, style=dotted];
m4_22 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=reason];
m4_22 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=reason];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=isSufficient];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=isSufficient];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_48  [key=2, style=dotted];
m4_28 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=isSufficient];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=reason];
m4_18 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=reason];
m4_18 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=reason];
m4_23 -> m4_40  [key=0, style=solid];
m4_23 -> m4_41  [key=2, style=dotted];
m4_31 -> m4_40  [key=0, style=solid];
m4_31 -> m4_41  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m4_32 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m4_32 -> m4_32  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderFee"];
m4_29 -> m4_30  [key=0, style=solid, color=green];
m4_29 -> m4_31  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=0, style=solid];
m4_40 -> m4_5  [key=0, style=bold, color=blue];
m4_161 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBuyingPowerModel"];
m4_162 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m4_163 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectionPairs];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs"];
m5_4 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs"];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_15  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_17 -> m7_18  [key=0, style=solid];
m7_19 -> m7_16  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_27  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_28  [key=2, style=dotted];
m7_26 -> m7_20  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=bold, color=blue];
m7_47 -> m7_15  [key=0, style=bold, color=blue];
m7_15 -> m7_33  [key=0, style=solid];
m7_15 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_15 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_15 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m7_15 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_15 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_15 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_15 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_48  [key=2, style=dotted];
m7_34 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label=key];
m7_34 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label=key];
m7_34 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=key];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_44  [key=0, style=solid];
m7_36 -> m7_48  [key=2, style=dotted];
m7_36 -> m7_49  [key=2, style=dotted];
m7_36 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=entry];
m7_36 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=entry];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_42  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [key=0, style=solid];
m7_41 -> m7_47  [key=0, style=solid];
m7_41 -> m7_51  [key=2, style=dotted];
m7_41 -> m7_52  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=0, style=solid];
m7_44 -> m7_56  [key=2, style=dotted];
m7_45 -> m7_47  [key=0, style=solid];
m7_45 -> m7_51  [key=2, style=dotted];
m7_45 -> m7_57  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_46  [key=0, style=solid];
m7_35 -> m7_49  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_50  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_53  [key=2, style=dotted];
m7_42 -> m7_54  [key=2, style=dotted];
m7_42 -> m7_50  [key=2, style=dotted];
m7_43 -> m7_47  [key=0, style=solid];
m7_43 -> m7_55  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_39 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_39 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_60 -> m7_51  [key=0, style=bold, color=blue];
m7_51 -> m7_58  [key=0, style=solid];
m7_51 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityExchangeHours"];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_12 -> m7_13  [key=0, style=solid];
m7_14 -> m7_11  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m7_6 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=2, style=dotted];
m7_10 -> m7_6  [key=0, style=bold, color=blue];
m7_64 -> m7_61  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=2, style=dotted];
m7_63 -> m7_66  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> n182  [key=2, style=dotted];
m7_29 -> m7_32  [key=2, style=dotted];
m7_30 -> m7_28  [key=0, style=bold, color=blue];
m7_67 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_67 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase"];
m7_68 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase.Entry"];
m7_68 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.MarketHoursDatabase.Entry"];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_11  [key=0, style=bold, color=crimson];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_10  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_10  [key=0, style=solid];
m8_11 -> m8_15  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_14  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=0, style=solid];
m8_12 -> m8_7  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_40  [key=0, style=bold, color=blue];
m8_14 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=0, style=solid];
m8_17 -> m8_13  [key=2, style=dotted];
m8_18 -> m8_33  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> n182  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_24  [key=0, style=solid];
m8_20 -> m8_35  [key=2, style=dotted];
m8_20 -> m8_36  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_38  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_37  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m8_23 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=item];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_30  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=0, style=solid];
m8_28 -> m8_27  [key=0, style=solid];
m8_28 -> m8_39  [key=2, style=dotted];
m8_29 -> m8_33  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_39  [key=2, style=dotted];
m8_33 -> m8_14  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_5  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_2  [key=0, style=bold, color=blue];
m8_42 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m8_42 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.FileCommandQueueHandler"];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_12  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_14  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_10  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_4  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_6  [key=0, style=bold, color=blue];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_8  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_0 -> m11_2  [key=1, style=dashed, color=red, label=string];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_2 -> m11_3  [key=0, style=solid, color=red];
m11_3 -> m11_4  [key=0, style=solid, color=red];
m11_3 -> m11_5  [key=0, style=solid, color=red];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=2, style=dotted];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_2  [key=0, style=bold, color=blue];
m12_5 -> m12_4  [key=0, style=bold, color=blue];
m12_5 -> m12_12  [key=3, color=green, style=bold, label="method methodReturn QuantConnect.Data.SubscriptionDataSource GetSource"];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=bool];
m12_5 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m12_32 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation"];
m12_32 -> m12_50  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid, color=green];
m12_51 -> m12_54  [key=0, style=solid, color=green];
m12_51 -> m12_56  [key=0, style=solid, color=green];
m12_51 -> m12_58  [key=0, style=solid, color=green];
m12_51 -> m12_60  [key=0, style=solid, color=green];
m12_51 -> m12_62  [key=0, style=solid, color=green];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_64  [key=0, style=solid];
m12_51 -> m12_66  [key=0, style=solid];
m12_51 -> m12_68  [key=0, style=solid];
m12_55 -> m12_70  [key=0, style=solid, color=green];
m12_56 -> m12_57  [key=0, style=solid, color=green];
m12_57 -> m12_70  [key=0, style=solid, color=green];
m12_58 -> m12_59  [key=0, style=solid, color=green];
m12_59 -> m12_70  [key=0, style=solid, color=green];
m12_60 -> m12_61  [key=0, style=solid, color=green];
m12_61 -> m12_70  [key=0, style=solid, color=green];
m12_62 -> m12_63  [key=0, style=solid, color=green];
m12_63 -> m12_70  [key=0, style=solid, color=green];
m12_53 -> m12_70  [key=0, style=solid, color=green];
m12_52 -> m12_53  [key=0, style=solid, color=green];
m12_70 -> m12_71  [key=0, style=solid];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_50  [key=3, color=darkorchid, style=bold, label="Local variable string item"];
m12_64 -> m12_65  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_68 -> m12_69  [key=0, style=solid];
m12_65 -> m12_70  [key=0, style=solid];
m12_67 -> m12_70  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_71 -> m12_32  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_12 -> m12_13  [key=0, style=solid, color=green];
m12_6 -> m12_12  [key=0, style=solid, color=green];
m12_6 -> m12_7  [key=0, style=solid];
m12_10 -> m12_12  [key=0, style=solid, color=green];
m12_10 -> m12_11  [key=0, style=solid, color=green];
m12_13 -> m12_14  [key=0, style=solid, color=green];
m12_11 -> m12_28  [key=0, style=solid, color=green];
m12_11 -> m12_31  [key=2, style=dotted, color=green];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_26  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label=url];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_29  [key=2, style=dotted];
m12_7 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_30  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_38  [key=2, style=dotted];
m12_17 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_17 -> m12_20  [key=0, style=solid];
m12_18 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_18 -> m12_19  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_32  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_33  [key=2, style=dotted];
m12_24 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_37  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_29  [key=2, style=dotted];
m12_25 -> m12_27  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> n187  [key=2, style=dotted];
m12_23 -> m12_35  [key=2, style=dotted];
m12_23 -> m12_36  [key=2, style=dotted];
m12_28 -> m12_5  [key=0, style=bold, color=blue];
m12_72 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData"];
m12_72 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData"];
m12_72 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData"];
m12_72 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData"];
m12_72 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData"];
m14_2 -> m14_3  [key=0, style=solid, color=red];
m14_2 -> m14_4  [key=1, style=dashed, color=red, label="params QuantConnect.Symbol[]"];
m14_2 -> m14_5  [key=1, style=dashed, color=red, label="params QuantConnect.Symbol[]"];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_3 -> m14_5  [key=0, style=solid, color=red];
m14_4 -> m14_6  [key=0, style=solid, color=red];
m14_4 -> m14_7  [key=2, style=dotted, color=red];
m14_4 -> m14_8  [key=2, style=dotted, color=red];
m14_5 -> m14_6  [key=0, style=solid, color=red];
m14_5 -> m14_9  [key=2, style=dotted, color=red];
m14_6 -> m14_2  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_30  [key=2, style=dotted];
m14_24 -> m14_31  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_26  [key=0, style=bold, color=crimson];
m14_15 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
m14_16 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
m14_26 -> m14_20  [key=0, style=solid];
m14_26 -> m14_33  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=securityInitializer];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label=type];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_32  [key=2, style=dotted];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_27  [key=0, style=solid];
m14_20 -> m14_28  [key=2, style=dotted];
m14_20 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_20 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=grp];
m14_20 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=grp];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label=market];
m14_21 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label=market];
m14_21 -> m14_20  [key=3, color=darkorchid, style=bold, label="Local variable string market"];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label=securityType];
m14_22 -> m14_20  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.SecurityType securityType"];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> n191  [key=2, style=dotted];
m14_23 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label=universeSymbol];
m14_27 -> m14_15  [key=0, style=bold, color=blue];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UniverseSettings"];
m14_10 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityInitializer"];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_9  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_14 -> m14_10  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_34 -> m14_35  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_36 -> m14_34  [key=0, style=bold, color=blue];
m14_37 -> m14_5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m14_37 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m15_7 -> m15_11  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
m15_7 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m15_7 -> m15_4  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal percent"];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_11  [key=1, style=dashed, color=green, label=security];
m15_8 -> m15_12  [key=1, style=dashed, color=green, label=security];
m15_10 -> m15_15  [key=0, style=solid];
m15_10 -> m15_0  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid, color=green];
m15_11 -> m15_13  [key=1, style=dashed, color=green, label=quantity];
m15_14 -> m15_15  [key=0, style=solid, color=red];
m15_14 -> m15_0  [key=2, style=dotted, color=red];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [key=0, style=solid, color=green];
m15_12 -> m15_13  [key=0, style=solid, color=green];
m15_13 -> m15_14  [key=0, style=solid, color=green];
m15_13 -> m15_13  [key=1, style=dashed, color=green, label=quantity];
m15_15 -> m15_7  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_7  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget Percent"];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=2, style=dotted];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_0  [key=0, style=bold, color=blue];
m15_16 -> m15_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget"];
m15_16 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_23  [key=2, style=dotted];
m16_3 -> m16_24  [key=2, style=dotted];
m16_3 -> m16_25  [key=2, style=dotted];
m16_3 -> m16_26  [key=2, style=dotted];
m16_3 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_3 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_3 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_3 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_23  [key=2, style=dotted];
m16_4 -> m16_24  [key=2, style=dotted];
m16_4 -> m16_25  [key=2, style=dotted];
m16_4 -> m16_26  [key=2, style=dotted];
m16_4 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_4 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=equity];
m16_4 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=equity];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_27  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_22  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=fill];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_35  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_27  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_28  [key=2, style=dotted];
m16_6 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_29  [key=2, style=dotted];
m16_7 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_7 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_7 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_30  [key=2, style=dotted];
m16_8 -> m16_31  [key=2, style=dotted];
m16_8 -> m16_32  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_33  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_34  [key=2, style=dotted];
m16_10 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_10 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_41  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_42  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_12 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_12 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_12 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_12 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_36  [key=2, style=dotted];
m16_15 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_15 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> n187  [key=2, style=dotted];
m16_17 -> m16_39  [key=2, style=dotted];
m16_17 -> m16_40  [key=2, style=dotted];
m16_21 -> m16_13  [key=0, style=solid];
m16_21 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_37  [key=2, style=dotted];
m16_16 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=updateData];
m16_22 -> m16_0  [key=0, style=bold, color=blue];
m16_113 -> m16_114  [key=0, style=solid];
m16_43 -> m16_44  [key=0, style=solid];
m16_48 -> m16_49  [key=0, style=solid];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_46  [key=2, style=dotted];
m16_44 -> m16_47  [key=2, style=dotted];
m16_45 -> m16_43  [key=0, style=bold, color=blue];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_51  [key=2, style=dotted];
m16_50 -> m16_48  [key=0, style=bold, color=blue];
m16_104 -> m16_105  [key=0, style=solid];
m16_107 -> m16_108  [key=0, style=solid];
m16_110 -> m16_111  [key=0, style=solid];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_46  [key=2, style=dotted];
m16_105 -> m16_47  [key=2, style=dotted];
m16_106 -> m16_104  [key=0, style=bold, color=blue];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_51  [key=2, style=dotted];
m16_109 -> m16_107  [key=0, style=bold, color=blue];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_51  [key=2, style=dotted];
m16_112 -> m16_110  [key=0, style=bold, color=blue];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_51  [key=2, style=dotted];
m16_115 -> m16_113  [key=0, style=bold, color=blue];
m16_52 -> m16_53  [key=0, style=solid];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_23  [key=2, style=dotted];
m16_57 -> m16_24  [key=2, style=dotted];
m16_57 -> m16_25  [key=2, style=dotted];
m16_57 -> m16_26  [key=2, style=dotted];
m16_57 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_57 -> m16_61  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_57 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_57 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label=fills];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label=mchQuantityFile];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_23  [key=2, style=dotted];
m16_58 -> m16_24  [key=2, style=dotted];
m16_58 -> m16_25  [key=2, style=dotted];
m16_58 -> m16_26  [key=2, style=dotted];
m16_58 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_58 -> m16_61  [key=1, style=dashed, color=darkseagreen4, label=equity];
m16_58 -> m16_66  [key=1, style=dashed, color=darkseagreen4, label=equity];
m16_58 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=equity];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantityFile];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_23  [key=2, style=dotted];
m16_59 -> m16_24  [key=2, style=dotted];
m16_59 -> m16_25  [key=2, style=dotted];
m16_59 -> m16_26  [key=2, style=dotted];
m16_59 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_59 -> m16_67  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m16_59 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_23  [key=2, style=dotted];
m16_60 -> m16_24  [key=2, style=dotted];
m16_60 -> m16_25  [key=2, style=dotted];
m16_60 -> m16_26  [key=2, style=dotted];
m16_60 -> m16_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_60 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m16_60 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_27  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_98  [key=0, style=solid];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label=fill];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_35  [key=2, style=dotted];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_27  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_99  [key=2, style=dotted];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_27  [key=2, style=dotted];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_99  [key=2, style=dotted];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_27  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_28  [key=2, style=dotted];
m16_62 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m16_62 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m16_62 -> m16_74  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m16_62 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_29  [key=2, style=dotted];
m16_63 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_63 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_63 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_63 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_63 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_63 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_100  [key=2, style=dotted];
m16_72 -> m16_31  [key=2, style=dotted];
m16_72 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_100  [key=2, style=dotted];
m16_73 -> m16_31  [key=2, style=dotted];
m16_73 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_100  [key=2, style=dotted];
m16_74 -> m16_31  [key=2, style=dotted];
m16_74 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_102  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_33  [key=2, style=dotted];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_34  [key=2, style=dotted];
m16_65 -> m16_67  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_92  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_65 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_101  [key=2, style=dotted];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_101  [key=2, style=dotted];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_101  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_41  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=jwbCash];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_74  [key=1, style=dashed, color=darkseagreen4, label=mchCash];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_103  [key=2, style=dotted];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_42  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_83  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_84  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_79 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_36  [key=2, style=dotted];
m16_82 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_82 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_82 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_82 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_86  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m16_83 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_86  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m16_84 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label=usdJwb];
m16_97 -> m16_80  [key=0, style=solid];
m16_97 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> n187  [key=2, style=dotted];
m16_88 -> m16_39  [key=2, style=dotted];
m16_88 -> m16_40  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> n187  [key=2, style=dotted];
m16_89 -> m16_39  [key=2, style=dotted];
m16_89 -> m16_40  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> n187  [key=2, style=dotted];
m16_90 -> m16_39  [key=2, style=dotted];
m16_90 -> m16_40  [key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_27  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_37  [key=2, style=dotted];
m16_87 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=updateData];
m16_87 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label=updateData];
m16_87 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label=updateData];
m16_87 -> m16_92  [key=1, style=dashed, color=darkseagreen4, label=updateData];
m16_98 -> m16_52  [key=0, style=bold, color=blue];
m16_170 -> m16_171  [key=0, style=solid];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_29  [key=2, style=dotted];
m16_171 -> m16_173  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_182  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_183  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_184  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_185  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_186  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_189  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_190  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_192  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_193  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_197  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_198  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_199  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_171 -> m16_200  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_172 -> m16_173  [key=0, style=solid];
m16_172 -> m16_33  [key=2, style=dotted];
m16_172 -> m16_211  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_172 -> m16_214  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_173 -> m16_174  [key=0, style=solid];
m16_173 -> m16_34  [key=2, style=dotted];
m16_173 -> m16_175  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_176  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_177  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_178  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_179  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_202  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_203  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_204  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_205  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_207  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_208  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_209  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_211  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_173 -> m16_214  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_182 -> m16_183  [key=0, style=solid];
m16_182 -> m16_30  [key=2, style=dotted];
m16_182 -> m16_101  [key=2, style=dotted];
m16_183 -> m16_184  [key=0, style=solid];
m16_183 -> m16_218  [key=2, style=dotted];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_219  [key=2, style=dotted];
m16_184 -> m16_159  [key=2, style=dotted];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_220  [key=2, style=dotted];
m16_185 -> m16_221  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_221  [key=2, style=dotted];
m16_189 -> m16_190  [key=0, style=solid];
m16_189 -> m16_100  [key=2, style=dotted];
m16_189 -> m16_101  [key=2, style=dotted];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_218  [key=2, style=dotted];
m16_190 -> m16_119  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m16_190 -> m16_154  [key=3, color=darkorchid, style=bold, label="Parameter variable PyObject pySelector"];
m16_190 -> m16_178  [key=3, color=darkorchid, style=bold, label="Parameter variable PyObject pySelector"];
m16_190 -> m16_117  [key=3, color=darkorchid, style=bold, label="Parameter variable PyObject pySelector"];
m16_190 -> m16_128  [key=3, color=darkorchid, style=bold, label="Parameter variable PyObject pySelector"];
m16_190 -> m16_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string market"];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_219  [key=2, style=dotted];
m16_191 -> m16_159  [key=2, style=dotted];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_220  [key=2, style=dotted];
m16_192 -> m16_221  [key=2, style=dotted];
m16_193 -> m16_194  [key=0, style=solid];
m16_193 -> m16_221  [key=2, style=dotted];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_100  [key=2, style=dotted];
m16_196 -> m16_101  [key=2, style=dotted];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_218  [key=2, style=dotted];
m16_198 -> m16_199  [key=0, style=solid];
m16_198 -> m16_219  [key=2, style=dotted];
m16_198 -> m16_159  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_220  [key=2, style=dotted];
m16_199 -> m16_221  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_221  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_164  [key=2, style=dotted];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_164  [key=2, style=dotted];
m16_174 -> m16_175  [key=0, style=solid];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_217  [key=2, style=dotted];
m16_176 -> m16_177  [key=0, style=solid];
m16_176 -> m16_217  [key=2, style=dotted];
m16_177 -> m16_178  [key=0, style=solid];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label=gbpCash];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_189  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m16_202 -> m16_203  [key=0, style=solid];
m16_202 -> m16_223  [key=2, style=dotted];
m16_203 -> m16_204  [key=0, style=solid];
m16_203 -> m16_223  [key=2, style=dotted];
m16_204 -> m16_205  [key=0, style=solid];
m16_204 -> m16_223  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_221  [key=2, style=dotted];
m16_207 -> m16_208  [key=0, style=solid];
m16_207 -> m16_221  [key=2, style=dotted];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_221  [key=2, style=dotted];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_221  [key=2, style=dotted];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_184  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_180 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_180 -> m16_198  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_157  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_222  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_188 -> m16_157  [key=2, style=dotted];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_222  [key=2, style=dotted];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_157  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_222  [key=2, style=dotted];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> m16_222  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_160  [key=2, style=dotted];
m16_212 -> m16_213  [key=0, style=solid];
m16_212 -> m16_166  [key=2, style=dotted];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_160  [key=2, style=dotted];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_165  [key=2, style=dotted];
m16_216 -> m16_170  [key=0, style=bold, color=blue];
m16_116 -> m16_117  [key=0, style=solid];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_121  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_128  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_133  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_149  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_150  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_151  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_117 -> m16_154  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_29  [key=2, style=dotted];
m16_118 -> m16_120  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_118 -> m16_123  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_118 -> m16_126  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_118 -> m16_139  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_118 -> m16_148  [key=1, style=dashed, color=darkseagreen4, label=securities];
m16_121 -> m16_122  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_160  [key=2, style=dotted];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_161  [key=2, style=dotted];
m16_128 -> m16_130  [key=1, style=dashed, color=darkseagreen4, label=fill];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_27  [key=2, style=dotted];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_27  [key=2, style=dotted];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_27  [key=2, style=dotted];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_27  [key=2, style=dotted];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_27  [key=2, style=dotted];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_27  [key=2, style=dotted];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_27  [key=2, style=dotted];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_27  [key=2, style=dotted];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_27  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_119 -> m16_33  [key=2, style=dotted];
m16_119 -> m16_135  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_119 -> m16_144  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_34  [key=2, style=dotted];
m16_120 -> m16_129  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_130  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_132  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_133  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_135  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_144  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_149  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_150  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_151  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_152  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_120 -> m16_155  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_30  [key=2, style=dotted];
m16_123 -> m16_101  [key=2, style=dotted];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_158  [key=2, style=dotted];
m16_126 -> m16_159  [key=2, style=dotted];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_158  [key=2, style=dotted];
m16_139 -> m16_159  [key=2, style=dotted];
m16_148 -> m16_149  [key=0, style=solid];
m16_148 -> m16_158  [key=2, style=dotted];
m16_148 -> m16_159  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_164  [key=2, style=dotted];
m16_144 -> m16_145  [key=0, style=solid];
m16_144 -> m16_164  [key=2, style=dotted];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_27  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_162  [key=2, style=dotted];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_27  [key=2, style=dotted];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_167  [key=2, style=dotted];
m16_152 -> m16_154  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m16_152 -> m16_155  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_169  [key=2, style=dotted];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_157  [key=2, style=dotted];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_126  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_124 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_124 -> m16_134  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_124 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m16_125 -> m16_128  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m16_125 -> m16_134  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m16_125 -> m16_138  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m16_125 -> m16_147  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_160  [key=2, style=dotted];
m16_134 -> m16_163  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_36  [key=2, style=dotted];
m16_137 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_137 -> m16_139  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_137 -> m16_143  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_137 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_143  [key=1, style=dashed, color=darkseagreen4, label=highPrice];
m16_147 -> m16_148  [key=0, style=solid];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_165  [key=2, style=dotted];
m16_143 -> m16_144  [key=0, style=solid];
m16_143 -> m16_160  [key=2, style=dotted];
m16_143 -> m16_163  [key=2, style=dotted];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_36  [key=2, style=dotted];
m16_146 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_146 -> m16_148  [key=1, style=dashed, color=darkseagreen4, label=time];
m16_145 -> m16_146  [key=0, style=solid];
m16_145 -> m16_166  [key=2, style=dotted];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_168  [key=2, style=dotted];
m16_156 -> m16_116  [key=0, style=bold, color=blue];
m17_49 -> m17_50  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_52  [key=2, style=dotted];
m17_50 -> m17_53  [key=2, style=dotted];
m17_51 -> m17_49  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m17_0 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_9  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_7  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_10  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_9  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_9  [key=2, style=dotted];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_9  [key=2, style=dotted];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_9  [key=2, style=dotted];
m17_8 -> m17_0  [key=0, style=bold, color=blue];
m17_46 -> m17_54  [key=0, style=solid];
m17_46 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m17_46 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m17_54 -> m17_55  [key=0, style=solid];
m17_55 -> m17_56  [key=0, style=solid];
m17_56 -> m17_57  [key=0, style=solid];
m17_57 -> m17_46  [key=0, style=bold, color=blue];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_44  [key=2, style=dotted];
m17_12 -> m17_42  [key=1, style=dashed, color=red, label=emptyStatistics];
m17_13 -> m17_14  [key=0, style=solid, color=red];
m17_13 -> m17_44  [key=2, style=dotted];
m17_13 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateStatistics];
m17_42 -> m17_43  [key=0, style=solid, color=red];
m17_42 -> n187  [key=2, style=dotted, color=red];
m17_42 -> m17_46  [key=2, style=dotted, color=red];
m17_42 -> m17_47  [key=2, style=dotted, color=red];
m17_42 -> m17_48  [key=2, style=dotted, color=red];
m17_42 -> m17_49  [key=1, style=dashed, color=red, label="lambda expression"];
m17_14 -> m17_15  [key=0, style=solid, color=red];
m17_14 -> m17_44  [key=2, style=dotted, color=red];
m17_14 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateFrameworkStatistics];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_44  [key=2, style=dotted];
m17_15 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateOptionsStatistics];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_44  [key=2, style=dotted];
m17_16 -> m17_42  [key=1, style=dashed, color=red, label=limitFillRegressionStatistics];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_44  [key=2, style=dotted];
m17_17 -> m17_42  [key=1, style=dashed, color=red, label=updateOrderRegressionStatistics];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_44  [key=2, style=dotted];
m17_18 -> m17_42  [key=1, style=dashed, color=red, label=regressionStatistics];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_44  [key=2, style=dotted];
m17_19 -> m17_42  [key=1, style=dashed, color=red, label=universeSelectionRegressionStatistics];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_44  [key=2, style=dotted];
m17_20 -> m17_42  [key=1, style=dashed, color=red, label=customDataRegressionStatistics];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_44  [key=2, style=dotted];
m17_21 -> m17_42  [key=1, style=dashed, color=red, label=addRemoveSecurityRegressionStatistics];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_44  [key=2, style=dotted];
m17_22 -> m17_42  [key=1, style=dashed, color=red, label=dropboxBaseDataUniverseSelectionStatistics];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_44  [key=2, style=dotted];
m17_23 -> m17_42  [key=1, style=dashed, color=red, label=dropboxUniverseSelectionStatistics];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_44  [key=2, style=dotted];
m17_24 -> m17_42  [key=1, style=dashed, color=red, label=parameterizedStatistics];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_44  [key=2, style=dotted];
m17_25 -> m17_42  [key=1, style=dashed, color=red, label=historyAlgorithmStatistics];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_44  [key=2, style=dotted];
m17_26 -> m17_42  [key=1, style=dashed, color=red, label=coarseFundamentalTop5AlgorithmStatistics];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_44  [key=2, style=dotted];
m17_27 -> m17_42  [key=1, style=dashed, color=red, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_44  [key=2, style=dotted];
m17_28 -> m17_42  [key=1, style=dashed, color=red, label=macdTrendAlgorithmStatistics];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_44  [key=2, style=dotted];
m17_29 -> m17_42  [key=1, style=dashed, color=red, label=optionSplitRegressionAlgorithmStatistics];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_44  [key=2, style=dotted];
m17_30 -> m17_42  [key=1, style=dashed, color=red, label=optionRenameRegressionAlgorithmStatistics];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_44  [key=2, style=dotted];
m17_31 -> m17_42  [key=1, style=dashed, color=red, label=optionOpenInterestRegressionAlgorithmStatistics];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_44  [key=2, style=dotted];
m17_32 -> m17_42  [key=1, style=dashed, color=red, label=optionChainConsistencyRegressionAlgorithmStatistics];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_44  [key=2, style=dotted];
m17_33 -> m17_42  [key=1, style=dashed, color=red, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_44  [key=2, style=dotted];
m17_34 -> m17_42  [key=1, style=dashed, color=red, label=optionExerciseAssignRegressionAlgorithmStatistics];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_44  [key=2, style=dotted];
m17_35 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateDailyStatistics];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_44  [key=2, style=dotted];
m17_36 -> m17_42  [key=1, style=dashed, color=red, label=hourSplitStatistics];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_44  [key=2, style=dotted];
m17_37 -> m17_42  [key=1, style=dashed, color=red, label=hourReverseSplitStatistics];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_44  [key=2, style=dotted];
m17_38 -> m17_42  [key=1, style=dashed, color=red, label=fractionalQuantityRegressionStatistics];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_44  [key=2, style=dotted];
m17_39 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateFuturesAlgorithmDailyStatistics];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_44  [key=2, style=dotted];
m17_40 -> m17_42  [key=1, style=dashed, color=red, label=basicTemplateCryptoAlgorithmStatistics];
m17_41 -> m17_42  [key=0, style=solid, color=red];
m17_41 -> m17_44  [key=2, style=dotted];
m17_43 -> m17_11  [key=0, style=bold, color=blue];
m17_58 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m17_58 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m17_58 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m19_178 -> m19_250  [key=0, style=solid];
m19_178 -> m19_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_178 -> m19_254  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_178 -> m19_85  [key=3, color=darkorchid, style=bold, label="Parameter variable string csvFileName"];
m19_250 -> m19_251  [key=0, style=solid];
m19_250 -> m19_259  [key=2, style=dotted];
m19_250 -> m19_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_250 -> m19_255  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_251 -> m19_252  [key=0, style=solid];
m19_251 -> m19_260  [key=2, style=dotted];
m19_251 -> m19_253  [key=1, style=dashed, color=darkseagreen4, label=path];
m19_254 -> m19_255  [key=0, style=solid];
m19_254 -> m19_263  [key=2, style=dotted];
m19_254 -> m19_257  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_255 -> m19_256  [key=0, style=solid];
m19_255 -> m19_258  [key=0, style=solid];
m19_252 -> m19_253  [key=0, style=solid];
m19_252 -> m19_254  [key=0, style=solid];
m19_252 -> m19_261  [key=2, style=dotted];
m19_253 -> m19_254  [key=0, style=solid];
m19_253 -> m19_262  [key=2, style=dotted];
m19_257 -> m19_255  [key=0, style=solid];
m19_257 -> m19_265  [key=2, style=dotted];
m19_256 -> m19_257  [key=0, style=solid];
m19_256 -> m19_264  [key=2, style=dotted];
m19_256 -> m19_188  [key=2, style=dotted];
m19_258 -> m19_178  [key=0, style=bold, color=blue];
m19_137 -> m19_0  [key=3, color=darkorchid, style=bold, label="Field variable bool _liveMode"];
m19_266 -> m19_267  [key=0, style=solid];
m19_219 -> m19_220  [key=0, style=solid];
m19_219 -> m19_225  [key=0, style=solid];
m19_219 -> m19_227  [key=2, style=dotted];
m19_223 -> m19_224  [key=0, style=solid];
m19_223 -> m19_228  [key=2, style=dotted];
m19_200 -> m19_201  [key=0, style=solid];
m19_200 -> m19_202  [key=0, style=solid];
m19_200 -> m19_203  [key=2, style=dotted];
m19_206 -> m19_207  [key=0, style=solid];
m19_206 -> m19_214  [key=2, style=dotted];
m19_207 -> m19_208  [key=0, style=solid];
m19_207 -> m19_215  [key=2, style=dotted];
m19_210 -> m19_213  [key=0, style=solid];
m19_210 -> m19_216  [key=2, style=dotted];
m19_212 -> m19_213  [key=0, style=solid];
m19_212 -> m19_217  [key=2, style=dotted];
m19_222 -> m19_223  [key=0, style=solid];
m19_199 -> m19_200  [key=0, style=solid];
m19_199 -> m19_201  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_208 -> m19_209  [key=0, style=solid];
m19_208 -> m19_211  [key=0, style=solid];
m19_218 -> m19_219  [key=0, style=solid];
m19_229 -> m19_230  [key=0, style=solid];
m19_201 -> m19_202  [key=0, style=solid];
m19_201 -> m19_204  [key=2, style=dotted];
m19_201 -> m19_164  [key=2, style=dotted];
m19_202 -> m19_199  [key=0, style=bold, color=blue];
m19_205 -> m19_206  [key=0, style=solid];
m19_205 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_205 -> m19_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_209 -> m19_210  [key=0, style=solid];
m19_211 -> m19_212  [key=0, style=solid];
m19_213 -> m19_205  [key=0, style=bold, color=blue];
m19_220 -> m19_221  [key=0, style=solid];
m19_225 -> m19_226  [key=0, style=solid];
m19_225 -> m19_158  [key=2, style=dotted];
m19_221 -> m19_222  [key=0, style=solid];
m19_221 -> m19_157  [key=2, style=dotted];
m19_224 -> m19_226  [key=0, style=solid];
m19_226 -> m19_218  [key=0, style=bold, color=blue];
m19_230 -> m19_231  [key=0, style=solid];
m19_230 -> m19_232  [key=2, style=dotted];
m19_231 -> m19_229  [key=0, style=bold, color=blue];
m19_267 -> m19_268  [key=0, style=solid];
m19_267 -> m19_232  [key=2, style=dotted];
m19_268 -> m19_266  [key=0, style=bold, color=blue];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m19_5 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_5 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Interfaces.IAlgorithm algorithm"];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_7 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_7 -> m19_223  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_7 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_7 -> m19_5  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Lean.Engine.AlgorithmManager algorithmManager"];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_137  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_138  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_141  [key=2, style=dotted];
m19_18 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_23  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_61  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_95  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_18 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_143  [key=2, style=dotted];
m19_21 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=factory];
m19_21 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_61  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_21 -> m19_129  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_144  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_146  [key=2, style=dotted];
m19_24 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m19_24 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m19_24 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_149  [key=2, style=dotted];
m19_28 -> m19_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_150  [key=2, style=dotted];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_151  [key=2, style=dotted];
m19_31 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m19_31 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_45  [key=0, style=solid];
m19_39 -> m19_156  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_156  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_55  [key=0, style=solid];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_160  [key=2, style=dotted];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_163  [key=2, style=dotted];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_166  [key=2, style=dotted];
m19_69 -> m19_167  [key=2, style=dotted];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_169  [key=2, style=dotted];
m19_71 -> m19_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_79  [key=0, style=solid];
m19_76 -> m19_172  [key=2, style=dotted];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_172  [key=2, style=dotted];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_186  [key=2, style=dotted];
m19_109 -> m19_187  [key=2, style=dotted];
m19_109 -> m19_188  [key=2, style=dotted];
m19_109 -> m19_167  [key=2, style=dotted];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_113  [key=0, style=solid];
m19_110 -> m19_189  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_8  [key=3, color=darkorchid, style=bold, label="Local variable bool initializeComplete"];
m19_108 -> m19_109  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m19_9 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m19_9 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable System.Threading.Thread threadFeed"];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m19_10 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m19_10 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable System.Threading.Thread threadTransactions"];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_123  [key=0, style=solid];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_196  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable System.Threading.Thread threadResults"];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_125  [key=0, style=solid];
m19_124 -> m19_125  [key=0, style=solid];
m19_124 -> m19_196  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable System.Threading.Thread threadRealTime"];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_139  [key=2, style=dotted];
m19_15 -> m19_125  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
m19_15 -> m19_126  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_140  [key=2, style=dotted];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_127  [key=0, style=solid];
m19_126 -> m19_127  [key=0, style=solid];
m19_126 -> m19_196  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Interfaces.IBrokerage brokerage"];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_142  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_145  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_152  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_40  [key=0, style=solid];
m19_33 -> m19_45  [key=0, style=solid];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_153  [key=2, style=dotted];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_53  [key=0, style=solid];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_159  [key=2, style=dotted];
m19_52 -> m19_158  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_161  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_162  [key=2, style=dotted];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_61 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_61 -> m19_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_77  [key=0, style=solid];
m19_75 -> m19_79  [key=0, style=solid];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=trades];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_180  [key=2, style=dotted];
m19_95 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=profitLoss];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> m19_181  [key=2, style=dotted];
m19_96 -> m19_182  [key=2, style=dotted];
m19_96 -> m19_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_96 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=totalTransactions];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_183  [key=2, style=dotted];
m19_98 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=netReturn];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_184  [key=2, style=dotted];
m19_100 -> m19_185  [key=2, style=dotted];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_184  [key=2, style=dotted];
m19_101 -> m19_185  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_184  [key=2, style=dotted];
m19_102 -> m19_185  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_107  [key=0, style=solid];
m19_104 -> m19_184  [key=2, style=dotted];
m19_104 -> m19_185  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_147  [key=2, style=dotted];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_159  [key=2, style=dotted];
m19_54 -> m19_158  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_130  [key=0, style=solid];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_197  [key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_27  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_148  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_116  [key=0, style=solid];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m19_40 -> m19_41  [key=0, style=solid];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_158  [key=2, style=dotted];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_153  [key=2, style=dotted];
m19_36 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m19_36 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m19_36 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_154  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_155  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_157  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label=runtimeMessage];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_155  [key=2, style=dotted];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_159  [key=2, style=dotted];
m19_46 -> m19_158  [key=2, style=dotted];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_159  [key=2, style=dotted];
m19_47 -> m19_158  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_159  [key=2, style=dotted];
m19_48 -> m19_158  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_159  [key=2, style=dotted];
m19_49 -> m19_158  [key=2, style=dotted];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_159  [key=2, style=dotted];
m19_50 -> m19_158  [key=2, style=dotted];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m19_116 -> m19_117  [key=0, style=solid];
m19_116 -> m19_193  [key=2, style=dotted];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label=totalSeconds];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_164  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_165  [key=2, style=dotted];
m19_63 -> m19_66  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m19_63 -> m19_121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m19_63 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_165  [key=2, style=dotted];
m19_64 -> m19_67  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m19_64 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m19_64 -> m19_124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_140  [key=2, style=dotted];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_165  [key=2, style=dotted];
m19_65 -> m19_68  [key=1, style=dashed, color=darkseagreen4, label=threadRealTime];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_140  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_140  [key=2, style=dotted];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_168  [key=2, style=dotted];
m19_70 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_75  [key=0, style=solid];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_170  [key=2, style=dotted];
m19_73 -> m19_154  [key=2, style=dotted];
m19_74 -> m19_79  [key=0, style=solid];
m19_74 -> m19_171  [key=2, style=dotted];
m19_74 -> m19_170  [key=2, style=dotted];
m19_77 -> m19_78  [key=0, style=solid];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_173  [key=2, style=dotted];
m19_80 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label=charts];
m19_80 -> m19_93  [key=1, style=dashed, color=darkseagreen4, label=charts];
m19_80 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=charts];
m19_80 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label=charts];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_173  [key=2, style=dotted];
m19_81 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=orders];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_105  [key=0, style=solid];
m19_92 -> m19_107  [key=0, style=solid];
m19_92 -> n28  [key=2, style=dotted];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=equity];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=performance];
m19_97 -> m19_98  [key=0, style=solid];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_174  [key=2, style=dotted];
m19_82 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_174  [key=2, style=dotted];
m19_83 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_83 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_83 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_83 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_83 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_83 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=banner];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_175  [key=2, style=dotted];
m19_84 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_184  [key=2, style=dotted];
m19_103 -> m19_185  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_176  [key=2, style=dotted];
m19_85 -> m19_87  [key=1, style=dashed, color=darkseagreen4, label=csvTransactionsFileName];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_88  [key=0, style=solid];
m19_86 -> m19_177  [key=2, style=dotted];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_178  [key=2, style=dotted];
m19_88 -> m19_89  [key=0, style=solid];
m19_88 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m19_88 -> m19_93  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m19_88 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m19_88 -> m19_88  [key=3, color=darkorchid, style=bold, label="Local variable string strategyEquityKey"];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
m19_89 -> m19_93  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
m19_89 -> m19_89  [key=3, color=darkorchid, style=bold, label="Local variable string equityKey"];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
m19_90 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
m19_90 -> m19_90  [key=3, color=darkorchid, style=bold, label="Local variable string dailyPerformanceKey"];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label=benchmarkKey];
m19_91 -> m19_91  [key=3, color=darkorchid, style=bold, label="Local variable string benchmarkKey"];
m19_105 -> m19_106  [key=0, style=solid];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_157  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_190  [key=2, style=dotted];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_157  [key=2, style=dotted];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_191  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_192  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_194  [key=2, style=dotted];
m19_118 -> m19_119  [key=0, style=solid];
m19_118 -> m19_121  [key=0, style=solid];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_195  [key=2, style=dotted];
m19_120 -> m19_118  [key=0, style=solid];
m19_120 -> m19_158  [key=2, style=dotted];
m19_128 -> m19_129  [key=0, style=solid];
m19_128 -> m19_158  [key=2, style=dotted];
m19_130 -> m19_131  [key=0, style=solid];
m19_130 -> m19_133  [key=0, style=solid];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_158  [key=2, style=dotted];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_136  [key=0, style=solid];
m19_133 -> m19_158  [key=2, style=dotted];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_198  [key=2, style=dotted];
m19_134 -> m19_135  [key=0, style=solid];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_157  [key=2, style=dotted];
m19_136 -> m19_5  [key=0, style=bold, color=blue];
m19_172 -> m19_233  [key=0, style=solid];
m19_172 -> m19_237  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m19_172 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m19_172 -> m19_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_172 -> m19_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job"];
m19_172 -> m19_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Exception err"];
m19_233 -> m19_234  [key=0, style=solid];
m19_233 -> m19_157  [key=2, style=dotted];
m19_237 -> m19_238  [key=0, style=solid];
m19_237 -> m19_239  [key=1, style=dashed, color=darkseagreen4, label=message];
m19_237 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label=message];
m19_237 -> m19_241  [key=1, style=dashed, color=darkseagreen4, label=message];
m19_240 -> m19_241  [key=0, style=solid];
m19_240 -> m19_155  [key=2, style=dotted];
m19_241 -> m19_242  [key=0, style=solid];
m19_241 -> m19_156  [key=2, style=dotted];
m19_234 -> m19_235  [key=0, style=solid];
m19_234 -> m19_236  [key=0, style=solid];
m19_235 -> m19_236  [key=0, style=solid];
m19_235 -> m19_191  [key=2, style=dotted];
m19_236 -> m19_237  [key=0, style=solid];
m19_236 -> m19_242  [key=0, style=solid];
m19_238 -> m19_239  [key=0, style=solid];
m19_238 -> m19_158  [key=2, style=dotted];
m19_239 -> m19_240  [key=0, style=solid];
m19_239 -> m19_243  [key=2, style=dotted];
m19_242 -> m19_172  [key=0, style=bold, color=blue];
m19_149 -> m19_0  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Lean.Engine.LeanEngineSystemHandlers _systemHandlers"];
m19_146 -> m19_244  [key=0, style=solid];
m19_146 -> m19_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_244 -> m19_245  [key=0, style=solid];
m19_244 -> m19_246  [key=0, style=solid];
m19_244 -> m19_248  [key=2, style=dotted];
m19_246 -> m19_247  [key=0, style=solid];
m19_246 -> m19_249  [key=2, style=dotted];
m19_245 -> m19_246  [key=0, style=solid];
m19_245 -> m19_176  [key=2, style=dotted];
m19_247 -> m19_146  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineSystemHandlers"];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_0  [key=0, style=bold, color=blue];
m19_269 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_269 -> m19_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m19_270 -> m19_200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_270 -> m19_222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_271 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_272 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_272 -> m19_223  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m19_273 -> m19_219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_0  [key=0, style=bold, color=blue];
m21_115 -> m21_116  [key=0, style=solid, color=red];
m21_116 -> m21_117  [key=0, style=solid, color=red];
m21_119 -> m21_120  [key=0, style=solid];
m21_119 -> m21_121  [key=2, style=dotted];
m21_118 -> m21_119  [key=0, style=solid];
m21_123 -> m21_124  [key=0, style=solid];
m21_123 -> m21_121  [key=2, style=dotted];
m21_122 -> m21_123  [key=0, style=solid];
m21_117 -> m21_115  [key=0, style=bold, color=blue];
m21_120 -> m21_118  [key=0, style=bold, color=blue];
m21_124 -> m21_122  [key=0, style=bold, color=blue];
m21_17 -> m21_18  [key=0, style=solid, color=red];
m21_17 -> m21_81  [key=2, style=dotted, color=red];
m21_17 -> m21_20  [key=1, style=dashed, color=red, label=exchangeHours];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_4 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_15  [key=1, style=dashed, color=red, label="System.DateTime"];
m21_4 -> m21_116  [key=1, style=dashed, color=red, label="System.DateTime"];
m21_4 -> m21_21  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_25  [key=1, style=dashed, color=red, label="System.DateTime"];
m21_4 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_4 -> m21_49  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_4 -> m21_51  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_4 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_4 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_4 -> m21_66  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.UniverseSelection.SecurityChanges ApplyUniverseSelection"];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_75  [key=2, style=dotted];
m21_5 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m21_5 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m21_5 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m21_5 -> m21_70  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_8  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_25  [key=1, style=dashed, color=red, label=fineFiltered];
m21_11 -> m21_12  [key=0, style=solid, color=red];
m21_11 -> m21_76  [key=2, style=dotted];
m21_11 -> m21_14  [key=1, style=dashed, color=red, label=selectSymbolsResult];
m21_15 -> m21_16  [key=0, style=solid, color=red];
m21_15 -> m21_79  [key=2, style=dotted, color=red];
m21_15 -> m21_22  [key=1, style=dashed, color=red, label=factory];
m21_21 -> m21_22  [key=0, style=solid, color=red];
m21_21 -> m21_84  [key=2, style=dotted, color=red];
m21_21 -> m21_85  [key=2, style=dotted, color=red];
m21_25 -> m21_27  [key=0, style=solid, color=red];
m21_25 -> m21_89  [key=2, style=dotted, color=red];
m21_25 -> m21_29  [key=1, style=dashed, color=red, label=selectSymbolsResult];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_89  [key=2, style=dotted];
m21_26 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label=selectSymbolsResult];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_96  [key=2, style=dotted];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_45  [key=0, style=solid];
m21_37 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_41  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_37 -> m21_44  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_37  [key=0, style=solid];
m21_39 -> m21_99  [key=2, style=dotted];
m21_43 -> m21_37  [key=0, style=solid];
m21_43 -> m21_96  [key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_48  [key=0, style=solid];
m21_46 -> m21_95  [key=2, style=dotted];
m21_46 -> m21_101  [key=2, style=dotted];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_52  [key=0, style=solid];
m21_49 -> m21_103  [key=2, style=dotted];
m21_49 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label=pendingAdditions];
m21_49 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label=pendingAdditions];
m21_51 -> m21_52  [key=0, style=solid];
m21_55 -> m21_56  [key=0, style=solid];
m21_55 -> m21_106  [key=2, style=dotted];
m21_55 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_55 -> m21_63  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_55 -> m21_65  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_58 -> m21_59  [key=0, style=solid];
m21_58 -> m21_62  [key=0, style=solid];
m21_58 -> m21_108  [key=2, style=dotted];
m21_58 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label=request];
m21_63 -> m21_64  [key=0, style=solid];
m21_63 -> m21_110  [key=2, style=dotted];
m21_70 -> m21_69  [key=0, style=solid];
m21_70 -> m21_84  [key=2, style=dotted];
m21_70 -> m21_85  [key=2, style=dotted];
m21_70 -> m21_113  [key=2, style=dotted];
m21_70 -> m21_109  [key=2, style=dotted];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_114  [key=2, style=dotted];
m21_7 -> m21_74  [key=0, style=solid];
m21_8 -> m21_9  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_26  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid, color=red];
m21_12 -> m21_77  [key=2, style=dotted, color=red];
m21_12 -> m21_24  [key=1, style=dashed, color=red, label=fineCollection];
m21_12 -> m21_25  [key=1, style=dashed, color=red, label=fineCollection];
m21_14 -> m21_15  [key=0, style=solid, color=red];
m21_14 -> m21_25  [key=0, style=solid, color=red];
m21_14 -> m21_16  [key=1, style=dashed, color=red, label=symbol];
m21_14 -> m21_17  [key=1, style=dashed, color=red, label=symbol];
m21_14 -> m21_18  [key=1, style=dashed, color=red, label=symbol];
m21_14 -> m21_20  [key=1, style=dashed, color=red, label=symbol];
m21_13 -> m21_14  [key=0, style=solid, color=red];
m21_13 -> m21_78  [key=2, style=dotted, color=red];
m21_13 -> m21_22  [key=1, style=dashed, color=red, label=dataProvider];
m21_24 -> m21_14  [key=0, style=solid, color=red];
m21_24 -> m21_88  [key=2, style=dotted, color=red];
m21_22 -> m21_23  [key=0, style=solid, color=red];
m21_22 -> m21_86  [key=2, style=dotted, color=red];
m21_22 -> m21_24  [key=1, style=dashed, color=red, label=enumerator];
m21_16 -> m21_17  [key=0, style=solid, color=red];
m21_16 -> m21_80  [key=2, style=dotted, color=red];
m21_16 -> m21_21  [key=1, style=dashed, color=red, label=config];
m21_18 -> m21_19  [key=0, style=solid, color=red];
m21_18 -> m21_82  [key=2, style=dotted, color=red];
m21_18 -> m21_20  [key=1, style=dashed, color=red, label=symbolProperties];
m21_20 -> m21_21  [key=0, style=solid, color=red];
m21_20 -> m21_83  [key=2, style=dotted, color=red];
m21_19 -> m21_20  [key=0, style=solid, color=red];
m21_23 -> m21_24  [key=0, style=solid, color=red];
m21_23 -> m21_14  [key=0, style=solid, color=red];
m21_23 -> m21_87  [key=2, style=dotted, color=red];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_29  [key=0, style=solid];
m21_27 -> m21_90  [key=2, style=dotted];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_91  [key=2, style=dotted];
m21_29 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label=selections];
m21_29 -> m21_52  [key=1, style=dashed, color=darkseagreen4, label=selections];
m21_28 -> m21_74  [key=0, style=solid];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> n187  [key=2, style=dotted];
m21_30 -> m21_65  [key=1, style=dashed, color=darkseagreen4, label=additions];
m21_30 -> m21_66  [key=1, style=dashed, color=darkseagreen4, label=additions];
m21_30 -> m21_67  [key=1, style=dashed, color=darkseagreen4, label=additions];
m21_38 -> m21_39  [key=0, style=solid];
m21_38 -> m21_37  [key=0, style=solid];
m21_38 -> m21_98  [key=2, style=dotted];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_66  [key=0, style=solid];
m21_52 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_52 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_52 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> n187  [key=2, style=dotted];
m21_31 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label=removals];
m21_31 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label=removals];
m21_31 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label=removals];
m21_31 -> m21_66  [key=1, style=dashed, color=darkseagreen4, label=removals];
m21_65 -> m21_52  [key=0, style=solid];
m21_65 -> m21_88  [key=2, style=dotted];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_111  [key=2, style=dotted];
m21_66 -> m21_68  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m21_66 -> m21_71  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m21_66 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m21_66 -> m21_73  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_71  [key=0, style=solid];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_37  [key=0, style=solid];
m21_32 -> m21_93  [key=2, style=dotted];
m21_32 -> m21_119  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_32 -> m21_34  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_32 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_32 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_88  [key=2, style=dotted];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_94  [key=2, style=dotted];
m21_33 -> m21_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_32  [key=0, style=solid];
m21_34 -> m21_95  [key=2, style=dotted];
m21_36 -> m21_32  [key=0, style=solid];
m21_36 -> m21_97  [key=2, style=dotted];
m21_45 -> m21_46  [key=0, style=solid];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_94  [key=2, style=dotted];
m21_41 -> m21_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_44  [key=0, style=solid];
m21_42 -> m21_95  [key=2, style=dotted];
m21_44 -> m21_37  [key=0, style=solid];
m21_44 -> m21_100  [key=2, style=dotted];
m21_47 -> m21_48  [key=0, style=solid];
m21_47 -> m21_102  [key=2, style=dotted];
m21_48 -> m21_49  [key=0, style=solid];
m21_50 -> m21_51  [key=0, style=solid];
m21_50 -> m21_104  [key=2, style=dotted];
m21_50 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label=pendingAdditions];
m21_50 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label=pendingAdditions];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_57  [key=0, style=solid];
m21_54 -> m21_105  [key=2, style=dotted];
m21_54 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_54 -> m21_63  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_54 -> m21_65  [key=1, style=dashed, color=darkseagreen4, label=security];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_107  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_62  [key=1, style=dashed, color=darkseagreen4, label=addedSubscription];
m21_57 -> m21_57  [key=3, color=darkorchid, style=bold, label="Local variable bool addedSubscription"];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_52  [key=0, style=solid];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_109  [key=2, style=dotted];
m21_60 -> m21_61  [key=0, style=solid];
m21_60 -> m21_58  [key=0, style=solid];
m21_61 -> m21_58  [key=0, style=solid];
m21_61 -> m21_62  [key=1, style=dashed, color=darkseagreen4, label=addedSubscription];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_52  [key=0, style=solid];
m21_68 -> m21_69  [key=0, style=solid];
m21_68 -> m21_112  [key=2, style=dotted];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_73  [key=0, style=solid];
m21_73 -> m21_74  [key=0, style=solid];
m21_69 -> m21_70  [key=0, style=solid];
m21_69 -> m21_71  [key=0, style=solid];
m21_74 -> m21_4  [key=0, style=bold, color=blue];
m21_96 -> m21_125  [key=0, style=solid];
m21_96 -> m21_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m21_96 -> m21_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m21_96 -> m21_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m21_96 -> m21_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m21_96 -> m21_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime dateTimeUtc"];
m21_96 -> m21_32  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security member"];
m21_96 -> m21_37  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security member"];
m21_96 -> m21_31  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Securities.Security> removals"];
m21_96 -> m21_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime algorithmEndDateUtc"];
m21_125 -> m21_126  [key=0, style=solid];
m21_125 -> m21_133  [key=2, style=dotted];
m21_126 -> m21_127  [key=0, style=solid];
m21_126 -> m21_134  [key=2, style=dotted];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_131  [key=0, style=solid];
m21_127 -> m21_108  [key=2, style=dotted];
m21_127 -> m21_130  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m21_129 -> m21_127  [key=0, style=solid];
m21_129 -> m21_135  [key=2, style=dotted];
m21_131 -> m21_132  [key=0, style=solid];
m21_131 -> m21_137  [key=2, style=dotted];
m21_128 -> m21_129  [key=0, style=solid];
m21_128 -> m21_130  [key=0, style=solid];
m21_130 -> m21_127  [key=0, style=solid];
m21_130 -> m21_136  [key=2, style=dotted];
m21_132 -> m21_96  [key=0, style=bold, color=blue];
m21_138 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_15  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_17  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_18  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_19  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_138 -> m21_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m21_139 -> m21_116  [key=1, style=dashed, color=red, label="System.DateTime"];
m21_140 -> m21_119  [key=1, style=dashed, color=darkseagreen4, label=member];
m21_141 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label=member];
}
