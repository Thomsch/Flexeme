digraph  {
n0 [cluster="lambda expression", label="Entry lambda expression", span="86-93"];
n1 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="88-88"];
n2 [cluster="lambda expression", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="90-90"];
n3 [cluster="lambda expression", label="return null;", span="92-92"];
n4 [cluster="lambda expression", label="Exit lambda expression", span="86-93"];
n5 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", span="130-130"];
n6 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="133-133"];
n7 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var startingPortfolioValue = setup.StartingPortfolioValue", span="134-134"];
n8 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="135-135"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="141-141"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime = setup.StartingDate.Date", span="143-143"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnTradeBar = AddMethodInvoker<Dictionary<string, TradeBar>>(algorithm, methodInvokers, ''OnTradeBar'')", span="148-148"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnTick = AddMethodInvoker<Dictionary<string, List<Tick>>>(algorithm, methodInvokers, ''OnTick'')", span="149-149"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="152-152"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="153-153"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="159-159"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="160-160"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="feed.Subscriptions", span="163-163"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="169-169"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="177-177"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="186-186"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="DataStream.GetData(feed, setup.StartingDate)", span="187-187"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="196-196"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="realtime.SetTime(time)", span="207-207"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="213-213"];
n43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="218-218"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="222-222"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="224-224"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.CashBook.Update(newData)", span="231-231"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Update(time, newData)", span="234-234"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="237-237"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="240-240"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.GetQuit()", span="243-243"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="248-248"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="259-259"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="265-265"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="269-269"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var executedOrders = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="276-276"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, order.Symbol, order.Quantity, order.Price))", span="279-279"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="287-287"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="291-291"];
n82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var config = feed.Subscriptions[i]", span="314-314"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="334-334"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="349-349"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="368-368"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[config.Type](algorithm, dataPoint)", span="428-428"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="432-432"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dividends)](algorithm, newDividends)", span="445-445"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Splits)](algorithm, newSplits)", span="449-449"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="454-454"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dictionary<string, TradeBar>)](algorithm, oldBars)", span="466-466"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dictionary<string, List<Tick>>)](algorithm, oldTicks)", span="467-467"];
n148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="471-471"];
n153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (TradeBars)](algorithm, newBars)", span="482-482"];
n155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Ticks)](algorithm, newTicks)", span="483-483"];
n157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="487-487"];
n161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="496-496"];
n163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="502-502"];
n165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="509-509"];
n168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="514-514"];
n171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="520-520"];
n173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hackedFrontier = algorithm.Time == DateTime.MinValue ? DateTime.MinValue : algorithm.Time.AddMilliseconds(-1)", span="526-526"];
n174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(hackedFrontier)", span="527-527"];
n175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Securities", span="528-528"];
n178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="534-534"];
n179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="535-535"];
n180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="536-536"];
n183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="543-543"];
n184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="544-544"];
n187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="551-551"];
n188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="552-552"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="556-556"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="559-559"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SampleEquity(DataStream.AlgorithmTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="560-560"];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(DataStream.AlgorithmTime, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="561-561"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="startingPortfolioValue == 0m", span="216-216"];
n9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="136-136"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backtestMode, span="203-203"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="137-137"];
n194 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="172-172"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="181-181"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="138-138"];
n195 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="297-297"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (Engine.LiveMode && nextMarginCallTime > DateTime.Now)", span="255-255"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.Running", span="142-142"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="601-601"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnTradeBar && oldBars.Count > 0", span="466-466"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnTick && oldTicks.Count > 0", span="467-467"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var backwardsCompatibilityMode = !hasOnDataTradeBars && !hasOnDataTicks", span="156-156"];
n152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && newBars.Count > 0", span="482-482"];
n154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && newTicks.Count > 0", span="483-483"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="380-380"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="398-398"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="461-461"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=hasOnDataDividends, span="335-335"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && newDividends.Count != 0", span="443-443"];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=hasOnDataSplits, span="350-350"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && newSplits.Count != 0", span="447-447"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick''", span="166-166"];
n197 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n198 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="genericMethod == null", span="175-175"];
n199 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="178-178"];
n200 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="179-179"];
n201 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n202 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n203 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="190-190"];
n164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="506-506"];
n204 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", label="Entry QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="47-47"];
n80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newData.Keys", span="310-310"];
n81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var dataPoints = newData[i]", span="313-313"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState != AlgorithmStatus.Running", span="193-193"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="196-196"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var time = DataStream.AlgorithmTime", span="198-198"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="210-210"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newBars = new TradeBars(time)", span="303-303"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newTicks = new Ticks(time)", span="304-304"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newDividends = new Dividends(time)", span="305-305"];
n79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newSplits = new Splits(time)", span="306-306"];
n162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="499-499"];
n205 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="95-95"];
n206 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n207 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="140-140"];
n208 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="148-148"];
n209 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="59-59"];
n210 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="277-277"];
n211 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="287-287"];
n212 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="55-55"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.Quit", span="245-245"];
n213 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="444-444"];
n53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="250-250"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="258-258"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var oldBars = new Dictionary<string, TradeBar>()", span="301-301"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="260-260"];
n214 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="467-467"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="283-283"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="267-267"];
n215 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", span="254-254"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="270-270"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: OnMarginCall: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="271-271"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="272-272"];
n216 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="132-132"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=executedOrders, span="277-277"];
n217 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="50-50"];
n218 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n219 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="248-248"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="289-289"];
n220 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="259-259"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="292-292"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="293-293"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var oldTicks = new Dictionary<string, List<Tick>>()", span="302-302"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="oldBars[bar.Symbol] = bar", span="382-382"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="!oldTicks.TryGetValue(tick.Symbol, out ticks)", span="401-401"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="oldTicks.Add(tick.Symbol, ticks)", span="404-404"];
n221 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newBars[bar.Symbol] = bar", span="386-386"];
n222 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="!newTicks.TryGetValue(tick.Symbol, out ticks)", span="411-411"];
n125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newTicks.Add(tick.Symbol, ticks)", span="414-414"];
n223 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newDividends.Add(dividend)", span="338-338"];
n224 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newSplits.Add(split)", span="353-353"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_dataPointCount += dataPoints.Count", span="317-317"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=dataPoints, span="327-327"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.IsInternalFeed", span="320-320"];
n99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="j < config.Consolidators.Count", span="361-361"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.Consolidators[j].Update(dataPoint)", span="363-363"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var dividend = dataPoint as Dividend", span="329-329"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var split = dataPoint as Split", span="343-343"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dataPoint.DataType == MarketDataType.TradeBar", span="375-375"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var bar = dataPoint as TradeBar", span="377-377"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dataPoint.DataType == MarketDataType.Tick", span="393-393"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var tick = dataPoint as Tick", span="395-395"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dividend != null", span="330-330"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Dividend for '' + dividend.Symbol)", span="332-332"];
n225 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="521-521"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="split != null", span="344-344"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Split for '' + split.Symbol)", span="346-346"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var j = 0", span="361-361"];
n227 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="543-543"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="j++", span="361-361"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="366-366"];
n228 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="369-369"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err.Message)", span="370-370"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="371-371"];
n229 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="bar != null", span="378-378"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="tick != null", span="396-396"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks.Add(tick)", span="406-406"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks.Add(tick)", span="416-416"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="List<Tick> ticks", span="400-400"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="List<Tick> ticks", span="410-410"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks = new List<Tick>(3)", span="403-403"];
n230 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n231 [cluster="System.Collections.Generic.List<T>.List(int)", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
n232 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks = new List<Tick>(3)", span="413-413"];
n234 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", span="172-172"];
n235 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", span="148-148"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="430-430"];
n236 [cluster="Unk.]", label="Entry Unk.]", span=""];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="433-433"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="434-434"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="435-435"];
n233 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n226 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", span="232-232"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="452-452"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="455-455"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="456-456"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="457-457"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="469-469"];
n149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="472-472"];
n150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Backwards Compatibility Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="473-473"];
n151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="474-474"];
n156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="485-485"];
n158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="488-488"];
n159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="489-489"];
n160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="490-490"];
n237 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="225-225"];
n166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="511-511"];
n238 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="274-274"];
n167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="513-513"];
n169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Debug(''AlgorithmManager.OnEndOfAlgorithm(): '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="515-515"];
n239 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="516-516"];
n172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Liquidated || !Engine.LiveMode", span="523-523"];
n181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Stopped", span="540-540"];
n240 [cluster="System.DateTime.AddMilliseconds(double)", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
n176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="security.Value.SetMarketPrice(hackedFrontier, null)", span="530-530"];
n177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="533-533"];
n241 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="391-391"];
n242 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="396-396"];
n243 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="105-105"];
n244 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="191-191"];
n182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="542-542"];
n185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Deleted", span="548-548"];
n186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="550-550"];
n245 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="93-93"];
n246 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="339-339"];
n247 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="164-164"];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", span="130-130"];
n248 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="567-567"];
n249 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="DataStream.ResetFrontier()", span="570-570"];
n250 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_algorithmId = ''''", span="571-571"];
n254 [cluster="QuantConnect.Lean.Engine.DataStream.ResetFrontier()", label="Entry QuantConnect.Lean.Engine.DataStream.ResetFrontier()", span="238-238"];
n251 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_currentTimeStepTime = new DateTime()", span="572-572"];
n252 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_algorithmState = AlgorithmStatus.Running", span="573-573"];
n255 [cluster="System.DateTime.DateTime()", label="Entry System.DateTime.DateTime()", span="0-0"];
n253 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="567-567"];
n256 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="580-580"];
n257 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="582-582"];
n258 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="586-586"];
n259 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithmState = state", span="588-588"];
n260 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="580-580"];
n261 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="603-603"];
n263 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="606-606"];
n262 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="604-604"];
n265 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="609-609"];
n264 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="607-607"];
n266 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="601-601"];
m0_0 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="AlgorithmNodePacket.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="29-29"];
m0_1 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="AlgorithmNodePacket.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="29-29"];
m1_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BacktestingDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="32-32"];
m1_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BacktestingDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="32-32"];
m1_3 [file="BacktestingDataFeed.cs", label="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed", span=""];
m2_39 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m2_0 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="120-120"];
m2_1 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="results == null", span="130-130"];
m2_3 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="setup == null", span="134-134"];
m2_5 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="dataFeed == null", span="138-138"];
m2_7 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="transactions == null", span="142-142"];
m2_9 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="realTime == null", span="146-146"];
m2_11 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="mapFileProvider == null", span="150-150"];
m2_13 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="factorFileProvider == null", span="154-154"];
m2_15 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="dataProvider == null", span="158-158"];
m2_17 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_results = results", span="162-162"];
m2_18 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_setup = setup", span="163-163"];
m2_19 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_dataFeed = dataFeed", span="164-164"];
m2_20 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_transactions = transactions", span="165-165"];
m2_21 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_realTime = realTime", span="166-166"];
m2_22 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_mapFileProvider = mapFileProvider", span="167-167"];
m2_23 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_factorFileProvider = factorFileProvider", span="168-168"];
m2_24 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="_dataProvider = dataProvider", span="169-169"];
m2_2 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''results'');", span="132-132"];
m2_4 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''setup'');", span="136-136"];
m2_6 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''dataFeed'');", span="140-140"];
m2_8 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''transactions'');", span="144-144"];
m2_10 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''realTime'');", span="148-148"];
m2_12 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''mapFileProvider'');", span="152-152"];
m2_14 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''factorFileProvider'');", span="156-156"];
m2_16 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentNullException(''dataProvider'');", span="160-160"];
m2_25 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="120-120"];
m2_44 [cluster="System.IDisposable.Dispose()", file="BacktestingRealTimeHandler.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m2_40 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="205-205"];
m2_41 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="BacktestingRealTimeHandler.cs", label="Setup.Dispose()", span="207-207"];
m2_42 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''LeanEngineAlgorithmHandlers.Dispose(): Disposed of algorithm handlers.'')", span="209-209"];
m2_43 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="205-205"];
m2_26 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_27 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="178-178"];
m2_28 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var setupHandlerTypeName = Config.Get(''setup-handler'', ''ConsoleSetupHandler'')", span="180-180"];
m2_36 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="return new LeanEngineAlgorithmHandlers(\r\n                composer.GetExportedValueByTypeName<IResultHandler>(resultHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ISetupHandler>(setupHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IDataFeed>(dataFeedHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ITransactionHandler>(transactionHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IRealTimeHandler>(realTimeHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IMapFileProvider>(mapFileProviderTypeName),\r\n                composer.GetExportedValueByTypeName<IFactorFileProvider>(factorFileProviderTypeName),\r\n                composer.GetExportedValueByTypeName<IDataProvider>(dataProviderTypeName)\r\n                );", span="189-198"];
m2_29 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var transactionHandlerTypeName = Config.Get(''transaction-handler'', ''BacktestingTransactionHandler'')", span="181-181"];
m2_30 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var realTimeHandlerTypeName = Config.Get(''real-time-handler'', ''BacktestingRealTimeHandler'')", span="182-182"];
m2_31 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var dataFeedHandlerTypeName = Config.Get(''data-feed-handler'', ''FileSystemDataFeed'')", span="183-183"];
m2_32 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var resultHandlerTypeName = Config.Get(''result-handler'', ''BacktestingResultHandler'')", span="184-184"];
m2_33 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var mapFileProviderTypeName = Config.Get(''map-file-provider'', ''LocalDiskMapFileProvider'')", span="185-185"];
m2_34 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var factorFileProviderTypeName = Config.Get(''factor-file-provider'', ''LocalDiskFactorFileProvider'')", span="186-186"];
m2_35 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="var dataProviderTypeName = Config.Get(''data-provider'', ''DefaultDataProvider'')", span="187-187"];
m2_37 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="178-178"];
m2_38 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m2_46 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", span=""];
m3_13 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="188-188"];
m3_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m3_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", color=green, community=0, file="BacktestingTransactionHandler.cs", label="_brokerage = brokerage", prediction=0, span="36-36"];
m3_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="BacktestingTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m3_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m3_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="BacktestingTransactionHandler.cs", label="base.ProcessSynchronousEvents()", span="44-44"];
m3_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="BacktestingTransactionHandler.cs", label="_brokerage.Scan()", span="46-46"];
m3_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m3_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m3_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="BacktestingTransactionHandler.cs", label="base.ProcessAsynchronousEvents()", span="54-54"];
m3_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="BacktestingTransactionHandler.cs", label="_brokerage.Scan()", span="56-56"];
m3_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m3_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="196-196"];
m3_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingTransactionHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="173-173"];
m3_14 [file="BacktestingTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", span=""];
m4_21 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="BaseDataFeed.cs", label="base.PostInitialize()", span="92-92"];
m4_0 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="60-60"];
m4_14 [cluster="System.Exception.Exception(string)", color=green, community=0, file="BaseDataFeed.cs", label="Entry System.Exception.Exception(string)", prediction=1, span="0-0"];
m4_12 [cluster="Unk.nameof", file="BaseDataFeed.cs", label="Entry Unk.nameof", span=""];
m4_13 [cluster="System.Type.GetMethod(string, System.Type[])", file="BaseDataFeed.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m4_15 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m4_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", prediction=1, span="83-83"];
m4_16 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="7-7"];
m4_18 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="BaseDataFeed.cs", label="CheckModels()", span="85-85"];
m4_1 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="var type = GetType()", span="62-62"];
m4_2 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="var frameworkOnData = type.GetMethod(nameof(OnFrameworkData), new[] {typeof(Slice)})", span="63-63"];
m4_3 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="frameworkOnData.DeclaringType != typeof(QCAlgorithmFramework)", span="64-64"];
m4_4 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms can not override OnFrameworkData(Slice)'');", span="66-66"];
m4_5 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="var frameworkOnSecuritiesChanged = type.GetMethod(nameof(OnFrameworkSecuritiesChanged), new[] {typeof(SecurityChanges)})", span="68-68"];
m4_6 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="frameworkOnSecuritiesChanged.DeclaringType != typeof(QCAlgorithmFramework)", span="69-69"];
m4_7 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms can not override OnFrameworkSecuritiesChanged(SecurityChanges)'');", span="71-71"];
m4_8 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="Execution = new ImmediateExecutionModel()", span="75-75"];
m4_9 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="RiskManagement = new NullRiskManagementModel()", span="76-76"];
m4_10 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="60-60"];
m4_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="BaseDataFeed.cs", label="_bridgeMax = _bridgeMax / _subscriptions", span="122-122"];
m4_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="BaseDataFeed.cs", label="PortfolioSelection.CreateUniverses(this)", span="87-87"];
m4_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Run()", file="BaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Run()", span="137-137"];
m4_68 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="PortfolioSelection == null", span="179-179"];
m4_69 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms must specify a portfolio selection model using the 'PortfolioSelection' property.'');", span="181-181"];
m4_70 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="Signal == null", span="183-183"];
m4_71 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms must specify a signal model using the 'Signal' property.'');", span="185-185"];
m4_72 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="PortfolioConstruction == null", span="187-187"];
m4_73 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms must specify a portfolio construction model using the 'PortfolioConstruction' property'');", span="189-189"];
m4_74 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="Execution == null", span="191-191"];
m4_75 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms must specify an execution model using the 'Execution' property.'');", span="193-193"];
m4_76 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="RiskManagement == null", span="195-195"];
m4_77 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="throw new Exception(''Framework algorithms must specify an risk management model using the 'RiskManagement' property.'');", span="197-197"];
m4_78 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="177-177"];
m4_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", file="BaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", span="179-179"];
m4_43 [cluster="lambda expression", file="BaseDataFeed.cs", label="signal.GeneratedTimeUtc = UtcTime", span="103-103"];
m4_40 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="31-31"];
m4_20 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="BaseDataFeed.cs", label="AddUniverse(universe)", span="89-89"];
m4_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", file="BaseDataFeed.cs", label=Bridge, span="195-195"];
m4_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", file="BaseDataFeed.cs", label="t.Clear()", span="197-197"];
m4_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", file="BaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", span="193-193"];
m4_48 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BaseDataFeed.cs", label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="127-127"];
m4_49 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BaseDataFeed.cs", label="Execution.OnSecuritiesChanged(this, changes)", span="128-128"];
m4_50 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BaseDataFeed.cs", label="RiskManagement.OnSecuritiesChanged(this, changes)", span="129-129"];
m4_51 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="124-124"];
m4_44 [cluster="lambda expression", file="BaseDataFeed.cs", label="return signal;", span="103-103"];
m4_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource, TResult>(System.Func<TSource, TResult>)", file="BaseDataFeed.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0"];
m4_45 [cluster="lambda expression", file="BaseDataFeed.cs", label="bar.Time", span="164-164"];
m4_46 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="124-124"];
m4_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="83-83"];
m4_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", file="BaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.PurgeData()", span="193-193"];
m4_59 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="154-154"];
m4_60 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="BaseDataFeed.cs", label="PortfolioConstruction = portfolioConstruction", span="156-156"];
m4_61 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="154-154"];
m4_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Run()", file="BaseDataFeed.cs", label="IsActive = false", span="171-171"];
m4_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Run()", file="BaseDataFeed.cs", label="i < Subscriptions.Count", span="141-141"];
m4_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", file="BaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", span="179-179"];
m4_41 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="BaseDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m4_24 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m4_27 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="99-99"];
m4_28 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="var signals = Signal.Update(this, slice)\r\n                .Select(signal => { signal.GeneratedTimeUtc = UtcTime; return signal; })\r\n                .ToList()", span="102-104"];
m4_29 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="signals.Count != 0", span="106-106"];
m4_31 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="var targets = PortfolioConstruction.CreateTargets(this, signals)", span="113-113"];
m4_33 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="RiskManagement.ManageRisk(this)", span="117-117"];
m4_34 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="99-99"];
m4_36 [cluster="Unk.Select", file="BaseDataFeed.cs", label="Entry Unk.Select", span=""];
m4_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m4_35 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m4_30 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="OnSignalsGenerated(signals)", span="109-109"];
m4_32 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="BaseDataFeed.cs", label="Execution.Execute(this, targets)", span="116-116"];
m4_38 [cluster="Unk.OnSignalsGenerated", file="BaseDataFeed.cs", label="Entry Unk.OnSignalsGenerated", span=""];
m4_56 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="BaseDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="63-63"];
m4_57 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="BaseDataFeed.cs", label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", span=""];
m4_58 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", span="145-145"];
m4_65 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="172-172"];
m4_66 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="BaseDataFeed.cs", label="RiskManagement = riskManagement", span="174-174"];
m4_67 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="172-172"];
m4_62 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="BaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="163-163"];
m4_63 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="BaseDataFeed.cs", label="Execution = execution", span="165-165"];
m4_64 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="BaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="163-163"];
m4_79 [file="BaseDataFeed.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m5_55 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="511-511"];
m5_38 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="466-466"];
m5_39 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="466-466"];
m5_14 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="397-397"];
m5_15 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="397-397"];
m5_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="604-604"];
m5_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="604-604"];
m5_34 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="454-454"];
m5_35 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="454-454"];
m5_60 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="543-543"];
m5_61 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="543-543"];
m5_80 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="610-610"];
m5_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="610-610"];
m5_30 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="442-442"];
m5_31 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="442-442"];
m5_40 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="471-471"];
m5_41 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="471-471"];
m5_58 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="533-533"];
m5_59 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="533-533"];
m5_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="391-391"];
m5_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="391-391"];
m5_68 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="572-572"];
m5_69 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="572-572"];
m5_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="578-578"];
m5_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="578-578"];
m5_2 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
m5_3 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
m5_90 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="640-640"];
m5_91 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="640-640"];
m5_52 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="504-504"];
m5_53 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="504-504"];
m5_20 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="415-415"];
m5_21 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="415-415"];
m5_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="583-583"];
m5_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="583-583"];
m5_48 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="493-493"];
m5_49 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="493-493"];
m5_56 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="523-523"];
m5_57 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="523-523"];
m5_86 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="628-628"];
m5_87 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="628-628"];
m5_6 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="353-353"];
m5_7 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="353-353"];
m5_76 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="595-595"];
m5_77 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="595-595"];
m5_22 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="421-421"];
m5_23 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="421-421"];
m5_26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="432-432"];
m5_27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="432-432"];
m5_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="564-564"];
m5_67 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="564-564"];
m5_4 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="347-347"];
m5_5 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="347-347"];
m5_32 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="447-447"];
m5_33 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="447-447"];
m5_24 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="427-427"];
m5_25 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="427-427"];
m5_8 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="361-361"];
m5_9 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="361-361"];
m5_44 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="482-482"];
m5_45 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="482-482"];
m5_84 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="622-622"];
m5_85 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="622-622"];
m5_10 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="385-385"];
m5_11 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="385-385"];
m5_46 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="488-488"];
m5_47 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="488-488"];
m5_18 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="409-409"];
m5_19 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="409-409"];
m5_42 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="476-476"];
m5_43 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="476-476"];
m5_28 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="437-437"];
m5_29 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="437-437"];
m5_50 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="498-498"];
m5_51 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="498-498"];
m5_62 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="550-550"];
m5_63 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="550-550"];
m5_36 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="461-461"];
m5_37 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="461-461"];
m5_74 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="589-589"];
m5_75 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="589-589"];
m5_88 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="634-634"];
m5_89 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="634-634"];
m5_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="616-616"];
m5_83 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="616-616"];
m5_16 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="403-403"];
m5_17 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="403-403"];
m5_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333"];
m5_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333"];
m5_64 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="556-556"];
m5_65 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="556-556"];
m6_23 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="182-182"];
m6_68 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="PortfolioSelection == null", span="184-184"];
m6_70 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="Signal == null", span="188-188"];
m6_72 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="PortfolioConstruction == null", span="192-192"];
m6_74 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="Execution == null", span="196-196"];
m6_76 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="RiskManagement == null", span="200-200"];
m6_69 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="throw new Exception(''Framework algorithms must specify a portfolio selection model using the 'PortfolioSelection' property.'');", span="186-186"];
m6_71 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="throw new Exception(''Framework algorithms must specify a signal model using the 'Signal' property.'');", span="190-190"];
m6_73 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="throw new Exception(''Framework algorithms must specify a portfolio construction model using the 'PortfolioConstruction' property'');", span="194-194"];
m6_75 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="throw new Exception(''Framework algorithms must specify an execution model using the 'Execution' property.'');", span="198-198"];
m6_77 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="throw new Exception(''Framework algorithms must specify an risk management model using the 'RiskManagement' property.'');", span="202-202"];
m6_78 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="182-182"];
m6_39 [cluster="Unk.CreateTargets", file="Composer.cs", label="Entry Unk.CreateTargets", span=""];
m6_16 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="7-7"];
m6_12 [cluster="Unk.nameof", file="Composer.cs", label="Entry Unk.nameof", span=""];
m6_53 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", span="141-141"];
m6_54 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="Composer.cs", label="PortfolioSelection = portfolioSelection", span="143-143"];
m6_55 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", span="141-141"];
m6_42 [cluster="lambda expression", file="Composer.cs", label="Entry lambda expression", span="108-108"];
m6_43 [cluster="lambda expression", color=green, community=0, file="Composer.cs", label="signal.GeneratedTimeUtc = UtcTime", prediction=3, span="108-108"];
m6_44 [cluster="lambda expression", color=green, community=0, file="Composer.cs", label="return signal;", prediction=4, span="108-108"];
m6_45 [cluster="lambda expression", file="Composer.cs", label="Exit lambda expression", span="108-108"];
m6_14 [cluster="System.Exception.Exception(string)", file="Composer.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_52 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29"];
m6_59 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="159-159"];
m6_60 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="Composer.cs", label="PortfolioConstruction = portfolioConstruction", span="161-161"];
m6_61 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="159-159"];
m6_37 [cluster="Unk.ToList", file="Composer.cs", label="Entry Unk.ToList", span=""];
m6_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="Composer.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="499-499"];
m6_46 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="129-129"];
m6_47 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="Signal.OnSecuritiesChanged(this, changes)", span="131-131"];
m6_48 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="132-132"];
m6_49 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="Execution.OnSecuritiesChanged(this, changes)", span="133-133"];
m6_50 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="RiskManagement.OnSecuritiesChanged(this, changes)", span="134-134"];
m6_51 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="129-129"];
m6_41 [cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="26-26"];
m6_40 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="31-31"];
m6_35 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m6_0 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="65-65"];
m6_8 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="Composer.cs", label="Execution = new ImmediateExecutionModel()", prediction=5, span="80-80"];
m6_6 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="frameworkOnSecuritiesChanged.DeclaringType != typeof(QCAlgorithmFramework)", span="74-74"];
m6_9 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="Composer.cs", label="RiskManagement = new NullRiskManagementModel()", prediction=6, span="81-81"];
m6_1 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="var type = GetType()", span="67-67"];
m6_2 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="var frameworkOnData = type.GetMethod(nameof(OnFrameworkData), new[] {typeof(Slice)})", span="68-68"];
m6_5 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="var frameworkOnSecuritiesChanged = type.GetMethod(nameof(OnFrameworkSecuritiesChanged), new[] {typeof(SecurityChanges)})", span="73-73"];
m6_7 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="throw new Exception(''Framework algorithms can not override OnFrameworkSecuritiesChanged(SecurityChanges)'');", span="76-76"];
m6_4 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="throw new Exception(''Framework algorithms can not override OnFrameworkData(Slice)'');", span="71-71"];
m6_3 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="frameworkOnData.DeclaringType != typeof(QCAlgorithmFramework)", span="69-69"];
m6_10 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="65-65"];
m6_56 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", span="150-150"];
m6_57 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="Composer.cs", label="Signal = signal", span="152-152"];
m6_58 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", span="150-150"];
m6_27 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="104-104"];
m6_28 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="Composer.cs", label="var signals = Signal.Update(this, slice)\r\n                .Select(signal => { signal.GeneratedTimeUtc = UtcTime; return signal; })\r\n                .ToList()", prediction=7, span="107-109"];
m6_29 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="Composer.cs", label="signals.Count != 0", prediction=8, span="111-111"];
m6_30 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="Composer.cs", label="OnSignalsGenerated(signals)", prediction=7, span="114-114"];
m6_31 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="Composer.cs", label="var targets = PortfolioConstruction.CreateTargets(this, signals)", prediction=10, span="118-118"];
m6_32 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", color=green, community=0, file="Composer.cs", label="Execution.Execute(this, targets)", prediction=7, span="121-121"];
m6_33 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="Composer.cs", label="RiskManagement.ManageRisk(this)", span="122-122"];
m6_34 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="104-104"];
m6_13 [cluster="System.Type.GetMethod(string, System.Type[])", file="Composer.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m6_15 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m6_65 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="177-177"];
m6_66 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="Composer.cs", label="RiskManagement = riskManagement", span="179-179"];
m6_67 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="177-177"];
m6_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="88-88"];
m6_18 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="Composer.cs", label="CheckModels()", prediction=7, span="90-90"];
m6_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="Composer.cs", label="PortfolioSelection.CreateUniverses(this)", prediction=7, span="92-92"];
m6_20 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="Composer.cs", label="AddUniverse(universe)", prediction=7, span="94-94"];
m6_21 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="Composer.cs", label="base.PostInitialize()", prediction=7, span="97-97"];
m6_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="88-88"];
m6_62 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="168-168"];
m6_63 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="Composer.cs", label="Execution = execution", span="170-170"];
m6_64 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="Composer.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="168-168"];
m6_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="Composer.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m6_38 [cluster="Unk.OnSignalsGenerated", file="Composer.cs", label="Entry Unk.OnSignalsGenerated", span=""];
m6_24 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Composer.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m6_36 [cluster="Unk.Select", file="Composer.cs", label="Entry Unk.Select", span=""];
m6_79 [file="Composer.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m7_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", span="176-176"];
m7_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="Connect()", span="179-179"];
m7_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="!_exitTriggered && IsActive && !EndOfBridges", span="181-181"];
m7_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="i < Subscriptions.Count", span="183-183"];
m7_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="var subscription = Subscriptions[i]", span="186-186"];
m7_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="Bridge[i].Count < 10000 && !EndOfBridge[i]", span="188-188"];
m7_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="var data = Query(''SELECT * FROM equity_'' + subscription.Symbol + '' WHERE time >= ''' + _mySQLBridgeTime[i].ToString(''u'') + ''' AND time <= ''' + _endTime.ToString(''u'') + ''' ORDER BY time ASC LIMIT 100'')", span="191-191"];
m7_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="EndOfBridge[i] = true", span="196-196"];
m7_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="_endOfStreams = true", span="197-197"];
m7_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="var bars = GenerateBars(subscription.Symbol, data)", span="201-201"];
m7_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="Bridge[i].Enqueue(new List<BaseData>() { bar })", span="206-206"];
m7_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="_mySQLBridgeTime[i] = bars.Max(bar => bar.Time)", span="210-210"];
m7_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="LoadedDataFrontier = _mySQLBridgeTime.Min()", span="214-214"];
m7_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="_connection.Close()", span="217-217"];
m7_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="IsActive = false", span="218-218"];
m7_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="var i = 0", span="183-183"];
m7_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="i++", span="183-183"];
m7_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="data.Count == 0", span="194-194"];
m7_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label=bars, span="204-204"];
m7_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Run()", span="176-176"];
m7_22 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="DatabaseDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m7_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", span="272-272"];
m7_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="connectionString = GetConnectionString(serverAddress, databaseName, userId, password)", span="284-284"];
m7_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="_connection = new MySqlConnection(connectionString)", span="287-287"];
m7_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="_connection.StateChange += ConnectionOnStateChange", span="288-288"];
m7_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="_connection.Open()", span="289-289"];
m7_85 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="_connection.State != ConnectionState.Open", span="292-292"];
m7_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="var serverAddress = Config.Get(''database-address'')", span="275-275"];
m7_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="var databaseName = Config.Get(''database-name'')", span="276-276"];
m7_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="var userId = Config.Get(''database-user'')", span="277-277"];
m7_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="var password = Config.Get(''database-password'')", span="278-278"];
m7_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="var connectionString = ''''", span="279-279"];
m7_88 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="Log.Error(''DatabaseDataFeed.Connect(): '' + connectionString + '' | '' + err.Message)", span="296-296"];
m7_86 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="Thread.Sleep(100)", span="292-292"];
m7_87 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label=Exception, span="294-294"];
m7_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Connect()", span="272-272"];
m7_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource>()", file="DatabaseDataFeed.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource>()", span="0-0"];
m7_48 [cluster="System.Collections.Generic.List<T>.List()", file="DatabaseDataFeed.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_53 [cluster="lambda expression", file="DatabaseDataFeed.cs", label="Entry lambda expression", span="210-210"];
m7_54 [cluster="lambda expression", file="DatabaseDataFeed.cs", label="bar.Time", span="210-210"];
m7_55 [cluster="lambda expression", file="DatabaseDataFeed.cs", label="Exit lambda expression", span="210-210"];
m7_131 [cluster="string.Substring(int, int)", file="DatabaseDataFeed.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_95 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m7_63 [cluster="System.DateTime.Parse(string)", file="DatabaseDataFeed.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m7_92 [cluster="MySqlConnection.cstr", file="DatabaseDataFeed.cs", label="Entry MySqlConnection.cstr", span=""];
m7_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="163-163"];
m7_96 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", span="303-303"];
m7_97 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", file="DatabaseDataFeed.cs", label="e.CurrentState == ConnectionState.Broken || e.CurrentState == ConnectionState.Closed", span="305-305"];
m7_98 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", file="DatabaseDataFeed.cs", label="Connect()", span="307-307"];
m7_99 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.ConnectionOnStateChange(object, StateChangeEventArgs)", span="303-303"];
m7_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", span="328-328"];
m7_103 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="!Connected", span="334-334"];
m7_104 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="Connect()", span="334-334"];
m7_105 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="var dbCommand = _connection.CreateCommand()", span="337-337"];
m7_102 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="var results = new List<Dictionary<string, string>>()", span="330-330"];
m7_106 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="dbCommand.CommandText = sql", span="338-338"];
m7_120 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="Log.Error(''DatabaseDataFeed.Query(): '' + err.Message + '' SQL Length:'' + sql.Length + '' SQL: '' + sql.Substring(0, 100))", span="367-367"];
m7_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="reader.Close()", span="358-358"];
m7_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="results.Add(row)", span="354-354"];
m7_121 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="return results;", span="369-369"];
m7_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="var reader = dbCommand.ExecuteReader()", span="341-341"];
m7_116 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="dbCommand.Dispose()", span="359-359"];
m7_119 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label=Exception, span="365-365"];
m7_108 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="reader.Read()", span="344-344"];
m7_111 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="field < reader.FieldCount", span="349-349"];
m7_109 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="var row = new Dictionary<string, string>()", span="347-347"];
m7_118 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="dbCommand = null", span="363-363"];
m7_112 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="row.Add(reader.GetName(field), reader[reader.GetName(field)].ToString())", span="351-351"];
m7_117 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="reader = null", span="362-362"];
m7_110 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="var field = 0", span="349-349"];
m7_113 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="field++", span="349-349"];
m7_122 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Query(string)", span="328-328"];
m7_123 [cluster="Unk.CreateCommand", file="DatabaseDataFeed.cs", label="Entry Unk.CreateCommand", span=""];
m7_45 [cluster="System.DateTime.ToString(string)", file="DatabaseDataFeed.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m7_128 [cluster="Unk.ToString", file="DatabaseDataFeed.cs", label="Entry Unk.ToString", span=""];
m7_129 [cluster="Unk.Add", file="DatabaseDataFeed.cs", label="Entry Unk.Add", span=""];
m7_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource, TResult>(System.Func<TSource, TResult>)", file="DatabaseDataFeed.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0"];
m7_64 [cluster="System.DateTime.AddHours(double)", file="DatabaseDataFeed.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m7_65 [cluster="decimal.Parse(string)", file="DatabaseDataFeed.cs", label="Entry decimal.Parse(string)", span="0-0"];
m7_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="DataFeed = DataFeedEndpoint.FileSystem", span="147-147"];
m7_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="Bridge = new ConcurrentQueue<List<BaseData>>[_subscriptions]", span="148-148"];
m7_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="SubscriptionReaderManagers = new SubscriptionDataReader[_subscriptions]", span="150-150"];
m7_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="RealtimePrices = new List<decimal>(_subscriptions)", span="151-151"];
m7_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="_bridgeMax = _bridgeMax / _subscriptions", span="156-156"];
m7_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="EndOfBridge = new bool[_subscriptions]", span="149-149"];
m7_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="_mySQLBridgeTime = new DateTime[_subscriptions]", span="152-152"];
m7_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="_endOfStreams = false", span="155-155"];
m7_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="DatabaseDataFeed.cs", label="_endTime = algorithm.EndDate", prediction=16, span="157-157"];
m7_130 [cluster="Unk.Dispose", file="DatabaseDataFeed.cs", label="Entry Unk.Dispose", span=""];
m7_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", span="227-227"];
m7_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="var bars = new List<TradeBar>()", span="229-229"];
m7_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label=data, span="230-230"];
m7_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="var bar = new TradeBar()\r\n                {\r\n                    Time = DateTime.Parse(dictionary[''time'']).AddHours(15.9), //Closing time roughly 4pm\r\n                    DataType = MarketDataType.TradeBar,\r\n                    Open = decimal.Parse(dictionary[''open'']),\r\n                    High = decimal.Parse(dictionary[''high'']),\r\n                    Low = decimal.Parse(dictionary[''low'']),\r\n                    Close = decimal.Parse(dictionary[''close'']),\r\n                    Symbol = symbol,\r\n                    Value = decimal.Parse(dictionary[''close'']),\r\n                    Volume = 0\r\n                }", span="232-243"];
m7_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="return bars;", span="246-246"];
m7_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="bars.Add(bar)", span="244-244"];
m7_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GenerateBars(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>)", span="227-227"];
m7_52 [cluster="Unk.Close", file="DatabaseDataFeed.cs", label="Entry Unk.Close", span=""];
m7_94 [cluster="System.Threading.Thread.Sleep(int)", file="DatabaseDataFeed.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_125 [cluster="Unk.Read", file="DatabaseDataFeed.cs", label="Entry Unk.Read", span=""];
m7_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", span="252-252"];
m7_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", file="DatabaseDataFeed.cs", label="_exitTriggered = true", span="254-254"];
m7_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", file="DatabaseDataFeed.cs", label="PurgeData()", span="255-255"];
m7_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Exit()", span="252-252"];
m7_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GetConnectionString(string, string, string, string)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GetConnectionString(string, string, string, string)", span="315-315"];
m7_100 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GetConnectionString(string, string, string, string)", file="DatabaseDataFeed.cs", label="return ''Server='' + serverAddress + '';'' +\r\n                    ''Database='' + databaseName + '';'' +\r\n                    ''User ID='' + userId + '';'' +\r\n                    ''Password='' + password + '';'' +\r\n                    ''Pooling=false'';", span="317-321"];
m7_101 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GetConnectionString(string, string, string, string)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.GetConnectionString(string, string, string, string)", span="315-315"];
m7_126 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DatabaseDataFeed.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_49 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="DatabaseDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m7_66 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DatabaseDataFeed.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_124 [cluster="Unk.ExecuteReader", file="DatabaseDataFeed.cs", label="Entry Unk.ExecuteReader", span=""];
m7_127 [cluster="Unk.GetName", file="DatabaseDataFeed.cs", label="Entry Unk.GetName", span=""];
m7_93 [cluster="Unk.Open", file="DatabaseDataFeed.cs", label="Entry Unk.Open", span=""];
m7_62 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="87-87"];
m7_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40"];
m7_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget", span=""];
m7_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="DatabaseDataFeed.cs", label="_mySQLBridgeTime[i] = algorithm.StartDate", prediction=17, span="162-162"];
m7_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="i < _subscriptions", span="160-160"];
m7_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="EndOfBridge[i] = false", span="163-163"];
m7_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="DatabaseDataFeed.cs", label="SubscriptionReaderManagers[i] = new SubscriptionDataReader(Subscriptions[i], algorithm.Securities[Subscriptions[i].Symbol], DataFeedEndpoint.Database, algorithm.StartDate, algorithm.EndDate)", prediction=18, span="165-165"];
m7_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="Bridge[i] = new ConcurrentQueue<List<BaseData>>()", span="164-164"];
m7_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="i++", span="160-160"];
m7_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="DatabaseDataFeed.cs", label="Symbol = symbol", span="42-42"];
m7_2 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="DatabaseDataFeed.cs", label="Quantity = quantity", span="43-43"];
m7_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40"];
m7_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="139-139"];
m7_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", span="261-261"];
m7_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", file="DatabaseDataFeed.cs", label=Bridge, span="263-263"];
m7_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", file="DatabaseDataFeed.cs", label="t.Clear()", span="265-265"];
m7_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.PurgeData()", span="261-261"];
m7_90 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="65-65"];
m7_75 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="DatabaseDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="63-63"];
m7_132 [file="DatabaseDataFeed.cs", label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", span=""];
m8_43 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="Engine.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m8_38 [cluster="Unk.Where", file="Engine.cs", label="Entry Unk.Where", span=""];
m8_63 [cluster="Unk.IsAssignableFrom", file="Engine.cs", label="Entry Unk.IsAssignableFrom", span=""];
m8_8 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m8_9 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="var dataType = typeof(TradeBar)", span="94-94"];
m8_10 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="resolution == Resolution.Tick", span="95-95"];
m8_12 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="var tickType = LeanData.GetCommonTickTypeForCommonDataTypes(dataType, symbol.SecurityType)", span="99-99"];
m8_13 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="return Add(dataType, tickType, symbol, resolution, timeZone, exchangeTimeZone, isCustomData, fillDataForward, extendedMarketHours);", span="100-100"];
m8_11 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="dataType = typeof(Tick)", span="97-97"];
m8_14 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m8_77 [cluster="System.Collections.Generic.List<T>.List()", file="Engine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_90 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="Engine.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="252-252"];
m8_15 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="Engine.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="681-681"];
m8_47 [cluster="QuantConnect.Symbol.IsCanonical()", file="Engine.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m8_37 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="Engine.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m8_87 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="237-237"];
m8_44 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="144-144"];
m8_48 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="145-145"];
m8_45 [cluster="lambda expression", file="Engine.cs", label="!x.Symbol.IsCanonical()", span="144-144"];
m8_46 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="144-144"];
m8_49 [cluster="lambda expression", file="Engine.cs", label="x.Symbol.Value", span="145-145"];
m8_50 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="145-145"];
m8_69 [cluster="lambda expression", file="Engine.cs", label="x.Symbol == symbol", span="172-172"];
m8_68 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="172-172"];
m8_71 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="194-194"];
m8_70 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="172-172"];
m8_72 [cluster="lambda expression", file="Engine.cs", label="x.Type.Name", span="194-194"];
m8_73 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="194-194"];
m8_88 [cluster="lambda expression", file="Engine.cs", label="new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)", span="237-237"];
m8_89 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="237-237"];
m8_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m8_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="Engine.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m8_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m8_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="dataTimeZone == null", span="121-121"];
m8_19 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="exchangeTimeZone == null", span="125-125"];
m8_21 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="var newConfig = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, fillDataForward, extendedMarketHours, isInternalFeed, isCustomData, isFilteredSubscription: isFilteredSubscription, tickType: tickType)", span="131-131"];
m8_29 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="_timeKeeper.AddTimeZone(exchangeTimeZone)", span="156-156"];
m8_30 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="HasCustomData = HasCustomData || isCustomData", span="159-159"];
m8_18 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="throw new ArgumentNullException(''dataTimeZone'', ''DataTimeZone is a required parameter for new subscriptions.  Set to the time zone the raw data is time stamped in.'');", span="123-123"];
m8_20 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="throw new ArgumentNullException(''exchangeTimeZone'', ''ExchangeTimeZone is a required parameter for new subscriptions.  Set to the time zone the security exchange resides in.'');", span="127-127"];
m8_22 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="Subscriptions.Contains(newConfig)", span="134-134"];
m8_23 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="Log.Trace(''SubscriptionManager.Add(): subscription already added: '' + newConfig)", span="136-136"];
m8_24 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="return newConfig;", span="137-137"];
m8_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m8_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="return newConfig;", span="161-161"];
m8_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m8_27 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="uniqueCount > _algorithmSettings.DataSubscriptionLimit", span="147-147"];
m8_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m8_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m8_39 [cluster="Unk.DistinctBy", file="Engine.cs", label="Entry Unk.DistinctBy", span=""];
m8_78 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m8_79 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="Engine.cs", label="return AvailableDataTypes[securityType];", span="220-220"];
m8_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m8_61 [cluster="Unk.ToList", file="Engine.cs", label="Entry Unk.ToList", span=""];
m8_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m8_74 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="Engine.cs", label="return new Dictionary<SecurityType, List<TickType>>()\r\n            {\r\n                {SecurityType.Base, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Forex, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Equity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Option, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Cfd, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Future, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Commodity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Crypto, new List<TickType>() { TickType.Quote } }\r\n            };", span="202-212"];
m8_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m8_62 [cluster="System.ArgumentException.ArgumentException(string)", file="Engine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Engine.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m8_64 [cluster="Unk.Add", file="Engine.cs", label="Entry Unk.Add", span=""];
m8_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="Engine.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="234-234"];
m8_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m8_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="Engine.cs", label=isCanonical, span="232-232"];
m8_84 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="Engine.cs", label="return AvailableDataTypes[symbolSecurityType].Select(tickType => new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)).ToList();", span="237-237"];
m8_85 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m8_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m8_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m8_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m8_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m8_4 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="AvailableDataTypes = DefaultDataTypes()", span="65-65"];
m8_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m8_42 [cluster="string.Format(string, object)", file="Engine.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_51 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m8_52 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="var subscriptions = Subscriptions.Where(x => x.Symbol == symbol).ToList()", span="172-172"];
m8_54 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="throw new ArgumentException(''Please subscribe to this symbol before adding a consolidator for it. Symbol: '' + symbol.Value);", span="177-177"];
m8_56 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="consolidator.InputType.IsAssignableFrom(subscription.Type)", span="183-183"];
m8_57 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="subscription.Consolidators.Add(consolidator)", span="185-185"];
m8_59 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                ''Symbol: {0} does not support input type: {1}. Supported types: {2}.'',\r\n                symbol.Value, \r\n                consolidator.InputType.Name,\r\n                string.Join('','', subscriptions.Select(x => x.Type.Name))));", span="190-194"];
m8_53 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="subscriptions.Count == 0", span="174-174"];
m8_55 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label=subscriptions, span="180-180"];
m8_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="return;", span="186-186"];
m8_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Engine.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m8_66 [cluster="Unk.Join", file="Engine.cs", label="Entry Unk.Join", span=""];
m8_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_67 [cluster="string.Format(string, object, object, object)", file="Engine.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m8_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m8_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="Engine.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m8_65 [cluster="Unk.Select", file="Engine.cs", label="Entry Unk.Select", span=""];
m8_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Engine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="Engine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m8_91 [file="Engine.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m8_92 [file="Engine.cs", label="QuantConnect.Symbol", span=""];
m8_93 [file="Engine.cs", label="QuantConnect.Resolution", span=""];
m9_408 [cluster="QuantConnect.Holding.Holding()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Holding.Holding()", span="75-75"];
m9_120 [cluster="IB.ExecutionFilter.cstr", file="FileSystemDataFeed.cs", label="Entry IB.ExecutionFilter.cstr", span=""];
m9_121 [cluster="Unk.Connect", file="FileSystemDataFeed.cs", label="Entry Unk.Connect", span=""];
m9_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="404-404"];
m9_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="FileSystemDataFeed.cs", label="_client != null", span="406-406"];
m9_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="FileSystemDataFeed.cs", label="_client.Disconnect()", span="408-408"];
m9_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="FileSystemDataFeed.cs", label="_client.Dispose()", span="409-409"];
m9_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="404-404"];
m9_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="623-623"];
m9_279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="var orderType = ConvertOrderType(ibOrder.OrderType)", span="632-632"];
m9_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order.SecurityType = ConvertSecurityType(contract.SecurityType)", span="667-667"];
m9_278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="var mappedSymbol = MapSymbol(contract)", span="631-631"];
m9_280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label=orderType, span="633-633"];
m9_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="664-664"];
m9_282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="636-639"];
m9_284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="642-646"];
m9_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        new DateTime()\r\n                        )", span="649-653"];
m9_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="656-661"];
m9_291 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="order.BrokerId.Add(ibOrder.OrderId)", span="668-668"];
m9_277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="Order order", span="630-630"];
m9_281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="OrderType.Market", span="635-635"];
m9_283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="OrderType.Limit", span="641-641"];
m9_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="OrderType.StopMarket", span="648-648"];
m9_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="OrderType.StopLimit", span="655-655"];
m9_292 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="return order;", span="670-670"];
m9_293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="623-623"];
m9_435 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m9_93 [cluster="Unk.ToList", file="FileSystemDataFeed.cs", label="Entry Unk.ToList", span=""];
m9_161 [cluster="Unk.Disconnect", file="FileSystemDataFeed.cs", label="Entry Unk.Disconnect", span=""];
m9_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="115-115"];
m9_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", color=green, community=0, file="FileSystemDataFeed.cs", label="_client.AccountDownloadEnd += (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.AccounDownloadEnd(): Finished account download for '' + args.AccountName);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", prediction=19, span="131-135"];
m9_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client.Error += HandleError", span="130-130"];
m9_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidID == 0)\r\n                {\r\n                    _nextValidID = e.OrderId;\r\n                    _waitForNextValidID.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="138-147"];
m9_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_orderMapping = orderMapping", span="118-118"];
m9_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_account = account", span="119-119"];
m9_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_host = host", span="120-120"];
m9_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_port = port", span="121-121"];
m9_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_clientID = IncrementClientID()", span="122-122"];
m9_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_agentDescription = agentDescription", span="123-123"];
m9_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client = new IB.IBClient()", span="124-124"];
m9_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="127-127"];
m9_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="128-128"];
m9_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="129-129"];
m9_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="115-115"];
m9_184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="879-879"];
m9_414 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="FileSystemDataFeed.cs", label="_nextValidID == 0", span="883-883"];
m9_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="FileSystemDataFeed.cs", label="return Interlocked.Increment(ref _nextValidID);", span="885-885"];
m9_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="FileSystemDataFeed.cs", label="Thread.Yield()", span="883-883"];
m9_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="879-879"];
m9_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m9_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="711-711"];
m9_324 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label=type, span="713-713"];
m9_331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="719-719"];
m9_326 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="return IB.OrderType.Market;", span="715-715"];
m9_328 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="return IB.OrderType.Limit;", span="716-716"];
m9_330 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="return IB.OrderType.Stop;", span="717-717"];
m9_325 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="OrderType.Market", span="715-715"];
m9_327 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="OrderType.Limit", span="716-716"];
m9_329 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="OrderType.StopMarket", span="717-717"];
m9_332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="711-711"];
m9_409 [cluster="Unk.MapSymbol", file="FileSystemDataFeed.cs", label="Entry Unk.MapSymbol", span=""];
m9_97 [cluster="QuantConnect.Holding.Clone()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Holding.Clone()", span="100-100"];
m9_204 [cluster="Unk.Format", file="FileSystemDataFeed.cs", label="Entry Unk.Format", span=""];
m9_84 [cluster="Unk.ConvertOrder", file="FileSystemDataFeed.cs", label="Entry Unk.ConvertOrder", span=""];
m9_299 [cluster="StopMarketOrder.cstr", file="FileSystemDataFeed.cs", label="Entry StopMarketOrder.cstr", span=""];
m9_220 [cluster="Unk.Parse", file="FileSystemDataFeed.cs", label="Entry Unk.Parse", span=""];
m9_98 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="280-280"];
m9_99 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="FileSystemDataFeed.cs", label="return new Dictionary<string, decimal>(_cashBalances);", span="282-282"];
m9_100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="280-280"];
m9_272 [cluster="IB.Order.cstr", file="FileSystemDataFeed.cs", label="Entry IB.Order.cstr", span=""];
m9_79 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="FileSystemDataFeed.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m9_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="512-512"];
m9_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="var status = ConvertOrderStatus(update.Status)", span="522-522"];
m9_233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="var order = _orderMapping.GetOrderByBrokerageId(update.OrderId)", span="538-538"];
m9_241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="_recentOrderEvents.Add(orderEvent.ToString())", span="560-560"];
m9_242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="OnOrderEvent(orderEvent)", span="562-562"];
m9_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="update.Status == IB.OrderStatus.PreSubmitted\r\n                 || update.Status == IB.OrderStatus.PendingSubmit", span="516-517"];
m9_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="status != OrderStatus.PartiallyFilled &&\r\n                    status != OrderStatus.Filled &&\r\n                    status != OrderStatus.Canceled &&\r\n                    status != OrderStatus.Submitted &&\r\n                    status != OrderStatus.Invalid", span="523-527"];
m9_229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Status: '' + status)", span="529-529"];
m9_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="status == OrderStatus.Invalid", span="533-533"];
m9_238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="var orderEvent = new OrderEvent(order, ''Interactive Brokers Fill Event'')\r\n                {\r\n                    Status = status,\r\n                    FillPrice = update.AverageFillPrice,\r\n                    FillQuantity = fillQuantity\r\n                }", span="547-552"];
m9_232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ERROR -- '' + update.OrderId)", span="535-535"];
m9_234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="order == null", span="539-539"];
m9_237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? update.Filled : -update.Filled", span="546-546"];
m9_239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="update.Remaining != 0", span="553-553"];
m9_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="orderEvent.Message += '' - '' + update.Remaining + '' remaining''", span="555-555"];
m9_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label=InvalidOperationException, span="565-565"];
m9_245 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label=Exception, span="569-569"];
m9_235 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="541-541"];
m9_244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to resolve executions for BrokerageID: '' + update.OrderId + '' - '' + err.Message)", span="567-567"];
m9_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="return;", span="519-519"];
m9_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="return;", span="530-530"];
m9_246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err.Message)", span="571-571"];
m9_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="return;", span="542-542"];
m9_247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="512-512"];
m9_333 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="726-726"];
m9_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="734-734"];
m9_334 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label=type, span="728-728"];
m9_335 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="IB.OrderType.Market", span="730-730"];
m9_337 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="IB.OrderType.Limit", span="731-731"];
m9_339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="IB.OrderType.Stop", span="732-732"];
m9_336 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="return OrderType.Market;", span="730-730"];
m9_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="return OrderType.Limit;", span="731-731"];
m9_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="return OrderType.StopMarket;", span="732-732"];
m9_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="726-726"];
m9_295 [cluster="Unk.ConvertOrderType", file="FileSystemDataFeed.cs", label="Entry Unk.ConvertOrderType", span=""];
m9_274 [cluster="System.Math.Abs(int)", file="FileSystemDataFeed.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m9_248 [cluster="Unk.ConvertOrderStatus", file="FileSystemDataFeed.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m9_208 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="103-103"];
m9_251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="938-938"];
m9_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="_hash.Add(item)", span="940-940"];
m9_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="_queue.Enqueue(item)", span="942-942"];
m9_433 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="return false;", span="949-949"];
m9_432 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="return true;", span="947-947"];
m9_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="_queue.Count > _size", span="943-943"];
m9_431 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="_queue.Dequeue()", span="945-945"];
m9_434 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="938-938"];
m9_76 [cluster="System.Collections.Generic.List<T>.List()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="487-487"];
m9_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="_accountProperties[e.Key] = e.Value", span="493-493"];
m9_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="499-499"];
m9_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="500-500"];
m9_213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="496-496"];
m9_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="var cashBalance = decimal.Parse(e.Value)", span="498-498"];
m9_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label=Exception, span="503-503"];
m9_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err.Message)", span="505-505"];
m9_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="487-487"];
m9_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="891-891"];
m9_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="FileSystemDataFeed.cs", label="return Interlocked.Increment(ref _nextClientID);", span="893-893"];
m9_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="891-891"];
m9_188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="590-590"];
m9_263 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="var ibOrder = new IB.Order\r\n            {\r\n                ClientId = _clientID,\r\n                OrderId = ibOrderID,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="592-603"];
m9_264 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="var limitOrder = order as LimitOrder", span="605-605"];
m9_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="ibOrder.LimitPrice = limitOrder.LimitPrice", span="609-609"];
m9_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="ibOrder.AuxPrice = stopMarketOrder.StopPrice", span="613-613"];
m9_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="return ibOrder;", span="620-620"];
m9_265 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="var stopMarketOrder = order as StopMarketOrder", span="606-606"];
m9_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="limitOrder != null", span="607-607"];
m9_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="stopMarketOrder != null", span="611-611"];
m9_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="590-590"];
m9_86 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="243-247"];
m9_22 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.AccounDownloadEnd(): Finished account download for '' + args.AccountName)", span="133-133"];
m9_23 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="_accountHoldingsResetEvent.Set()", span="134-134"];
m9_28 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="_nextValidID == 0", span="141-141"];
m9_29 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="_nextValidID = e.OrderId", span="143-143"];
m9_30 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="_waitForNextValidID.Set()", span="144-144"];
m9_82 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="241-241"];
m9_31 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId)", span="146-146"];
m9_21 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="131-135"];
m9_24 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="131-135"];
m9_27 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="138-147"];
m9_81 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="238-242"];
m9_83 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="238-242"];
m9_94 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="273-273"];
m9_125 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="args.RequestId == requestID", span="314-314"];
m9_129 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="args.RequestId == requestID", span="318-318"];
m9_32 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="138-147"];
m9_87 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="manualResetEvent.Set()", span="246-246"];
m9_126 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="manualResetEvent.Set()", span="314-314"];
m9_96 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="273-273"];
m9_95 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="x.Value.Clone()", span="273-273"];
m9_130 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="details.Add(args)", span="318-318"];
m9_124 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="312-315"];
m9_127 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="312-315"];
m9_128 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Entry lambda expression", span="316-319"];
m9_131 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="316-319"];
m9_88 [cluster="lambda expression", file="FileSystemDataFeed.cs", label="Exit lambda expression", span="243-247"];
m9_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="184-184"];
m9_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="IBPlaceOrder(order, false)", span="190-190"];
m9_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="188-188"];
m9_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label=Exception, span="192-192"];
m9_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return true;", span="197-197"];
m9_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err.Message)", span="194-194"];
m9_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return false;", span="195-195"];
m9_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="184-184"];
m9_207 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="107-107"];
m9_343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="741-741"];
m9_362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="768-768"];
m9_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''status'', (int)status, typeof(IB.OrderStatus));", span="776-776"];
m9_361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.Inactive", span="767-767"];
m9_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.None;", span="769-769"];
m9_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label=status, span="743-743"];
m9_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.ApiPending", span="745-745"];
m9_349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.ApiCancelled", span="750-750"];
m9_353 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.Submitted", span="755-755"];
m9_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.Filled", span="758-758"];
m9_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.PartiallyFilled", span="761-761"];
m9_359 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.Error", span="764-764"];
m9_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.None", span="771-771"];
m9_348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.New;", span="748-748"];
m9_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.Canceled;", span="753-753"];
m9_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.Submitted;", span="756-756"];
m9_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.Filled;", span="759-759"];
m9_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.PartiallyFilled;", span="762-762"];
m9_360 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.Invalid;", span="765-765"];
m9_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="return OrderStatus.None;", span="772-772"];
m9_346 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.PendingSubmit", span="746-746"];
m9_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.PendingCancel", span="751-751"];
m9_347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.PreSubmitted", span="747-747"];
m9_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="IB.OrderStatus.Canceled", span="752-752"];
m9_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="741-741"];
m9_77 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="FileSystemDataFeed.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m9_209 [cluster="BrokerageMessageEvent.cstr", file="FileSystemDataFeed.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m9_294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="865-865"];
m9_410 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="contract.SecurityType == IB.SecurityType.Cash", span="867-867"];
m9_411 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="return contract.Symbol + contract.Currency;", span="870-870"];
m9_412 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="return contract.Symbol;", span="872-872"];
m9_413 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="865-865"];
m9_205 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m9_85 [cluster="Unk.Add", file="FileSystemDataFeed.cs", label="Entry Unk.Add", span=""];
m9_296 [cluster="MarketOrder.cstr", file="FileSystemDataFeed.cs", label="Entry MarketOrder.cstr", span=""];
m9_156 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="394-394"];
m9_157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="FileSystemDataFeed.cs", label="!IsConnected", span="396-396"];
m9_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="FileSystemDataFeed.cs", label="_client.Disconnect()", span="398-398"];
m9_158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="FileSystemDataFeed.cs", label="return;", span="396-396"];
m9_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="394-394"];
m9_167 [cluster="Unk.Dispose", file="FileSystemDataFeed.cs", label="Entry Unk.Dispose", span=""];
m9_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", span="97-97"];
m9_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping, string)", span="97-97"];
m9_222 [cluster="AccountEvent.cstr", file="FileSystemDataFeed.cs", label="Entry AccountEvent.cstr", span=""];
m9_223 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="141-141"];
m9_122 [cluster="System.Threading.Interlocked.Increment(ref int)", file="FileSystemDataFeed.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m9_300 [cluster="StopLimitOrder.cstr", file="FileSystemDataFeed.cs", label="Entry StopLimitOrder.cstr", span=""];
m9_41 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m9_297 [cluster="System.DateTime.DateTime()", file="FileSystemDataFeed.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m9_92 [cluster="Unk.Select", file="FileSystemDataFeed.cs", label="Entry Unk.Select", span=""];
m9_153 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m9_80 [cluster="System.TimeoutException.TimeoutException(string)", file="FileSystemDataFeed.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m9_26 [cluster="System.Threading.EventWaitHandle.Set()", file="FileSystemDataFeed.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m9_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="928-928"];
m9_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="FileSystemDataFeed.cs", label="_size = size", span="930-930"];
m9_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="FileSystemDataFeed.cs", label="_queue = new Queue<T>(size)", span="931-931"];
m9_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="FileSystemDataFeed.cs", label="_hash = new HashSet<T>()", span="932-932"];
m9_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="928-928"];
m9_418 [cluster="System.Threading.Thread.Yield()", file="FileSystemDataFeed.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m9_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="271-271"];
m9_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="FileSystemDataFeed.cs", label="return _accountHoldings.Select(x => x.Value.Clone()).ToList();", span="273-273"];
m9_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="271-271"];
m9_249 [cluster="Unk.Error", file="FileSystemDataFeed.cs", label="Entry Unk.Error", span=""];
m9_25 [cluster="Unk.Trace", file="FileSystemDataFeed.cs", label="Entry Unk.Trace", span=""];
m9_301 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="FileSystemDataFeed.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m9_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="783-783"];
m9_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label=type, span="785-785"];
m9_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="806-806"];
m9_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="return IB.SecurityType.Stock;", span="788-788"];
m9_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="return IB.SecurityType.Option;", span="791-791"];
m9_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="return IB.SecurityType.Commodity;", span="794-794"];
m9_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="return IB.SecurityType.Cash;", span="797-797"];
m9_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="return IB.SecurityType.Future;", span="800-800"];
m9_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="803-803"];
m9_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Equity", span="787-787"];
m9_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Option", span="790-790"];
m9_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Commodity", span="793-793"];
m9_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Forex", span="796-796"];
m9_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Future", span="799-799"];
m9_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="SecurityType.Base", span="802-802"];
m9_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="783-783"];
m9_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="205-205"];
m9_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="_client.CancelOrder((int) id)", span="214-214"];
m9_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="order.BrokerId", span="212-212"];
m9_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="209-209"];
m9_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label=Exception, span="219-219"];
m9_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return true;", span="224-224"];
m9_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err.Message)", span="221-221"];
m9_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return false;", span="222-222"];
m9_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="205-205"];
m9_206 [cluster="Unk.GetOrderByBrokerageId", file="FileSystemDataFeed.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m9_259 [cluster="System.Threading.EventWaitHandle.Reset()", file="FileSystemDataFeed.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m9_427 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m9_437 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m9_221 [cluster="Unk.AddOrUpdate", file="FileSystemDataFeed.cs", label="Entry Unk.AddOrUpdate", span=""];
m9_426 [cluster="System.Collections.Generic.Queue<T>.Queue(int)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(int)", span="0-0"];
m9_186 [cluster="System.ArgumentException.ArgumentException(string)", file="FileSystemDataFeed.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m9_210 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="160-160"];
m9_314 [cluster="string.Substring(int)", file="FileSystemDataFeed.cs", label="Entry string.Substring(int)", span="0-0"];
m9_78 [cluster="Unk.RequestOpenOrders", file="FileSystemDataFeed.cs", label="Entry Unk.RequestOpenOrders", span=""];
m9_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="419-419"];
m9_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="Connect()", span="422-422"];
m9_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="!IsConnected", span="424-424"];
m9_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="int id = GetNextBrokerageOrderID()", span="433-433"];
m9_179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="var contract = CreateContract(order, exchange)", span="447-447"];
m9_180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="var ibOrder = ConvertOrder(order, ibOrderID)", span="448-448"];
m9_181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="_client.PlaceOrder(ibOrder.OrderId, contract, ibOrder)", span="450-450"];
m9_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="426-426"];
m9_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="int ibOrderID = 0", span="429-429"];
m9_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label=needsNewID, span="430-430"];
m9_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="order.BrokerId.Add(id)", span="434-434"];
m9_175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="ibOrderID = id", span="435-435"];
m9_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="ibOrderID = (int)order.BrokerId[0]", span="440-440"];
m9_176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="order.BrokerId.Any()", span="437-437"];
m9_178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="444-444"];
m9_182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="419-419"];
m9_436 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m9_252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="578-578"];
m9_254 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="_accountHoldingsResetEvent.Reset()", span="581-581"];
m9_255 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="var holding = CreateHolding(e)", span="582-582"];
m9_256 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="_accountHoldings[holding.Symbol] = holding", span="583-583"];
m9_257 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="OnPortfolioChanged(new SecurityEvent(holding.Symbol, e.Position, e.AverageCost))", span="584-584"];
m9_253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandlePortfolioUpdates(): Resetting account holdings reset event.'')", span="580-580"];
m9_258 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="578-578"];
m9_101 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m9_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="231-231"];
m9_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="238-242"];
m9_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="_client.OpenOrder += clientOnOpenOrder", span="249-249"];
m9_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="250-250"];
m9_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="_client.RequestOpenOrders()", span="252-252"];
m9_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="261-261"];
m9_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="_client.OpenOrderEnd -= clientOnOpenOrderEnd", span="262-262"];
m9_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="var orders = new List<Order>()", span="233-233"];
m9_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="235-235"];
m9_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="EventHandler<EventArgs> clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="243-247"];
m9_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="!manualResetEvent.WaitOne(5000)", span="255-255"];
m9_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="return orders;", span="264-264"];
m9_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 1 second.'');", span="257-257"];
m9_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="231-231"];
m9_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="163-163"];
m9_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="IBPlaceOrder(order, true)", span="169-169"];
m9_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="167-167"];
m9_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return true;", span="170-170"];
m9_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="return false;", span="175-175"];
m9_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err.Message)", span="174-174"];
m9_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label=Exception, span="172-172"];
m9_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="163-163"];
m9_102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="289-289"];
m9_103 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="var filter = new IB.ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientID,\r\n                Exchange = exchange,\r\n                SecurityType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = DateTime.MinValue,\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="291-300"];
m9_106 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.Connect(_host, _port, IncrementClientID())", span="305-305"];
m9_108 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="int requestID = Interlocked.Increment(ref _nextRequestID)", span="309-309"];
m9_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 1 second.'');", span="329-329"];
m9_104 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="var details = new List<IB.ExecDetailsEventArgs>()", span="302-302"];
m9_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.RequestExecutions(requestID, filter)", span="325-325"];
m9_105 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="var client = new IB.IBClient()", span="303-303"];
m9_107 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="307-307"];
m9_109 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="EventHandler<IB.ExecutionDataEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) manualResetEvent.Set();\r\n                }", span="312-315"];
m9_110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="EventHandler<IB.ExecDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) details.Add(args);\r\n                }", span="316-319"];
m9_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="!manualResetEvent.WaitOne(5000)", span="327-327"];
m9_118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="return details;", span="337-337"];
m9_112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.ExecutionDataEnd += clientOnExecutionDataEnd", span="322-322"];
m9_111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.ExecDetails += clientOnExecDetails", span="321-321"];
m9_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.ExecutionDataEnd -= clientOnExecutionDataEnd", span="334-334"];
m9_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="client.ExecDetails -= clientOnExecDetails", span="333-333"];
m9_119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="289-289"];
m9_155 [cluster="Unk.RequestAccountUpdates", file="FileSystemDataFeed.cs", label="Entry Unk.RequestAccountUpdates", span=""];
m9_189 [cluster="Unk.PlaceOrder", file="FileSystemDataFeed.cs", label="Entry Unk.PlaceOrder", span=""];
m9_187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", span="679-679"];
m9_303 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="var securityType = ConvertSecurityType(order.SecurityType)", span="681-681"];
m9_304 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="var contract = new IB.Contract(order.Symbol, exchange ?? ''Smart'', securityType, ''USD'')", span="682-682"];
m9_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="order.SecurityType == SecurityType.Forex", span="683-683"];
m9_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="contract.Symbol = order.Symbol.Substring(0, 3)", span="687-687"];
m9_308 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="contract.Currency = order.Symbol.Substring(3)", span="688-688"];
m9_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="contract.Exchange = ''IDEALPRO''", span="686-686"];
m9_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="return contract;", span="690-690"];
m9_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Orders.Order, string)", span="679-679"];
m9_313 [cluster="string.Substring(int, int)", file="FileSystemDataFeed.cs", label="Entry string.Substring(int, int)", span="0-0"];
m9_260 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="850-850"];
m9_406 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="return new Holding\r\n            {\r\n                Symbol = MapSymbol(e.Contract),\r\n                Type = ConvertSecurityType(e.Contract.SecurityType),\r\n                Quantity = e.Position,\r\n                AveragePrice = e.AverageCost,\r\n                MarketPrice = e.MarketPrice\r\n            };", span="852-859"];
m9_407 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="850-850"];
m9_43 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m9_298 [cluster="LimitOrder.cstr", file="FileSystemDataFeed.cs", label="Entry LimitOrder.cstr", span=""];
m9_261 [cluster="SecurityEvent.cstr", file="FileSystemDataFeed.cs", label="Entry SecurityEvent.cstr", span=""];
m9_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="696-696"];
m9_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label=direction, span="698-698"];
m9_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="704-704"];
m9_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="return IB.ActionSide.Buy;", span="700-700"];
m9_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="return IB.ActionSide.Sell;", span="701-701"];
m9_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="return IB.ActionSide.Undefined;", span="702-702"];
m9_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="OrderDirection.Buy", span="700-700"];
m9_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="OrderDirection.Sell", span="701-701"];
m9_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="OrderDirection.Hold", span="702-702"];
m9_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="696-696"];
m9_133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="343-343"];
m9_134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label=IsConnected, span="345-345"];
m9_136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="_accountHoldings.Clear()", span="348-348"];
m9_137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="_accountProperties.Clear()", span="349-349"];
m9_141 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="_client.Connect(_host, _port, _clientID)", span="359-359"];
m9_147 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="!_waitForNextValidID.WaitOne(5000)", span="378-378"];
m9_149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="_client.RequestAccountUpdates(true, _account)", span="384-384"];
m9_150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="!_accountHoldingsResetEvent.WaitOne(5000)", span="385-385"];
m9_135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="return;", span="345-345"];
m9_138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="int attempt = 1", span="351-351"];
m9_140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ('' + attempt + ''/10) ...'')", span="356-356"];
m9_139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label=true, span="352-352"];
m9_148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 1 second.'');", span="380-380"];
m9_151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetAccountHoldings(): Operation took longer than 5 seconds.'');", span="387-387"];
m9_145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="Log.Error(''InteractiveBrokersBrokerage.Connect(): '' + err.Message)", span="372-372"];
m9_146 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="throw;", span="373-373"];
m9_143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="attempt++ < 10", span="365-365"];
m9_144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="Thread.Sleep(5000)", span="367-367"];
m9_142 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label=Exception, span="362-362"];
m9_152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="343-343"];
m9_262 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", span="122-122"];
m9_190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="456-456"];
m9_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="var order = _orderMapping.GetOrderByBrokerageId(e.TickerId)", span="476-476"];
m9_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="OnOrderEvent(orderEvent)", span="478-478"];
m9_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, (int) e.ErrorCode, e.ErrorMsg))", span="481-481"];
m9_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="473-473"];
m9_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="var orderEvent = new OrderEvent(order) {Status = OrderStatus.Invalid}", span="477-477"];
m9_197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="InvalidatingCodes.Contains((int)e.ErrorCode)", span="471-471"];
m9_192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="461-461"];
m9_194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="464-464"];
m9_196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="468-468"];
m9_191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="458-458"];
m9_193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="ErrorCodes.Contains((int) e.ErrorCode)", span="462-462"];
m9_195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="WarningCodes.Contains((int) e.ErrorCode)", span="466-466"];
m9_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="456-456"];
m9_61 [cluster="Unk.CancelOrder", file="FileSystemDataFeed.cs", label="Entry Unk.CancelOrder", span=""];
m9_302 [cluster="Unk.ConvertSecurityType", file="FileSystemDataFeed.cs", label="Entry Unk.ConvertSecurityType", span=""];
m9_20 [cluster="IB.IBClient.cstr", file="FileSystemDataFeed.cs", label="Entry IB.IBClient.cstr", span=""];
m9_183 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="FileSystemDataFeed.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m9_154 [cluster="System.Threading.Thread.Sleep(int)", file="FileSystemDataFeed.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m9_123 [cluster="Unk.RequestExecutions", file="FileSystemDataFeed.cs", label="Entry Unk.RequestExecutions", span=""];
m9_250 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="126-126"];
m9_312 [cluster="IB.Contract.cstr", file="FileSystemDataFeed.cs", label="Entry IB.Contract.cstr", span=""];
m9_438 [file="FileSystemDataFeed.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m9_439 [file="FileSystemDataFeed.cs", label=orders, span=""];
m9_441 [file="FileSystemDataFeed.cs", label=requestID, span=""];
m9_440 [file="FileSystemDataFeed.cs", label=manualResetEvent, span=""];
m9_442 [file="FileSystemDataFeed.cs", label=manualResetEvent, span=""];
m9_443 [file="FileSystemDataFeed.cs", label=details, span=""];
m9_444 [file="FileSystemDataFeed.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", span=""];
m10_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="104-104"];
m10_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="104-104"];
m10_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="114-114"];
m10_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="114-114"];
m10_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="109-109"];
m10_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="109-109"];
m11_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="IQFeedDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="29-29"];
m11_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="IQFeedDataFeed.cs", label="base.Initialize(algorithm, job)", prediction=20, span="32-32"];
m11_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="IQFeedDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="105-105"];
m11_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", file="IQFeedDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", span="43-43"];
m11_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", file="IQFeedDataFeed.cs", label="throw new NotImplementedException();", span="45-45"];
m11_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", file="IQFeedDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed.GetData(QuantConnect.Data.SubscriptionDataConfig)", span="43-43"];
m11_7 [cluster="System.NotImplementedException.NotImplementedException()", file="IQFeedDataFeed.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m11_8 [file="IQFeedDataFeed.cs", label="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed", span=""];
m12_13 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="95-95"];
m12_10 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ClearEvents()", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ClearEvents()", span="89-89"];
m12_11 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ClearEvents()", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ClearEvents()", span="89-89"];
m12_0 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Run()", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Run()", span="62-62"];
m12_1 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Run()", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Run()", span="62-62"];
m12_2 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetupEvents(System.DateTime)", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetupEvents(System.DateTime)", span="67-67"];
m12_3 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetupEvents(System.DateTime)", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetupEvents(System.DateTime)", span="67-67"];
m12_6 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanEvents()", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanEvents()", span="78-78"];
m12_7 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanEvents()", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanEvents()", span="78-78"];
m12_4 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="73-73"];
m12_5 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="73-73"];
m12_14 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="100-100"];
m12_15 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="100-100"];
m12_8 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ResetEvents()", file="IRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ResetEvents()", span="84-84"];
m12_9 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ResetEvents()", file="IRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ResetEvents()", span="84-84"];
m13_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="55-55"];
m13_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="50-50"];
m13_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="50-50"];
m13_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="ITransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="45-45"];
m13_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="ITransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="45-45"];
m16_109 [cluster="System.TimeSpan.FromHours(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m16_52 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m16_57 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="49-49"];
m16_128 [cluster="System.Collections.Generic.List<T>.Clear()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m16_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_28 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="SetupEndOfDayEvent()", span="150-150"];
m16_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_119 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="328-328"];
m16_121 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="i < _events.Count", span="330-330"];
m16_122 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="_events[i].Reset()", span="332-332"];
m16_120 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="var i = 0", span="330-330"];
m16_123 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="i++", span="330-330"];
m16_124 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="328-328"];
m16_71 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="220-232"];
m16_32 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="339-339"];
m16_33 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="239-239"];
m16_34 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="162-162"];
m16_61 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="_algorithm.OnEndOfDay(symbol)", span="204-204"];
m16_62 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()))", span="205-205"];
m16_72 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="_algorithm.OnEndOfDay()", span="224-224"];
m16_73 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event() for Day({0})'', _time.ToShortDateString()))", span="225-225"];
m16_64 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="209-209"];
m16_65 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="210-210"];
m16_60 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="200-212"];
m16_63 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label=Exception, span="207-207"];
m16_66 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="200-212"];
m16_75 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="229-229"];
m16_76 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="230-230"];
m16_74 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label=Exception, span="227-227"];
m16_77 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="220-232"];
m16_29 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label=Exception, span="152-152"];
m16_30 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents(): '' + err.Message)", span="154-154"];
m16_35 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
m16_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values", span="165-165"];
m16_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="_today[security.Type].Status == ''open''", span="172-172"];
m16_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="endOfDayEventTime = _today[security.Type].Open.End.Subtract(_endOfDayDelta)", span="174-174"];
m16_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="endOfDayEventTime = DateTime.Now.Date + security.Exchange.MarketClose.Subtract(_endOfDayDelta)", span="180-180"];
m16_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="AddEvent(new RealTimeEvent(endOfDayEventTime.Value, () =>\r\n                    {\r\n                        try\r\n                        {\r\n                            _algorithm.OnEndOfDay(symbol);\r\n                            Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()));\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                            Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                        }\r\n                    }, true))", span="200-212"];
m16_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="AddEvent(new RealTimeEvent(endOfDay, () =>\r\n                {\r\n                    try\r\n                    {\r\n                        _algorithm.OnEndOfDay();\r\n                        Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event() for Day({0})'', _time.ToShortDateString()));\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                        Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                    }\r\n                }, true))", span="220-232"];
m16_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Skipping Setup of EOD Event for {0} because time has passed.'', security.Symbol))", span="195-195"];
m16_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="endOfDayEventTime.HasValue", span="184-184"];
m16_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="DateTime? endOfDayEventTime = null", span="167-167"];
m16_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="var endOfDay = DateTime.Today.AddHours(23.967)", span="217-217"];
m16_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="!security.IsDynamicallyLoadedData", span="169-169"];
m16_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="var symbol = security.Symbol", span="199-199"];
m16_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="DateTime.Now < endOfDayEventTime.Value", span="187-187"];
m16_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Setup EOD Event for {0}'', endOfDayEventTime.Value.ToString(''u'')))", span="190-190"];
m16_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="DateTime.Now < endOfDay", span="218-218"];
m16_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="162-162"];
m16_106 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m16_133 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="364-364"];
m16_134 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="_exitTriggered = true", span="366-366"];
m16_135 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="364-364"];
m16_107 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m16_22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="82-82"];
m16_21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="81-81"];
m16_54 [cluster="System.DateTime.ToString(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_80 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", color=green, community=0, file="LiveTradingRealTimeHandler.cs", label="_algorithm.SubscriptionManager.Subscriptions", prediction=21, span="244-244"];
m16_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_today.Clear()", span="241-241"];
m16_90 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = TimeSpan.FromHours(0)", span="269-269"];
m16_94 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Extended market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].PreMarket.Start,\r\n                                    _today[SecurityType.Equity].PostMarket.End))", span="275-279"];
m16_97 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].Open.Start, _today[SecurityType.Equity].Open.End))", span="285-288"];
m16_101 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(\r\n                            string.Format(\r\n                                ''LiveTradingRealTimeHandler.SetupEvents(Forex): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                sub.Symbol, _today[SecurityType.Forex].Open.Start, _today[SecurityType.Forex].Open.End))", span="295-298"];
m16_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var security = _algorithm.Securities[sub.Symbol]", span="246-246"];
m16_89 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = TimeSpan.FromHours(0)", span="268-268"];
m16_91 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="sub.ExtendedMarketHours", span="271-271"];
m16_92 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].PreMarket.Start.TimeOfDay", span="273-273"];
m16_93 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].PostMarket.End.TimeOfDay", span="274-274"];
m16_95 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].Open.Start.TimeOfDay", span="283-283"];
m16_96 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].Open.End.TimeOfDay", span="284-284"];
m16_99 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Forex].Open.Start.TimeOfDay", span="293-293"];
m16_100 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Forex].Open.End.TimeOfDay", span="294-294"];
m16_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="!_today.ContainsKey(security.Type)", span="249-249"];
m16_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_today.Add(security.Type, new MarketToday())", span="252-252"];
m16_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_today[security.Type] = Engine.Api.MarketToday(date, security.Type)", span="254-254"];
m16_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(\r\n                        string.Format(\r\n                            ''LiveTradingRealTimeHandler.SetupEvents(): Daily Market Hours Setup for Security Type: {0} Start: {1} Stop: {2}'',\r\n                            security.Type, _today[security.Type].Open.Start, _today[security.Type].Open.End))", span="255-258"];
m16_88 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_today[SecurityType.Equity].Status != ''open''", span="266-266"];
m16_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="security.Type", span="262-262"];
m16_98 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="SecurityType.Forex", span="292-292"];
m16_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="SecurityType.Equity", span="264-264"];
m16_102 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="239-239"];
m16_67 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="269-269"];
m16_27 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(date)", span="147-147"];
m16_19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var market = grp.Key.Market", span="79-79"];
m16_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m16_31 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m16_58 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="319-319"];
m16_116 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="LiveTradingRealTimeHandler.cs", label="_events.Add(newEvent)", span="321-321"];
m16_117 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="319-319"];
m16_25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="68-68"];
m16_111 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="LiveTradingRealTimeHandler.cs", label="i < _events.Count", span="309-309"];
m16_112 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="LiveTradingRealTimeHandler.cs", label="_events[i].Scan(_time)", span="311-311"];
m16_110 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="LiveTradingRealTimeHandler.cs", label="var i = 0", span="309-309"];
m16_113 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="LiveTradingRealTimeHandler.cs", label="i++", span="309-309"];
m16_114 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="307-307"];
m16_115 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="61-61"];
m16_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="90-90"];
m16_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="LiveTradingRealTimeHandler.cs", label="_algorithm = algorithm", span="93-93"];
m16_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="LiveTradingRealTimeHandler.cs", label="_events = new List<RealTimeEvent>()", span="94-94"];
m16_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="LiveTradingRealTimeHandler.cs", label="_today = new Dictionary<SecurityType, MarketToday>()", span="95-95"];
m16_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="90-90"];
m16_53 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m16_59 [cluster="System.DateTime.AddHours(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m16_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m16_8 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="56-56"];
m16_9 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LiveTradingRealTimeHandler.cs", label="_symbols = symbols.ToList()", span="58-58"];
m16_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LiveTradingRealTimeHandler.cs", label="_universeSettings = universeSettings", span="59-59"];
m16_11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LiveTradingRealTimeHandler.cs", label="_securityInitializer = securityInitializer", span="60-60"];
m16_15 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="71-71"];
m16_16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var resolution = universeSettings.Resolution", span="73-73"];
m16_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="74-74"];
m16_12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="56-56"];
m16_14 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="70-70"];
m16_13 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="68-68"];
m16_18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LiveTradingRealTimeHandler.cs", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="77-77"];
m16_24 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="348-348"];
m16_23 [cluster="System.Threading.Thread.Sleep(int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m16_20 [cluster="System.TimeSpan.FromSeconds(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m16_55 [cluster="string.Format(string, object)", file="LiveTradingRealTimeHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_125 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="91-91"];
m16_126 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="LiveTradingRealTimeHandler.cs", label="_events.Clear()", span="341-341"];
m16_127 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="339-339"];
m16_105 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="59-59"];
m16_103 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m16_108 [cluster="string.Format(string, object, object, object)", file="LiveTradingRealTimeHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m16_118 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_68 [cluster="System.DateTime.ToShortDateString()", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m16_129 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_time.Date != time.Date", span="351-351"];
m16_130 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="SetupEvents(time)", span="354-354"];
m16_131 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_time = time", span="358-358"];
m16_132 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="348-348"];
m16_78 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="264-264"];
m16_69 [cluster="string.Format(string, object, object)", file="LiveTradingRealTimeHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_56 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m16_70 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="119-119"];
m16_136 [file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m16_137 [file="LiveTradingRealTimeHandler.cs", label=symbol, span=""];
m18_8 [cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="StreamStore.cs", label="var url = ''https://www.quandl.com/api/v3/datasets/BCHARTS/BITFINEXUSD.csv?order=asc&collapse='' + collapse + ''&api_key='' + _apiKey + ''&start_date=''\r\n                + startUtc.ToString(''yyyy-MM-dd'')", span="59-60"];
m18_64 [cluster="QuantConnect.Data.BaseData.Clone()", file="StreamStore.cs", label="Entry QuantConnect.Data.BaseData.Clone()", span="218-218"];
m18_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", span="110-110"];
m18_21 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="StreamStore.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m18_41 [cluster="QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", file="StreamStore.cs", label="Entry QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", span="191-191"];
m18_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="141-141"];
m18_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="StreamStore.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m18_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime()", file="StreamStore.cs", label="return DateTime.Now.RoundDown(_increment);", span="236-236"];
m18_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime()", file="StreamStore.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime()", span="233-233"];
m18_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", span="96-96"];
m18_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_type = config.Type", span="98-98"];
m18_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_data = null", span="99-99"];
m18_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_config = config", span="100-100"];
m18_66 [cluster="System.DateTime.Add(System.TimeSpan)", file="StreamStore.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m18_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="_data = data", span="132-132"];
m18_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_security = security", span="101-101"];
m18_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_increment = config.Increment", span="102-102"];
m18_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", color=green, community=0, file="StreamStore.cs", label="_data != null && _data.Time < ComputeBarStartTime()", prediction=22, span="127-127"];
m18_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="return;", span="122-122"];
m18_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="_queue = new ConcurrentQueue<BaseData>()", span="103-103"];
m18_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", span="96-96"];
m18_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", span="110-110"];
m18_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="!_security.Exchange.IsOpenDuringBar(data.Time, data.EndTime, _config.ExtendedMarketHours)", span="113-113"];
m18_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="return;", span="115-115"];
m18_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="_config.Resolution == Resolution.Tick", span="118-118"];
m18_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", label="_queue.Enqueue(data)", span="121-121"];
m18_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", color=green, community=0, file="StreamStore.cs", label="Thread.Sleep(1)", prediction=23, span="128-128"];
m18_70 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="StreamStore.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="263-263"];
m18_17 [cluster="System.ArgumentException.ArgumentException(string)", file="StreamStore.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m18_20 [cluster="System.Net.WebClient.DownloadString(string)", file="StreamStore.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m18_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="!_security.Exchange.IsOpenDuringBar(tick.Time, tick.EndTime, _config.ExtendedMarketHours)", span="144-144"];
m18_63 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="StreamStore.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="132-132"];
m18_65 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="StreamStore.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="204-204"];
m18_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="StreamStore.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m18_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", span="184-184"];
m18_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label=_lock, span="186-186"];
m18_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_data == null && !fillForward", span="191-191"];
m18_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Log.Debug(''StreamStore.TriggerArchive(): No data to store, and not fill forward: '' + Symbol)", span="193-193"];
m18_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_data != null", span="196-196"];
m18_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Log.Debug(''StreamStore.TriggerArchive(): Enqueued new data: S:'' + _data.Symbol + '' V:'' + _data.Value)", span="199-199"];
m18_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_previousData = _data.Clone()", span="200-200"];
m18_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_queue.Enqueue(_data.Clone())", span="201-201"];
m18_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_data = null", span="202-202"];
m18_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="fillForward && _data == null && _previousData != null", span="204-204"];
m18_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="!_security.Exchange.IsOpenDuringBar(triggerTime - _increment, triggerTime, _config.ExtendedMarketHours)", span="208-208"];
m18_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Log.Debug(''StreamStore.TriggerArchive(): Exchange is closed: '' + Symbol)", span="210-210"];
m18_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Log.Debug(''StreamStore.TriggerArchive(): Fillforward, Previous Enqueued: S:'' + _previousData.Symbol + '' V:'' + _previousData.Value)", span="215-215"];
m18_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="var cloneForward = _previousData.Clone(true)", span="216-216"];
m18_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="cloneForward.Time = _previousData.Time.Add(_increment)", span="217-217"];
m18_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_queue.Enqueue(cloneForward)", span="218-218"];
m18_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="_previousData = cloneForward.Clone()", span="220-220"];
m18_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label=Exception, span="223-223"];
m18_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="return;", span="211-211"];
m18_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Log.Error(''StreamStore.TriggerAchive(fillforward): Failed to archive: '' + err.Message)", span="225-225"];
m18_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", span="184-184"];
m18_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", color=green, community=0, file="StreamStore.cs", label="var barStartTime = ComputeBarStartTime()", prediction=24, span="151-151"];
m18_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", color=green, community=0, file="StreamStore.cs", label="_data != null && _data.Time < barStartTime", prediction=22, span="152-152"];
m18_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="_data = new TradeBar(barStartTime, _config.Symbol, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.Quantity, _config.Resolution.ToTimeSpan())", span="162-162"];
m18_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", color=green, community=0, file="StreamStore.cs", label="Thread.Sleep(1)", prediction=26, span="153-153"];
m18_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label=_lock, span="155-155"];
m18_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="_type.Name", span="157-157"];
m18_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="_data == null", span="160-160"];
m18_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="_data.Update(tick.LastPrice, tick.Quantity, tick.BidPrice, tick.AskPrice)", span="167-167"];
m18_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="_queue.Enqueue(tick)", span="173-173"];
m18_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader", span=""];
m18_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="''TradeBar''", span="159-159"];
m18_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="''Tick''", span="172-172"];
m18_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="141-141"];
m18_40 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="StreamStore.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="389-389"];
m18_39 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="StreamStore.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="130-130"];
m18_71 [file="StreamStore.cs", label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", span=""];
m19_142 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Clone()", span="358-358"];
m19_143 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="return (BaseData)MemberwiseClone();", span="360-360"];
m19_144 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Clone()", span="358-358"];
m19_52 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="252-252"];
m19_86 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="255-259"];
m19_87 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.Split(',')", span="261-261"];
m19_88 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="262-262"];
m19_94 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="274-274"];
m19_89 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="265-265"];
m19_90 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = Convert.ToDecimal(csv[1])", span="266-266"];
m19_91 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = Convert.ToDecimal(csv[2])", span="267-267"];
m19_92 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = Convert.ToDecimal(csv[3])", span="268-268"];
m19_93 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = Convert.ToDecimal(csv[4])", span="269-269"];
m19_95 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = csv[1].ToDecimal()", span="275-275"];
m19_96 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = csv[2].ToDecimal()", span="276-276"];
m19_97 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = csv[3].ToDecimal()", span="277-277"];
m19_98 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = csv[4].ToDecimal()", span="278-278"];
m19_99 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="280-280"];
m19_100 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="252-252"];
m19_54 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="189-189"];
m19_55 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.SecurityType == SecurityType.Forex", span="191-191"];
m19_56 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseForex<TradeBar>(config, line, baseDate);", span="193-193"];
m19_57 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.SecurityType == SecurityType.Equity", span="195-195"];
m19_58 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return ParseEquity<TradeBar>(config, line, baseDate);", span="197-197"];
m19_59 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return null;", span="200-200"];
m19_60 [cluster="QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="189-189"];
m19_78 [cluster="string.Split(params char[])", file="TradeBar.cs", label="Entry string.Split(params char[])", span="0-0"];
m19_82 [cluster="System.Convert.ToInt32(string)", file="TradeBar.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m19_25 [cluster="System.DateTime.DateTime(long)", file="TradeBar.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m19_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m19_13 [cluster="System.TimeSpan.FromMinutes(double)", file="TradeBar.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m19_141 [cluster="System.IO.Path.Combine(params string[])", file="TradeBar.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m19_51 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="211-211"];
m19_61 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var tradeBar = new T\r\n            {\r\n                Symbol = config.Symbol,\r\n                Period = config.Increment\r\n            }", span="214-218"];
m19_62 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="var csv = line.Split(',')", span="220-220"];
m19_63 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="221-221"];
m19_65 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = config.GetNormalizedPrice(Convert.ToDecimal(csv[1])/_scaleFactor)", span="225-225"];
m19_66 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = config.GetNormalizedPrice(Convert.ToDecimal(csv[2])/_scaleFactor)", span="226-226"];
m19_67 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = config.GetNormalizedPrice(Convert.ToDecimal(csv[3])/_scaleFactor)", span="227-227"];
m19_68 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = config.GetNormalizedPrice(Convert.ToDecimal(csv[4])/_scaleFactor)", span="228-228"];
m19_69 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = date.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="233-233"];
m19_70 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Open = config.GetNormalizedPrice(csv[1].ToDecimal()/_scaleFactor)", span="234-234"];
m19_71 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.High = config.GetNormalizedPrice(csv[2].ToDecimal()/_scaleFactor)", span="235-235"];
m19_72 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Low = config.GetNormalizedPrice(csv[3].ToDecimal()/_scaleFactor)", span="236-236"];
m19_73 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Close = config.GetNormalizedPrice(csv[4].ToDecimal()/_scaleFactor)", span="237-237"];
m19_64 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Time = DateTime.ParseExact(csv[0], DateFormat.TwelveCharacter, CultureInfo.InvariantCulture)", span="224-224"];
m19_74 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="tradeBar.Volume = Convert.ToInt64(csv[5])", span="240-240"];
m19_75 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="return tradeBar;", span="241-241"];
m19_76 [cluster="QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.ParseEquity<T>(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="211-211"];
m19_37 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="151-151"];
m19_38 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="line == null", span="154-154"];
m19_40 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label=isLiveMode, span="159-159"];
m19_42 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="config.SecurityType", span="166-166"];
m19_44 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return ParseEquity<TradeBar>(config, line, date);", span="170-170"];
m19_46 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return ParseForex<TradeBar>(config, line, date);", span="174-174"];
m19_48 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Log.Error(''DataModels: TradeBar(): Error Initializing - '' + config.SecurityType + '' - '' + err.Message + '' - '' + line)", span="179-179"];
m19_49 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return new TradeBar{Symbol = config.Symbol, Period = config.Increment};", span="183-183"];
m19_39 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return null;", span="156-156"];
m19_41 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return new TradeBar();", span="161-161"];
m19_43 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="SecurityType.Equity", span="169-169"];
m19_45 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="SecurityType.Forex", span="173-173"];
m19_47 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label=Exception, span="177-177"];
m19_50 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="151-151"];
m19_101 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="291-291"];
m19_102 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Open == 0", span="294-294"];
m19_103 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Open = lastTrade", span="294-294"];
m19_104 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="lastTrade > High", span="295-295"];
m19_105 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="High = lastTrade", span="295-295"];
m19_106 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="lastTrade < Low", span="296-296"];
m19_107 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Low = lastTrade", span="296-296"];
m19_108 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Volume += Convert.ToInt32(volume)", span="298-298"];
m19_109 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Close = lastTrade", span="300-300"];
m19_110 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Value = lastTrade", span="301-301"];
m19_111 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="291-291"];
m19_140 [cluster="System.DateTime.ToString(string)", file="TradeBar.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m19_145 [cluster="object.MemberwiseClone()", file="TradeBar.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m19_81 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="TradeBar.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="187-187"];
m19_138 [cluster="string.ToLower()", file="TradeBar.cs", label="Entry string.ToLower()", span="0-0"];
m19_79 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="TradeBar.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m19_136 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="TradeBar.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m19_113 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="313-313"];
m19_114 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label=isLiveMode, span="316-316"];
m19_118 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="config.SecurityType == SecurityType.Forex", span="323-323"];
m19_122 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var securityTypePath = config.SecurityType.ToString().ToLower()", span="330-330"];
m19_123 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var resolutionPath = config.Resolution.ToString().ToLower()", span="331-331"];
m19_124 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var symbolPath = (string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol).ToLower()", span="332-332"];
m19_125 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var countryCode = config.Country.ToString().ToLower()", span="333-333"];
m19_126 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var liquiditySource = config.LiquiditySource.ToString().ToLower()", span="334-334"];
m19_127 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var filename = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="335-335"];
m19_128 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="config.Resolution == Resolution.Hour || config.Resolution == Resolution.Daily", span="338-338"];
m19_131 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="config.Country == CountryCode.None", span="345-345"];
m19_115 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="318-318"];
m19_116 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var dateFormat = ''yyyyMMdd''", span="321-321"];
m19_117 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var dataType = TickType.Trade", span="322-322"];
m19_119 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="dataType = TickType.Quote", span="325-325"];
m19_121 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="string source", span="329-329"];
m19_120 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="dateFormat = ''yyMMdd''", span="326-326"];
m19_132 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="source = Path.Combine(Constants.DataFolder, securityTypePath, liquiditySource, resolutionPath, symbolPath, filename)", span="348-348"];
m19_133 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="source = Path.Combine(Constants.DataFolder, securityTypePath, countryCode, resolutionPath, symbolPath, filename)", span="352-352"];
m19_129 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="filename = symbolPath + ''.zip''", span="341-341"];
m19_130 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="symbolPath = string.Empty", span="342-342"];
m19_134 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="355-355"];
m19_135 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="313-313"];
m19_137 [cluster="System.Enum.ToString()", file="TradeBar.cs", label="Entry System.Enum.ToString()", span="0-0"];
m19_84 [cluster="string.ToDecimal()", file="TradeBar.cs", label="Entry string.ToDecimal()", span="145-145"];
m19_112 [cluster="System.Convert.ToInt32(decimal)", file="TradeBar.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m19_85 [cluster="System.Convert.ToInt64(string)", file="TradeBar.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m19_77 [cluster="T.cstr", file="TradeBar.cs", label="Entry T.cstr", span=""];
m19_139 [cluster="string.IsNullOrEmpty(string)", file="TradeBar.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m19_0 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="87-87"];
m19_1 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Symbol = ''''", span="89-89"];
m19_2 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Time = new DateTime()", span="90-90"];
m19_3 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Value = 0", span="91-91"];
m19_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="DataType = MarketDataType.TradeBar", span="92-92"];
m19_5 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Open = 0", span="93-93"];
m19_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="High = 0", span="94-94"];
m19_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Low = 0", span="95-95"];
m19_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Close = 0", span="96-96"];
m19_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Volume = 0", span="97-97"];
m19_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Period = TimeSpan.FromMinutes(1)", span="98-98"];
m19_11 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="87-87"];
m19_80 [cluster="System.Convert.ToDecimal(string)", file="TradeBar.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m19_12 [cluster="System.DateTime.DateTime()", file="TradeBar.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m19_26 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="130-130"];
m19_27 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Time = time", span="132-132"];
m19_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Symbol = symbol", span="133-133"];
m19_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Value = close", span="134-134"];
m19_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Open = open", span="135-135"];
m19_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="High = high", span="136-136"];
m19_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Low = low", span="137-137"];
m19_33 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Close = close", span="138-138"];
m19_34 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Volume = volume", span="139-139"];
m19_35 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="140-140"];
m19_36 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="130-130"];
m19_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="106-106"];
m19_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="TradeBar.cs", label="Time = new DateTime(original.Time.Ticks)", prediction=27, span="108-108"];
m19_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Symbol = original.Symbol", span="109-109"];
m19_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Value = original.Close", span="110-110"];
m19_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Open = original.Open", span="111-111"];
m19_19 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="High = original.High", span="112-112"];
m19_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Low = original.Low", span="113-113"];
m19_21 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Close = original.Close", span="114-114"];
m19_22 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Volume = original.Volume", span="115-115"];
m19_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Period = original.Period", span="116-116"];
m19_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="106-106"];
m19_146 [file="TradeBar.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
n5 -> n22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n5 -> n31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n5 -> n35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n5 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n5 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n5 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n5 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n52  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n66  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n127  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n5 -> n163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n5 -> n165  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n5 -> n174  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n178  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n179  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n5 -> n180  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n5 -> n183  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n5 -> n184  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n5 -> n187  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n5 -> n188  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n5 -> n189  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n5 -> n190  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n191  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n5 -> n192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n7 -> n42  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n7 -> n44  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n7 -> n192  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n8 -> n38  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n15 -> n143  [color=darkseagreen4, key=1, label=hasOnTradeBar, style=dashed];
n16 -> n145  [color=darkseagreen4, key=1, label=hasOnTick, style=dashed];
n17 -> n152  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
n18 -> n154  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
n20 -> n90  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n20 -> n133  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n21 -> n96  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n21 -> n135  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n22 -> n25  [color=darkseagreen4, key=1, label=config, style=dashed];
n22 -> n30  [color=darkseagreen4, key=1, label=config, style=dashed];
n24 -> n26  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n24 -> n30  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n32 -> n46  [color=darkseagreen4, key=1, label=newData, style=dashed];
n32 -> n47  [color=darkseagreen4, key=1, label=newData, style=dashed];
n32 -> n80  [color=darkseagreen4, key=1, label=newData, style=dashed];
n35 -> n35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n45 -> n192  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n56 -> n58  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
n56 -> n67  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label=config, style=dashed];
n82 -> n99  [color=darkseagreen4, key=1, label=config, style=dashed];
n82 -> n100  [color=darkseagreen4, key=1, label=config, style=dashed];
n82 -> n127  [color=darkseagreen4, key=1, label=config, style=dashed];
n173 -> n176  [color=darkseagreen4, key=1, label=hackedFrontier, style=dashed];
n9 -> n25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n127  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n134  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n136  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n144  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n146  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n153  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n9 -> n155  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n11 -> n54  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
n196 -> n263  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
n19 -> n110  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n19 -> n116  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n19 -> n142  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n81 -> n85  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
n37 -> n39  [color=darkseagreen4, key=1, label=time, style=dashed];
n37 -> n40  [color=darkseagreen4, key=1, label=time, style=dashed];
n37 -> n47  [color=darkseagreen4, key=1, label=time, style=dashed];
n37 -> n48  [color=darkseagreen4, key=1, label=time, style=dashed];
n37 -> n54  [color=darkseagreen4, key=1, label=time, style=dashed];
n76 -> n152  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n76 -> n153  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n77 -> n123  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n77 -> n125  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n77 -> n154  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n77 -> n155  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n78 -> n91  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
n78 -> n133  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
n78 -> n134  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
n79 -> n97  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
n79 -> n135  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
n79 -> n136  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
n74 -> n143  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n74 -> n144  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n75 -> n118  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n75 -> n120  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n75 -> n145  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n75 -> n146  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n85 -> n100  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n85 -> n107  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n85 -> n113  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n85 -> n127  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n86 -> n88  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n92 -> n94  [color=darkseagreen4, key=1, label=split, style=dashed];
n92 -> n95  [color=darkseagreen4, key=1, label=split, style=dashed];
n92 -> n97  [color=darkseagreen4, key=1, label=split, style=dashed];
n114 -> n118  [color=darkseagreen4, key=1, label=tick, style=dashed];
n114 -> n120  [color=darkseagreen4, key=1, label=tick, style=dashed];
n114 -> n121  [color=darkseagreen4, key=1, label=tick, style=dashed];
n114 -> n123  [color=darkseagreen4, key=1, label=tick, style=dashed];
n114 -> n125  [color=darkseagreen4, key=1, label=tick, style=dashed];
n114 -> n126  [color=darkseagreen4, key=1, label=tick, style=dashed];
n98 -> n100  [color=darkseagreen4, key=1, label=j, style=dashed];
n98 -> n101  [color=darkseagreen4, key=1, label=j, style=dashed];
n101 -> n101  [color=darkseagreen4, key=1, label=j, style=dashed];
n119 -> n121  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n124 -> n126  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n176 -> n176  [color=darkseagreen4, key=1, label=security, style=dashed];
n256 -> n258  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n261 -> n263  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m2_0 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m2_0 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMapFileProvider", style=dashed];
m2_0 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFactorFileProvider", style=dashed];
m2_0 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m2_27 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Util.Composer", style=dashed];
m2_28 -> m2_36  [color=darkseagreen4, key=1, label=setupHandlerTypeName, style=dashed];
m2_29 -> m2_36  [color=darkseagreen4, key=1, label=transactionHandlerTypeName, style=dashed];
m2_30 -> m2_36  [color=darkseagreen4, key=1, label=realTimeHandlerTypeName, style=dashed];
m2_31 -> m2_36  [color=darkseagreen4, key=1, label=dataFeedHandlerTypeName, style=dashed];
m2_32 -> m2_36  [color=darkseagreen4, key=1, label=resultHandlerTypeName, style=dashed];
m2_33 -> m2_36  [color=darkseagreen4, key=1, label=mapFileProviderTypeName, style=dashed];
m2_34 -> m2_36  [color=darkseagreen4, key=1, label=factorFileProviderTypeName, style=dashed];
m2_46 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m3_14 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m4_0 -> m4_14  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_0 -> m4_17  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_12 -> m4_14  [color=green, key=1, label=i, style=dashed];
m4_12 -> m4_17  [color=green, key=1, label=i, style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_12 -> m4_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_18 -> m4_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Signals.Signal", style=dashed];
m4_46 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m4_46 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m4_46 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m4_27 -> m4_29  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m4_28 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_28 -> m4_30  [color=darkseagreen4, key=1, label=signals, style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_34 -> m4_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_25 -> m4_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_25 -> m4_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_25 -> m4_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_25 -> m4_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_35 -> m4_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_57 -> m4_14  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_17  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_57 -> m4_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.BaseDataFeed", style=dashed];
m4_79 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_79 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_42 -> m6_44  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Signals.Signal", style=dashed];
m6_46 -> m6_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_46 -> m6_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_46 -> m6_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_28 -> m6_42  [color=green, key=1, label="lambda expression", style=dashed];
m6_28 -> m6_30  [color=green, key=1, label=signals, style=dashed];
m6_79 -> m6_18  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_19  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_20  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_21  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_30  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_32  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_79 -> m6_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m7_38 -> m7_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_27 -> m7_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_27 -> m7_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_39 -> m7_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_81 -> m7_88  [color=darkseagreen4, key=1, label=connectionString, style=dashed];
m7_46 -> m7_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_102 -> m7_114  [color=darkseagreen4, key=1, label=results, style=dashed];
m7_102 -> m7_121  [color=darkseagreen4, key=1, label=results, style=dashed];
m7_106 -> m7_116  [color=darkseagreen4, key=1, label=dbCommand, style=dashed];
m7_107 -> m7_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_107 -> m7_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_107 -> m7_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_109 -> m7_114  [color=darkseagreen4, key=1, label=row, style=dashed];
m7_109 -> m7_112  [color=darkseagreen4, key=1, label=row, style=dashed];
m7_110 -> m7_112  [color=darkseagreen4, key=1, label=field, style=dashed];
m7_110 -> m7_113  [color=darkseagreen4, key=1, label=field, style=dashed];
m7_113 -> m7_113  [color=darkseagreen4, key=1, label=field, style=dashed];
m7_47 -> m7_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>", style=dashed];
m7_56 -> m7_59  [color=darkseagreen4, key=1, label=bars, style=dashed];
m7_56 -> m7_60  [color=darkseagreen4, key=1, label=bars, style=dashed];
m7_13 -> m7_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_19 -> m7_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_132 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m7_132 -> m7_104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed", style=dashed];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_8 -> m8_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_9 -> m8_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m8_11 -> m8_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m8_16 -> m8_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m8_16 -> m8_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m8_21 -> m8_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m8_21 -> m8_24  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m8_21 -> m8_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m8_21 -> m8_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m8_26 -> m8_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_26 -> m8_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_81 -> m8_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m8_81 -> m8_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_84 -> m8_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_51 -> m8_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_51 -> m8_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m8_51 -> m8_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m8_51 -> m8_59  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_52 -> m8_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_52 -> m8_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_52 -> m8_59  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_59 -> m8_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_55 -> m8_57  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m8_91 -> m8_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_91 -> m8_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m8_92 -> m8_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_93 -> m8_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m9_276 -> m9_291  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m9_279 -> m9_289  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m9_288 -> m9_291  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_288 -> m9_292  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_16 -> m9_22  [color=green, key=1, label="?", style=dashed];
m9_17 -> m9_31  [color=darkseagreen4, key=1, label="?", style=dashed];
m9_275 -> m9_331  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_224 -> m9_232  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m9_224 -> m9_235  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m9_224 -> m9_239  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m9_224 -> m9_244  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m9_227 -> m9_229  [color=darkseagreen4, key=1, label=status, style=dashed];
m9_227 -> m9_231  [color=darkseagreen4, key=1, label=status, style=dashed];
m9_238 -> m9_241  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m9_238 -> m9_242  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m9_333 -> m9_341  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderType", style=dashed];
m9_251 -> m9_429  [color=darkseagreen4, key=1, label=T, style=dashed];
m9_211 -> m9_215  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m9_211 -> m9_216  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m9_211 -> m9_213  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m9_214 -> m9_216  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m9_263 -> m9_270  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m9_264 -> m9_266  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m9_265 -> m9_268  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m9_27 -> m9_31  [color=darkseagreen4, key=1, label="?", style=dashed];
m9_95 -> m9_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m9_128 -> m9_130  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m9_44 -> m9_46  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_343 -> m9_366  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatus", style=dashed];
m9_294 -> m9_411  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m9_294 -> m9_412  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m9_90 -> m9_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_311 -> m9_381  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_52 -> m9_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_42 -> m9_172  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_42 -> m9_174  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_42 -> m9_176  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_179 -> m9_181  [color=darkseagreen4, key=1, label=contract, style=dashed];
m9_252 -> m9_257  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m9_255 -> m9_257  [color=darkseagreen4, key=1, label=holding, style=dashed];
m9_65 -> m9_82  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OpenOrderEventArgs", style=dashed];
m9_63 -> m9_82  [color=darkseagreen4, key=1, label=orders, style=dashed];
m9_63 -> m9_74  [color=darkseagreen4, key=1, label=orders, style=dashed];
m9_64 -> m9_87  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_64 -> m9_70  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_103 -> m9_113  [color=darkseagreen4, key=1, label=filter, style=dashed];
m9_108 -> m9_125  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m9_108 -> m9_129  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m9_108 -> m9_113  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m9_104 -> m9_130  [color=darkseagreen4, key=1, label=details, style=dashed];
m9_104 -> m9_118  [color=darkseagreen4, key=1, label=details, style=dashed];
m9_107 -> m9_126  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_107 -> m9_114  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_109 -> m9_125  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecutionDataEndEventArgs", style=dashed];
m9_110 -> m9_129  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m9_110 -> m9_130  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m9_187 -> m9_305  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_304 -> m9_309  [color=darkseagreen4, key=1, label=contract, style=dashed];
m9_273 -> m9_322  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m9_138 -> m9_140  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m9_138 -> m9_143  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m9_143 -> m9_143  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m9_190 -> m9_202  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m9_190 -> m9_193  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m9_190 -> m9_195  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m9_190 -> m9_197  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m9_190 -> m9_198  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m9_192 -> m9_202  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m9_194 -> m9_202  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m9_196 -> m9_202  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m9_438 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_46  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_82  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_69  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_106  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_134  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_136  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_147  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_149  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_164  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_165  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_168  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_215  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_216  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_241  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_242  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_254  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_257  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_414  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_438 -> m9_416  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m9_439 -> m9_82  [color=darkseagreen4, key=1, label=orders, style=dashed];
m9_441 -> m9_125  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m9_441 -> m9_129  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m9_440 -> m9_87  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_442 -> m9_126  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m9_443 -> m9_130  [color=darkseagreen4, key=1, label=details, style=dashed];
m9_444 -> m9_428  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m9_444 -> m9_429  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m9_444 -> m9_430  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m9_444 -> m9_431  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m11_8 -> m11_1  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IQFeedDataFeed", style=dashed];
m16_120 -> m16_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_120 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_123 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_35 -> m16_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m16_36 -> m16_38  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_36 -> m16_39  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_36 -> m16_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_40 -> m16_43  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_40 -> m16_44  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_40 -> m16_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_41 -> m16_43  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_41 -> m16_44  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_41 -> m16_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_47 -> m16_64  [color=darkseagreen4, key=1, label=err, style=dashed];
m16_47 -> m16_65  [color=darkseagreen4, key=1, label=err, style=dashed];
m16_50 -> m16_75  [color=darkseagreen4, key=1, label=err, style=dashed];
m16_50 -> m16_76  [color=darkseagreen4, key=1, label=err, style=dashed];
m16_37 -> m16_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_37 -> m16_42  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_37 -> m16_43  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_37 -> m16_44  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m16_48 -> m16_50  [color=darkseagreen4, key=1, label=endOfDay, style=dashed];
m16_46 -> m16_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_46 -> m16_62  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m16_80 -> m16_91  [color=green, key=1, label=sub, style=dashed];
m16_80 -> m16_94  [color=green, key=1, label=sub, style=dashed];
m16_80 -> m16_97  [color=green, key=1, label=sub, style=dashed];
m16_80 -> m16_101  [color=green, key=1, label=sub, style=dashed];
m16_81 -> m16_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_81 -> m16_85  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_81 -> m16_86  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_19 -> m16_27  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_110 -> m16_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_110 -> m16_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_113 -> m16_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_16 -> m16_23  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m16_17 -> m16_23  [color=darkseagreen4, key=1, label=type, style=dashed];
m16_14 -> m16_24  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m16_18 -> m16_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_18 -> m16_20  [color=darkseagreen4, key=1, label=grp, style=dashed];
m16_18 -> m16_24  [color=darkseagreen4, key=1, label=grp, style=dashed];
m16_24 -> m16_130  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_136 -> m16_80  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_122  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_136 -> m16_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m16_137 -> m16_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_137 -> m16_62  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_8 -> m18_10  [color=darkseagreen4, key=1, label=url, style=dashed];
m18_24 -> m18_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m18_24 -> m18_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m18_4 -> m18_14  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_9 -> m18_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m18_12 -> m18_14  [color=darkseagreen4, key=1, label=line, style=dashed];
m18_42 -> m18_44  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_42 -> m18_51  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_42 -> m18_52  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_56 -> m18_58  [color=darkseagreen4, key=1, label=cloneForward, style=dashed];
m18_26 -> m18_14  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader", style=dashed];
m18_71 -> m18_15  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_28  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m18_71 -> m18_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", style=dashed];
m19_52 -> m19_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_86 -> m19_99  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m19_54 -> m19_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_54 -> m19_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_54 -> m19_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_51 -> m19_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_61 -> m19_75  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m19_37 -> m19_40  [color=darkseagreen4, key=1, label=bool, style=dashed];
m19_37 -> m19_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_37 -> m19_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_37 -> m19_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_37 -> m19_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_101 -> m19_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m19_101 -> m19_106  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m19_113 -> m19_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_113 -> m19_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_113 -> m19_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m19_146 -> m19_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_146 -> m19_104  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_146 -> m19_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_146 -> m19_143  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
}
