digraph  {
n25 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
n0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", span="34-34", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n1 [label="UniverseSettings.Resolution = Resolution.Minute", span="37-37", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n2 [label="SetStartDate(2013, 10, 07)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n3 [label="SetEndDate(2013, 10, 11)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1093-1093", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)"];
n4 [label="SetCash(100000)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1118-1118", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)"];
n5 [label="var symbols = new List<Symbol>\r\n            {\r\n                QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)\r\n            }", span="47-50", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1042-1042", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)"];
n6 [label="PortfolioSelection = new ManualPortfolioSelectionModel(symbols, UniverseSettings, SecurityInitializer)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n13 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)"];
n7 [label="Signal = new ConstantSignalModel(SignalType.Price, Direction.Up)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n14 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="50-50", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n8 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", span="34-34", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
n15 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", span="41-41", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)"];
n16 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)"];
n17 [label="!Portfolio.Invested", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0];
n18 [label="var percentage = 1m/Securities.Count", span="64-64", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0];
n22 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)"];
n19 [label=Securities, span="65-65", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0];
n20 [label="SetHoldings(security.Key, percentage)", span="67-67", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0];
n21 [label="Debug($''Purchased Stock: {security.Key}'')", span="68-68", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0];
n23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)"];
n24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1659-1659", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)"];
d6 [label="PortfolioSelection = new ManualPortfolioSelectionModel(symbols, UniverseSettings, SecurityInitializer)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", color=green, community=0];
d24 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
d5 [label="var symbols = new List<Symbol>\r\n            {\r\n                QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)\r\n            }", span="49-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
d7 [label="Signal = new ConstantSignalModel(SignalType.Price, Direction.Up)", span="55-55", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
d19 [label="orderEvent.Status.IsFill()", span="61-61", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", color=green, community=0];
d18 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="59-59", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
d20 [label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="63-63", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", color=green, community=0];
d21 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="59-59", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
d22 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()"];
d8 [label="PortfolioConstruction = new SimplePortfolioConstructionModel()", span="56-56", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
d9 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", span="36-36", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()"];
d17 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()"];
m0_1 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", span="41-41", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", file="ConstantSignalModel.cs"];
m0_9 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs"];
m0_10 [label="return _securities.Select(security => new Signal(\r\n                security.Symbol,\r\n                _type,\r\n                _direction,\r\n                _percentChange,\r\n                _confidence,\r\n                _period\r\n            ));", span="71-78", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs"];
m0_11 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs"];
m0_2 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_3 [label="_type = type", span="56-56", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_4 [label="_direction = direction", span="57-57", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_5 [label="_percentChange = percentChange", span="58-58", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_6 [label="_confidence = confidence", span="59-59", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_7 [label="_period = period", span="60-60", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_8 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_24 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="ConstantSignalModel.cs"];
m0_12 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConstantSignalModel.cs"];
m0_16 [label="Entry QuantConnect.Algorithm.Framework.Signals.Signal.Signal(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", span="63-63", cluster="QuantConnect.Algorithm.Framework.Signals.Signal.Signal(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m0_23 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="ConstantSignalModel.cs"];
m0_17 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs"];
m0_18 [label="changes.AddedSecurities", span="88-88", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="ConstantSignalModel.cs"];
m0_20 [label="changes.RemovedSecurities", span="92-92", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="ConstantSignalModel.cs"];
m0_19 [label="_securities.Add(added)", span="90-90", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="ConstantSignalModel.cs"];
m0_21 [label="_securities.Remove(removed)", span="94-94", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="ConstantSignalModel.cs"];
m0_22 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs"];
m0_13 [label="Entry lambda expression", span="71-78", cluster="lambda expression", file="ConstantSignalModel.cs"];
m0_14 [label="new Signal(\r\n                security.Symbol,\r\n                _type,\r\n                _direction,\r\n                _percentChange,\r\n                _confidence,\r\n                _period\r\n            )", span="71-78", cluster="lambda expression", file="ConstantSignalModel.cs"];
m0_15 [label="Exit lambda expression", span="71-78", cluster="lambda expression", file="ConstantSignalModel.cs"];
m0_25 [label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", span="", file="ConstantSignalModel.cs"];
m5_6 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="NotifiedSecurityChanged.cs"];
m5_7 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="NotifiedSecurityChanged.cs"];
m5_0 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanged.cs"];
m5_1 [label="changes.AddedSecurities", span="33-33", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="NotifiedSecurityChanged.cs"];
m5_2 [label="securities.Add(added)", span="35-35", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="NotifiedSecurityChanged.cs"];
m5_3 [label="changes.RemovedSecurities", span="37-37", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="NotifiedSecurityChanged.cs"];
m5_4 [label="securities.Remove(removed)", span="39-39", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="NotifiedSecurityChanged.cs"];
m5_5 [label="Exit QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanged.cs"];
m6_17 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.WeightedBy<T, TWeight>(TWeight, int)", span="71-71", cluster="QuantConnect.Indicators.IndicatorBase<T>.WeightedBy<T, TWeight>(TWeight, int)", file="PercentPortfolioTarget.cs"];
m6_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m6_1 [label="SetStartDate(2015, 02, 01)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_2 [label="SetEndDate(2015, 03, 01)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_3 [label="SetCash(100000)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_4 [label="EURUSD = AddForex(''EURUSD'', Resolution.Minute).Symbol", span="47-47", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_5 [label="AddData<FxcmVolume>(''EURUSD_Vol'', Resolution.Hour, DateTimeZone.Utc)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_6 [label="var _price = Identity(EURUSD, Resolution.Hour)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_7 [label="fastVWMA = _price.WeightedBy(volume, period: 15)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_8 [label="slowVWMA = _price.WeightedBy(volume, period: 300)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_9 [label="PlotIndicator(''VWMA'', fastVWMA.Minus(slowVWMA))", span="53-53", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_10 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m6_20 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_21 [label="!slowVWMA.IsReady", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_22 [label="return;", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_23 [label="!Portfolio.Invested || Portfolio[EURUSD].IsShort", span="63-63", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_24 [label="fastVWMA > slowVWMA", span="65-65", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="PercentPortfolioTarget.cs"];
m6_27 [label="fastVWMA < slowVWMA", span="73-73", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_25 [label="SetHoldings(EURUSD, percentage: 1)", span="67-67", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_26 [label="Log(Time.ToString(''g'') + '' Take a Long Position.'')", span="68-68", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_28 [label="SetHoldings(EURUSD, percentage: -1)", span="75-75", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_29 [label="Log(Time.ToString(''g'') + '' Take a Short Position.'')", span="76-76", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_30 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", span="60-60", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Slice)", file="PercentPortfolioTarget.cs"];
m6_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="PercentPortfolioTarget.cs"];
m6_18 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="170-170", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="PercentPortfolioTarget.cs"];
m6_37 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", span="29-29", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint()", file="PercentPortfolioTarget.cs"];
m6_33 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1672-1672", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="PercentPortfolioTarget.cs"];
m6_38 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="PercentPortfolioTarget.cs"];
m6_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="PercentPortfolioTarget.cs"];
m6_32 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="PercentPortfolioTarget.cs"];
m6_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1518-1518", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="PercentPortfolioTarget.cs"];
m6_34 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Custom.FxcmVolume)", span="81-81", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Custom.FxcmVolume)", file="PercentPortfolioTarget.cs"];
m6_35 [label="volume.Update(new IndicatorDataPoint\r\n            {\r\n                Time = Time,\r\n                Value = fxVolume.Volume\r\n            })", span="83-87", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Custom.FxcmVolume)", file="PercentPortfolioTarget.cs"];
m6_36 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Custom.FxcmVolume)", span="81-81", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.OnData(QuantConnect.Data.Custom.FxcmVolume)", file="PercentPortfolioTarget.cs"];
m6_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1093-1093", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="PercentPortfolioTarget.cs"];
m6_15 [label="Entry Unk.>", span="", cluster="Unk.>", file="PercentPortfolioTarget.cs"];
m6_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1042-1042", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="PercentPortfolioTarget.cs"];
m6_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="PercentPortfolioTarget.cs"];
m6_39 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm", span="", file="PercentPortfolioTarget.cs"];
m7_3 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m7_7 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m7_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m7_1 [label="return new PercentPortfolioTarget(symbol, percent);", span="30-30", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m7_2 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m7_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m7_5 [label="return new QuantityPortfolioTarget(symbol, quantity);", span="41-41", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m7_6 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m8_10 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="QCAlgorithmFramework.cs"];
m8_12 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="57-57", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_13 [label="CheckModels()", span="59-59", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_14 [label="PortfolioSelection.CreateUniverses(this)", span="61-61", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_15 [label="AddUniverse(universe)", span="63-63", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_16 [label="base.PostInitialize()", span="66-66", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_17 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="57-57", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_35 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QCAlgorithmFramework.cs"];
m8_33 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m8_18 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="91-91", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m8_45 [label="PortfolioSelection == null", span="93-93", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_46 [label="throw new Exception(''Framework algorithms must specify a portfolio selection model using the 'PortfolioSelection' property.'');", span="95-95", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_47 [label="Signal == null", span="97-97", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_48 [label="throw new Exception(''Framework algorithms must specify a signal model using the 'Signal' property.'');", span="99-99", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_49 [label="PortfolioConstruction == null", span="101-101", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_50 [label="throw new Exception(''Framework algorithms must specify a portfolio construction model using the 'PortfolioConstruction' property'');", span="103-103", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_51 [label="Execution == null", span="105-105", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_52 [label="throw new Exception(''Framework algorithms must specify an execution model using the 'Execution' property.'');", span="107-107", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m8_53 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="91-91", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="QCAlgorithmFramework.cs"];
m8_11 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="QCAlgorithmFramework.cs"];
m8_31 [label="Entry QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32", cluster="QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_0 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="42-42", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_1 [label="var type = GetType()", span="44-44", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_2 [label="var onDataSlice = type.GetMethod(''OnData'', new[] { typeof(Slice) })", span="45-45", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_5 [label="var onSecuritiesChanged = type.GetMethod(''OnSecuritiesChanged'', new[] { typeof(SecurityChanges) })", span="50-50", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_3 [label="onDataSlice.DeclaringType != typeof(QCAlgorithmFramework)", span="46-46", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_4 [label="throw new Exception(''Framework algorithms can not override OnData(Slice)'');", span="48-48", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_6 [label="onSecuritiesChanged.DeclaringType != typeof(QCAlgorithmFramework)", span="51-51", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_7 [label="throw new Exception(''Framework algorithms can not override OnSecuritiesChanged(SecurityChanges)'');", span="53-53", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_8 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="42-42", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m8_44 [label="Entry QuantConnect.Algorithm.Framework.INotifiedSecuritiesChanged.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29", cluster="QuantConnect.Algorithm.Framework.INotifiedSecuritiesChanged.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m8_36 [label="Entry Unk.MarketOrder", span="", cluster="Unk.MarketOrder", file="QCAlgorithmFramework.cs"];
m8_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithmFramework.cs"];
m8_32 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="QCAlgorithmFramework.cs"];
m8_9 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="QCAlgorithmFramework.cs"];
m8_19 [label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31", cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QCAlgorithmFramework.cs"];
m8_40 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="85-85", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m8_41 [label="Signal.OnSecuritiesChanged(this, changes)", span="87-87", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_42 [label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="88-88", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_43 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="85-85", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m8_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="485-485", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithmFramework.cs"];
m8_34 [label="Entry Unk.Sum", span="", cluster="Unk.Sum", file="QCAlgorithmFramework.cs"];
m8_22 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_27 [label="var quantity = target.GetTargetQuantity(this) - existing", span="77-77", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_25 [label=targets, span="73-73", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_26 [label="var existing = Securities[target.Symbol].Holdings.Quantity\r\n                    + Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", span="75-76", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_28 [label="quantity != 0", span="78-78", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m8_29 [label="MarketOrder(target.Symbol, quantity)", span="80-80", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_23 [label="var signals = Signal.Update(this, slice)", span="71-71", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_24 [label="var targets = PortfolioConstruction.CreateTargets(this, signals)", span="72-72", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_30 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m8_37 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m8_38 [label="o.Quantity", span="76-76", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m8_39 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m8_54 [label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span="", file="QCAlgorithmFramework.cs"];
m9_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="QuantityPortfolioTarget.cs"];
m9_1 [label="Symbol = symbol", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m9_2 [label="Quantity = quantity", span="41-41", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m9_3 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="QuantityPortfolioTarget.cs"];
m9_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QuantityPortfolioTarget.cs"];
m9_5 [label="return Quantity;", span="51-51", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m9_6 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QuantityPortfolioTarget.cs"];
m9_7 [label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget", span="", file="QuantityPortfolioTarget.cs"];
m10_12 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m10_9 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m10_10 [label="NotifiedSecurityChanged.UpdateCollection(_securities, changes)", span="60-60", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_11 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m10_8 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="SimplePortfolioConstructionModel.cs"];
m10_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs"];
m10_1 [label="_securities.Count == 0", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_2 [label="yield break;", span="42-42", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_3 [label="var percent = 1m / _securities.Count", span="45-45", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_6 [label="yield return PortfolioTarget.Percent(signal.Symbol, target);", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_4 [label=signals, span="46-46", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_5 [label="var target = (int)signal.Direction * percent", span="48-48", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m10_7 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs"];
m10_13 [label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", span="", file="SimplePortfolioConstructionModel.cs"];
n25 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n17  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n18  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n19  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n20  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n25 -> n21  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n11  [key=2, style=dotted];
n4 -> d5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n5 -> n13  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n14  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n15  [key=2, style=dotted];
n8 -> n0  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n22  [key=0, style=solid, color=red];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n20  [key=1, style=dashed, color=red, label=percentage];
n22 -> n16  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid, color=red];
n19 -> n22  [key=0, style=solid, color=red];
n20 -> n21  [key=0, style=solid, color=red];
n20 -> n23  [key=2, style=dotted, color=red];
n20 -> n20  [key=1, style=dashed, color=red, label=security];
n21 -> n19  [key=0, style=solid, color=red];
n21 -> n24  [key=2, style=dotted, color=red];
n21 -> n21  [key=1, style=dashed, color=red, label=security];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> n14  [key=2, style=dotted, color=green];
d24 -> d6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> d20  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> d7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d24 -> d8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm"];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> n12  [key=2, style=dotted];
d5 -> n13  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> n15  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d21  [key=0, style=solid, color=green];
d19 -> d22  [key=2, style=dotted, color=green];
d18 -> d19  [key=0, style=solid, color=green];
d18 -> d20  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> n24  [key=2, style=dotted, color=green];
d21 -> d18  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid];
d8 -> d17  [key=2, style=dotted];
d9 -> n0  [key=0, style=bold, color=blue];
m0_1 -> n15  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.Direction"];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m0_2 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_2  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=0, style=solid, color=green];
m0_20 -> m0_21  [key=0, style=solid, color=red];
m0_20 -> m0_22  [key=0, style=solid, color=red];
m0_19 -> m0_18  [key=0, style=solid, color=green];
m0_19 -> m0_23  [key=2, style=dotted, color=red];
m0_21 -> m0_20  [key=0, style=solid, color=red];
m0_21 -> m0_24  [key=2, style=dotted, color=red];
m0_22 -> m0_17  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_25 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m0_25 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_0 -> m5_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m5_0 -> m5_3  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m5_0 -> m5_4  [key=1, style=dashed, color=green, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_1  [key=0, style=solid, color=green];
m5_2 -> m5_6  [key=2, style=dotted, color=green];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_5  [key=0, style=solid, color=green];
m5_4 -> m5_3  [key=0, style=solid, color=green];
m5_4 -> m5_7  [key=2, style=dotted, color=green];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_11  [key=2, style=dotted, color=green];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> n10  [key=2, style=dotted, color=green];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_13  [key=2, style=dotted, color=green];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_14  [key=2, style=dotted, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_15  [key=2, style=dotted, color=green];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_16  [key=2, style=dotted, color=green];
m6_6 -> m6_8  [key=1, style=dashed, color=green, label=_price];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_7 -> m6_17  [key=2, style=dotted, color=green];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_17  [key=2, style=dotted, color=green];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_18  [key=2, style=dotted, color=green];
m6_9 -> m6_19  [key=2, style=dotted, color=green];
m6_10 -> m6_0  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid, color=green];
m6_21 -> m6_22  [key=0, style=solid, color=green];
m6_21 -> m6_23  [key=0, style=solid, color=green];
m6_22 -> m6_30  [key=0, style=solid, color=green];
m6_23 -> m6_24  [key=0, style=solid, color=green];
m6_23 -> m6_27  [key=0, style=solid, color=green];
m6_24 -> m6_25  [key=0, style=solid, color=green];
m6_24 -> m6_30  [key=0, style=solid, color=green];
m6_27 -> m6_30  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_31  [key=2, style=dotted];
m6_26 -> m6_30  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_26 -> m6_33  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_31  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_33  [key=2, style=dotted];
m6_30 -> m6_20  [key=0, style=bold, color=blue];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_35 -> m6_38  [key=2, style=dotted];
m6_36 -> m6_34  [key=0, style=bold, color=blue];
m6_39 -> m6_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_7  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_8  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_9  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_21  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_23  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_24  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m6_39 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=2, style=dotted, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid, color=green];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_5 -> m7_7  [key=2, style=dotted, color=green];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_14 -> m8_19  [key=2, style=dotted];
m8_15 -> m8_14  [key=0, style=solid];
m8_15 -> m8_20  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_21  [key=2, style=dotted];
m8_17 -> m8_12  [key=0, style=bold, color=blue];
m8_18 -> m8_45  [key=0, style=solid, color=green];
m8_45 -> m8_46  [key=0, style=solid, color=green];
m8_45 -> m8_47  [key=0, style=solid, color=green];
m8_46 -> m8_53  [key=0, style=solid, color=green];
m8_46 -> m8_11  [key=2, style=dotted, color=green];
m8_47 -> m8_48  [key=0, style=solid, color=green];
m8_47 -> m8_49  [key=0, style=solid, color=green];
m8_48 -> m8_53  [key=0, style=solid, color=green];
m8_48 -> m8_11  [key=2, style=dotted, color=green];
m8_49 -> m8_50  [key=0, style=solid, color=green];
m8_49 -> m8_51  [key=0, style=solid, color=green];
m8_50 -> m8_53  [key=0, style=solid, color=green];
m8_50 -> m8_11  [key=2, style=dotted, color=green];
m8_51 -> m8_52  [key=0, style=solid, color=green];
m8_51 -> m8_53  [key=0, style=solid, color=green];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_11  [key=2, style=dotted];
m8_53 -> m8_18  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_9  [key=2, style=dotted, color=green];
m8_1 -> m8_5  [key=1, style=dashed, color=green, label=type];
m8_2 -> m8_3  [key=0, style=solid, color=green];
m8_2 -> m8_10  [key=2, style=dotted, color=green];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_10  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid, color=green];
m8_3 -> m8_5  [key=0, style=solid, color=green];
m8_4 -> m8_8  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_6 -> m8_8  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_11  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_0  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid, color=green];
m8_40 -> m8_42  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m8_41 -> m8_42  [key=0, style=solid, color=green];
m8_41 -> m8_44  [key=2, style=dotted, color=green];
m8_42 -> m8_43  [key=0, style=solid, color=green];
m8_42 -> m8_44  [key=2, style=dotted, color=green];
m8_43 -> m8_40  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid, color=green];
m8_27 -> m8_35  [key=2, style=dotted, color=green];
m8_27 -> m8_29  [key=1, style=dashed, color=green, label=quantity];
m8_25 -> m8_27  [key=1, style=dashed, color=green, label=target];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_30  [key=0, style=solid];
m8_25 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=target];
m8_26 -> m8_27  [key=0, style=solid, color=green];
m8_26 -> m8_33  [key=2, style=dotted];
m8_26 -> m8_34  [key=2, style=dotted];
m8_26 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_28 -> m8_29  [key=0, style=solid, color=green];
m8_28 -> m8_25  [key=0, style=solid, color=green];
m8_29 -> m8_25  [key=0, style=solid];
m8_29 -> m8_36  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_31  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_32  [key=2, style=dotted];
m8_30 -> m8_22  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_37  [key=0, style=bold, color=blue];
m8_54 -> m8_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_27  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_41  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_42  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_45  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_47  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_49  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m8_54 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_0 -> m9_2  [key=1, style=dashed, color=green, label=decimal];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid, color=green];
m9_5 -> m9_6  [key=0, style=solid, color=green];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_7 -> m9_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m9_7 -> m9_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m9_7 -> m9_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_10 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_12  [key=2, style=dotted, color=green];
m10_11 -> m10_9  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_0 -> m10_2  [key=0, style=bold, color=green];
m10_0 -> m10_6  [key=0, style=bold, color=green];
m10_0 -> m10_4  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>"];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_3 -> m10_5  [key=1, style=dashed, color=green, label=percent];
m10_6 -> m10_4  [key=0, style=solid, color=green];
m10_6 -> m10_8  [key=2, style=dotted, color=green];
m10_4 -> m10_6  [key=1, style=dashed, color=green, label=signal];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_4 -> m10_7  [key=0, style=solid, color=green];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m10_13 -> m10_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
m10_13 -> m10_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
m10_13 -> m10_10  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
}
