digraph  {
m0_0 [label="Entry QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", span="23-23", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_1 [label="SetStartDate(2013, 11, 7)", span="25-25", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_2 [label="SetEndDate(2013, 11, 8)", span="26-26", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_3 [label="SetCash(100000)", span="27-27", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_4 [label="SetBenchmark(x => 0)", span="28-28", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_5 [label="_symbol = AddEquity(''VXX'', Resolution.Hour).Symbol", span="30-30", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_6 [label="Exit QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", span="23-23", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="BacktestingResultHandler.cs"];
m0_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BacktestingResultHandler.cs"];
m0_23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="BacktestingResultHandler.cs"];
m0_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BacktestingResultHandler.cs"];
m0_22 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="BacktestingResultHandler.cs"];
m0_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="BacktestingResultHandler.cs"];
m0_15 [label="Entry QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_16 [label="TradeBar bar", span="35-35", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_17 [label="!tradeBars.TryGetValue(_symbol, out bar)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_18 [label="return;", span="36-36", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_19 [label="!Portfolio.Invested && Time.Date == EndDate.Date", span="38-38", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_20 [label="Buy(_symbol, 1)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_21 [label="Exit QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BacktestingResultHandler.cs"];
m0_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BacktestingResultHandler.cs"];
m0_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BacktestingResultHandler.cs"];
m0_12 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m0_13 [label=0, span="28-28", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m0_14 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m0_24 [label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm", span="", file="BacktestingResultHandler.cs"];
m2_153 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs"];
m2_119 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="437-437", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_137 [label="var security = Securities[symbol]", span="464-464", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_133 [label=liquidateExistingHoldings, span="451-451", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_134 [label="Portfolio.Keys", span="453-453", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_138 [label="var total = Portfolio.TotalHoldingsValue + Portfolio.Cash * security.Leverage", span="465-465", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_144 [label="var projectedFees = security.Model.GetOrderFee(deltaQuantity, security.Price)", span="482-482", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_139 [label="var deltaValue = (total * percentage) - Portfolio[symbol].HoldingsValue", span="468-468", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_148 [label="Debug(string.Format(''TOTAL {0}, VALUE {1}, QUANTITY {2}'', total, deltaValue, deltaQuantity))", span="495-495", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_142 [label="deltaQuantity = Math.Round(deltaValue / Securities[symbol].Price)", span="475-475", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_140 [label="var deltaQuantity = 0m", span="469-469", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_143 [label="Math.Abs(deltaQuantity) > 0", span="479-479", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_145 [label="var direction = (deltaQuantity > 0) ? 1 : -1", span="489-489", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_146 [label="deltaQuantity = Math.Floor(deltaQuantity * ((deltaValue - projectedFees * direction) / deltaValue))", span="490-490", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_147 [label="deltaQuantity = Math.Floor(deltaQuantity*0.99m)", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs"];
m2_149 [label="MarketOrder(symbol, (int)deltaQuantity, false, tag)", span="496-496", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_126 [label="!Portfolio.ContainsKey(symbol)", span="440-440", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_127 [label="Debug(symbol.ToUpper() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="442-442", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_135 [label="holdingSymbol != symbol && Portfolio[holdingSymbol].AbsoluteQuantity > 0", span="455-455", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_136 [label="Order(holdingSymbol, -Portfolio[holdingSymbol].Quantity)", span="458-458", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_141 [label="Math.Abs(Securities[symbol].Price) > 0", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_129 [label="percentage > 1", span="447-447", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_131 [label="percentage < -1", span="448-448", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_132 [label="percentage = -1", span="448-448", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_130 [label="percentage = 1", span="447-447", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_128 [label="return;", span="443-443", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_150 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="437-437", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_120 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="409-409", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_121 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="411-411", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_122 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="409-409", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_155 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="84-84", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="QCAlgorithm.Trading.cs"];
m2_58 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", span="261-261", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_59 [label="var error = PreOrderChecks(symbol, quantity, OrderType.StopMarket)", span="263-263", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_62 [label="var order = new StopMarketOrder(symbol, quantity, stopPrice, Time, tag, Securities[symbol].Type)", span="269-269", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_63 [label="return Transactions.AddOrder(order);", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_60 [label="error < 0", span="264-264", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_61 [label="return error;", span="266-266", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_64 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", span="261-261", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_29 [label="return Order(symbol, (int) quantity);", span="172-172", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_30 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, decimal)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_25 [label="return Order(symbol, quantity);", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_26 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, decimal)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_7 [label="QuantConnect.Securities.AccountEvent", span="", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double)", file="QCAlgorithm.Trading.cs"];
m2_27 [label="return Order(symbol, (int) quantity);", span="162-162", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double)", file="QCAlgorithm.Trading.cs"];
m2_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, double)", span="160-160", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double)", file="QCAlgorithm.Trading.cs"];
m2_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs"];
m2_66 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", span="284-284", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_67 [label="var error = PreOrderChecks(symbol, quantity, OrderType.StopLimit)", span="286-286", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_70 [label="var order = new StopLimitOrder(symbol, quantity, stopPrice, limitPrice, Time, tag, Securities[symbol].Type)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_71 [label="return Transactions.AddOrder(order);", span="295-295", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_68 [label="error < 0", span="287-287", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_69 [label="return error;", span="289-289", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_72 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", span="284-284", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", span="303-303", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_77 [label="!Securities.ContainsKey(symbol) && !_sentNoDataError", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_78 [label="_sentNoDataError = true", span="317-317", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_79 [label="Error(''You haven't requested '' + symbol + '' data. Add this with AddSecurity() in the Initialize() Method.'')", span="318-318", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_81 [label="var security = Securities[symbol]", span="323-323", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_84 [label="Error(''Asset price is $0. If using custom data make sure you've set the 'Value' property.'')", span="328-328", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_87 [label="Error(''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'')", span="335-335", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_90 [label="Error(''Market order and exchange not open'')", span="342-342", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_92 [label="Orders.Count > (_endDate - _startDate).TotalDays * 100", span="347-347", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_93 [label="Error(''You have exceeded 100 orders per day'')", span="349-349", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_76 [label="symbol = symbol.ToUpper()", span="312-312", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_80 [label="return -1;", span="319-319", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_82 [label="var price = security.Price", span="324-324", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_86 [label="!security.HasData", span="333-333", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_89 [label="type == OrderType.Market && !security.Exchange.ExchangeOpen", span="340-340", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_83 [label="price == 0", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_85 [label="return -1;", span="329-329", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_88 [label="return -1;", span="336-336", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_91 [label="return -3;", span="343-343", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_95 [label="return 0;", span="353-353", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_94 [label="return -5;", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_74 [label="quantity == 0 || string.IsNullOrEmpty(symbol)", span="306-306", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_75 [label="return -1;", span="308-308", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_96 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", span="303-303", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_164 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", span="535-535", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_165 [label="return Order(symbol, quantity);", span="537-537", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_166 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", span="535-535", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_50 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", span="239-239", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_51 [label="var error = PreOrderChecks(symbol, quantity, OrderType.Limit)", span="241-241", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_54 [label="var order = new LimitOrder(symbol, quantity, limitPrice, Time, tag, Securities[symbol].Type)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_55 [label="return Transactions.AddOrder(order);", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_52 [label="error < 0", span="242-242", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_53 [label="return error;", span="244-244", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_56 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", span="239-239", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs"];
m2_57 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m2_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="735-735", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs"];
m2_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="QCAlgorithm.Trading.cs"];
m2_22 [label="return Order(symbol, quantity);", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="QCAlgorithm.Trading.cs"];
m2_23 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="QCAlgorithm.Trading.cs"];
m2_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs"];
m2_13 [label="return Order(symbol, quantity);", span="108-108", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs"];
m2_14 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs"];
m2_3 [label="Entry QuantConnect.Securities.AccountEvent.ToString()", span="43-43", cluster="QuantConnect.Securities.AccountEvent.ToString()", file="QCAlgorithm.Trading.cs"];
m2_31 [label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="185-185", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_32 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="183-183", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_116 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs"];
m2_117 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="398-398", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs"];
m2_118 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs"];
m2_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", span="84-84", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", file="QCAlgorithm.Trading.cs"];
m2_5 [label="return Order(symbol, quantity);", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", file="QCAlgorithm.Trading.cs"];
m2_73 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="74-74", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m2_46 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m2_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs"];
m2_1 [label="return Order(symbol, quantity);", span="75-75", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs"];
m2_2 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs"];
m2_65 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs"];
m2_151 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="110-110", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="QCAlgorithm.Trading.cs"];
m2_152 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs"];
m2_98 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="QCAlgorithm.Trading.cs"];
m2_6 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="QCAlgorithm.Trading.cs"];
m2_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", span="95-95", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_9 [label="return Order(symbol, quantity);", span="97-97", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_10 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", span="95-95", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs"];
m2_47 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", span="175-175", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs"];
m2_49 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="QCAlgorithm.Trading.cs"];
m2_101 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_104 [label="Securities.Keys", span="368-368", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_105 [label="!Portfolio[symbol].HoldStock || (symbol != symbolToLiquidate && symbolToLiquidate != '''')", span="371-371", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_107 [label="Portfolio[symbol].IsLong", span="374-374", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_108 [label="quantity = -Portfolio[symbol].Quantity", span="376-376", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_109 [label="quantity = Math.Abs(Portfolio[symbol].Quantity)", span="380-380", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_110 [label="orderIdList.Add(Order(symbol, quantity))", span="383-383", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_106 [label="var quantity = 0", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_103 [label="symbolToLiquidate = symbolToLiquidate.ToUpper()", span="366-366", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_111 [label="return orderIdList;", span="385-385", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_102 [label="var orderIdList = new List<int>()", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_112 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m2_158 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_159 [label="return Order(symbol, quantity, asynchronous, tag);", span="513-513", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_160 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_33 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="196-196", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_34 [label="var error = PreOrderChecks(symbol, quantity, OrderType.Market)", span="199-199", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_37 [label="var order = new MarketOrder(symbol, quantity, Time, tag, Securities[symbol].Type)", span="205-205", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_38 [label="order.Price = Securities[symbol].Price", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_39 [label="var orderId = Transactions.AddOrder(order)", span="211-211", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_41 [label="!Transactions.Orders.ContainsKey(orderId) ||\r\n                       (Transactions.Orders[orderId].Status != OrderStatus.Filled &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Invalid &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Canceled) || _processingOrder", span="219-222", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_35 [label="error < 0", span="200-200", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_36 [label="return error;", span="202-202", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_40 [label="!asynchronous", span="215-215", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_43 [label="return orderId;", span="228-228", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_42 [label="Thread.Sleep(1)", span="224-224", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_44 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="196-196", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_48 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Trading.cs"];
m2_99 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="212-212", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="QCAlgorithm.Trading.cs"];
m2_154 [label="Entry System.Math.Round(decimal)", span="0-0", cluster="System.Math.Round(decimal)", file="QCAlgorithm.Trading.cs"];
m2_157 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Trading.cs"];
m2_115 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs"];
m2_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs"];
m2_19 [label="return Order(symbol, quantity);", span="130-130", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs"];
m2_20 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs"];
m2_161 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="523-523", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_162 [label="return Order(symbol, (int)quantity);", span="525-525", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_163 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="523-523", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs"];
m2_156 [label="Entry System.Math.Floor(decimal)", span="0-0", cluster="System.Math.Floor(decimal)", file="QCAlgorithm.Trading.cs"];
m2_97 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="QCAlgorithm.Trading.cs"];
m2_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs"];
m2_16 [label="return Order(symbol, quantity);", span="119-119", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs"];
m2_17 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs"];
m2_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="423-423", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_124 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="425-425", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_125 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="423-423", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m2_114 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs"];
m2_167 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="QCAlgorithm.Trading.cs"];
m3_13 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="SecurityTransactionManager.cs"];
m3_8 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="SecurityTransactionManager.cs"];
m3_152 [label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120", cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="SecurityTransactionManager.cs"];
m3_176 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="252-252", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="94-94", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_23 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_24 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="94-94", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_33 [label="return Order(symbol, (int) quantity);", span="138-138", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_34 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="162-162", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_38 [label="var security = Securities[symbol]", span="164-164", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_40 [label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_42 [label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="173-173", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_44 [label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="178-178", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_45 [label="var preOrderCheckResponse = PreOrderChecks(request)", span="181-181", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_47 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_48 [label="var ticket = Transactions.AddOrder(request)", span="188-188", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_50 [label="Transactions.WaitForOrder(ticket.OrderId)", span="193-193", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_39 [label="!security.Exchange.ExchangeOpen", span="168-168", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_41 [label="mooTicket.SubmitRequest.Response.IsSuccess && security.SubscriptionDataConfig.Resolution != Resolution.Daily", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_43 [label="return mooTicket;", span="175-175", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_46 [label="preOrderCheckResponse.IsError", span="182-182", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_49 [label="!asynchronous", span="191-191", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_51 [label="return ticket;", span="196-196", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_52 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="162-162", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_59 [label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="220-220", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="SecurityTransactionManager.cs"];
m3_174 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SecurityTransactionManager.cs"];
m3_213 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_214 [label="return CalculateOrderQuantity(symbol, (decimal)target);", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_215 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_105 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1454-1454", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SecurityTransactionManager.cs"];
m3_148 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="223-223", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityTransactionManager.cs"];
m3_83 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="268-268", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_84 [label="var security = Securities[symbol]", span="270-270", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_85 [label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="271-271", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_86 [label="var response = PreOrderChecks(request)", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_88 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="275-275", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_89 [label="return Transactions.AddOrder(request);", span="278-278", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_87 [label="response.IsError", span="273-273", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_90 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="268-268", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_146 [label="Entry QuantConnect.Symbol.ToString()", span="208-208", cluster="QuantConnect.Symbol.ToString()", file="SecurityTransactionManager.cs"];
m3_190 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_198 [label="!Securities.TryGetValue(symbol, out security)", span="544-544", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_199 [label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="546-546", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_202 [label=Portfolio, span="553-553", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_206 [label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="560-560", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_207 [label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="566-566", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_209 [label="MarketOrder(symbol, quantity, false, tag)", span="569-569", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_197 [label="Security security", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_201 [label=liquidateExistingHoldings, span="551-551", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_200 [label="return;", span="547-547", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_205 [label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_203 [label="var holdingSymbol = kvp.Key", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_204 [label="var holdings = kvp.Value", span="556-556", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_208 [label="Math.Abs(quantity) > 0", span="567-567", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_210 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="SecurityTransactionManager.cs"];
m3_180 [label="Entry lambda expression", span="429-429", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m3_181 [label="x.Value", span="429-429", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m3_182 [label="Exit lambda expression", span="429-429", cluster="lambda expression", file="SecurityTransactionManager.cs"];
m3_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="83-83", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="SecurityTransactionManager.cs"];
m3_20 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="SecurityTransactionManager.cs"];
m3_21 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="83-83", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="SecurityTransactionManager.cs"];
m3_178 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", span="163-163", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", file="SecurityTransactionManager.cs"];
m3_254 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47", cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="SecurityTransactionManager.cs"];
m3_261 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="693-693", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_262 [label="return Order(symbol, quantity);", span="695-695", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_263 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="693-693", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_191 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="512-512", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityTransactionManager.cs"];
m3_192 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="514-514", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityTransactionManager.cs"];
m3_193 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="512-512", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="SecurityTransactionManager.cs"];
m3_91 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="290-290", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_92 [label="var security = Securities[symbol]", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_93 [label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="293-293", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_94 [label="var response = PreOrderChecks(request)", span="294-294", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_96 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="297-297", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_97 [label="return Transactions.AddOrder(request);", span="301-301", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_95 [label="response.IsError", span="295-295", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_98 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="290-290", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="SecurityTransactionManager.cs"];
m3_150 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="224-224", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="SecurityTransactionManager.cs"];
m3_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="72-72", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_16 [label="return Order(symbol, Math.Abs(quantity));", span="74-74", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_17 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="72-72", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_0 [label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket()", span="55-55", cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket()", file="SecurityTransactionManager.cs"];
m3_1 [label="Exit QuantConnect.Packets.OrderEventPacket.OrderEventPacket()", span="55-55", cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket()", file="SecurityTransactionManager.cs"];
m3_2 [label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="62-62", cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", file="SecurityTransactionManager.cs"];
m3_104 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="324-324", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_112 [label="!security.IsTradable", span="342-342", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", color=green, community=0, file="SecurityTransactionManager.cs"];
m3_111 [label="var security = Securities[request.Symbol]", span="340-340", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_113 [label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="344-344", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_114 [label="var price = security.Price", span="347-347", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_108 [label="!Securities.ContainsKey(request.Symbol) && !_sentNoDataError", span="333-333", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_115 [label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_120 [label="var quoteCurrency = security.QuoteCurrency.Symbol", span="362-362", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_123 [label="security.QuoteCurrency.ConversionRate == 0m", span="367-367", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_125 [label="security.Type == SecurityType.Forex", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_127 [label="var baseCurrency = ((Forex) security).BaseCurrencySymbol", span="376-376", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_132 [label="!security.HasData", span="388-388", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_138 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="402-402", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_140 [label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="405-405", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_117 [label="price == 0", span="355-355", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_109 [label="_sentNoDataError = true", span="335-335", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_121 [label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_128 [label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="377-377", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_134 [label="Transactions.OrdersCount > _maxOrders", span="394-394", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_135 [label="Status = AlgorithmStatus.Stopped", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_136 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_106 [label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty", span="327-327", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_107 [label="return OrderResponse.ZeroQuantity(request);", span="329-329", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_110 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="336-336", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_116 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_118 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="357-357", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_122 [label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_124 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="369-369", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_129 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="379-379", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_131 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="383-383", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_133 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="390-390", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_137 [label="request.OrderType == OrderType.MarketOnClose", span="400-400", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_141 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_142 [label="return OrderResponse.Success(request);", span="415-415", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_119 [label="Cash quoteCash", span="361-361", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_126 [label="Cash baseCash", span="375-375", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_130 [label="baseCash.ConversionRate == 0m", span="381-381", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_139 [label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="404-404", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_143 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="324-324", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_26 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="108-108", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_27 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="SecurityTransactionManager.cs"];
m3_5 [label="Exit QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="62-62", cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", file="SecurityTransactionManager.cs"];
m3_6 [label="QuantConnect.Packets.OrderEventPacket", span="", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_7 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="50-50", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_258 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="681-681", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_259 [label="return Order(symbol, (int)quantity);", span="683-683", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_260 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="681-681", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="SecurityTransactionManager.cs"];
m3_252 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="498-498", cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityTransactionManager.cs"];
m3_18 [label="Entry System.Math.Abs(float)", span="0-0", cluster="System.Math.Abs(float)", file="SecurityTransactionManager.cs"];
m3_54 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1429-1429", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SecurityTransactionManager.cs"];
m3_147 [label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128", cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="SecurityTransactionManager.cs"];
m3_53 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_60 [label="var security = Securities[symbol]", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_61 [label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="209-209", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_62 [label="var response = PreOrderChecks(request)", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_64 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="213-213", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_65 [label="return Transactions.AddOrder(request);", span="216-216", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_63 [label="response.IsError", span="211-211", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_66 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_251 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m3_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_31 [label="return Order(symbol, (int) quantity);", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_32 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="SecurityTransactionManager.cs"];
m3_266 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="SecurityTransactionManager.cs"];
m3_149 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SecurityTransactionManager.cs"];
m3_75 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_76 [label="var security = Securities[symbol]", span="249-249", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_77 [label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_78 [label="var response = PreOrderChecks(request)", span="251-251", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_80 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="254-254", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_81 [label="return Transactions.AddOrder(request);", span="257-257", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_79 [label="response.IsError", span="252-252", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_82 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="SecurityTransactionManager.cs"];
m3_211 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityTransactionManager.cs"];
m3_212 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_216 [label="var security = Securities[symbol]", span="594-594", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_222 [label="var targetPortfolioValue = target*Portfolio.TotalPortfolioValue", span="604-604", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_227 [label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="613-613", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_228 [label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="616-616", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_241 [label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="642-642", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_217 [label="var price = security.Price", span="595-595", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_221 [label="return -security.Holdings.Quantity;", span="601-601", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_223 [label="var quantity = security.Holdings.Quantity", span="605-605", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_242 [label="orderValue = order.GetValue(security)", span="643-643", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_243 [label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="644-644", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_245 [label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="648-648", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_220 [label="target == 0", span="601-601", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_225 [label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="609-609", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_226 [label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="610-610", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_235 [label="var orderQuantity = (int)(targetOrderValue / unitPrice)", span="626-626", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_244 [label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="645-645", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_229 [label="marginRemaining <= 0", span="617-617", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_247 [label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="652-652", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_239 [label="orderQuantity -= feeToPriceRatio", span="636-636", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_240 [label="orderQuantity--", span="638-638", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_237 [label="iterations > 0", span="632-632", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_218 [label="price == 0", span="598-598", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_224 [label="var currentHoldingsValue = price*quantity", span="606-606", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_246 [label="iterations++", span="650-650", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_248 [label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="655-655", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_234 [label="var feeToPriceRatio = 0", span="623-623", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_236 [label="var iterations = 0", span="627-627", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_230 [label="return 0;", span="617-617", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_231 [label="decimal marginRequired", span="620-620", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_238 [label="feeToPriceRatio > 0", span="635-635", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_219 [label="return 0;", span="598-598", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_233 [label="decimal orderFees", span="622-622", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_232 [label="decimal orderValue", span="621-621", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_249 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="61-61", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_11 [label="return Order(symbol, Math.Abs(quantity));", span="63-63", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_12 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="61-61", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_255 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="669-669", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityTransactionManager.cs"];
m3_256 [label="return Order(symbol, quantity, asynchronous, tag);", span="671-671", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityTransactionManager.cs"];
m3_257 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="669-669", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="SecurityTransactionManager.cs"];
m3_145 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_175 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SecurityTransactionManager.cs"];
m3_3 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="SecurityTransactionManager.cs"];
m3_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="149-149", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_153 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="424-424", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_156 [label="Securities.Keys.OrderBy(x => x.Value)", span="429-429", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_158 [label="var orders = Transactions.GetOpenOrders(symbol)", span="436-436", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_159 [label="var quantity = Portfolio[symbol].Quantity", span="439-439", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_164 [label="var ticket = Transactions.GetOrderTicket(order.Id)", span="452-452", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_167 [label="Transactions.CancelOrder(order.Id)", span="461-461", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_169 [label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="469-469", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_155 [label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="427-427", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_171 [label="orderIdList.Add(ticket.OrderId)", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_157 [label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_160 [label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="442-442", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_168 [label="quantity != 0", span="466-466", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_170 [label="ticket.Status == OrderStatus.Filled", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_172 [label="return orderIdList;", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_162 [label=orders, span="447-447", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_163 [label="order.Type == OrderType.Market", span="449-449", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_165 [label="ticket != null", span="453-453", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_166 [label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="456-456", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_161 [label="var marketOrdersQuantity = 0m", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_154 [label="var orderIdList = new List<int>()", span="426-426", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_173 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="424-424", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="SecurityTransactionManager.cs"];
m3_58 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_253 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="SecurityTransactionManager.cs"];
m3_57 [label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405", cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="SecurityTransactionManager.cs"];
m3_250 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="SecurityTransactionManager.cs"];
m3_183 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="484-484", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityTransactionManager.cs"];
m3_184 [label="!_locked", span="486-486", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityTransactionManager.cs"];
m3_185 [label="_maxOrders = max", span="488-488", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityTransactionManager.cs"];
m3_186 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="484-484", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="SecurityTransactionManager.cs"];
m3_179 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityTransactionManager.cs"];
m3_187 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="499-499", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityTransactionManager.cs"];
m3_188 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityTransactionManager.cs"];
m3_189 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="499-499", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="SecurityTransactionManager.cs"];
m3_55 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="698-698", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="SecurityTransactionManager.cs"];
m3_264 [label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="700-700", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="SecurityTransactionManager.cs"];
m3_265 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="698-698", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="SecurityTransactionManager.cs"];
m3_151 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="SecurityTransactionManager.cs"];
m3_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_29 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="119-119", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_30 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="SecurityTransactionManager.cs"];
m3_144 [label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154", cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="SecurityTransactionManager.cs"];
m3_35 [label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_36 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="149-149", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="226-226", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_68 [label="var security = Securities[symbol]", span="228-228", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_69 [label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="229-229", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_70 [label="var response = PreOrderChecks(request)", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_72 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_73 [label="return Transactions.AddOrder(request);", span="236-236", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_71 [label="response.IsError", span="231-231", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_74 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="226-226", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityTransactionManager.cs"];
m3_56 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="309-309", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_99 [label="var response = PreOrderChecksImpl(request)", span="311-311", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_101 [label="Error(response.ErrorMessage)", span="314-314", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_100 [label="response.IsError", span="312-312", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_102 [label="return response;", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_103 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="309-309", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="SecurityTransactionManager.cs"];
m3_177 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="208-208", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="SecurityTransactionManager.cs"];
m3_194 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="525-525", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_195 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="527-527", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_196 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="525-525", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityTransactionManager.cs"];
m3_267 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="SecurityTransactionManager.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_18 -> m0_21  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [key=2, style=dotted];
m0_21 -> m0_15  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_24 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m0_24 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m2_119 -> m2_137  [key=1, style=dashed, color=green, label=string];
m2_119 -> m2_126  [key=0, style=solid];
m2_119 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m2_119 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m2_119 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_119 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_119 -> m2_116  [key=3, color=darkorchid, style=bold, label="Parameter variable bool liquidateExistingHoldings"];
m2_119 -> m2_120  [key=3, color=darkorchid, style=bold, label="Parameter variable bool liquidateExistingHoldings"];
m2_119 -> m2_123  [key=3, color=darkorchid, style=bold, label="Parameter variable bool liquidateExistingHoldings"];
m2_137 -> m2_138  [key=0, style=solid, color=green];
m2_137 -> m2_144  [key=1, style=dashed, color=green, label=security];
m2_133 -> m2_137  [key=0, style=solid, color=green];
m2_133 -> m2_134  [key=0, style=solid];
m2_134 -> m2_137  [key=0, style=solid, color=green];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m2_138 -> m2_139  [key=0, style=solid, color=green];
m2_138 -> m2_148  [key=1, style=dashed, color=green, label=total];
m2_144 -> m2_145  [key=0, style=solid, color=green];
m2_144 -> m2_155  [key=2, style=dotted, color=green];
m2_144 -> m2_146  [key=1, style=dashed, color=green, label=projectedFees];
m2_139 -> m2_148  [key=1, style=dashed, color=green, label=deltaValue];
m2_139 -> m2_146  [key=1, style=dashed, color=green, label=deltaValue];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=deltaValue];
m2_148 -> m2_149  [key=0, style=solid, color=green];
m2_148 -> m2_157  [key=2, style=dotted, color=green];
m2_148 -> m2_152  [key=2, style=dotted, color=green];
m2_142 -> m2_144  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_142 -> m2_146  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_142 -> m2_145  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_154  [key=2, style=dotted];
m2_140 -> m2_144  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_140 -> m2_146  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_140 -> m2_145  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_140 -> m2_140  [key=3, color=darkorchid, style=bold, label="Local variable decimal deltaQuantity"];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=deltaQuantity];
m2_143 -> m2_144  [key=0, style=solid, color=green];
m2_143 -> m2_150  [key=0, style=solid];
m2_143 -> m2_153  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid, color=green];
m2_146 -> m2_146  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_146 -> m2_147  [key=0, style=solid, color=green];
m2_146 -> m2_156  [key=2, style=dotted, color=green];
m2_147 -> m2_148  [key=0, style=solid, color=green];
m2_147 -> m2_147  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_147 -> m2_156  [key=2, style=dotted, color=green];
m2_147 -> m2_149  [key=1, style=dashed, color=green, label=deltaQuantity];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_33  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_129  [key=0, style=solid];
m2_126 -> m2_151  [key=2, style=dotted];
m2_127 -> m2_152  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_98  [key=2, style=dotted];
m2_135 -> m2_134  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_136 -> m2_134  [key=0, style=solid];
m2_136 -> m2_3  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=0, style=solid];
m2_141 -> m2_153  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=0, style=solid];
m2_131 -> m2_133  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m2_130 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m2_130 -> m2_131  [key=0, style=solid];
m2_128 -> m2_150  [key=0, style=solid];
m2_150 -> m2_119  [key=0, style=bold, color=blue];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_119  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_122 -> m2_120  [key=0, style=bold, color=blue];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_45  [key=2, style=dotted];
m2_59 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_47  [key=2, style=dotted];
m2_60 -> m2_62  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_64  [key=0, style=solid];
m2_64 -> m2_58  [key=0, style=bold, color=blue];
m2_11 -> m2_29  [key=0, style=solid];
m2_11 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_11 -> m2_8  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m2_11 -> m2_24  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_3  [key=2, style=dotted];
m2_30 -> m2_11  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_11  [key=3, color=darkorchid, style=bold, label="method methodReturn int Sell"];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_11  [key=2, style=dotted];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_7 -> m2_27  [key=0, style=solid];
m2_7 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_7 -> m2_4  [key=3, color=darkorchid, style=bold, label="Parameter variable double quantity"];
m2_7 -> m2_12  [key=3, color=darkorchid, style=bold, label="Parameter variable double quantity"];
m2_7 -> m2_18  [key=3, color=darkorchid, style=bold, label="Parameter variable double quantity"];
m2_7 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable double quantity"];
m2_7 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_3  [key=2, style=dotted];
m2_28 -> m2_7  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_45  [key=2, style=dotted];
m2_67 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_73  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_47  [key=2, style=dotted];
m2_68 -> m2_70  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_72  [key=0, style=solid];
m2_72 -> m2_66  [key=0, style=bold, color=blue];
m2_45 -> m2_34  [key=3, color=darkorchid, style=bold, label="method methodReturn int PreOrderChecks"];
m2_45 -> m2_51  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderType type"];
m2_45 -> m2_59  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderType type"];
m2_45 -> m2_67  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderType type"];
m2_45 -> m2_33  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_45 -> m2_74  [key=0, style=solid];
m2_45 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_45 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m2_45 -> m2_50  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_45 -> m2_58  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_45 -> m2_66  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_45 -> m2_75  [key=3, color=darkorchid, style=bold, label="method methodReturn int PreOrderChecks"];
m2_45 -> m2_91  [key=3, color=darkorchid, style=bold, label="method methodReturn int PreOrderChecks"];
m2_45 -> m2_94  [key=3, color=darkorchid, style=bold, label="method methodReturn int PreOrderChecks"];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_81  [key=0, style=solid];
m2_77 -> m2_99  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_100  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_81 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_100  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_100  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_100  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_100  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_76 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_76 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_76 -> m2_98  [key=2, style=dotted];
m2_80 -> m2_96  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_92  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=0, style=solid];
m2_85 -> m2_96  [key=0, style=solid];
m2_88 -> m2_96  [key=0, style=solid];
m2_91 -> m2_96  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_94 -> m2_96  [key=0, style=solid];
m2_74 -> m2_76  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_97  [key=2, style=dotted];
m2_75 -> m2_96  [key=0, style=solid];
m2_96 -> m2_45  [key=0, style=bold, color=blue];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_3  [key=2, style=dotted];
m2_166 -> m2_164  [key=0, style=bold, color=blue];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_45  [key=2, style=dotted];
m2_51 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_47  [key=2, style=dotted];
m2_52 -> m2_54  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_56  [key=0, style=solid];
m2_56 -> m2_50  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_7  [key=3, color=darkorchid, style=bold, label="method methodReturn int Sell"];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_7  [key=2, style=dotted];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_7  [key=3, color=darkorchid, style=bold, label="method methodReturn int Buy"];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_7  [key=2, style=dotted];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_3 -> m2_134  [key=3, color=darkorchid, style=bold, label="Parameter variable string symbol"];
m2_3 -> m2_31  [key=0, style=solid];
m2_3 -> m2_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string symbol"];
m2_3 -> m2_33  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_3 -> m2_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_15  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_7  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_11  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_158  [key=3, color=darkorchid, style=bold, label="Parameter variable string tag"];
m2_3 -> m2_161  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_164  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_106  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_3 -> m2_4  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=2, style=dotted];
m2_32 -> m2_3  [key=0, style=bold, color=blue];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_119  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_4 -> m2_7  [key=3, color=darkorchid, style=bold, label="method methodReturn int Buy"];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Buy"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=3, color=darkorchid, style=bold, label="method methodReturn int Buy"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_101 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_101 -> m2_102  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_111  [key=0, style=solid];
m2_104 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_104 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_104 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_104 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_105 -> m2_104  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_114  [key=2, style=dotted];
m2_110 -> m2_104  [key=0, style=solid];
m2_110 -> m2_3  [key=2, style=dotted];
m2_110 -> m2_115  [key=2, style=dotted];
m2_106 -> m2_34  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m2_106 -> m2_107  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_103 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_103 -> m2_98  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_102 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m2_102 -> m2_113  [key=2, style=dotted];
m2_112 -> m2_101  [key=0, style=bold, color=blue];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_3  [key=2, style=dotted];
m2_160 -> m2_158  [key=0, style=bold, color=blue];
m2_33 -> m2_119  [key=3, color=darkorchid, style=bold, label="Parameter variable string tag"];
m2_33 -> m2_140  [key=3, color=darkorchid, style=bold, label="Parameter variable int quantity"];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_33 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_33 -> m2_39  [key=3, color=darkorchid, style=bold, label="method methodReturn int MarketOrder"];
m2_33 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_33 -> m2_3  [key=3, color=darkorchid, style=bold, label="Parameter variable string tag"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_45  [key=2, style=dotted];
m2_34 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_46  [key=2, style=dotted];
m2_37 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=order];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_47  [key=2, style=dotted];
m2_39 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m2_39 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=0, style=solid];
m2_41 -> m2_48  [key=2, style=dotted];
m2_35 -> m2_37  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_44  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_42 -> m2_41  [key=0, style=solid];
m2_42 -> m2_49  [key=2, style=dotted];
m2_44 -> m2_33  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_7  [key=3, color=darkorchid, style=bold, label="method methodReturn int Sell"];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_7  [key=2, style=dotted];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Order"];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_3  [key=2, style=dotted];
m2_163 -> m2_161  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn int Sell"];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_3  [key=2, style=dotted];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_119  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_123  [key=0, style=bold, color=blue];
m2_167 -> m2_137  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_138  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_148  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m2_167 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_8  [key=2, style=dotted];
m3_23 -> m3_9  [key=2, style=dotted];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_14 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_4  [key=2, style=dotted];
m3_34 -> m3_14  [key=0, style=bold, color=blue];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_37 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_37 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_38 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_53  [key=2, style=dotted];
m3_40 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m3_40 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_54  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_55  [key=2, style=dotted];
m3_44 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_44 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_56  [key=2, style=dotted];
m3_45 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=preOrderCheckResponse];
m3_47 -> m3_52  [key=0, style=solid];
m3_47 -> m3_57  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_58  [key=2, style=dotted];
m3_48 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_48 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_59  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_44  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=0, style=solid];
m3_43 -> m3_52  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_37  [key=0, style=bold, color=blue];
m3_213 -> m3_214  [key=0, style=solid];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_212  [key=2, style=dotted];
m3_215 -> m3_213  [key=0, style=bold, color=blue];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_84 -> m3_85  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_55  [key=2, style=dotted];
m3_85 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_85 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_56  [key=2, style=dotted];
m3_86 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_88 -> m3_90  [key=0, style=solid];
m3_88 -> m3_57  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_58  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=0, style=solid];
m3_90 -> m3_83  [key=0, style=bold, color=blue];
m3_190 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_190 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_190 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_190 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_190 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_190 -> m3_197  [key=0, style=solid];
m3_190 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_190 -> m3_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_201  [key=0, style=solid];
m3_198 -> m3_211  [key=2, style=dotted];
m3_199 -> m3_146  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_105  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_207  [key=0, style=solid];
m3_206 -> m3_202  [key=0, style=solid];
m3_206 -> m3_4  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_212  [key=2, style=dotted];
m3_207 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_37  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_207  [key=0, style=solid];
m3_200 -> m3_210  [key=0, style=solid];
m3_205 -> m3_202  [key=0, style=solid];
m3_205 -> m3_206  [key=0, style=solid];
m3_203 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m3_203 -> m3_205  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m3_203 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_203 -> m3_204  [key=0, style=solid];
m3_204 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_3  [key=2, style=dotted];
m3_208 -> m3_210  [key=0, style=solid];
m3_210 -> m3_190  [key=0, style=bold, color=blue];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_182  [key=0, style=solid];
m3_182 -> m3_180  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_3  [key=2, style=dotted];
m3_20 -> m3_4  [key=2, style=dotted];
m3_21 -> m3_19  [key=0, style=bold, color=blue];
m3_261 -> m3_262  [key=0, style=solid];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_4  [key=2, style=dotted];
m3_263 -> m3_261  [key=0, style=bold, color=blue];
m3_191 -> m3_192  [key=0, style=solid];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_190  [key=2, style=dotted];
m3_193 -> m3_191  [key=0, style=bold, color=blue];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_55  [key=2, style=dotted];
m3_93 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_93 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_56  [key=2, style=dotted];
m3_94 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_96 -> m3_98  [key=0, style=solid];
m3_96 -> m3_57  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_58  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_97  [key=0, style=solid];
m3_98 -> m3_91  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_9  [key=2, style=dotted];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_104 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_106  [key=0, style=solid];
m3_104 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_104 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_112 -> m3_113  [key=0, style=solid, color=green];
m3_112 -> m3_114  [key=0, style=solid, color=green];
m3_111 -> m3_112  [key=0, style=solid, color=green];
m3_111 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_111 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_113 -> m3_143  [key=0, style=solid];
m3_113 -> m3_146  [key=2, style=dotted];
m3_113 -> m3_147  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=price];
m3_108 -> m3_111  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_145  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_117  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_120 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_120 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_120 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_132  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m3_127 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_134  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_150  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_142  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_119  [key=0, style=solid];
m3_109 -> m3_110  [key=0, style=solid];
m3_121 -> m3_123  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_148  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_130  [key=0, style=solid];
m3_128 -> m3_148  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_137  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_143  [key=0, style=solid];
m3_136 -> m3_147  [key=2, style=dotted];
m3_136 -> m3_149  [key=2, style=dotted];
m3_106 -> m3_108  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_143  [key=0, style=solid];
m3_107 -> m3_144  [key=2, style=dotted];
m3_110 -> m3_143  [key=0, style=solid];
m3_110 -> m3_146  [key=2, style=dotted];
m3_110 -> m3_147  [key=2, style=dotted];
m3_116 -> m3_143  [key=0, style=solid];
m3_116 -> m3_147  [key=2, style=dotted];
m3_118 -> m3_143  [key=0, style=solid];
m3_118 -> m3_146  [key=2, style=dotted];
m3_118 -> m3_147  [key=2, style=dotted];
m3_122 -> m3_143  [key=0, style=solid];
m3_122 -> m3_147  [key=2, style=dotted];
m3_124 -> m3_143  [key=0, style=solid];
m3_124 -> m3_147  [key=2, style=dotted];
m3_129 -> m3_143  [key=0, style=solid];
m3_129 -> m3_147  [key=2, style=dotted];
m3_131 -> m3_143  [key=0, style=solid];
m3_131 -> m3_147  [key=2, style=dotted];
m3_133 -> m3_143  [key=0, style=solid];
m3_133 -> m3_147  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_142  [key=0, style=solid];
m3_141 -> m3_143  [key=0, style=solid];
m3_141 -> m3_147  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_152  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_130 -> m3_132  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_151  [key=2, style=dotted];
m3_143 -> m3_104  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_18  [key=2, style=dotted];
m3_26 -> m3_9  [key=2, style=dotted];
m3_27 -> m3_25  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_2  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_9  [key=2, style=dotted];
m3_6 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.OrderEventPacket"];
m3_6 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.OrderEventPacket"];
m3_7 -> m3_5  [key=0, style=bold, color=blue];
m3_258 -> m3_259  [key=0, style=solid];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_4  [key=2, style=dotted];
m3_260 -> m3_258  [key=0, style=bold, color=blue];
m3_53 -> m3_60  [key=0, style=solid];
m3_53 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_55  [key=2, style=dotted];
m3_61 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_61 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_56  [key=2, style=dotted];
m3_62 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_64 -> m3_66  [key=0, style=solid];
m3_64 -> m3_57  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_58  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_65  [key=0, style=solid];
m3_66 -> m3_53  [key=0, style=bold, color=blue];
m3_9 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_4  [key=2, style=dotted];
m3_32 -> m3_9  [key=0, style=bold, color=blue];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_55  [key=2, style=dotted];
m3_77 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_77 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_56  [key=2, style=dotted];
m3_78 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_80 -> m3_82  [key=0, style=solid];
m3_80 -> m3_57  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_58  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=0, style=solid];
m3_82 -> m3_75  [key=0, style=bold, color=blue];
m3_212 -> m3_216  [key=0, style=solid];
m3_212 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_212 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_212 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_212 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_242  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_216 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=targetPortfolioValue];
m3_222 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=targetPortfolioValue];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_250  [key=2, style=dotted];
m3_227 -> m3_251  [key=2, style=dotted];
m3_227 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m3_227 -> m3_244  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_252  [key=2, style=dotted];
m3_228 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=marginRemaining];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_250  [key=2, style=dotted];
m3_241 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_241 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=price];
m3_221 -> m3_249  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_251  [key=2, style=dotted];
m3_242 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=orderValue];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_253  [key=2, style=dotted];
m3_243 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=orderFees];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_254  [key=2, style=dotted];
m3_245 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=marginRequired];
m3_220 -> m3_222  [key=0, style=solid];
m3_220 -> m3_221  [key=0, style=solid];
m3_225 -> m3_13  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m3_225 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label=direction];
m3_226 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=direction];
m3_235 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_235 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_235 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_235 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_244 -> m3_245  [key=0, style=solid];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_231  [key=0, style=solid];
m3_247 -> m3_236  [key=0, style=solid];
m3_247 -> m3_248  [key=0, style=solid];
m3_239 -> m3_241  [key=0, style=solid];
m3_239 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_239 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_239 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_240 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_240 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_237 -> m3_241  [key=0, style=solid];
m3_237 -> m3_238  [key=0, style=solid];
m3_218 -> m3_220  [key=0, style=solid];
m3_218 -> m3_219  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=currentHoldingsValue];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m3_248 -> m3_249  [key=0, style=solid];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m3_234 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m3_230 -> m3_249  [key=0, style=solid];
m3_231 -> m3_232  [key=0, style=solid];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_240  [key=0, style=solid];
m3_219 -> m3_249  [key=0, style=solid];
m3_233 -> m3_234  [key=0, style=solid];
m3_232 -> m3_233  [key=0, style=solid];
m3_249 -> m3_212  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_14  [key=2, style=dotted];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_255 -> m3_256  [key=0, style=solid];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_4  [key=2, style=dotted];
m3_257 -> m3_255  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_35  [key=0, style=solid];
m3_153 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_153 -> m3_154  [key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_172  [key=0, style=solid];
m3_156 -> m3_175  [key=2, style=dotted];
m3_156 -> m3_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_156 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_156 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_156 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_176  [key=2, style=dotted];
m3_158 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_158 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_159 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_177  [key=2, style=dotted];
m3_164 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_167 -> m3_162  [key=0, style=solid];
m3_167 -> m3_178  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_14  [key=2, style=dotted];
m3_169 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_155 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_171 -> m3_156  [key=0, style=solid];
m3_171 -> m3_179  [key=2, style=dotted];
m3_157 -> m3_156  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_160 -> m3_156  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_168 -> m3_156  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_170 -> m3_156  [key=0, style=solid];
m3_170 -> m3_171  [key=0, style=solid];
m3_172 -> m3_173  [key=0, style=solid];
m3_162 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_162 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_162 -> m3_168  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_167  [key=0, style=solid];
m3_165 -> m3_162  [key=0, style=solid];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_166 -> m3_162  [key=0, style=solid];
m3_166 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_161 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m3_154 -> m3_172  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m3_154 -> m3_174  [key=2, style=dotted];
m3_173 -> m3_153  [key=0, style=bold, color=blue];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [key=0, style=solid];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_183  [key=0, style=bold, color=blue];
m3_187 -> m3_188  [key=0, style=solid];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_190  [key=2, style=dotted];
m3_189 -> m3_187  [key=0, style=bold, color=blue];
m3_55 -> m3_264  [key=0, style=solid];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_266  [key=2, style=dotted];
m3_265 -> m3_55  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_13  [key=2, style=dotted];
m3_29 -> m3_14  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=2, style=dotted];
m3_36 -> m3_4  [key=0, style=bold, color=blue];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_55  [key=2, style=dotted];
m3_69 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_69 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_56  [key=2, style=dotted];
m3_70 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_72 -> m3_74  [key=0, style=solid];
m3_72 -> m3_57  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_58  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_73  [key=0, style=solid];
m3_74 -> m3_67  [key=0, style=bold, color=blue];
m3_56 -> m3_99  [key=0, style=solid];
m3_99 -> m3_104  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_99 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_105  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_56  [key=0, style=bold, color=blue];
m3_194 -> m3_195  [key=0, style=solid];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_190  [key=2, style=dotted];
m3_196 -> m3_194  [key=0, style=bold, color=blue];
m3_267 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_267 -> m3_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
}
