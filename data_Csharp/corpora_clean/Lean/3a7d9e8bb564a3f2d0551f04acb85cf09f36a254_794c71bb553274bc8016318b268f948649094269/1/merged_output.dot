digraph  {
n37 [label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
n1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
n2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
n3 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, label="5: symbols == null", span="52-52"];
n4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, label="8: throw new ArgumentNullException(nameof(symbols));", span="54-54"];
n5 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0, label="8: _symbols = symbols.ToList()", span="57-57"];
n6 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
n9 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n8 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66"];
n11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_symbols = symbols.ToList()", span="68-68"];
n12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_universeSettings = universeSettings", span="69-69"];
n13 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_securityInitializer = securityInitializer", span="70-70"];
n14 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66"];
n15 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78"];
n16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="80-80"];
n26 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="94-94"];
n17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="81-81"];
n18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var resolution = universeSettings.Resolution", span="83-83"];
n19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="84-84"];
n25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="93-93"];
n20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="87-87"];
n21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var market = grp.Key.Market", span="89-89"];
n27 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78"];
n28 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n34 [cluster="lambda expression", label="Entry lambda expression", span="87-87"];
n22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var securityType = grp.Key.SecurityType", span="90-90"];
n23 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="91-91"];
n24 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="92-92"];
n29 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
n30 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
n31 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
n32 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
n33 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
n35 [cluster="lambda expression", label="new { s.ID.Market, s.SecurityType }", span="87-87"];
n36 [cluster="lambda expression", label="Exit lambda expression", span="87-87"];
m0_0 [cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs", label="Entry QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30"];
m0_1 [cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs", label="Exit QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30"];
n37 -> n5  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n37 -> n20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n4  [color=red, key=1, label="params QuantConnect.Symbol[]", style=dashed];
n2 -> n5  [color=red, key=1, label="params QuantConnect.Symbol[]", style=dashed];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [color=red, key=0, style=solid];
n4 -> n6  [color=red, key=0, style=solid];
n4 -> n7  [color=red, key=2, style=dotted];
n4 -> n8  [color=red, key=2, style=dotted];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n9  [color=red, key=2, style=dotted];
n6 -> n2  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n9  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n10  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n15 -> n26  [color=crimson, key=0, style=bold];
n15 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
n16 -> n26  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
n26 -> n20  [key=0, style=solid];
n26 -> n33  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n26  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n25  [color=darkseagreen4, key=1, label=resolution, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n25  [color=darkseagreen4, key=1, label=type, style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n32  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n27  [key=0, style=solid];
n20 -> n28  [key=2, style=dotted];
n20 -> n34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n20 -> n22  [color=darkseagreen4, key=1, label=grp, style=dashed];
n20 -> n26  [color=darkseagreen4, key=1, label=grp, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [color=darkseagreen4, key=1, label=market, style=dashed];
n21 -> n24  [color=darkseagreen4, key=1, label=market, style=dashed];
n21 -> n20  [color=darkorchid, key=3, label="Local variable string market", style=bold];
n27 -> n15  [color=blue, key=0, style=bold];
n34 -> n35  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [color=darkseagreen4, key=1, label=securityType, style=dashed];
n22 -> n20  [color=darkorchid, key=3, label="Local variable QuantConnect.SecurityType securityType", style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n29  [key=2, style=dotted];
n23 -> n25  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
n24 -> n25  [key=0, style=solid];
n24 -> n30  [key=2, style=dotted];
n24 -> n31  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n36 -> n34  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_0  [color=darkorchid, key=3, label="Field variable int NumberOfSymbolsCoarse", style=bold];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
}
