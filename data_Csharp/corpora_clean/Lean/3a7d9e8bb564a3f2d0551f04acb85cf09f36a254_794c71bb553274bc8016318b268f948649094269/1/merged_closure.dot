digraph  {
n37 [label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
n1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
n2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
n6 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
n9 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n8 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66"];
n11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_symbols = symbols.ToList()", span="68-68"];
n12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_universeSettings = universeSettings", span="69-69"];
n13 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_securityInitializer = securityInitializer", span="70-70"];
n14 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66"];
n15 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78"];
n16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="80-80"];
n26 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="94-94"];
n17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="81-81"];
n18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var resolution = universeSettings.Resolution", span="83-83"];
n19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="84-84"];
n25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="93-93"];
n20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="87-87"];
n21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var market = grp.Key.Market", span="89-89"];
n27 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78"];
n28 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n34 [cluster="lambda expression", label="Entry lambda expression", span="87-87"];
n22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var securityType = grp.Key.SecurityType", span="90-90"];
n23 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="91-91"];
n24 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="92-92"];
n29 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
n30 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
n31 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
n32 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
n33 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
n35 [cluster="lambda expression", label="new { s.ID.Market, s.SecurityType }", span="87-87"];
n36 [cluster="lambda expression", label="Exit lambda expression", span="87-87"];
m0_0 [cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs", label="Entry QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30"];
m0_1 [cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs", label="Exit QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30"];
n37 -> n20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
n16 -> n26  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
n17 -> n26  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
n20 -> n34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n20 -> n26  [color=darkseagreen4, key=1, label=grp, style=dashed];
}
