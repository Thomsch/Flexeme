digraph  {
n37 [label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
n0 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)"];
n1 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)"];
n2 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])"];
n3 [label="symbols == null", span="52-52", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0];
n4 [label="throw new ArgumentNullException(nameof(symbols));", span="54-54", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0];
n5 [label="_symbols = symbols.ToList()", span="57-57", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", color=red, community=0];
n6 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="50-50", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])"];
n9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
n7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n8 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
n10 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n11 [label="_symbols = symbols.ToList()", span="68-68", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n12 [label="_universeSettings = universeSettings", span="69-69", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n13 [label="_securityInitializer = securityInitializer", span="70-70", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n14 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="66-66", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)"];
n15 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n16 [label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="80-80", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n26 [label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="94-94", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n17 [label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="81-81", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n18 [label="var resolution = universeSettings.Resolution", span="83-83", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n19 [label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="84-84", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n25 [label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="93-93", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n20 [label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="87-87", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n21 [label="var market = grp.Key.Market", span="89-89", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n27 [label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="78-78", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n34 [label="Entry lambda expression", span="87-87", cluster="lambda expression"];
n22 [label="var securityType = grp.Key.SecurityType", span="90-90", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n23 [label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="91-91", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n24 [label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="92-92", cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)"];
n29 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)"];
n30 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()"];
n31 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)"];
n32 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)"];
n33 [label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30", cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)"];
n35 [label="new { s.ID.Market, s.SecurityType }", span="87-87", cluster="lambda expression"];
n36 [label="Exit lambda expression", span="87-87", cluster="lambda expression"];
m0_0 [label="Entry QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30", cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs"];
m0_1 [label="Exit QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", span="30-30", cluster="QuantConnect.Indicators.TradeBarIndicator.TradeBarIndicator(string)", file="QC500PortfolioSelectionModel.cs"];
n37 -> n5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n37 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid, color=red];
n2 -> n4  [key=1, style=dashed, color=red, label="params QuantConnect.Symbol[]"];
n2 -> n5  [key=1, style=dashed, color=red, label="params QuantConnect.Symbol[]"];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n5  [key=0, style=solid, color=red];
n4 -> n6  [key=0, style=solid, color=red];
n4 -> n7  [key=2, style=dotted, color=red];
n4 -> n8  [key=2, style=dotted, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n9  [key=2, style=dotted, color=red];
n6 -> n2  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.UniverseSettings"];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityInitializer"];
n11 -> n12  [key=0, style=solid];
n11 -> n9  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n10  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n15 -> n26  [key=0, style=bold, color=crimson];
n15 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
n16 -> n26  [key=1, style=dashed, color=darkseagreen4, label=universeSettings];
n26 -> n20  [key=0, style=solid];
n26 -> n33  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n26  [key=1, style=dashed, color=darkseagreen4, label=securityInitializer];
n18 -> n19  [key=0, style=solid];
n18 -> n25  [key=1, style=dashed, color=darkseagreen4, label=resolution];
n19 -> n20  [key=0, style=solid];
n19 -> n25  [key=1, style=dashed, color=darkseagreen4, label=type];
n25 -> n26  [key=0, style=solid];
n25 -> n32  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n27  [key=0, style=solid];
n20 -> n28  [key=2, style=dotted];
n20 -> n34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=grp];
n20 -> n26  [key=1, style=dashed, color=darkseagreen4, label=grp];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=1, style=dashed, color=darkseagreen4, label=market];
n21 -> n24  [key=1, style=dashed, color=darkseagreen4, label=market];
n21 -> n20  [key=3, color=darkorchid, style=bold, label="Local variable string market"];
n27 -> n15  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=1, style=dashed, color=darkseagreen4, label=securityType];
n22 -> n20  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.SecurityType securityType"];
n23 -> n24  [key=0, style=solid];
n23 -> n29  [key=2, style=dotted];
n23 -> n25  [key=1, style=dashed, color=darkseagreen4, label=universeSymbol];
n24 -> n25  [key=0, style=solid];
n24 -> n30  [key=2, style=dotted];
n24 -> n31  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n36 -> n34  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_0  [key=3, color=darkorchid, style=bold, label="Field variable int NumberOfSymbolsCoarse"];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
}
