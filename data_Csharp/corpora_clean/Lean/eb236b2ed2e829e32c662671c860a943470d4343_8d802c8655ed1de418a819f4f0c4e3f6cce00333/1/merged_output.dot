digraph  {
n0 [cluster="QuantConnect.Market.Market()", label="Entry QuantConnect.Market.Market()", span="40-40"];
n1 [cluster="QuantConnect.Market.Market()", label=HardcodedMarkets, span="43-43"];
n2 [cluster="QuantConnect.Market.Market()", label="Markets[market.Item1] = market.Item2", span="45-45"];
n4 [cluster="QuantConnect.Market.Market()", label="Exit QuantConnect.Market.Market()", span="40-40"];
n3 [cluster="QuantConnect.Market.Market()", label="ReverseMarkets[market.Item2] = market.Item1", span="46-46"];
n5 [cluster="QuantConnect.Market.Add(string, int)", label="Entry QuantConnect.Market.Add(string, int)", span="75-75"];
n6 [cluster="QuantConnect.Market.Add(string, int)", label="identifier >= MaxMarketIdentifier", span="77-77"];
n9 [cluster="QuantConnect.Market.Add(string, int)", label="market = market.ToLower()", span="83-83"];
n12 [cluster="QuantConnect.Market.Add(string, int)", label="Markets.TryGetValue(market, out marketIdentifier) && identifier != marketIdentifier", span="89-89"];
n15 [cluster="QuantConnect.Market.Add(string, int)", label="ReverseMarkets.TryGetValue(identifier, out existingMarket)", span="95-95"];
n17 [cluster="QuantConnect.Market.Add(string, int)", label="Markets[market] = identifier", span="101-101"];
n18 [cluster="QuantConnect.Market.Add(string, int)", label="ReverseMarkets[identifier] = market", span="102-102"];
n7 [cluster="QuantConnect.Market.Add(string, int)", label="var message = string.Format(''The market identifier is limited to positive values less than {0}.'', MaxMarketIdentifier)", span="79-79"];
n8 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentOutOfRangeException(''identifier'', message);", span="80-80"];
n20 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n10 [cluster="QuantConnect.Market.Add(string, int)", label=_lock, span="86-86"];
n22 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n13 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentException(''Attempted to add an already added market with a different identifier. Market: '' + market);", span="91-91"];
n16 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentException(''Attempted to add a market identifier that is already in use. New Market: '' + market + '' Existing Market: '' + existingMarket);", span="97-97"];
n11 [cluster="QuantConnect.Market.Add(string, int)", label="int marketIdentifier", span="88-88"];
n14 [cluster="QuantConnect.Market.Add(string, int)", label="string existingMarket", span="94-94"];
n23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n19 [cluster="QuantConnect.Market.Add(string, int)", label="Exit QuantConnect.Market.Add(string, int)", span="75-75"];
n21 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
n24 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n25 [cluster="QuantConnect.Market.Encode(string)", label="Entry QuantConnect.Market.Encode(string)", span="111-111"];
n26 [cluster="QuantConnect.Market.Encode(string)", label=_lock, span="113-113"];
n28 [cluster="QuantConnect.Market.Encode(string)", label="return !Markets.TryGetValue(market, out code) ? (int?) null : code;", span="116-116"];
n27 [cluster="QuantConnect.Market.Encode(string)", label="int code", span="115-115"];
n29 [cluster="QuantConnect.Market.Encode(string)", label="Exit QuantConnect.Market.Encode(string)", span="111-111"];
n30 [cluster="QuantConnect.Market.Decode(int)", label="Entry QuantConnect.Market.Decode(int)", span="125-125"];
n31 [cluster="QuantConnect.Market.Decode(int)", label=_lock, span="127-127"];
n33 [cluster="QuantConnect.Market.Decode(int)", label="return !ReverseMarkets.TryGetValue(code, out market) ? null : market;", span="130-130"];
n32 [cluster="QuantConnect.Market.Decode(int)", label="string market", span="129-129"];
n34 [cluster="QuantConnect.Market.Decode(int)", label="Exit QuantConnect.Market.Decode(int)", span="125-125"];
m1_31 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_61 [cluster="string.Contains(string)", file="QuandlBitfinexDownloader.cs", label="Entry string.Contains(string)", span="0-0"];
m1_62 [cluster="System.Diagnostics.Process.Kill()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.Kill()", span="0-0"];
m1_105 [cluster="Unk.Where", file="QuandlBitfinexDownloader.cs", label="Entry Unk.Where", span=""];
m1_101 [cluster="System.Diagnostics.Process.WaitForExit()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.WaitForExit()", span="0-0"];
m1_100 [cluster="System.IO.StreamReader.ReadToEnd()", file="QuandlBitfinexDownloader.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m1_4 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m1_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="104-104"];
m1_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Log.Trace(''InteractiveBrokersGatewayRunner.Stop(): Stopping IBController...'')", span="113-113"];
m1_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Log.Error(err)", span="175-175"];
m1_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="_scriptProcessId == 0", span="106-106"];
m1_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="OS.IsWindows", span="115-115"];
m1_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label=Exception, span="173-173"];
m1_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="return;", span="108-108"];
m1_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label=_useTws, span="117-117"];
m1_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.Start(''pkill'', ''xvfb-run'')", span="160-160"];
m1_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="_scriptProcessId = 0", span="171-171"];
m1_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.GetProcessesByName(''java'')", span="119-119"];
m1_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.GetProcesses()", span="138-138"];
m1_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.Start(''pkill'', ''java'')", span="161-161"];
m1_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.GetProcessesByName(''cmd'')", span="127-127"];
m1_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Thread.Sleep(2500)", span="163-163"];
m1_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label=Exception, span="165-165"];
m1_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.MainWindowTitle.Contains(''Interactive Brokers'')", span="121-121"];
m1_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Thread.Sleep(2500)", span="124-124"];
m1_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.Kill()", span="123-123"];
m1_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'') ||\r\n                                    process.MainWindowTitle.ToLower().Contains(''ib gateway'')", span="142-143"];
m1_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label=Exception, span="149-149"];
m1_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Thread.Sleep(2500)", span="146-146"];
m1_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.Kill()", span="145-145"];
m1_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Process.Start(''pkill'', ''Xvfb'')", span="162-162"];
m1_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'')", span="129-129"];
m1_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Thread.Sleep(2500)", span="132-132"];
m1_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="process.Kill()", span="131-131"];
m1_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="104-104"];
m1_106 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="Entry lambda expression", span="270-285"];
m1_109 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="return parent.Id == id;", span="277-277"];
m1_107 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="var parent = ProcessExtensions.Parent(x)", span="274-274"];
m1_108 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="parent != null", span="275-275"];
m1_110 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="return false;", span="282-282"];
m1_111 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="return false;", span="284-284"];
m1_112 [cluster="lambda expression", file="QuandlBitfinexDownloader.cs", label="Exit lambda expression", span="270-285"];
m1_129 [cluster="System.Diagnostics.PerformanceCounter.NextValue()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.PerformanceCounter.NextValue()", span="0-0"];
m1_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="183-183"];
m1_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="Log.Error(err)", span="202-202"];
m1_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label=Exception, span="200-200"];
m1_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="return false;", span="205-205"];
m1_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="return false;", span="187-187"];
m1_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="return true;", span="193-193"];
m1_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="return IsIbControllerRunning();", span="198-198"];
m1_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="_scriptProcessId == 0", span="185-185"];
m1_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label=_useTws, span="191-191"];
m1_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="183-183"];
m1_65 [cluster="System.Diagnostics.Process.GetProcesses()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.GetProcesses()", span="0-0"];
m1_66 [cluster="System.Diagnostics.Process.Start(string, string)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.Start(string, string)", span="0-0"];
m1_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="291-291"];
m1_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="var processesByName = Process.GetProcessesByName(processName)", span="294-294"];
m1_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="var processName = Process.GetProcessById(pid).ProcessName", span="293-293"];
m1_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="string processIndexdName = null", span="295-295"];
m1_119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="index < processesByName.Length", span="297-297"];
m1_120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="processIndexdName = index == 0 ? processName : processName + ''#'' + index", span="299-299"];
m1_118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="var index = 0", span="297-297"];
m1_125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="return processIndexdName;", span="307-307"];
m1_124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="index++", span="297-297"];
m1_122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="(int)processId.NextValue() == pid", span="301-301"];
m1_121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="var processId = new PerformanceCounter(''Process'', ''ID Process'', processIndexdName)", span="300-300"];
m1_123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="return processIndexdName;", span="303-303"];
m1_126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="291-291"];
m1_128 [cluster="System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", span="0-0"];
m1_3 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m1_127 [cluster="System.Diagnostics.Process.GetProcessById(int)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.GetProcessById(int)", span="0-0"];
m1_60 [cluster="System.Diagnostics.Process.GetProcessesByName(string)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.GetProcessesByName(string)", span="0-0"];
m1_99 [cluster="System.Diagnostics.Process.Start()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.Start()", span="0-0"];
m1_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="48-48"];
m1_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="19: Start(Config.Get(''ib-controller-dir''),\r\n                Config.Get(''ib-tws-dir''),\r\n                Config.Get(''ib-user-name''),\r\n                Config.Get(''ib-password''),\r\n                Config.Get(''ib-trading-mode''),\r\n                Config.GetBool(''ib-use-tws'')\r\n                )", span="50-56"];
m1_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="48-48"];
m1_97 [cluster="System.Diagnostics.Process.Process()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.Process()", span="0-0"];
m1_98 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", span="0-0"];
m1_63 [cluster="System.Threading.Thread.Sleep(int)", file="QuandlBitfinexDownloader.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_30 [cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0"];
m1_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="211-211"];
m1_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="QuandlBitfinexDownloader.cs", label="Start(_ibControllerDirectory, _twsDirectory, _userId, _password, _tradingMode, _useTws)", span="213-213"];
m1_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="QuandlBitfinexDownloader.cs", label="Thread.Sleep(TimeSpan.FromSeconds(30))", span="216-216"];
m1_81 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="211-211"];
m1_26 [cluster="System.IO.Path.Combine(string, string)", file="QuandlBitfinexDownloader.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m1_27 [cluster="string.Format(string, params object[])", file="QuandlBitfinexDownloader.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", span="222-222"];
m1_85 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="Process.GetProcesses()", span="226-226"];
m1_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", span="222-222"];
m1_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="OS.IsWindows", span="224-224"];
m1_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'')", span="230-230"];
m1_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="var processFound = output.Contains(''java'') && output.Contains(''ibgateway'')", span="257-257"];
m1_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label=Exception, span="235-235"];
m1_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="return false;", span="264-264"];
m1_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="return true;", span="232-232"];
m1_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="return processFound;", span="261-261"];
m1_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="var process = new Process\r\n                {\r\n                    StartInfo = new ProcessStartInfo\r\n                    {\r\n                        FileName = ''bash'',\r\n                        Arguments = ''-c 'ps aux | grep -v bash | grep java | grep ibgateway''',\r\n                        UseShellExecute = false,\r\n                        RedirectStandardOutput = true,\r\n                        CreateNoWindow = true\r\n                    }\r\n                }", span="243-253"];
m1_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="var output = process.StandardOutput.ReadToEnd()", span="256-256"];
m1_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="process.Start()", span="255-255"];
m1_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="QuandlBitfinexDownloader.cs", label="process.WaitForExit()", span="259-259"];
m1_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="316-316"];
m1_134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="QuandlBitfinexDownloader.cs", label="return FindPidFromIndexedProcessName(FindIndexedProcessName(process.Id));", span="318-318"];
m1_135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="316-316"];
m1_28 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_29 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", file="QuandlBitfinexDownloader.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", span="0-0"];
m1_83 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="QuandlBitfinexDownloader.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m1_82 [cluster="System.TimeSpan.FromSeconds(double)", file="QuandlBitfinexDownloader.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="310-310"];
m1_132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="QuandlBitfinexDownloader.cs", label="return Process.GetProcessById((int)parentId.NextValue());", span="313-313"];
m1_131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="QuandlBitfinexDownloader.cs", label="var parentId = new PerformanceCounter(''Process'', ''Creating Process ID'', indexedProcessName)", span="312-312"];
m1_133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="310-310"];
m1_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m1_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="15: _ibControllerDirectory = ibControllerDirectory", span="70-70"];
m1_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="16: _twsDirectory = twsDirectory", span="71-71"];
m1_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="21: _userId = userId", span="72-72"];
m1_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="16: _password = password", span="73-73"];
m1_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: _tradingMode = tradingMode", span="74-74"];
m1_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: _useTws = useTws", span="75-75"];
m1_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var useTwsSwitch = useTws ? ''TWS'' : ''GATEWAY''", span="77-77"];
m1_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var batchFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.bat'')", span="78-78"];
m1_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var arguments = string.Format(''{0} {1} {2} {3} {4} {5} {6}'', file, ibControllerDirectory, twsDirectory, userId, password, useTwsSwitch, tradingMode)", span="84-84"];
m1_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var file = OS.IsWindows ? batchFilename : bashFilename", span="83-83"];
m1_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="23: Log.Trace(''InteractiveBrokersGatewayRunner.Start(): Launching IBController for account '' + userId + ''...'')", span="86-86"];
m1_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var processStartInfo = OS.IsWindows ? new ProcessStartInfo(''cmd.exe'', ''/C '' + arguments) : new ProcessStartInfo(''bash'', arguments)", span="88-88"];
m1_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="7: var bashFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.sh'')", span="79-79"];
m1_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="23: processStartInfo.UseShellExecute = false", span="90-90"];
m1_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="12: processStartInfo.RedirectStandardOutput = false", span="91-91"];
m1_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="13: var process = Process.Start(processStartInfo)", span="92-92"];
m1_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="12: _scriptProcessId = process != null ? process.Id : 0", span="93-93"];
m1_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="13: Exception", span="95-95"];
m1_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="QuandlBitfinexDownloader.cs", label="12: Log.Error(err)", span="97-97"];
m1_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m1_102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="QuandlBitfinexDownloader.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="267-267"];
m1_103 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="QuandlBitfinexDownloader.cs", label="return Process.GetProcesses().Where(x =>\r\n            {\r\n                try\r\n                {\r\n                    var parent = ProcessExtensions.Parent(x);\r\n                    if (parent != null)\r\n                    {\r\n                        return parent.Id == id;\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n                    return false;\r\n                }\r\n                return false;\r\n            });", span="270-285"];
m1_104 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="QuandlBitfinexDownloader.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="267-267"];
m1_136 [file="QuandlBitfinexDownloader.cs", label=int, span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=0, style=solid];
n1 -> n3  [color=darkseagreen4, key=1, label=market, style=dashed];
n2 -> n3  [key=0, style=solid];
n4 -> n0  [color=blue, key=0, style=bold];
n3 -> n1  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n9  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n12  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n17  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n18  [color=darkseagreen4, key=1, label=int, style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n22  [key=2, style=dotted];
n9 -> n9  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n16  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n17  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n18  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n12 -> n12  [color=darkseagreen4, key=1, label=marketIdentifier, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n20  [key=2, style=dotted];
n8 -> n19  [key=0, style=solid];
n8 -> n21  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n13 -> n19  [key=0, style=solid];
n13 -> n24  [key=2, style=dotted];
n16 -> n19  [key=0, style=solid];
n16 -> n24  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n19 -> n5  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [color=darkseagreen4, key=1, label=string, style=dashed];
n26 -> n27  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n23  [key=2, style=dotted];
n28 -> n28  [color=darkseagreen4, key=1, label=code, style=dashed];
n27 -> n28  [key=0, style=solid];
n29 -> n25  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [color=darkseagreen4, key=1, label=int, style=dashed];
n31 -> n32  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n23  [key=2, style=dotted];
n33 -> n33  [color=darkseagreen4, key=1, label=market, style=dashed];
n32 -> n33  [key=0, style=solid];
n34 -> n30  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_35 -> m1_28  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_58 -> m1_31  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_33 -> m1_35  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_51  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_34 -> m1_59  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_46  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_59  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_42  [key=0, style=solid];
m1_38 -> m1_60  [key=2, style=dotted];
m1_38 -> m1_40  [color=darkseagreen4, key=1, label=process, style=dashed];
m1_46 -> m1_56  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_65  [key=2, style=dotted];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=process, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_66  [key=2, style=dotted];
m1_42 -> m1_56  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_60  [key=2, style=dotted];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=process, style=dashed];
m1_54 -> m1_56  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_63  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_39 -> m1_38  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_61  [key=2, style=dotted];
m1_41 -> m1_38  [key=0, style=solid];
m1_41 -> m1_63  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_62  [key=2, style=dotted];
m1_47 -> m1_46  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_50  [key=0, style=solid];
m1_47 -> n22  [key=2, style=dotted];
m1_47 -> m1_61  [key=2, style=dotted];
m1_50 -> m1_46  [key=0, style=solid];
m1_49 -> m1_46  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_63  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_62  [key=2, style=dotted];
m1_53 -> m1_66  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_43 -> m1_42  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> n22  [key=2, style=dotted];
m1_43 -> m1_61  [key=2, style=dotted];
m1_45 -> m1_42  [key=0, style=solid];
m1_45 -> m1_63  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_62  [key=2, style=dotted];
m1_59 -> m1_32  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_109 -> m1_112  [key=0, style=solid];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=parent, style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_113  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=0, style=solid];
m1_108 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_106  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_74 -> m1_31  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_69 -> m1_76  [key=0, style=solid];
m1_71 -> m1_76  [key=0, style=solid];
m1_72 -> m1_76  [key=0, style=solid];
m1_72 -> m1_77  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=0, style=solid];
m1_76 -> m1_67  [color=blue, key=0, style=bold];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_116 -> m1_60  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_119  [color=darkseagreen4, key=1, label=processesByName, style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_127  [key=2, style=dotted];
m1_115 -> m1_120  [color=darkseagreen4, key=1, label=processName, style=dashed];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_125  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_125  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_123  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m1_120 -> m1_125  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_118 -> m1_124  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_124 -> m1_119  [key=0, style=solid];
m1_124 -> m1_124  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_122 -> m1_124  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_129  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_128  [key=2, style=dotted];
m1_123 -> m1_126  [key=0, style=solid];
m1_126 -> m1_114  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_1 -> m1_4  [color=green, key=2, style=dotted];
m1_1 -> m1_5  [color=green, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_5  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=2, style=dotted];
m1_80 -> m1_83  [key=2, style=dotted];
m1_81 -> m1_78  [color=blue, key=0, style=bold];
m1_77 -> m1_84  [key=0, style=solid];
m1_85 -> m1_65  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_95  [key=0, style=solid];
m1_96 -> m1_77  [color=blue, key=0, style=bold];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_89  [key=0, style=solid];
m1_86 -> m1_61  [key=2, style=dotted];
m1_86 -> n22  [key=2, style=dotted];
m1_86 -> m1_85  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_92 -> m1_61  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=processFound, style=dashed];
m1_88 -> m1_85  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_87 -> m1_96  [key=0, style=solid];
m1_94 -> m1_96  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_97  [key=2, style=dotted];
m1_89 -> m1_98  [key=2, style=dotted];
m1_89 -> m1_91  [color=darkseagreen4, key=1, label=process, style=dashed];
m1_89 -> m1_93  [color=darkseagreen4, key=1, label=process, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_100  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_99  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_101  [key=2, style=dotted];
m1_113 -> m1_134  [key=0, style=solid];
m1_134 -> m1_114  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_130  [key=2, style=dotted];
m1_135 -> m1_113  [color=blue, key=0, style=bold];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_127  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_129  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_128  [key=2, style=dotted];
m1_133 -> m1_130  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_7  [color=green, key=1, label=string, style=dashed];
m1_5 -> m1_8  [color=green, key=1, label=string, style=dashed];
m1_5 -> m1_9  [color=green, key=1, label=string, style=dashed];
m1_5 -> m1_10  [color=green, key=1, label=string, style=dashed];
m1_5 -> m1_11  [color=green, key=1, label=bool, style=dashed];
m1_5 -> m1_12  [color=green, key=1, label=bool, style=dashed];
m1_5 -> m1_16  [color=green, key=1, label=string, style=dashed];
m1_5 -> m1_17  [color=green, key=1, label=string, style=dashed];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_12 -> m1_13  [color=green, key=0, style=solid];
m1_12 -> m1_16  [color=green, key=1, label=useTwsSwitch, style=dashed];
m1_13 -> m1_14  [color=green, key=0, style=solid];
m1_13 -> m1_26  [color=green, key=2, style=dotted];
m1_13 -> m1_15  [color=green, key=1, label=batchFilename, style=dashed];
m1_16 -> m1_17  [color=green, key=0, style=solid];
m1_16 -> m1_27  [color=green, key=2, style=dotted];
m1_16 -> m1_18  [color=green, key=1, label=arguments, style=dashed];
m1_15 -> m1_16  [color=green, key=0, style=solid];
m1_17 -> m1_18  [color=green, key=0, style=solid];
m1_17 -> m1_28  [color=green, key=2, style=dotted];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_18 -> m1_29  [color=green, key=2, style=dotted];
m1_18 -> m1_20  [color=green, key=1, label=processStartInfo, style=dashed];
m1_18 -> m1_21  [color=green, key=1, label=processStartInfo, style=dashed];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_14 -> m1_26  [color=green, key=2, style=dotted];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_20 -> m1_21  [color=green, key=0, style=solid];
m1_21 -> m1_22  [color=green, key=0, style=solid];
m1_21 -> m1_30  [color=green, key=2, style=dotted];
m1_22 -> m1_23  [color=green, key=0, style=solid];
m1_22 -> m1_25  [color=green, key=0, style=solid];
m1_23 -> m1_24  [color=green, key=0, style=solid];
m1_24 -> m1_25  [color=green, key=0, style=solid];
m1_24 -> m1_31  [color=green, key=2, style=dotted];
m1_25 -> m1_5  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_103 -> m1_65  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=2, style=dotted];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_104 -> m1_102  [color=blue, key=0, style=bold];
m1_136 -> m1_109  [color=darkseagreen4, key=1, label=int, style=dashed];
}
