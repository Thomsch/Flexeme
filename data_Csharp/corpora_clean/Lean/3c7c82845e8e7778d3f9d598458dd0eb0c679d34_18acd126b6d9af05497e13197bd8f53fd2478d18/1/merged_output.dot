digraph  {
n111 [label="System.DateTime", span=""];
n112 [label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", span=""];
n113 [label=context, span=""];
n114 [label=context, span=""];
n0 [cluster="lambda expression", label="Entry lambda expression", span="56-56"];
n1 [cluster="lambda expression", label="context.Insight", span="56-56"];
n2 [cluster="lambda expression", label="Exit lambda expression", span="56-56"];
n3 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
n4 [cluster="lambda expression", label="kvp.Value.Insight", span="61-61"];
n5 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.ContextsOpenAt(System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.ContextsOpenAt(System.DateTime)", span="73-73"];
n7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.ContextsOpenAt(System.DateTime)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.ContextsOpenAt(System.DateTime)", span="73-73"];
n8 [cluster="lambda expression", label="Entry lambda expression", span="74-74"];
n9 [cluster="lambda expression", label="context.AnalysisEndTimeUtc <= frontierTimeUtc", span="74-74"];
n10 [cluster="lambda expression", label="Exit lambda expression", span="74-74"];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", span="82-82"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="extraAnalysisPeriodRatio < 0", span="84-84"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="throw new ArgumentOutOfRangeException(nameof(extraAnalysisPeriodRatio), ''extraAnalysisPeriodRatio must be greater than or equal to zero.'');", span="86-86"];
n14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_scoreFunctionProvider = scoreFunctionProvider", span="89-89"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_extraAnalysisPeriodRatio = extraAnalysisPeriodRatio", span="90-90"];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_extensions = extensions?.ToList() ?? new List<IInsightManagerExtension>()", span="91-91"];
n17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_openInsightContexts = new HashSet<InsightAnalysisContext>()", span="93-93"];
n23 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n24 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_updatedInsightContexts = new HashSet<InsightAnalysisContext>()", span="94-94"];
n25 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
n19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="_closedInsightContexts = new ConcurrentDictionary<Guid, InsightAnalysisContext>()", span="95-95"];
n20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InsightManager(QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider, double, params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[])", span="82-82"];
n21 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
n22 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n26 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
n27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.AddExtension(QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.AddExtension(QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension)", span="102-102"];
n28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.AddExtension(QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension)", label="_extensions.Add(extension)", span="104-104"];
n29 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.AddExtension(QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.AddExtension(QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension)", span="102-102"];
n30 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", span="113-113"];
n32 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", label=_extensions, span="115-115"];
n33 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", label="extension.InitializeForRange(start, end, current)", span="117-117"];
n34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.InitializeExtensionsForRange(System.DateTime, System.DateTime, System.DateTime)", span="113-113"];
n35 [cluster="QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.InitializeForRange(System.DateTime, System.DateTime, System.DateTime)", span="24-24"];
n36 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", span="127-127"];
n37 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="generatedInsights != null && generatedInsights.Insights.Count > 0", span="129-129"];
n38 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="generatedInsights.Insights", span="131-131"];
n39 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="var initialValues = securityValuesCollection[insight.Symbol]", span="134-134"];
n44 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="UpdateScores(securityValuesCollection)", span="146-146"];
n46 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="extension.Step(frontierTimeUtc)", span="150-150"];
n40 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="var analysisPeriod = insight.Period + TimeSpan.FromTicks((long)(_extraAnalysisPeriodRatio * insight.Period.Ticks))", span="135-135"];
n41 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="var context = new InsightAnalysisContext(insight, initialValues, analysisPeriod)", span="138-138"];
n48 [cluster="System.TimeSpan.FromTicks(long)", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
n42 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="_openInsightContexts.Add(context)", span="139-139"];
n49 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.InsightAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Insight, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", span="93-93"];
n43 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="_extensions.ForEach(e => e.OnInsightGenerated(context))", span="142-142"];
n55 [cluster="lambda expression", label="e.OnInsightGenerated(context)", span="142-142"];
n50 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
n51 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
n54 [cluster="lambda expression", label="Entry lambda expression", span="142-142"];
n45 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label=_extensions, span="148-148"];
n52 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", span="183-183"];
n47 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Step(System.DateTime, QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection, QuantConnect.Algorithm.Framework.Alphas.InsightCollection)", span="127-127"];
n53 [cluster="QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.Step(System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.Step(System.DateTime)", span="16-16"];
n56 [cluster="lambda expression", label="Exit lambda expression", span="142-142"];
n57 [cluster="QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", label="Entry QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightGenerated(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", span="30-30"];
n58 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", span="158-158"];
n59 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", label=insightIds, span="160-160"];
n60 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", label="InsightAnalysisContext context", span="162-162"];
n62 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", span="158-158"];
n61 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.RemoveInsights(System.Collections.Generic.IEnumerable<System.Guid>)", label="_closedInsightContexts.TryRemove(id, out context)", span="163-163"];
n63 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
n64 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", span="173-173"];
n65 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", label="var copy = _updatedInsightContexts.ToList()", span="175-175"];
n66 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", label="_updatedInsightContexts.Clear()", span="176-176"];
n67 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", label="return copy;", span="177-177"];
n69 [cluster="System.Collections.Generic.HashSet<T>.Clear()", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
n68 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.GetUpdatedContexts()", span="173-173"];
n70 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var removals = new HashSet<InsightAnalysisContext>()", span="185-185"];
n73 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="context.SetCurrentValues(securityValuesCollection[context.Symbol])", span="192-192"];
n71 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label=_openInsightContexts, span="186-186"];
n87 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="removals.Add(context)", span="226-226"];
n89 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="_openInsightContexts.RemoveWhere(removals.Contains)", span="233-233"];
n72 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var previouslyClosed = context.InsightPeriodClosed", span="189-189"];
n74 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var currentTimeUtc = context.CurrentValues.TimeUtc", span="195-195"];
n76 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="!context.ShouldAnalyze(scoreType)", span="198-198"];
n77 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var function = _scoreFunctionProvider.GetScoreFunction(context.Insight.Type, scoreType)", span="205-205"];
n78 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var score = function.Evaluate(context, scoreType)", span="206-206"];
n79 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="context.Score.SetScore(scoreType, score, currentTimeUtc)", span="207-207"];
n80 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="!previouslyClosed && context.InsightPeriodClosed", span="211-211"];
n81 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="_extensions.ForEach(e => e.OnInsightClosed(context))", span="213-213"];
n99 [cluster="lambda expression", label="e.OnInsightClosed(context)", span="213-213"];
n82 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="currentTimeUtc >= context.AnalysisEndTimeUtc", span="217-217"];
n83 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="context.Score.Finalize(currentTimeUtc)", span="219-219"];
n84 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="_extensions.ForEach(e => e.OnInsightAnalysisCompleted(context))", span="221-221"];
n103 [cluster="lambda expression", label="e.OnInsightAnalysisCompleted(context)", span="221-221"];
n85 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="var id = context.Insight.Id", span="223-223"];
n86 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="_closedInsightContexts[id] = context", span="224-224"];
n88 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="_updatedInsightContexts.Add(context)", span="230-230"];
n91 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", span="113-113"];
n75 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label=ScoreTypes, span="196-196"];
n92 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext.ShouldAnalyze(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", span="158-158"];
n93 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider.GetScoreFunction(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider.GetScoreFunction(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", span="28-28"];
n94 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunction.Evaluate(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext, QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunction.Evaluate(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext, QuantConnect.Algorithm.Framework.Alphas.InsightScoreType)", span="30-30"];
n95 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType, double, System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType, double, System.DateTime)", span="76-76"];
n98 [cluster="lambda expression", label="Entry lambda expression", span="213-213"];
n96 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", span="101-101"];
n102 [cluster="lambda expression", label="Entry lambda expression", span="221-221"];
n90 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.UpdateScores(QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection)", span="183-183"];
n97 [cluster="System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", label="Entry System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", span="0-0"];
n100 [cluster="lambda expression", label="Exit lambda expression", span="213-213"];
n101 [cluster="QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", label="Entry QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightClosed(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", span="36-36"];
n104 [cluster="lambda expression", label="Exit lambda expression", span="221-221"];
n105 [cluster="QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", label="Entry QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension.OnInsightAnalysisCompleted(QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext)", span="42-42"];
n106 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", span="238-238"];
n107 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", label=_extensions, span="240-240"];
n108 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", label="(ext as IDisposable)?.DisposeSafely()", span="242-242"];
n109 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager.Dispose()", span="238-238"];
n110 [cluster="System.IDisposable.DisposeSafely()", label="Entry System.IDisposable.DisposeSafely()", span="31-31"];
d324 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, label="80: result.ProcessingTime = (DateTime.Now - _startTime).TotalSeconds", span="787-787"];
d508 [label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", span=""];
d323 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="var result = new LiveResultPacket((LiveNodePacket)job, new LiveResult(charts, orders, profitLoss, holdings, statisticsResults.Summary, runtime))", span="784-784"];
d325 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="StoreResult(result, false)", span="790-790"];
d1 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_charts = new ConcurrentDictionary<string, Chart>()", span="159-159"];
d2 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_orderEvents = new ConcurrentQueue<OrderEvent>()", span="160-160"];
d3 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_messages = new ConcurrentQueue<Packet>()", span="161-161"];
d4 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_isActive = true", span="162-162"];
d5 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_runtimeStatistics = new Dictionary<string, string>()", span="163-163"];
d6 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_resamplePeriod = TimeSpan.FromSeconds(1)", span="165-165"];
d7 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_notificationPeriod = TimeSpan.FromSeconds(1)", span="166-166"];
d8 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_startTime = DateTime.Now", span="167-167"];
d9 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="_logStore = new List<LogEntry>()", span="170-170"];
d17 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_api = api", span="184-184"];
d18 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_dataFeed = dataFeed", span="185-185"];
d19 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_messagingHandler = messagingHandler", span="186-186"];
d20 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_setupHandler = setupHandler", span="187-187"];
d21 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_transactionHandler = transactionHandler", span="188-188"];
d22 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_job = (LiveNodePacket)job", span="189-189"];
d23 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_job == null", span="190-190"];
d25 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_deployId = _job.DeployId", span="191-191"];
d26 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_compileId = _job.CompileId", span="192-192"];
d30 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="!(_exitTriggered && Messages.Count == 0)", span="201-201"];
d32 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Messages.TryDequeue(out packet)", span="207-207"];
d33 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="_messagingHandler.Send(packet)", span="209-209"];
d34 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Update()", span="213-213"];
d35 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Messages.Count == 0", span="215-215"];
d40 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="_isActive = false", span="228-228"];
d49 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_algorithm == null || _algorithm.Transactions == null || _transactionHandler.Orders == null || !_algorithm.GetLocked()", span="241-241"];
d52 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="DateTime.Now > _nextUpdate || _exitTriggered", span="249-249"];
d56 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_orderEvents.TryDequeue(out orderEvent) && stopwatch.ElapsedMilliseconds < 15", span="256-256"];
d57 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var order = _algorithm.Transactions.GetOrderById(orderEvent.OrderId)", span="258-258"];
d62 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_lastOrderId = (from order in deltaOrders.Values select order.Id).DefaultIfEmpty(_lastOrderId).Max()", span="270-270"];
d65 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_chartLock, span="278-278"];
d66 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_charts, span="281-281"];
d74 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var upTime = DateTime.UtcNow - _launchTimeUtc", span="295-295"];
d76 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="serverStatistics[''Total RAM (MB)''] = _job.Controls.RamAllocation.ToString()", span="297-297"];
d77 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed() && !x.Symbol.IsCanonical()).OrderBy(x => x.Symbol.Value)", span="300-300"];
d80 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_runtimeLock, span="307-307"];
d81 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_runtimeStatistics, span="309-309"];
d84 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var netReturn = _setupHandler.StartingPortfolioValue > 0 ?\r\n                                    (_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue\r\n                                    : 0", span="317-319"];
d85 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Unrealized:'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="322-322"];
d86 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Fees:'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="323-323"];
d87 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Net Profit:'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="324-324"];
d89 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Equity:'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="326-326"];
d90 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Holdings:'', ''$'' + _algorithm.Portfolio.TotalHoldingsValue.ToString(''N2''))", span="327-327"];
d91 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Volume:'', ''$'' + _algorithm.Portfolio.TotalSaleVolume.ToString(''N2''))", span="328-328"];
d92 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, holdings, deltaStatistics, runtimeStatistics, serverStatistics)", span="332-332"];
d94 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_messagingHandler.Send(liveResultPacket)", span="336-336"];
d95 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="DateTime.Now > _nextChartsUpdate || _exitTriggered", span="340-340"];
d97 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_nextChartsUpdate = DateTime.Now.AddMinutes(1)", span="343-343"];
d99 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_chartLock, span="345-345"];
d100 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=Charts, span="347-347"];
d103 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var orders = new Dictionary<int, Order>(_transactionHandler.Orders)", span="354-354"];
d104 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var complete = new LiveResultPacket(_job, new LiveResult(chartComplete, orders, _algorithm.Transactions.TransactionRecord, holdings, deltaStatistics, runtimeStatistics, serverStatistics))", span="355-355"];
d105 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="StoreResult(complete)", span="356-356"];
d107 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="DateTime.Now > _nextLogStoreUpdate || _exitTriggered", span="361-361"];
d110 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_logStoreLock, span="365-365"];
d112 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="logs = (from log in _logStore\r\n                                    where log.Time >= utc.RoundDown(TimeSpan.FromHours(1))\r\n                                    select log).ToList()", span="368-370"];
d113 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_logStore = logs", span="372-372"];
d114 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="StoreLog(logs)", span="374-374"];
d115 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_nextLogStoreUpdate = DateTime.Now.AddMinutes(2)", span="375-375"];
d117 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="DateTime.Now > _nextStatisticsUpdate || _exitTriggered", span="380-380"];
d118 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_api.SendStatistics(\r\n                                _job.AlgorithmId,\r\n                                _algorithm.Portfolio.TotalUnrealizedProfit,\r\n                                _algorithm.Portfolio.TotalFees,\r\n                                _algorithm.Portfolio.TotalProfit,\r\n                                _algorithm.Portfolio.TotalHoldingsValue,\r\n                                _algorithm.Portfolio.TotalPortfolioValue,\r\n                                netReturn,\r\n                                _algorithm.Portfolio.TotalSaleVolume,\r\n                                _lastOrderId, 0)", span="384-393"];
d121 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_nextStatisticsUpdate = DateTime.Now.AddMinutes(1)", span="399-399"];
d123 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=_chartLock, span="404-404"];
d124 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=Charts, span="406-406"];
d128 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="_nextUpdate = DateTime.Now.AddSeconds(2)", span="423-423"];
d181 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="deltaChart.Name == _subscription || _subscription == ''*''", span="461-461"];
d184 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="469-469"];
d187 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="478-478"];
d188 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="var packets = new[]\r\n            {\r\n                new LiveResultPacket(_job, new LiveResult {Orders = deltaOrders}),\r\n                new LiveResultPacket(_job, new LiveResult {Holdings = holdings}),\r\n                new LiveResultPacket(_job, new LiveResult\r\n                {\r\n                    Statistics = deltaStatistics,\r\n                    RuntimeStatistics = runtimeStatistics,\r\n                    ServerStatistics = serverStatistics\r\n                })\r\n            }", span="482-492"];
d196 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="Messages.Count > 500", span="506-506"];
d198 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="507-507"];
d199 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="AddToLogStore(message)", span="508-508"];
d205 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="517-517"];
d206 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", label="AddToLogStore(message)", span="518-518"];
d210 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="Messages.Count > 500", span="530-530"];
d212 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="Messages.Enqueue(new LogPacket(_deployId, message))", span="531-531"];
d213 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="AddToLogStore(message)", span="532-532"];
d217 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label=_logStoreLock, span="542-542"];
d218 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label="_logStore.Add(new LogEntry(DateTime.Now.ToString(DateFormat.UI) + '' '' + message))", span="544-544"];
d224 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="Messages.Count > 500", span="556-556"];
d226 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="Messages.Enqueue(new HandledErrorPacket(_deployId, message, stacktrace))", span="557-557"];
d227 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="558-558"];
d233 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Messages.Enqueue(packet)", span="568-568"];
d237 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _deployId, message, stacktrace))", span="578-578"];
d238 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="579-579"];
d243 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label=_chartLock, span="596-596"];
d244 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="!Charts.ContainsKey(chartName)", span="599-599"];
d245 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="601-601"];
d246 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="605-605"];
d247 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="607-607"];
d248 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="611-611"];
d259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="627-627"];
d264 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="_algorithm.Securities.TryGetValue(symbol, out security) && !security.IsInternalFeed() && value > 0", span="642-642"];
d267 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="647-647"];
d275 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="673-673"];
d279 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label=_chartLock, span="684-684"];
d281 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="!Charts.ContainsKey(update.Name)", span="689-689"];
d282 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="691-691"];
d284 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="698-698"];
d285 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="700-700"];
d286 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="704-704"];
d291 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_algorithm = algorithm", span="717-717"];
d293 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_algorithm.Securities.Values", span="720-720"];
d296 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="SecurityType(types)", span="724-724"];
d309 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="var packet = new AlgorithmStatusPacket(_job.AlgorithmId, _job.ProjectId, status, message)", span="743-743"];
d310 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Messages.Enqueue(packet)", span="744-744"];
d315 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label=_runtimeLock, span="756-756"];
d316 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="!_runtimeStatistics.ContainsKey(key)", span="758-758"];
d317 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="_runtimeStatistics.Add(key, value)", span="760-760"];
d318 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="_runtimeStatistics[key] = value", span="762-762"];
d322 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="var charts = new Dictionary<string, Chart>(Charts)", span="781-781"];
d327 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="_messagingHandler.Send(result)", span="796-796"];
d331 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", label="SaveLogs(_job.DeployId, logs.Select(x => x.Message))", span="813-813"];
d341 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label=_chartLock, span="835-835"];
d353 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="SaveResults(CreateKey(''minute''), live.Results)", span="860-860"];
d357 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="SaveResults(CreateKey(''10minute''), live.Results)", span="867-867"];
d368 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="SaveResults(CreateKey(''second_'' + CreateSafeChartName(name), ''yyyy-MM-dd-HH''), result)", span="884-884"];
d384 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="_orderEvents.Enqueue(newEvent)", span="907-907"];
d386 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Messages.Enqueue(new OrderEventPacket(_deployId, newEvent))", span="911-911"];
d388 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="DebugMessage(message)", span="914-914"];
d389 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="LogMessage(message)", span="917-917"];
d393 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="!_exitTriggered && _algorithm != null && !_algorithm.GetLocked()", span="927-927"];
d394 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="ProcessSynchronousEvents(true)", span="929-929"];
d395 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="StoreLog(_logStore)", span="930-930"];
d396 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="_exitTriggered = true", span="933-933"];
d397 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="Update()", span="935-935"];
d401 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", label="Messages.Clear()", span="943-943"];
d434 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", label="return string.Format(''{0}-{1}_{2}.json'', _job.DeployId, DateTime.UtcNow.ToString(dateFormat), suffix);", span="984-984"];
d441 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", label="_subscription = symbol", span="1003-1003"];
d444 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="time > _nextSample || forceProcess", span="1015-1015"];
d446 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_nextSample = time.Add(ResamplePeriod)", span="1020-1020"];
d447 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_dataFeed != null", span="1023-1023"];
d448 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_dataFeed.Subscriptions", span="1025-1025"];
d451 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.Securities.TryGetValue(subscription.Configuration.Symbol, out security)", span="1032-1032"];
d458 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var cash = (from c in _algorithm.Portfolio.CashBook.Values\r\n                                    where c.SecuritySymbol == last.Symbol\r\n                                    select c).SingleOrDefault()", span="1047-1049"];
d462 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="SampleAssetPrices(subscription.Configuration.Symbol, time, price)", span="1063-1063"];
d463 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="1069-1069"];
d464 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="SampleRange(_algorithm.GetChartUpdates(true))", span="1072-1072"];
d465 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="!_algorithm.IsWarmingUp && time > _nextRunningStatus", span="1076-1076"];
d466 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_nextRunningStatus = time.Add(TimeSpan.FromMinutes(1))", span="1078-1078"];
d467 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_api.SetAlgorithmStatus(_job.AlgorithmId, AlgorithmStatus.Running)", span="1079-1079"];
d469 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="1084-1084"];
d471 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.DebugMessages.TryDequeue(out message)", span="1087-1087"];
d472 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="DebugMessage(message)", span="1089-1089"];
d474 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="1095-1095"];
d476 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.ErrorMessages.TryDequeue(out message)", span="1098-1098"];
d477 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="ErrorMessage(message)", span="1100-1100"];
d479 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="1106-1106"];
d481 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.LogMessages.TryDequeue(out message)", span="1109-1109"];
d482 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="LogMessage(message)", span="1111-1111"];
d483 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.RuntimeStatistics", span="1116-1116"];
d484 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="RuntimeStatistic(pair.Key, pair.Value)", span="1118-1118"];
d486 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.Notify.Messages.Count > 0 && (DateTime.Now < start.AddSeconds(1) || forceProcess)", span="1123-1123"];
d488 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.Notify.Messages.TryDequeue(out message)", span="1126-1126"];
d490 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="_messagingHandler.SendNotification(message)", span="1132-1132"];
d321 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776"];
d156 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="108-108"];
d157 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", label="Entry QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="153-153"];
d326 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="result.Results = new LiveResult()", span="793-793"];
d158 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="830-830"];
d0 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="157-157"];
d11 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
d12 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
d13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d14 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d10 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="157-157"];
d15 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d16 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="182-182"];
d24 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="throw new Exception(''LiveResultHandler.Constructor(): Submitted Job type invalid.'');", span="190-190"];
d27 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="182-182"];
d29 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198"];
d36 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Thread.Sleep(10)", span="218-218"];
d38 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Log.Error(err)", span="223-223"];
d31 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Packet packet", span="206-206"];
d39 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Log.Trace(''LiveTradingResultHandler.Run(): Ending Thread...'')", span="227-227"];
d42 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
d43 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
d44 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="235-235"];
d37 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label=Exception, span="221-221"];
d41 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198"];
d48 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Dictionary<int, Order> deltaOrders", span="238-238"];
d50 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Error(''LiveTradingResultHandler.Update(): Algorithm not yet initialized.'')", span="243-243"];
d132 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="456-456"];
d53 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="OrderEvent orderEvent", span="252-252"];
d129 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=Exception, span="427-427"];
d131 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="235-235"];
d55 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var stopwatch = Stopwatch.StartNew()", span="255-255"];
d58 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="deltaOrders[orderEvent.OrderId] = order.Clone()", span="259-259"];
d59 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=deltaOrders, span="263-263"];
d135 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
d54 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="deltaOrders = new Dictionary<int, Order>()", span="253-253"];
d63 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var deltaCharts = new Dictionary<string, Chart>()", span="276-276"];
d139 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d140 [cluster="Unk.Max", label="Entry Unk.Max", span=""];
d64 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Build delta charts'')", span="277-277"];
d68 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="deltaCharts.Add(safeName, chart.Value.GetUpdates())", span="285-285"];
d67 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var safeName = chart.Value.Name.Replace('/', '-')", span="284-284"];
d69 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): End build delta charts'')", span="288-288"];
d73 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var serverStatistics = OS.GetServerStatistics()", span="294-294"];
d75 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="serverStatistics[''Up Time''] = string.Format(''{0}d {1:hh\\:mm\\:ss}'', upTime.Days, upTime)", span="296-296"];
d147 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
d78 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="holdings.Add(asset.Symbol.Value, new Holding(asset))", span="302-302"];
d79 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Build run time stats'')", span="306-306"];
d148 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d149 [cluster="Unk.OrderBy", label="Entry Unk.OrderBy", span=""];
d167 [cluster="lambda expression", label="Entry lambda expression", span="300-300"];
d172 [cluster="lambda expression", label="Entry lambda expression", span="300-300"];
d82 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="311-311"];
d83 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): End build run time stats'')", span="314-314"];
d88 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="runtimeStatistics.Add(''Return:'', netReturn.ToString(''P''))", span="325-325"];
d72 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var runtimeStatistics = new Dictionary<string, string>()", span="293-293"];
d152 [cluster="decimal.ToString(string)", label="Entry decimal.ToString(string)", span="0-0"];
d144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d70 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var holdings = new Dictionary<string, Holding>()", span="291-291"];
d71 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var deltaStatistics = new Dictionary<string, string>()", span="292-292"];
d93 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=splitPackets, span="334-334"];
d153 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438"];
d96 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Pre-store result'')", span="342-342"];
d98 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var chartComplete = new Dictionary<string, Chart>()", span="344-344"];
d154 [cluster="System.DateTime.AddMinutes(double)", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
d102 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="chartComplete.Add(safeName, chart.Value)", span="351-351"];
d101 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var safeName = chart.Value.Name.Replace('/', '-')", span="350-350"];
d155 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
d106 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): End-store result'')", span="357-357"];
d108 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="List<LogEntry> logs", span="363-363"];
d109 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Storing log...'')", span="364-364"];
d111 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="var utc = DateTime.UtcNow", span="367-367"];
d159 [cluster="System.TimeSpan.FromHours(double)", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
d160 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
d161 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d162 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809"];
d116 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Finished storing log'')", span="376-376"];
d122 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Trimming charts'')", span="403-403"];
d119 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label=Exception, span="395-395"];
d163 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="280-280"];
d120 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Error(err, ''Error sending statistics:'')", span="397-397"];
d125 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="chart.Value.Series", span="408-408"];
d127 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Debug(''LiveTradingResultHandler.Update(): Finished trimming charts'')", span="418-418"];
d166 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
d178 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="deltaCharts.Values", span="456-456"];
d180 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="current.Add(deltaChart.Name, chart)", span="459-459"];
d182 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="chart.Series = deltaChart.Series", span="463-463"];
d183 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="current.Count >= groupSize", span="466-466"];
d176 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="var current = new Dictionary<string, Chart>()", span="448-448"];
d177 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="var chartPackets = new List<LiveResultPacket>()", span="449-449"];
d185 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="current = new Dictionary<string, Chart>()", span="471-471"];
d192 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="147-147"];
d193 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d186 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="current.Count > 0", span="476-476"];
d189 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="return packets.Concat(chartPackets);", span="495-495"];
d195 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504"];
d197 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="return;", span="506-506"];
d201 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
d202 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
d200 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504"];
d203 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539"];
d204 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515"];
d208 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
d207 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515"];
d209 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527"];
d211 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="return;", span="530-530"];
d215 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
d214 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527"];
d216 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Adding'')", span="541-541"];
d219 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Finished adding'')", span="546-546"];
d221 [cluster="QuantConnect.Logging.LogEntry.LogEntry(string)", label="Entry QuantConnect.Logging.LogEntry.LogEntry(string)", span="44-44"];
d222 [cluster="System.DateTime.ToString(string)", label="Entry System.DateTime.ToString(string)", span="0-0"];
d223 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554"];
d225 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="return;", span="556-556"];
d229 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
d228 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554"];
d230 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d232 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="var packet = new SecurityTypesPacket { Types = types }", span="567-567"];
d234 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565"];
d236 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576"];
d240 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
d239 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576"];
d242 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Log.Debug(''LiveTradingResultHandler.Sample(): Sampling '' + chartName + ''.'' + seriesName)", span="595-595"];
d241 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593"];
d251 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d191 [cluster="QuantConnect.Chart.Chart(string)", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
d252 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
d253 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d254 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
d249 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Log.Debug(''LiveTradingResultHandler.Sample(): Done sampling '' + chartName + ''.'' + seriesName)", span="613-613"];
d255 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
d256 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622"];
d258 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", label="Log.Debug(''LiveTradingResultHandler.SampleEquity(): '' + time.ToShortTimeString() + '' >'' + value)", span="626-626"];
d260 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622"];
d262 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638"];
d263 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Security security", span="641-641"];
d265 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="var now = DateTime.UtcNow.ConvertFromUtc(security.Exchange.TimeZone)", span="644-644"];
d268 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638"];
d269 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
d170 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
d266 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="security.Exchange.Hours.IsOpen(now, security.IsExtendedMarketHours)", span="645-645"];
d274 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671"];
d276 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671"];
d278 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Begin sampling'')", span="683-683"];
d280 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label=updates, span="686-686"];
d283 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="update.Series.Values", span="695-695"];
d289 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d290 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715"];
d292 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var types = new List<SecurityType>()", span="719-719"];
d294 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="!types.Contains(security.Type)", span="722-722"];
d295 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="types.Add(security.Type)", span="722-722"];
d297 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var debug = new FuncTextWriter(algorithm.Debug)", span="727-727"];
d231 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565"];
d306 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739"];
d308 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Log.Trace(''LiveTradingResultHandler.SendStatusUpdate(): '' + msg)", span="742-742"];
d312 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", span="74-74"];
d311 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739"];
d314 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): Begin setting statistic'')", span="755-755"];
d313 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753"];
d319 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): End setting statistic'')", span="764-764"];
d328 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label=Exception, span="798-798"];
d330 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776"];
d332 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", label=Exception, span="815-815"];
d334 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809"];
d335 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d336 [cluster="Unk.SaveLogs", label="Entry Unk.SaveLogs", span=""];
d337 [cluster="lambda expression", label="Entry lambda expression", span="813-813"];
d340 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): Begin store result sampling'')", span="834-834"];
d342 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="packet.Type != PacketType.LiveResult", span="838-838"];
d344 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var live = packet as LiveResultPacket", span="841-841"];
d352 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="live.Results.Charts = minuteCharts", span="859-859"];
d354 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var tenminuteSampler = new SeriesSampler(TimeSpan.FromMinutes(10))", span="863-863"];
d378 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="982-982"];
d379 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29"];
d356 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="live.Results.Charts = tenminuteCharts", span="866-866"];
d358 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="live.Results.Charts = highResolutionCharts", span="870-870"];
d362 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="live.Results.Charts.Keys", span="876-876"];
d367 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="result.Charts.Add(name, live.Results.Charts[name])", span="882-882"];
d363 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var result = new LiveResult()", span="878-878"];
d382 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="992-992"];
d383 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="904-904"];
d385 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Log.Trace(''LiveTradingResultHandler.OrderEvent(): '' + newEvent, true)", span="910-910"];
d387 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="var message = ''New Order Event: '' + newEvent", span="913-913"];
d391 [cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="49-49"];
d390 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="904-904"];
d392 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="923-923"];
d399 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1011-1011"];
d398 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="923-923"];
d400 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="941-941"];
d402 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="941-941"];
d403 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
d435 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="982-982"];
d436 [cluster="string.Format(string, object, object, object)", label="Entry string.Format(string, object, object, object)", span="0-0"];
d440 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1001-1001"];
d442 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1001-1001"];
d443 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var time = DateTime.UtcNow", span="1013-1013"];
d445 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Enter'')", span="1017-1017"];
d495 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
d449 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="subscription.Configuration.TickType == TickType.OpenInterest", span="1028-1028"];
d452 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var price = subscription.RealtimePrice", span="1035-1035"];
d461 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="security.SetMarketPrice(new Tick(time, subscription.Configuration.Symbol, price, price))", span="1059-1059"];
d450 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Security security", span="1031-1031"];
d453 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var last = security.GetLastData()", span="1037-1037"];
d457 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="security.SetRealTimePrice(last)", span="1044-1044"];
d455 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="last = last.Clone(last.IsFillForward)", span="1041-1041"];
d459 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="cash != null", span="1051-1051"];
d499 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
d460 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="cash.Update(last)", span="1053-1053"];
d503 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
d504 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="463-463"];
d277 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
d468 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var debugStopWatch = Stopwatch.StartNew()", span="1083-1083"];
d376 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d505 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
d470 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="string message", span="1086-1086"];
d473 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var errorStopWatch = Stopwatch.StartNew()", span="1094-1094"];
d475 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="string message", span="1097-1097"];
d478 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var logStopWatch = Stopwatch.StartNew()", span="1105-1105"];
d480 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="string message", span="1108-1108"];
d485 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="var start = DateTime.Now", span="1122-1122"];
d492 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Log.Error(err, ''Sending notification: '' + message.GetType().FullName)", span="1136-1136"];
d487 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Notification message", span="1125-1125"];
d493 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Exit'')", span="1141-1141"];
d489 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Log.Trace(''LiveTradingResultHandler.ProcessSynchronousEvents(): Processing Notification...'')", span="1129-1129"];
d491 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label=Exception, span="1134-1134"];
d506 [cluster="QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", label="Entry QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", span="56-56"];
d373 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="830-830"];
d366 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="result.Charts = new Dictionary<string, Chart>()", span="881-881"];
d406 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var charts = new Dictionary<string, Chart>()", span="957-957"];
d28 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d45 [cluster="System.Threading.Thread.Sleep(int)", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
d46 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
d47 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
d51 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="return;", span="244-244"];
d133 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
d130 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="Log.Error(err, ''LiveTradingResultHandler().Update(): '', true)", span="429-429"];
d134 [cluster="System.Diagnostics.Stopwatch.StartNew()", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
d136 [cluster="QuantConnect.Orders.Order.Clone()", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
d61 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="266-266"];
d60 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="order.Value.Price = order.Value.Price.SmartRounding()", span="265-265"];
d141 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
d143 [cluster="QuantConnect.Chart.GetUpdates()", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
d142 [cluster="string.Replace(char, char)", label="Entry string.Replace(char, char)", span="0-0"];
d145 [cluster="QuantConnect.OS.GetServerStatistics()", label="Entry QuantConnect.OS.GetServerStatistics()", span="217-217"];
d146 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d150 [cluster="Holding.cstr", label="Entry Holding.cstr", span=""];
d151 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d416 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="result.Orders = result.Orders.Values.Where(x => x.Time >= start && x.Time <= stop).ToDictionary(x => x.Id)", span="971-971"];
d413 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="newSeries.Values.AddRange(series.Values.Where(chartPoint => chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop))", span="966-966"];
d169 [cluster="lambda expression", label="Exit lambda expression", span="300-300"];
d168 [cluster="lambda expression", label="!x.IsInternalFeed() && !x.Symbol.IsCanonical()", span="300-300"];
d174 [cluster="lambda expression", label="Exit lambda expression", span="300-300"];
d173 [cluster="lambda expression", label="x.Symbol.Value", span="300-300"];
d410 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="charts.Add(kvp.Key, newChart)", span="962-962"];
d190 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438"];
d175 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="var groupSize = 3", span="447-447"];
d349 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var highResolutionCharts = new Dictionary<string, Chart>(live.Results.Charts)", span="852-852"];
d364 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="result.Orders = new Dictionary<int, Order>(live.Results.Orders)", span="879-879"];
d365 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="result.Holdings = new Dictionary<string, Holding>(live.Results.Holdings)", span="880-880"];
d359 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="start = DateTime.UtcNow.RoundDown(TimeSpan.FromHours(1))", span="871-871"];
d360 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="stop = DateTime.UtcNow.RoundUp(TimeSpan.FromHours(1))", span="872-872"];
d126 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", label="series.Value.Values =\r\n                                    (from v in series.Value.Values\r\n                                     where v.x > Time.DateTimeToUnixTimeStamp(DateTime.UtcNow.AddDays(-2))\r\n                                     select v).ToList()", span="411-414"];
d179 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", label="var chart = new Chart(deltaChart.Name)", span="458-458"];
d194 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d220 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539"];
d307 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="var msg = status + (string.IsNullOrEmpty(message) ? string.Empty : '' '' + message)", span="741-741"];
d235 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
d250 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593"];
d257 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", label="value > 0", span="624-624"];
d261 [cluster="System.DateTime.ToShortTimeString()", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
d270 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
d271 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
d287 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Finished sampling'')", span="708-708"];
d301 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715"];
d298 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var error = new FuncTextWriter(algorithm.Error)", span="728-728"];
d302 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
d303 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
d299 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Console.SetOut(debug)", span="729-729"];
d320 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753"];
d329 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Log.Error(err)", span="800-800"];
d333 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", label="Log.Error(err)", span="817-817"];
d339 [cluster="lambda expression", label="Exit lambda expression", span="813-813"];
d338 [cluster="lambda expression", label="x.Message", span="813-813"];
d343 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="return;", span="838-838"];
d345 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="live != null", span="843-843"];
d348 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Truncate(live.Results, start, stop)", span="850-850"];
d351 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var minuteCharts = minuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="856-856"];
d355 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var tenminuteCharts = tenminuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="864-864"];
d361 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Truncate(live.Results, start, stop)", span="874-874"];
d375 [cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="31-31"];
d370 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): End store result sampling'')", span="892-892"];
d381 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d438 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="992-992"];
d437 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", label="return Uri.EscapeDataString(chartName);", span="994-994"];
d494 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1011-1011"];
d454 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="last != null && price > 0", span="1038-1038"];
d456 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", label="last.Value = price", span="1043-1043"];
d501 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
d502 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
d496 [cluster="QuantConnect.Securities.Security.GetLastData()", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
d498 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="627-627"];
d497 [cluster="QuantConnect.Data.BaseData.Clone(bool)", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249"];
d500 [cluster="Unk.Update", label="Entry Unk.Update", span=""];
d288 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
d350 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var minuteSampler = new SeriesSampler(TimeSpan.FromMinutes(1))", span="855-855"];
d507 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d372 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Error(err)", span="896-896"];
d405 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var unixDateStop = Time.DateTimeToUnixTimeStamp(stop)", span="952-952"];
d407 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="result.Charts", span="958-958"];
d415 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="result.Charts = charts", span="970-970"];
d369 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Error(''LiveResultHandler.StoreResult(): Result Null.'')", span="889-889"];
d138 [cluster="System.DateTime.ToUniversalTime()", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
d137 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="206-206"];
d374 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="949-949"];
d417 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="result.Orders", span="976-976"];
d424 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
d428 [cluster="lambda expression", label="Entry lambda expression", span="971-971"];
d431 [cluster="lambda expression", label="Entry lambda expression", span="971-971"];
d404 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var unixDateStart = Time.DateTimeToUnixTimeStamp(start)", span="951-951"];
d411 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="chart.Series.Values", span="963-963"];
d412 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var newSeries = new Series(series.Name, series.SeriesType)", span="965-965"];
d414 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="newChart.AddSeries(newSeries)", span="967-967"];
d422 [cluster="Unk.AddRange", label="Entry Unk.AddRange", span=""];
d425 [cluster="lambda expression", label="Entry lambda expression", span="966-966"];
d171 [cluster="QuantConnect.Symbol.IsCanonical()", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
d408 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var chart = kvp.Value", span="960-960"];
d409 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="var newChart = new Chart(chart.Name, chart.ChartType)", span="961-961"];
d380 [cluster="System.DateTime.RoundUp(System.TimeSpan)", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
d164 [cluster="System.DateTime.AddDays(double)", label="Entry System.DateTime.AddDays(double)", span="0-0"];
d165 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
d300 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Console.SetError(error)", span="730-730"];
d304 [cluster="System.Console.SetOut(System.IO.TextWriter)", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
d346 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var start = DateTime.UtcNow.Date", span="846-846"];
d347 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var stop = start.AddDays(1)", span="847-847"];
d377 [cluster="QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", label="Entry QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", span="129-129"];
d371 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label=Exception, span="894-894"];
d439 [cluster="System.Uri.EscapeDataString(string)", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
d426 [cluster="lambda expression", label="chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop", span="966-966"];
d418 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="978-978"];
d419 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="949-949"];
d429 [cluster="lambda expression", label="x.Time >= start && x.Time <= stop", span="971-971"];
d430 [cluster="lambda expression", label="Exit lambda expression", span="971-971"];
d433 [cluster="lambda expression", label="Exit lambda expression", span="971-971"];
d432 [cluster="lambda expression", label="x.Id", span="971-971"];
d421 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="179-179"];
d423 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
d427 [cluster="lambda expression", label="Exit lambda expression", span="966-966"];
d420 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
d305 [cluster="System.Console.SetError(System.IO.TextWriter)", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
d509 [label=unixDateStart, span=""];
d510 [label=unixDateStop, span=""];
d511 [label="System.DateTime", span=""];
d512 [label="System.DateTime", span=""];
m0_24 [cluster="System.Net.WebRequest.Create(string)", file="AlgorithmRunner.cs", label="Entry System.Net.WebRequest.Create(string)", span="0-0"];
m0_22 [cluster="System.DateTime.ToString()", file="AlgorithmRunner.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m0_48 [cluster="System.IO.StreamReader.ReadToEnd()", file="AlgorithmRunner.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m0_68 [cluster="lambda expression", file="AlgorithmRunner.cs", label="Entry lambda expression", span="143-143"];
m0_69 [cluster="lambda expression", file="AlgorithmRunner.cs", label="datapoint.Time", span="143-143"];
m0_70 [cluster="lambda expression", file="AlgorithmRunner.cs", label="Exit lambda expression", span="143-143"];
m0_49 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m0_63 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m0_45 [cluster="System.Net.HttpWebRequest.GetResponse()", file="AlgorithmRunner.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m0_60 [cluster="Unk.ToString", file="AlgorithmRunner.cs", label="Entry Unk.ToString", span=""];
m0_46 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding)", file="AlgorithmRunner.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding)", span="0-0"];
m0_25 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="Entry QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", span="78-78"];
m0_32 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", color=green, community=0, file="AlgorithmRunner.cs", label="59: var response = (HttpWebResponse)request.GetResponse()", span="87-87"];
m0_31 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="Thread.Sleep(1000 / MaxRequestsPerSecond + 1)", span="86-86"];
m0_33 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="var encoding = Encoding.ASCII", span="88-88"];
m0_34 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="var reader = new StreamReader(response.GetResponseStream(), encoding)", span="90-90"];
m0_28 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="string data = string.Empty", span="80-80"];
m0_39 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="Log.Error(''REQUEST FAILED: '' + request.Address)", span="100-100"];
m0_30 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="data == string.Empty", span="82-82"];
m0_35 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="data = reader.ReadToEnd()", span="92-92"];
m0_42 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="return data;", span="106-106"];
m0_40 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="throw;", span="101-101"];
m0_29 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="int retryCount = 0", span="81-81"];
m0_38 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="retryCount > 3", span="98-98"];
m0_41 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="Log.Trace(''WARNING: Web request failed with message '' + ex.Message + ''Retrying... '' + retryCount + '' times'')", span="103-103"];
m0_36 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label=WebException, span="95-95"];
m0_37 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="++retryCount", span="97-97"];
m0_43 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", file="AlgorithmRunner.cs", label="Exit QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.GetWithRetry(System.Net.HttpWebRequest)", span="78-78"];
m0_2 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="var granularity = resolution.ToTimeSpan().TotalSeconds", span="48-48"];
m0_3 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="DateTime windowStartTime = startUtc", span="50-50"];
m0_59 [cluster="Unk.>", file="AlgorithmRunner.cs", label="Entry Unk.>", span=""];
m0_0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="AlgorithmRunner.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="27-27"];
m0_6 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", color=green, community=0, file="AlgorithmRunner.cs", label="59: windowEndTime = windowStartTime.AddSeconds(MaxDatapointsPerRequest * granularity)", span="56-56"];
m0_5 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="windowStartTime = windowEndTime", span="55-55"];
m0_7 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="windowEndTime = windowEndTime > endUtc ? endUtc : windowEndTime", span="57-57"];
m0_1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="AlgorithmRunner.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="27-27"];
m0_9 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="var requestURL = string.Format(HistoricCandlesUrl, symbol.Value, windowStartTime.ToString(), windowEndTime.ToString(), granularity)", span="61-61"];
m0_13 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="returnData.AddRange(ParseCandleData(symbol, granularity, data))", span="66-66"];
m0_4 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="DateTime windowEndTime = startUtc", span="51-51"];
m0_8 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="Log.Trace(String.Format(''Getting data for timeperiod from {0} to {1}..'', windowStartTime, windowEndTime))", span="59-59"];
m0_14 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="windowStartTime != windowEndTime", span="68-68"];
m0_12 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="string data = GetWithRetry(request)", span="65-65"];
m0_15 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="return returnData;", span="70-70"];
m0_10 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="var request = (HttpWebRequest)WebRequest.Create(requestURL)", span="62-62"];
m0_11 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="request.UserAgent = ''.NET Framework Test Client''", span="63-63"];
m0_16 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="AlgorithmRunner.cs", label="Exit QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="45-45"];
m0_47 [cluster="System.Net.HttpWebResponse.GetResponseStream()", file="AlgorithmRunner.cs", label="Entry System.Net.HttpWebResponse.GetResponseStream()", span="0-0"];
m0_67 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_44 [cluster="System.Threading.Thread.Sleep(int)", file="AlgorithmRunner.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_26 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="Entry QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", span="116-116"];
m0_55 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", color=green, community=0, file="AlgorithmRunner.cs", label="17: var tradeBar = new TradeBar()\r\n                    {\r\n                        Time = Time.UnixTimeStampToDateTime(epochs),\r\n                        Symbol = symbol,\r\n                        Low = decimal.Parse(datapoint[1].ToString()),\r\n                        High = decimal.Parse(datapoint[2].ToString()),\r\n                        Open = decimal.Parse(datapoint[3].ToString()),\r\n                        Close = decimal.Parse(datapoint[4].ToString()),\r\n                        Volume = decimal.Parse(datapoint[5].ToString()),\r\n                        Value = decimal.Parse(datapoint[4].ToString()),\r\n                        DataType = MarketDataType.TradeBar,\r\n                        Period = new TimeSpan(0, 0, (int)granularity),\r\n                        EndTime = Time.UnixTimeStampToDateTime(epochs).AddSeconds(granularity)\r\n                    }", span="126-139"];
m0_53 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label=parsedData, span="123-123"];
m0_54 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="var epochs = double.Parse(datapoint[0].ToString())", span="125-125"];
m0_56 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="returnData.Add(tradeBar)", span="140-140"];
m0_50 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="List<BaseData> returnData = new List<BaseData>()", span="118-118"];
m0_51 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="data.Length > 0", span="119-119"];
m0_52 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="var parsedData = JsonConvert.DeserializeObject<string[][]>(data)", span="121-121"];
m0_57 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="return returnData.OrderBy(datapoint => datapoint.Time).ToList();", span="143-143"];
m0_58 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", file="AlgorithmRunner.cs", label="Exit QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader.ParseCandleData(QuantConnect.Symbol, double, string)", span="116-116"];
m0_66 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_19 [cluster="System.DateTime.AddSeconds(double)", file="AlgorithmRunner.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m0_64 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="AlgorithmRunner.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m0_23 [cluster="string.Format(string, params object[])", file="AlgorithmRunner.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_65 [cluster="System.Collections.Generic.List<T>.Add(T)", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_20 [cluster="string.Format(string, object, object)", file="AlgorithmRunner.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_61 [cluster="Unk.Parse", file="AlgorithmRunner.cs", label="Entry Unk.Parse", span=""];
m0_62 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="AlgorithmRunner.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m0_21 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m0_18 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="AlgorithmRunner.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m0_27 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_71 [file="AlgorithmRunner.cs", label="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader", span=""];
m1_15 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="111-111"];
m1_26 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", span="173-173"];
m1_55 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs", label="return _scheduledEvents.Select(x => x.Value).OrderBy(x => x.NextEventUtcTime).ToList();", span="175-175"];
m1_56 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", span="173-173"];
m1_13 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="92-92"];
m1_19 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="_algorithm != null", span="94-94"];
m1_20 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="96-96"];
m1_21 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="_scheduledEvents[scheduledEvent.Name] = scheduledEvent", span="99-99"];
m1_23 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.IsLoggingEnabled = true", span="102-102"];
m1_22 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="Log.DebuggingEnabled", span="100-100"];
m1_24 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="_scheduledEventsSortedByTime = GetScheduledEventsSortedByTime()", span="105-105"];
m1_25 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="92-92"];
m1_27 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", span="112-112"];
m1_28 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs", label="ScheduledEvent scheduledEvent", span="114-114"];
m1_29 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="115-115"];
m1_30 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs", label="_scheduledEventsSortedByTime = GetScheduledEventsSortedByTime()", span="117-117"];
m1_31 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", span="112-112"];
m1_63 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="175-175"];
m1_60 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="175-175"];
m1_61 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Value", span="175-175"];
m1_62 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="175-175"];
m1_64 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.NextEventUtcTime", span="175-175"];
m1_65 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="175-175"];
m1_52 [cluster="System.Exception.Exception(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_58 [cluster="Unk.OrderBy", file="BacktestingRealTimeHandler.cs", label="Entry Unk.OrderBy", span=""];
m1_33 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="124-124"];
m1_34 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs", label=_scheduledEventsSortedByTime, span="127-127"];
m1_35 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.Scan(time)", span="129-129"];
m1_36 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="124-124"];
m1_59 [cluster="Unk.ToList", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToList", span=""];
m1_32 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m1_37 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="128-128"];
m1_49 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487"];
m1_17 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="84-84"];
m1_18 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="84-84"];
m1_16 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="185-185"];
m1_0 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51"];
m1_1 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="_algorithm = algorithm", span="54-54"];
m1_2 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="_resultHandler =  resultHandler", span="55-55"];
m1_7 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.SecurityEndOfDayDelta))", span="67-67"];
m1_9 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.SkipEventsUntil(algorithm.UtcTime)", span="74-74"];
m1_3 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, _algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.AlgorithmEndOfDayDelta))", span="58-58"];
m1_4 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="_algorithm.Securities", span="61-61"];
m1_5 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="var security = kvp.Value", span="63-63"];
m1_8 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label=_scheduledEventsSortedByTime, span="71-71"];
m1_6 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="!security.IsInternalFeed()", span="65-65"];
m1_10 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.IsLoggingEnabled = Log.DebuggingEnabled", span="76-76"];
m1_11 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51"];
m1_14 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m1_53 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="168-168"];
m1_54 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="168-168"];
m1_38 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="137-137"];
m1_39 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label=_scheduledEventsSortedByTime, span="139-139"];
m1_40 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.NextEventUtcTime < time", span="141-141"];
m1_41 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="_algorithm.SetDateTime(scheduledEvent.NextEventUtcTime)", span="143-143"];
m1_42 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="scheduledEvent.Scan(scheduledEvent.NextEventUtcTime)", span="147-147"];
m1_44 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", color=red, community=0, file="BacktestingRealTimeHandler.cs", label="59: var errorMessage = $''BacktestingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Name}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="151-151"];
m1_43 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label=ScheduledEventException, span="149-149"];
m1_45 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", color=red, community=0, file="BacktestingRealTimeHandler.cs", label="31: Log.Error(errorMessage)", span="153-153"];
m1_46 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="_resultHandler.RuntimeError(errorMessage)", span="155-155"];
m1_47 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="159-159"];
m1_48 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="137-137"];
m1_57 [cluster="Unk.Select", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Select", span=""];
m1_12 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m1_51 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="135-135"];
m1_66 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", span=""];
m2_350 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="516-516"];
m2_52 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m2_208 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m2_236 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m2_318 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="831-831"];
m2_319 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="831-831"];
m2_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_210 [cluster="System.DateTime.ToString(string)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m2_147 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="34-34"];
m2_228 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="612-612"];
m2_229 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="message == _errorMessage", span="614-614"];
m2_233 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="616-616"];
m2_234 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="_errorMessage = message", span="617-617"];
m2_230 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="return;", span="614-614"];
m2_231 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Messages.Count > 500", span="615-615"];
m2_232 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="return;", span="615-615"];
m2_235 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="612-612"];
m2_17 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="135-135"];
m2_58 [cluster="System.Console.SetError(System.IO.TextWriter)", file="BacktestingResultHandler.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m2_202 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="553-553"];
m2_203 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new DebugPacket(_projectId, _backtestId, _compileId, message))", span="555-555"];
m2_205 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="560-560"];
m2_206 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_debugMessage = message", span="562-562"];
m2_204 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="_algorithm != null", span="558-558"];
m2_207 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="553-553"];
m2_304 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="789-789"];
m2_305 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="var statusPacket = new AlgorithmStatusPacket(_algorithmId, _projectId, status, message)", span="791-791"];
m2_306 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(statusPacket)", span="792-792"];
m2_307 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="789-789"];
m2_111 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="414-414"];
m2_135 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label=_chartLock, span="418-418"];
m2_136 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="packet.Type != PacketType.BacktestResult", span="421-421"];
m2_138 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="var result = packet as BacktestResultPacket", span="424-424"];
m2_137 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="return;", span="421-421"];
m2_139 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="result != null", span="426-426"];
m2_140 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="result.Results.AlphaRuntimeStatistics = AlphaRuntimeStatistics", span="429-429"];
m2_142 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="SaveResults(key, result.Results)", span="435-435"];
m2_143 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="439-439"];
m2_141 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="var key = _job.BacktestId + ''.json''", span="432-432"];
m2_144 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label=Exception, span="443-443"];
m2_145 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="445-445"];
m2_146 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="414-414"];
m2_288 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_112 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="377-377"];
m2_119 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="var splitPackets = new List<BacktestResultPacket>()", span="380-380"];
m2_120 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="deltaCharts.Values", span="381-381"];
m2_122 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult\r\n                {\r\n                    IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm,\r\n                    Charts = new Dictionary<string, Chart>()\r\n                    {\r\n                        {chart.Name, chart}\r\n                    }\r\n                }, progress))", span="386-393"];
m2_123 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult {IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, AlphaRuntimeStatistics = AlphaRuntimeStatistics}, progress))", span="397-397"];
m2_124 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, Orders = deltaOrders }, progress))", span="400-400"];
m2_125 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { IsFrameworkAlgorithm = _algorithm.IsFrameworkAlgorithm, RuntimeStatistics = runtimeStatistics }, progress))", span="403-403"];
m2_126 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="return splitPackets;", span="405-405"];
m2_121 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="384-384"];
m2_127 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="377-377"];
m2_265 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="689-689"];
m2_266 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Bar, time, value, ''%'')", span="692-692"];
m2_267 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="689-689"];
m2_268 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="701-701"];
m2_269 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value, ''$'')", span="703-703"];
m2_270 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="701-701"];
m2_131 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_261 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="675-675"];
m2_262 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="678-678"];
m2_263 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="_daysProcessed = (time - _algorithm.StartDate).TotalDays", span="681-681"];
m2_264 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="675-675"];
m2_293 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="759-759"];
m2_294 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="!_exitTriggered", span="762-762"];
m2_295 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="ProcessSynchronousEvents(true)", span="764-764"];
m2_298 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="_exitTriggered = true", span="770-770"];
m2_296 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="var logLocation = SaveLogs(_algorithmId, _log)", span="765-765"];
m2_297 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="SystemDebugMessage(''Your log was successfully created and can be retrieved from: '' + logLocation)", span="766-766"];
m2_299 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="759-759"];
m2_292 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_55 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_12 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m2_218 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="585-585"];
m2_219 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new LogPacket(_backtestId, message))", span="587-587"];
m2_221 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="591-591"];
m2_220 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="_algorithm != null", span="589-589"];
m2_222 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="585-585"];
m2_309 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="801-801"];
m2_310 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="801-801"];
m2_16 [cluster="QuantConnect.Chart.Chart(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m2_128 [cluster="System.Collections.Generic.List<T>.List()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_199 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="545-545"];
m2_113 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="297-297"];
m2_116 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="297-297"];
m2_114 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="t.Key", span="297-297"];
m2_115 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="297-297"];
m2_117 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="t.Value", span="297-297"];
m2_118 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="297-297"];
m2_132 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="384-384"];
m2_133 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="x.Values.Count", span="384-384"];
m2_134 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="384-384"];
m2_197 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Log.Trace(msg)", span="544-544"];
m2_200 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Log.Error(msg)", span="545-545"];
m2_196 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Entry lambda expression", span="544-544"];
m2_198 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="544-544"];
m2_201 [cluster="lambda expression", file="BacktestingResultHandler.cs", label="Exit lambda expression", span="545-545"];
m2_259 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m2_244 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="642-642"];
m2_245 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label=_chartLock, span="644-644"];
m2_247 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="!Charts.TryGetValue(chartName, out chart)", span="648-648"];
m2_248 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="chart = new Chart(chartName)", span="650-650"];
m2_249 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(chartName, chart)", span="651-651"];
m2_251 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="!chart.Series.TryGetValue(seriesName, out series)", span="656-656"];
m2_252 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="series = new Series(seriesName, seriesType, seriesIndex, unit)", span="658-658"];
m2_253 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="chart.Series.Add(seriesName, series)", span="659-659"];
m2_254 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="series.Values.Count == 0 || time > Time.UnixTimeStampToDateTime(series.Values[series.Values.Count - 1].x)", span="663-663"];
m2_255 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="series.Values.Add(new ChartPoint(time, value))", span="665-665"];
m2_246 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Chart chart", span="647-647"];
m2_250 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Series series", span="655-655"];
m2_256 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="642-642"];
m2_190 [cluster="System.Convert.ToInt32(double)", file="BacktestingResultHandler.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m2_20 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="209-209"];
m2_21 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_algorithmId = job.AlgorithmId", span="211-211"];
m2_22 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_projectId = job.ProjectId", span="212-212"];
m2_23 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_messagingHandler = messagingHandler", span="213-213"];
m2_24 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_transactionHandler = transactionHandler", span="214-214"];
m2_25 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_setupHandler = setupHandler", span="215-215"];
m2_26 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_job = (BacktestNodePacket)job", span="216-216"];
m2_27 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_job == null", span="217-217"];
m2_28 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="throw new Exception(''BacktestingResultHandler.Constructor(): Submitted Job type invalid.'');", span="217-217"];
m2_29 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_compileId = _job.CompileId", span="218-218"];
m2_30 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="_backtestId = _job.BacktestId", span="219-219"];
m2_31 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="209-209"];
m2_300 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="841-841"];
m2_320 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm == null", span="843-843"];
m2_323 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="time > _nextSample || forceProcess", span="847-847"];
m2_321 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="return;", span="843-843"];
m2_322 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="var time = _algorithm.UtcTime", span="845-845"];
m2_324 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_nextSample = time.Add(ResamplePeriod)", span="850-850"];
m2_325 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="853-853"];
m2_329 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleAssetPrices(security.Symbol, time, security.Price)", span="863-863"];
m2_330 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="var endTime = DateTime.UtcNow.AddMilliseconds(250).Ticks", span="868-868"];
m2_326 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="SampleRange(_algorithm.GetChartUpdates())", span="856-856"];
m2_327 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.Securities", span="859-859"];
m2_328 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="var security = kvp.Value", span="861-861"];
m2_331 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.DebugMessages.Count > 0 && DateTime.UtcNow.Ticks < endTime", span="869-869"];
m2_332 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="string message", span="871-871"];
m2_335 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="endTime = DateTime.UtcNow.AddMilliseconds(250).Ticks", span="879-879"];
m2_333 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.DebugMessages.TryDequeue(out message)", span="872-872"];
m2_334 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="DebugMessage(message)", span="874-874"];
m2_336 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.ErrorMessages.Count > 0 && DateTime.UtcNow.Ticks < endTime", span="880-880"];
m2_337 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="string message", span="882-882"];
m2_340 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="endTime = DateTime.UtcNow.AddMilliseconds(250).Ticks", span="890-890"];
m2_338 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.ErrorMessages.TryDequeue(out message)", span="883-883"];
m2_339 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="ErrorMessage(message)", span="885-885"];
m2_341 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.LogMessages.Count > 0 && DateTime.UtcNow.Ticks < endTime", span="891-891"];
m2_342 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="string message", span="893-893"];
m2_345 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.RuntimeStatistics", span="901-901"];
m2_343 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="_algorithm.LogMessages.TryDequeue(out message)", span="894-894"];
m2_344 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="LogMessage(message)", span="896-896"];
m2_346 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="903-903"];
m2_347 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="841-841"];
m2_223 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m2_54 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="278-278"];
m2_59 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="283-283"];
m2_60 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="return;", span="285-285"];
m2_61 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="288-288"];
m2_62 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="return;", span="288-288"];
m2_63 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var deltaOrders = new Dictionary<int, Order>()", span="291-291"];
m2_64 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders = (from order in _transactionHandler.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="295-297"];
m2_65 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="299-299"];
m2_67 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders.Count > 50", span="305-305"];
m2_68 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaOrders.Clear()", span="305-305"];
m2_96 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, runtimeStatistics, progress)", span="361-361"];
m2_66 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err, ''Transactions'')", span="301-301"];
m2_69 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_lastUpdate = Algorithm.Time.Date", span="310-310"];
m2_70 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_lastDaysProcessed = _daysProcessed", span="311-311"];
m2_71 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="312-312"];
m2_72 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="314-314"];
m2_74 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var deltaCharts = new Dictionary<string, Chart>()", span="319-319"];
m2_73 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err, ''Can't update variables'')", span="316-316"];
m2_75 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=_chartLock, span="320-320"];
m2_78 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="327-327"];
m2_76 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Charts, span="323-323"];
m2_77 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var chart = kvp.Value", span="325-325"];
m2_79 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var runtimeStatistics = new Dictionary<string, string>()", span="332-332"];
m2_80 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=_runtimeLock, span="333-333"];
m2_82 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="337-337"];
m2_83 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(''Unrealized'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="340-340"];
m2_84 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(''Fees'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="341-341"];
m2_85 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(''Net Profit'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="342-342"];
m2_86 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(''Return'', ((_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue).ToString(''P''))", span="343-343"];
m2_87 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="runtimeStatistics.Add(''Equity'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="344-344"];
m2_91 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var completeResult = new BacktestResult(_algorithm.IsFrameworkAlgorithm, Charts, _transactionHandler.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>(), runtimeStatistics, new Dictionary<string, AlgorithmPerformance>())", span="351-351"];
m2_81 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=_runtimeStatistics, span="335-335"];
m2_88 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="347-347"];
m2_89 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="progress > 0.999m", span="348-348"];
m2_92 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="352-352"];
m2_90 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="progress = 0.999m", span="348-348"];
m2_93 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="DateTime.Now > _nextS3Update", span="354-354"];
m2_95 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="StoreResult(complete, false)", span="357-357"];
m2_94 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="356-356"];
m2_97 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=splitPackets, span="363-363"];
m2_98 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(backtestingPacket)", span="365-365"];
m2_99 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label=Exception, span="368-368"];
m2_100 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="370-370"];
m2_101 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="278-278"];
m2_33 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="225-225"];
m2_34 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="var lastMessage = ''''", span="228-228"];
m2_35 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_lastDaysProcessed = 5", span="229-229"];
m2_36 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="!(_exitTriggered && Messages.Count == 0)", span="237-237"];
m2_37 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Messages.Count == 0", span="240-240"];
m2_43 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label=Exception, span="259-259"];
m2_46 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.Run(): Ending Thread...'')", span="267-267"];
m2_38 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Thread.Sleep(50)", span="242-242"];
m2_39 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Packet packet", span="247-247"];
m2_40 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Messages.TryDequeue(out packet)", span="248-248"];
m2_41 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(packet)", span="250-250"];
m2_42 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Update()", span="255-255"];
m2_44 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="262-262"];
m2_45 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_algorithm.RunTimeError = err", span="264-264"];
m2_47 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="_isActive = false", span="268-268"];
m2_48 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Console.SetOut(StandardOut)", span="271-271"];
m2_49 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Console.SetError(StandardError)", span="272-272"];
m2_50 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="225-225"];
m2_56 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_103 [cluster="Unk.ToDictionary", file="BacktestingResultHandler.cs", label="Entry Unk.ToDictionary", span=""];
m2_291 [cluster="QuantConnect.Series.Purge()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Series.Purge()", span="349-349"];
m2_258 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_14 [cluster="object.Object()", file="BacktestingResultHandler.cs", label="Entry object.Object()", span="0-0"];
m2_163 [cluster="System.Collections.Generic.List<T>.Clear()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m2_108 [cluster="System.Convert.ToDecimal(double)", file="BacktestingResultHandler.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m2_193 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="598-598"];
m2_224 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="600-603"];
m2_225 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(packet)", span="604-604"];
m2_226 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="598-598"];
m2_106 [cluster="QuantConnect.Chart.GetUpdates()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m2_110 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
m2_302 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="778-778"];
m2_303 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="778-778"];
m2_32 [cluster="System.Exception.Exception(string)", file="BacktestingResultHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_57 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="BacktestingResultHandler.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m2_109 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(bool, System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(bool, System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>, QuantConnect.Statistics.AlgorithmPerformance)", span="224-224"];
m2_271 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="710-710"];
m2_272 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label=_chartLock, span="712-712"];
m2_273 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label=updates, span="714-714"];
m2_274 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="!Charts.ContainsKey(update.Name)", span="717-717"];
m2_275 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="719-719"];
m2_276 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="update.Series.Values", span="723-723"];
m2_277 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="var chart = Charts[update.Name]", span="726-726"];
m2_278 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="!chart.Series.ContainsKey(series.Name)", span="727-727"];
m2_279 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="chart.Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit)\r\n                            {\r\n                                Color = series.Color, ScatterMarkerSymbol = series.ScatterMarkerSymbol\r\n                            })", span="729-732"];
m2_280 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="var thisSeries = chart.Series[series.Name]", span="735-735"];
m2_281 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="series.Values.Count > 0", span="736-736"];
m2_282 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="series.SeriesType == SeriesType.Pie", span="739-739"];
m2_283 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="var lastValue = series.Values.Last()", span="741-741"];
m2_286 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="chart.Series[series.Name].Values.AddRange(series.Values)", span="748-748"];
m2_284 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="thisSeries.Purge()", span="742-742"];
m2_285 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="thisSeries.Values.Add(lastValue)", span="743-743"];
m2_287 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="710-710"];
m2_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m2_301 [cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m2_191 [cluster="System.Convert.ToInt32(int)", file="BacktestingResultHandler.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m2_53 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m2_192 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_164 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="503-503"];
m2_165 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_algorithm = algorithm", span="505-505"];
m2_182 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetOut(new FuncTextWriter(algorithm.Debug))", span="538-538"];
m2_183 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetError(new FuncTextWriter(algorithm.Error))", span="539-539"];
m2_166 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var totalMinutes = (_job.PeriodFinish - _job.PeriodStart).TotalMinutes", span="508-508"];
m2_167 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var resampleMinutes = (totalMinutes < (_minimumSamplePeriod * _samples)) ? _minimumSamplePeriod : (totalMinutes / _samples)", span="509-509"];
m2_168 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="510-510"];
m2_169 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="511-511"];
m2_170 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_jobDays = Algorithm.Securities.Count > 0\r\n                ? Time.TradeableDates(Algorithm.Securities.Values, _job.PeriodStart, _job.PeriodFinish)\r\n                : Convert.ToInt32((_job.PeriodFinish.Date - _job.PeriodStart.Date).TotalDays) + 1", span="514-516"];
m2_171 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="519-519"];
m2_172 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax < _debugMessageMin", span="521-521"];
m2_173 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessageMax = _debugMessageMin", span="521-521"];
m2_174 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_debugMessagePeriod = ''backtest''", span="523-523"];
m2_175 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var types = new List<SecurityType>()", span="526-526"];
m2_176 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="_algorithm.Securities", span="527-527"];
m2_178 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="!types.Contains(security.Type)", span="531-531"];
m2_179 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="types.Add(security.Type)", span="531-531"];
m2_180 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="SecurityType(types)", span="533-533"];
m2_177 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="var security = kvp.Value", span="529-529"];
m2_181 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Config.GetBool(''forward-console-messages'', true)", span="535-535"];
m2_184 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetOut(new FuncTextWriter(msg => Log.Trace(msg)))", span="544-544"];
m2_185 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Console.SetError(new FuncTextWriter(msg => Log.Error(msg)))", span="545-545"];
m2_186 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="503-503"];
m2_349 [cluster="System.Math.Round(decimal, int)", file="BacktestingResultHandler.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m2_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m2_211 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="569-569"];
m2_212 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new SystemDebugPacket(_projectId, _backtestId, _compileId, message))", span="571-571"];
m2_214 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="576-576"];
m2_215 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="_debugMessage = message", span="578-578"];
m2_213 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="_algorithm != null", span="574-574"];
m2_216 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SystemDebugMessage(string)", span="569-569"];
m2_162 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m2_217 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m2_15 [cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingResultHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_107 [cluster="decimal.ToString(string)", file="BacktestingResultHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m2_313 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="72-72"];
m2_289 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_194 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m2_308 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", span="74-74"];
m2_18 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="228-228"];
m2_290 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m2_351 [cluster="System.DateTime.AddMilliseconds(double)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m2_148 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_187 [cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingResultHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m2_348 [cluster="System.DateTime.Add(System.TimeSpan)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_130 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="216-216"];
m2_237 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="625-625"];
m2_238 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="PurgeQueue()", span="627-627"];
m2_239 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _backtestId, message, stacktrace))", span="628-628"];
m2_240 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="_errorMessage = message", span="629-629"];
m2_241 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="625-625"];
m2_257 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m2_314 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="820-820"];
m2_315 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label=_runtimeLock, span="822-822"];
m2_316 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label="_runtimeStatistics[key] = value", span="824-824"];
m2_317 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="820-820"];
m2_242 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="809-809"];
m2_311 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Messages.Clear()", span="811-811"];
m2_312 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="809-809"];
m2_188 [cluster="double.ToString(string)", file="BacktestingResultHandler.cs", label="Entry double.ToString(string)", span="0-0"];
m2_51 [cluster="System.Threading.Thread.Sleep(int)", file="BacktestingResultHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m2_149 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="459-459"];
m2_150 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="FinalStatistics = statisticsResults.Summary", span="463-463"];
m2_153 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="statisticsResults.RollingPerformances.Values", span="470-470"];
m2_155 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="var result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(_algorithm.IsFrameworkAlgorithm, charts, orders, profitLoss, statisticsResults.Summary, banner, statisticsResults.RollingPerformances, statisticsResults.TotalPerformance), 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="476-482"];
m2_151 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="var charts = new Dictionary<string, Chart>(Charts)", span="466-466"];
m2_152 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="_processingFinalPacket = true", span="467-467"];
m2_154 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="ap.ClosedTrades.Clear()", span="472-472"];
m2_156 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="StoreResult(result)", span="485-485"];
m2_157 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="_messagingHandler.Send(result)", span="488-488"];
m2_158 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="490-490"];
m2_159 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label=Exception, span="492-492"];
m2_160 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Log.Error(err)", span="494-494"];
m2_161 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="459-459"];
m2_227 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
m2_243 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m2_105 [cluster="System.DateTime.AddSeconds(double)", file="BacktestingResultHandler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m2_102 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BacktestingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_209 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="BacktestingResultHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m2_0 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="179-179"];
m2_1 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_messages = new ConcurrentQueue<Packet>()", span="182-182"];
m2_2 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_charts = new ConcurrentDictionary<string, Chart>()", span="183-183"];
m2_3 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_chartLock = new Object()", span="184-184"];
m2_4 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_isActive = true", span="185-185"];
m2_5 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="188-188"];
m2_6 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_exitTriggered = false", span="189-189"];
m2_7 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="_startTime = DateTime.Now", span="192-192"];
m2_8 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity''))", span="195-195"];
m2_9 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle, 0, ''$''))", span="196-196"];
m2_10 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar, 1, ''%''))", span="197-197"];
m2_11 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BacktestingResultHandler.cs", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="179-179"];
m2_260 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="411-411"];
m2_189 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingResultHandler.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="397-397"];
m2_352 [file="BacktestingResultHandler.cs", label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span=""];
m3_25 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m3_30 [cluster="QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider.LocalDiskMapFileProvider()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider.LocalDiskMapFileProvider()", span="28-28"];
m3_37 [cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94"];
m3_32 [cluster="QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider.Get(string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider.Get(string)", span="39-39"];
m3_27 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m3_28 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="78-78"];
m3_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", span="33-33"];
m3_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var symbol = Symbols.AAPL", span="35-35"];
m3_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Daily, TimeZones.NewYork, TimeZones.NewYork, false, false, false, false, TickType.Trade, false)", span="36-36"];
m3_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), config, new Cash(CashBook.AccountCurrency, 0, 1), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="37-37"];
m3_15 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var request = new SubscriptionRequest(false, null, security, config, date, date)", span="54-54"];
m3_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var mapFileProvider = new LocalDiskMapFileProvider()", span="39-39"];
m3_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var mapFileResolver = mapFileProvider.Get(security.Symbol.ID.Market)", span="41-41"];
m3_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var factorFileProvider = new LocalDiskFactorFileProvider(mapFileProvider)", span="40-40"];
m3_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var factory = new BaseDataSubscriptionEnumeratorFactory(false, mapFileResolver, factorFileProvider)", span="44-44"];
m3_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var fileProvider = new DefaultDataProvider()", span="42-42"];
m3_16 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var enumerator = factory.CreateEnumerator(request, fileProvider)", span="55-55"];
m3_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="GC.Collect()", span="46-46"];
m3_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var ramUsageBeforeLoop = OS.TotalPhysicalMemoryUsed", span="47-47"];
m3_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var date = new DateTime(1998, 1, 1)", span="49-49"];
m3_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Log.Trace($''RAM usage - before: {ramUsageBeforeLoop} MB, after: {ramUsageAfterLoop} MB'')", span="65-65"];
m3_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Assert.IsTrue(ramUsageAfterLoop - ramUsageBeforeLoop < 10)", span="67-67"];
m3_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="int iterations = 1000", span="51-51"];
m3_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="date = date.AddDays(1)", span="59-59"];
m3_13 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var i = 0", span="52-52"];
m3_14 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="i < iterations", span="52-52"];
m3_19 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="i++", span="52-52"];
m3_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="GC.Collect()", span="62-62"];
m3_17 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="enumerator.MoveNext()", span="57-57"];
m3_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="var ramUsageAfterLoop = OS.TotalPhysicalMemoryUsed", span="63-63"];
m3_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactoryTests.DoesNotLeakMemory()", span="33-33"];
m3_36 [cluster="System.DateTime.DateTime(int, int, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m3_39 [cluster="System.Collections.IEnumerator.MoveNext()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m3_42 [cluster="Unk.IsTrue", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry Unk.IsTrue", span=""];
m3_35 [cluster="System.GC.Collect()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m3_26 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="295-295"];
m3_41 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m3_31 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="46-46"];
m3_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="25-25"];
m3_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(bool, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(bool, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="44-44"];
m3_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="69-69"];
m3_29 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m4_87 [cluster="Unk.GetEntry", file="Cash.cs", label="Entry Unk.GetEntry", span=""];
m4_136 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Cash.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_128 [cluster="decimal.RoundToSignificantDigits(int)", file="Cash.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="196-196"];
m4_92 [cluster="Unk.Trace", file="Cash.cs", label="Entry Unk.Trace", span=""];
m4_81 [cluster="Unk.Concat", file="Cash.cs", label="Entry Unk.Concat", span=""];
m4_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="112-112"];
m4_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label=_locker, span="114-114"];
m4_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Amount += amount", span="116-116"];
m4_22 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="return Amount;", span="117-117"];
m4_23 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="112-112"];
m4_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="94-94"];
m4_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_isBaseCurrency, span="96-96"];
m4_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="var rate = data.Value", span="98-98"];
m4_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="return;", span="96-96"];
m4_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_invertRealTimePrice, span="99-99"];
m4_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="rate = 1/rate", span="101-101"];
m4_17 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="ConversionRate = rate", span="103-103"];
m4_18 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="94-94"];
m4_85 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Cash.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235"];
m4_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="237-237"];
m4_124 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="var rate = ConversionRate", span="240-240"];
m4_125 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="241-241"];
m4_126 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="return $''{Symbol}: {CurrencySymbol}{Amount,15:0.00} @ {rate,10:0.00####} = ${Math.Round(ValueInAccountCurrency, 2)}'';", span="242-242"];
m4_127 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="237-237"];
m4_83 [cluster="Unk.Min", file="Cash.cs", label="Entry Unk.Min", span=""];
m4_120 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="189-189"];
m4_111 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="185-185"];
m4_115 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="186-186"];
m4_118 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="187-187"];
m4_94 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="157-158"];
m4_97 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_100 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_103 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_106 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m4_110 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="185-185"];
m4_114 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="186-186"];
m4_117 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="187-187"];
m4_95 [cluster="lambda expression", file="Cash.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="157-158"];
m4_96 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="157-158"];
m4_98 [cluster="lambda expression", file="Cash.cs", label="x.Key", span="175-175"];
m4_99 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_101 [cluster="lambda expression", file="Cash.cs", label="x.SecurityType", span="175-175"];
m4_102 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_104 [cluster="lambda expression", file="Cash.cs", label="x.Key", span="175-175"];
m4_105 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_107 [cluster="lambda expression", file="Cash.cs", label="y.First().ID.Market", span="175-175"];
m4_108 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m4_112 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="185-185"];
m4_116 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="186-186"];
m4_119 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="187-187"];
m4_121 [cluster="lambda expression", file="Cash.cs", label="x.Resolution", span="189-189"];
m4_122 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="189-189"];
m4_10 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Cash.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m4_91 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m4_79 [cluster="Unk.ContainsKey", file="Cash.cs", label="Entry Unk.ContainsKey", span=""];
m4_88 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_84 [cluster="Unk.GetSymbolProperties", file="Cash.cs", label="Entry Unk.GetSymbolProperties", span=""];
m4_137 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Cash.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_90 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m4_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="245-245"];
m4_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="string market", span="247-247"];
m4_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="!markets.TryGetValue(securityType, out market)", span="248-248"];
m4_133 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="market = marketMap[securityType]", span="250-250"];
m4_134 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="253-253"];
m4_135 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="245-245"];
m4_8 [cluster="System.ArgumentException.ArgumentException(string)", file="Cash.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="125-125"];
m4_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label=_locker, span="127-127"];
m4_26 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Amount = amount", span="129-129"];
m4_27 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="125-125"];
m4_80 [cluster="Unk.Add", file="Cash.cs", label="Entry Unk.Add", span=""];
m4_9 [cluster="string.ToUpper()", file="Cash.cs", label="Entry string.ToUpper()", span="0-0"];
m4_89 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m4_129 [cluster="System.Math.Round(decimal, int)", file="Cash.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m4_86 [cluster="Exception.cstr", file="Cash.cs", label="Entry Exception.cstr", span=""];
m4_77 [cluster="Unk.GroupBy", file="Cash.cs", label="Entry Unk.GroupBy", span=""];
m4_113 [cluster="Unk.CreateSymbol", file="Cash.cs", label="Entry Unk.CreateSymbol", span=""];
m4_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="78-78"];
m4_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="symbol == null || symbol.Length != 3", span="80-80"];
m4_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Amount = amount", span="84-84"];
m4_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="ConversionRate = conversionRate", span="85-85"];
m4_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Symbol = symbol.ToUpper()", span="86-86"];
m4_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="82-82"];
m4_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(Symbol)", span="87-87"];
m4_7 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="78-78"];
m4_93 [cluster="string.Format(string, object, object)", file="Cash.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_109 [cluster="Unk.First", file="Cash.cs", label="Entry Unk.First", span=""];
m4_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="204-204"];
m4_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="144-144"];
m4_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Symbol == CashBook.AccountCurrency", span="146-146"];
m4_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="157-158"];
m4_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRateSecurity = securities[config.Symbol]", span="162-162"];
m4_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRateSecurity = securities[config.Symbol]", span="167-167"];
m4_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var markets = securities.Select(x => x.Key).GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="175-175"];
m4_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="185-187"];
m4_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="189-189"];
m4_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="197-197"];
m4_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="199-199"];
m4_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="203-203"];
m4_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="206-206"];
m4_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securities.Add(config.Symbol, security)", span="223-223"];
m4_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRateSecurity = null", span="148-148"];
m4_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="155-155"];
m4_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_isBaseCurrency = true", span="149-149"];
m4_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRate = 1.0m", span="150-150"];
m4_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="151-151"];
m4_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="156-156"];
m4_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == normal", span="160-160"];
m4_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="symbol.Value == normal || symbol.Value == invert", span="193-193"];
m4_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == invert", span="165-165"];
m4_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = symbol.Value == invert", span="195-195"];
m4_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="163-163"];
m4_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = true", span="168-168"];
m4_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="169-169"];
m4_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="176-176"];
m4_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="178-178"];
m4_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="180-180"];
m4_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="182-182"];
m4_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label=potentials, span="191-191"];
m4_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="190-190"];
m4_73 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="230-230"];
m4_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var securityType = symbol.ID.SecurityType", span="196-196"];
m4_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.Value);", span="201-201"];
m4_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="224-224"];
m4_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Cfd", span="209-209"];
m4_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Crypto", span="213-213"];
m4_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Cash quoteCash", span="198-198"];
m4_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="211-211"];
m4_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="215-215"];
m4_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="219-219"];
m4_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Security security", span="208-208"];
m4_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRateSecurity = security", span="222-222"];
m4_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return security;", span="225-225"];
m4_74 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="144-144"];
m4_76 [cluster="Unk.Select", file="Cash.cs", label="Entry Unk.Select", span=""];
m4_78 [cluster="Unk.ToDictionary", file="Cash.cs", label="Entry Unk.ToDictionary", span=""];
m4_82 [cluster="Unk.DefaultIfEmpty", file="Cash.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_138 [file="Cash.cs", label="QuantConnect.Securities.Cash", span=""];
m4_139 [file="Cash.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m4_140 [file="Cash.cs", label=markets, span=""];
m5_56 [cluster="QuantConnect.Chart.Chart(string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m5_25 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="92-92"];
m5_26 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="CashBuyingPowerModel.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="94-94"];
m5_27 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="92-92"];
m5_44 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="117-117"];
m5_45 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="CashBuyingPowerModel.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _job.AlgorithmId, message, stacktrace))", span="119-119"];
m5_46 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="117-117"];
m5_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_17 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m5_28 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m5_103 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CashBuyingPowerModel.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m5_20 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="78-78"];
m5_21 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="CashBuyingPowerModel.cs", label="_job = job", span="85-85"];
m5_22 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="78-78"];
m5_59 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="228-228"];
m5_36 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="107-107"];
m5_37 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="CashBuyingPowerModel.cs", label="Messages.Enqueue(new LogPacket(_job.AlgorithmId, message))", span="109-109"];
m5_38 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="107-107"];
m5_104 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="224-224"];
m5_105 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="CashBuyingPowerModel.cs", label="Messages.Clear()", span="226-226"];
m5_106 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="224-224"];
m5_9 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="55-75"];
m5_10 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="IsActive = true", span="59-59"];
m5_11 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="60-60"];
m5_13 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Messages.TryDequeue(out packet)", span="63-63"];
m5_14 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="_packetHandler(packet)", span="65-65"];
m5_15 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Thread.Sleep(1)", span="68-68"];
m5_12 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Packet packet", span="62-62"];
m5_16 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="55-75"];
m5_43 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m5_75 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="160-160"];
m5_77 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="!Charts.ContainsKey(update.Name)", span="165-165"];
m5_78 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="167-167"];
m5_80 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="174-174"];
m5_81 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="176-176"];
m5_82 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="180-180"];
m5_76 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label=updates, span="162-162"];
m5_79 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="update.Series.Values", span="171-171"];
m5_83 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="160-160"];
m5_40 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="112-112"];
m5_41 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="CashBuyingPowerModel.cs", label="Messages.Enqueue(new HandledErrorPacket(_job.AlgorithmId, error, stacktrace))", span="114-114"];
m5_42 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="112-112"];
m5_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_0 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51"];
m5_1 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModel.cs", label="_packetHandler = packetHandler ?? (packet => { })", span="53-53"];
m5_2 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModel.cs", label="Messages = new ConcurrentQueue<Packet>()", span="54-54"];
m5_3 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModel.cs", label="Task.Run(() =>\r\n            {\r\n                try\r\n                {\r\n                    IsActive = true;\r\n                    while (!_cancellationTokenSource.IsCancellationRequested)\r\n                    {\r\n                        Packet packet;\r\n                        if (Messages.TryDequeue(out packet))\r\n                        {\r\n                            _packetHandler(packet);\r\n                        }\r\n\r\n                        Thread.Sleep(1);\r\n                    }\r\n                }\r\n                finally\r\n                {\r\n                    IsActive = false;\r\n                }\r\n            })", span="55-75"];
m5_4 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51"];
m5_72 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="155-155"];
m5_73 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="157-157"];
m5_74 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="155-155"];
m5_63 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="140-140"];
m5_64 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="142-142"];
m5_65 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="140-140"];
m5_39 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m5_100 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="219-219"];
m5_101 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="CashBuyingPowerModel.cs", label="_cancellationTokenSource.Cancel()", span="221-221"];
m5_102 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="219-219"];
m5_19 [cluster="System.Threading.Thread.Sleep(int)", file="CashBuyingPowerModel.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m5_69 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="150-150"];
m5_70 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="152-152"];
m5_71 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="150-150"];
m5_57 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m5_6 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="CashBuyingPowerModel.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m5_47 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m5_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_30 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="97-97"];
m5_31 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", color=green, community=0, file="CashBuyingPowerModel.cs", label="75: Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="99-99"];
m5_32 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="97-97"];
m5_48 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="122-122"];
m5_49 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=green, community=0, file="CashBuyingPowerModel.cs", label="17: !Charts.ContainsKey(chartName)", span="125-125"];
m5_50 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="CashBuyingPowerModel.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="127-127"];
m5_51 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=green, community=0, file="CashBuyingPowerModel.cs", label="21: !Charts[chartName].Series.ContainsKey(seriesName)", span="131-131"];
m5_52 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=green, community=0, file="CashBuyingPowerModel.cs", label="31: Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="133-133"];
m5_53 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="CashBuyingPowerModel.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="137-137"];
m5_54 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="122-122"];
m5_18 [cluster="System.Action<T>.Invoke(T)", file="CashBuyingPowerModel.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_29 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m5_66 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="145-145"];
m5_67 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Line, time, value, ''%'')", span="147-147"];
m5_68 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="145-145"];
m5_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_61 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="411-411"];
m5_84 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m5_33 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m5_107 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
m5_85 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_110 [file="CashBuyingPowerModel.cs", label="QuantConnect.Tests.Engine.TestResultHandler", span=""];
m8_2 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string)", span="36-36"];
m8_3 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string)", span="36-36"];
m8_0 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="27-27"];
m8_1 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="27-27"];
m9_31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel()", span="81-81"];
m9_32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="83-83"];
m9_33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="85-85"];
m9_34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="86-86"];
m9_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="98-98"];
m9_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="orderType == Orders.OrderType.Limit || orderType == Orders.OrderType.Market", span="100-100"];
m9_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="return orderType.ToString().ToLower();", span="102-102"];
m9_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.Utility.cs", label="orderType == Orders.OrderType.StopMarket", span="104-104"];
m9_142 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", span="252-252"];
m9_143 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="254-254"];
m9_144 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="256-256"];
m9_145 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="257-261"];
m9_146 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="262-262"];
m9_147 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="266-266"];
m9_148 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(ConstantFeeModel), security.FeeModel)", span="267-267"];
m9_149 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0, security.FeeModel.GetOrderFee(security, _order))", span="268-268"];
m9_150 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer_SetBrokerageModel()", span="252-252"];
m9_23 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", span="66-66"];
m9_24 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="68-68"];
m9_25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="70-70"];
m9_26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="71-71"];
m9_27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="75-75"];
m9_28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="76-76"];
m9_29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="77-77"];
m9_30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage()", span="66-66"];
m9_168 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", span="292-292"];
m9_169 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="294-294"];
m9_170 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="296-300"];
m9_171 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="301-301"];
m9_172 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="302-302"];
m9_173 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="306-306"];
m9_174 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="307-307"];
m9_175 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="308-308"];
m9_176 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage_SetBrokerageModel()", span="292-292"];
m9_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="89-89"];
m9_155 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", span="272-272"];
m9_156 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="274-274"];
m9_157 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="276-276"];
m9_158 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="277-277"];
m9_159 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="278-282"];
m9_160 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="286-286"];
m9_161 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="287-287"];
m9_162 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="288-288"];
m9_163 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel_SetSecurityInitializer()", span="272-272"];
m9_13 [cluster="Unk.IsInstanceOf", file="GDAXBrokerage.Utility.cs", label="Entry Unk.IsInstanceOf", span=""];
m9_78 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", span="152-152"];
m9_79 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="154-154"];
m9_80 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="156-156"];
m9_81 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="157-161"];
m9_82 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="166-166"];
m9_83 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(ConstantFeeModel), security.FeeModel)", span="167-167"];
m9_84 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0, security.FeeModel.GetOrderFee(security, _order))", span="168-168"];
m9_85 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer()", span="152-152"];
m9_66 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", span="133-133"];
m9_67 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="135-135"];
m9_68 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="137-141"];
m9_69 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="142-142"];
m9_70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="146-146"];
m9_71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="147-147"];
m9_72 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="148-148"];
m9_73 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForexWithLeverage()", span="133-133"];
m9_242 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="400-404"];
m9_48 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="100-104"];
m9_49 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="102-102"];
m9_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m9_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", color=green, community=0, file="GDAXBrokerage.Utility.cs", label="17: return symbol.Value.Substring(0, 3).ToLower() + ''-'' + symbol.Value.Substring(3, 3).ToLower();", span="129-129"];
m9_62 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="119-123"];
m9_63 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="121-121"];
m9_64 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="122-122"];
m9_65 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="119-123"];
m9_74 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="137-141"];
m9_75 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="139-139"];
m9_76 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="140-140"];
m9_77 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="137-141"];
m9_86 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="157-161"];
m9_87 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="159-159"];
m9_88 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="160-160"];
m9_89 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="157-161"];
m9_99 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="176-180"];
m9_100 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="178-178"];
m9_101 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="179-179"];
m9_102 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="176-180"];
m9_112 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="196-200"];
m9_113 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="198-198"];
m9_114 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="199-199"];
m9_115 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="196-200"];
m9_125 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="217-221"];
m9_126 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="219-219"];
m9_127 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="220-220"];
m9_128 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="217-221"];
m9_138 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="238-242"];
m9_139 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="240-240"];
m9_140 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="241-241"];
m9_141 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="238-242"];
m9_151 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="257-261"];
m9_152 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="259-259"];
m9_153 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="260-260"];
m9_154 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="257-261"];
m9_164 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="278-282"];
m9_165 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="280-280"];
m9_166 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="281-281"];
m9_167 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="278-282"];
m9_177 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="296-300"];
m9_178 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="298-298"];
m9_179 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="299-299"];
m9_180 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="296-300"];
m9_190 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="316-320"];
m9_191 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="318-318"];
m9_192 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="319-319"];
m9_193 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="316-320"];
m9_203 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="338-342"];
m9_204 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="340-340"];
m9_205 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="341-341"];
m9_206 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="338-342"];
m9_216 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="360-364"];
m9_217 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="362-362"];
m9_218 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="363-363"];
m9_219 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="360-364"];
m9_229 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Entry lambda expression", span="379-383"];
m9_230 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="381-381"];
m9_231 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="382-382"];
m9_232 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="379-383"];
m9_243 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.SetLeverage(100)", span="402-402"];
m9_244 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="x.FeeModel = new InteractiveBrokersFeeModel()", span="403-403"];
m9_245 [cluster="lambda expression", file="GDAXBrokerage.Utility.cs", label="Exit lambda expression", span="400-404"];
m9_194 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", span="333-333"];
m9_195 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="335-335"];
m9_196 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="337-337"];
m9_197 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="338-342"];
m9_198 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="343-343"];
m9_199 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="348-348"];
m9_200 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="349-349"];
m9_201 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="350-350"];
m9_202 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForexWithLeverage()", span="333-333"];
m9_53 [cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38"];
m9_116 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", span="212-212"];
m9_117 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="214-214"];
m9_118 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="216-216"];
m9_119 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="217-221"];
m9_120 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="222-222"];
m9_121 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(100, Math.Round(security.Leverage, RoundingPrecision))", span="226-226"];
m9_122 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="227-227"];
m9_123 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="228-228"];
m9_124 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_SetSecurityInitializer_AddForex()", span="212-212"];
m9_181 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", span="312-312"];
m9_182 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="314-314"];
m9_183 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="316-320"];
m9_184 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="321-321"];
m9_185 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="322-322"];
m9_186 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="327-327"];
m9_187 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="328-328"];
m9_188 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="329-329"];
m9_189 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForexWithLeverage()", span="312-312"];
m9_40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="98-98"];
m9_39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", span="96-96"];
m9_41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="100-104"];
m9_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467"];
m9_43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(100, Math.Round(security.Leverage, RoundingPrecision))", span="108-108"];
m9_129 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", span="232-232"];
m9_130 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="234-234"];
m9_131 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="236-236"];
m9_132 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="237-237"];
m9_133 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="238-242"];
m9_134 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="246-246"];
m9_135 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="247-247"];
m9_136 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="248-248"];
m9_137 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex_SetSecurityInitializer()", span="232-232"];
m9_207 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", span="354-354"];
m9_208 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="356-356"];
m9_209 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="358-358"];
m9_210 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="359-359"];
m9_211 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="360-364"];
m9_212 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="368-368"];
m9_213 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="369-369"];
m9_214 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="370-370"];
m9_215 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForexWithLeverage_SetSecurityInitializer()", span="354-354"];
m9_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="579-579"];
m9_12 [cluster="Unk.AreEqual", file="GDAXBrokerage.Utility.cs", label="Entry Unk.AreEqual", span=""];
m9_42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="105-105"];
m9_103 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", span="192-192"];
m9_104 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="194-194"];
m9_105 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="196-200"];
m9_106 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="201-201"];
m9_107 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="202-202"];
m9_108 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(100, Math.Round(security.Leverage, RoundingPrecision))", span="206-206"];
m9_109 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="207-207"];
m9_110 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="208-208"];
m9_111 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_SetBrokerageModel_AddForex()", span="192-192"];
m9_220 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", span="374-374"];
m9_221 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="376-376"];
m9_222 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="378-378"];
m9_223 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="379-383"];
m9_224 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="384-384"];
m9_225 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="388-388"];
m9_226 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(ConstantFeeModel), security.FeeModel)", span="389-389"];
m9_227 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0, security.FeeModel.GetOrderFee(security, _order))", span="390-390"];
m9_228 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetSecurityInitializer_SetBrokerageModel()", span="374-374"];
m9_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="867-867"];
m9_233 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", span="394-394"];
m9_234 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="396-396"];
m9_235 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market, true, 25)", span="398-398"];
m9_236 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="399-399"];
m9_237 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="400-404"];
m9_238 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(25, Math.Round(security.Leverage, RoundingPrecision))", span="408-408"];
m9_239 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="409-409"];
m9_240 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="410-410"];
m9_241 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForexWithLeverage_SetBrokerageModel_SetSecurityInitializer()", span="394-394"];
m9_14 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m9_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m9_54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", span="114-114"];
m9_55 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="116-116"];
m9_56 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="118-118"];
m9_57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="119-123"];
m9_58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="127-127"];
m9_59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(ConstantFeeModel), security.FeeModel)", span="128-128"];
m9_60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", color=red, community=0, file="GDAXBrokerage.Utility.cs", label="21: Assert.AreEqual(0, security.FeeModel.GetOrderFee(security, _order))", span="129-129"];
m9_61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetSecurityInitializer()", span="114-114"];
m9_15 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", span="52-52"];
m9_16 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="54-54"];
m9_17 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="56-56"];
m9_18 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="57-57"];
m9_19 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="60-60"];
m9_20 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="61-61"];
m9_21 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="62-62"];
m9_22 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_AddForex_SetBrokerageModel()", span="52-52"];
m9_44 [cluster="System.NotSupportedException.NotSupportedException(string)", file="GDAXBrokerage.Utility.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m9_45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="110-110"];
m9_46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex()", span="96-96"];
m9_90 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", span="172-172"];
m9_91 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="174-174"];
m9_92 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetSecurityInitializer(x =>\r\n            {\r\n                x.SetLeverage(100);\r\n                x.FeeModel = new InteractiveBrokersFeeModel();\r\n            })", span="176-180"];
m9_93 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="181-181"];
m9_94 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="182-182"];
m9_95 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(100, Math.Round(security.Leverage, RoundingPrecision))", span="186-186"];
m9_96 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(InteractiveBrokersFeeModel), security.FeeModel)", span="187-187"];
m9_97 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(2, security.FeeModel.GetOrderFee(security, _order))", span="188-188"];
m9_98 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetSecurityInitializer_AddForex_SetBrokerageModel()", span="172-172"];
m9_0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", span="38-38"];
m9_1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="var algorithm = new QCAlgorithm()", span="40-40"];
m9_2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="algorithm.SetBrokerageModel(BrokerageName)", span="42-42"];
m9_3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="var security = algorithm.AddForex(Ticker, Resolution, Market)", span="43-43"];
m9_4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(50, Math.Round(security.Leverage, RoundingPrecision))", span="46-46"];
m9_5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.IsInstanceOf(typeof(FxcmFeeModel), security.FeeModel)", span="47-47"];
m9_6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Assert.AreEqual(0.04, security.FeeModel.GetOrderFee(security, _order))", span="48-48"];
m9_7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Tests.Algorithm.AlgorithmInitializeTests.Validates_SetBrokerageModel_AddForex()", span="38-38"];
m9_246 [file="GDAXBrokerage.Utility.cs", label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", span=""];
m10_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="42-42"];
m10_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="ImmediateFillModel.cs", label="50: order.Type == OrderType.Limit", span="44-44"];
m10_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="var limitPrice = ((LimitOrder) order).LimitPrice", span="47-47"];
m10_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="order.Direction == OrderDirection.Buy && limitPrice < security.AskPrice ||\r\n                    order.Direction == OrderDirection.Sell && limitPrice > security.BidPrice", span="48-49"];
m10_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ImmediateFillModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m10_9 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="return unitPrice * order.AbsoluteQuantity * fee;", span="65-65"];
m10_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="return 0m;", span="52-52"];
m10_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="decimal fee", span="58-58"];
m10_6 [cluster="lambda expression", file="ImmediateFillModel.cs", label="Entry lambda expression", span="46-46"];
m10_7 [cluster="lambda expression", file="ImmediateFillModel.cs", label="insight.Clone()", span="46-46"];
m10_8 [cluster="lambda expression", file="ImmediateFillModel.cs", label="Exit lambda expression", span="46-46"];
m10_10 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection", span=""];
m11_28 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Series.GetUpdates()", span="322-322"];
m11_109 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="var copy = new Series(Name, SeriesType, Index, Unit)\r\n            {\r\n                Color = Color,\r\n                ScatterMarkerSymbol = ScatterMarkerSymbol\r\n            }", span="324-328"];
m11_110 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="var i = _updatePosition", span="333-333"];
m11_111 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="i < Values.Count", span="333-333"];
m11_112 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="copy.Values.Add(Values[i])", span="335-335"];
m11_113 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="i++", span="333-333"];
m11_114 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="_updatePosition = Values.Count", span="338-338"];
m11_115 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label=Exception, span="340-340"];
m11_116 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Log.Error(err)", span="341-341"];
m11_117 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="return copy;", span="343-343"];
m11_118 [cluster="QuantConnect.Series.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Series.GetUpdates()", span="322-322"];
m11_20 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m11_21 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="var copy = new Chart(Name)", span="93-93"];
m11_22 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Series.Values", span="96-96"];
m11_23 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="copy.AddSeries(series.GetUpdates())", span="98-98"];
m11_24 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label=Exception, span="101-101"];
m11_25 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Log.Error(err)", span="102-102"];
m11_26 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="return copy;", span="104-104"];
m11_27 [cluster="QuantConnect.Chart.GetUpdates()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.GetUpdates()", span="91-91"];
m11_8 [cluster="QuantConnect.Chart.Chart(string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m11_9 [cluster="QuantConnect.Chart.Chart(string)", file="LiveTradingRealTimeHandler.cs", label="Name = name", span="66-66"];
m11_10 [cluster="QuantConnect.Chart.Chart(string)", file="LiveTradingRealTimeHandler.cs", label="Series = new Dictionary<string, Series>()", span="67-67"];
m11_11 [cluster="QuantConnect.Chart.Chart(string)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.Chart(string)", span="64-64"];
m11_36 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Series.Clone()", span="359-359"];
m11_124 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label="var series = new Series\r\n            {\r\n                Name = Name,\r\n                Values = new List<ChartPoint>(),\r\n                SeriesType = SeriesType,\r\n                Unit = Unit,\r\n                Index = Index,\r\n                Color = Color,\r\n                ScatterMarkerSymbol = ScatterMarkerSymbol\r\n            }", span="361-370"];
m11_125 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label=Values, span="372-372"];
m11_126 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label="series.Values.Add(new ChartPoint(point.x, point.y))", span="374-374"];
m11_127 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label="return series;", span="377-377"];
m11_128 [cluster="QuantConnect.Series.Clone()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Series.Clone()", span="359-359"];
m11_18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_12 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m11_13 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="LiveTradingRealTimeHandler.cs", label="!Series.ContainsKey(series.Name)", span="77-77"];
m11_14 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="LiveTradingRealTimeHandler.cs", label="Series.Add(series.Name, series)", span="79-79"];
m11_15 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="LiveTradingRealTimeHandler.cs", label="throw new Exception(''Chart.AddSeries(): Chart series name already exists'');", span="83-83"];
m11_16 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m11_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_19 [cluster="System.Exception.Exception(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m11_30 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.Clone()", span="111-111"];
m11_31 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label="var chart = new Chart(Name)", span="113-113"];
m11_32 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label=Series, span="115-115"];
m11_33 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label="chart.Series.Add(kvp.Key, kvp.Value.Clone())", span="117-117"];
m11_34 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label="return chart;", span="120-120"];
m11_35 [cluster="QuantConnect.Chart.Clone()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.Clone()", span="111-111"];
m11_2 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m11_3 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="LiveTradingRealTimeHandler.cs", label="Name = name", span="55-55"];
m11_4 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="LiveTradingRealTimeHandler.cs", label="Series = new Dictionary<string, Series>()", span="56-56"];
m11_5 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="LiveTradingRealTimeHandler.cs", label="ChartType = type", span="57-57"];
m11_6 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m11_0 [cluster="QuantConnect.Chart.Chart()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Chart.Chart()", span="45-45"];
m11_1 [cluster="QuantConnect.Chart.Chart()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Chart.Chart()", span="45-45"];
m11_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_8 [cluster="Unk.GetOrderFee", file="Loader.cs", label="Entry Unk.GetOrderFee", span=""];
m12_3 [cluster="QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Loader.cs", label="Entry QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="44-44"];
m12_4 [cluster="QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Loader.cs", label="Py.GIL()", span="46-46"];
m12_5 [cluster="QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Loader.cs", label="return _model.GetOrderFee(security, order);", span="48-48"];
m12_6 [cluster="QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Loader.cs", label="Exit QuantConnect.Python.FeeModelPythonWrapper.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="44-44"];
m12_7 [cluster="Unk.GIL", file="Loader.cs", label="Entry Unk.GIL", span=""];
m12_0 [cluster="QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", file="Loader.cs", label="Entry QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", span="33-33"];
m12_1 [cluster="QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", file="Loader.cs", label="_model = model", span="35-35"];
m12_2 [cluster="QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", file="Loader.cs", label="Exit QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", span="33-33"];
m12_9 [file="Loader.cs", label="QuantConnect.Python.FeeModelPythonWrapper", span=""];
m14_127 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType, string)", span="105-105"];
m14_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="220-220"];
m14_125 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m14_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="219-219"];
m14_36 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Universe.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="139-139"];
m14_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="48-48"];
m14_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="138-138"];
m14_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="Security = security", span="137-137"];
m14_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="MACD = algorithm.MACD(security.Symbol, fastPeriod, slowPeriod, signalPeriod, movingAverageType)", span="141-141"];
m14_70 [cluster="QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CoarseFundamentalUniverse(QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="44-44"];
m14_128 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="191-191"];
m14_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="201-201"];
m14_43 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
m14_44 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m14_135 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="153-153"];
m14_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="109-109"];
m14_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="changes.AddedSecurities", span="111-111"];
m14_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="_symbolData.Add(added.Symbol, new SymbolData(algorithm, added, _fastPeriod, _slowPeriod, _signalPeriod, _movingAverageType, _resolution))", span="113-113"];
m14_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="156-156"];
m14_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="var direction = InsightDirection.Flat", span="79-79"];
m14_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="var normalizedSignal = sd.MACD.Signal / sd.Security.Price", span="80-80"];
m14_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="normalizedSignal > BounceThresholdPercent", span="81-81"];
m14_93 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="85-85"];
m14_59 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Universe.cs", label="Entry FuncUniverse.cstr", span=""];
m14_132 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="67-67"];
m14_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="240-240"];
m14_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var marketHoursDbEntry = MarketHoursDatabase.GetEntry(market, name, securityType)", span="238-238"];
m14_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d.OfType<T>()).Select(x => QuantConnect.Symbol.Create(x, securityType, market))))", span="243-243"];
m14_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="sd.Security.Price == 0", span="74-74"];
m14_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="239-239"];
m14_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var config = new SubscriptionDataConfig(typeof(T), symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="242-242"];
m14_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="241-241"];
m14_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="236-236"];
m14_47 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Entry lambda expression", span="223-223"];
m14_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="275-275"];
m14_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(new FineFundamentalFilteredUniverse(universe, fineSelector))", span="277-277"];
m14_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="275-275"];
m14_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m14_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="var coarse = new CoarseFundamentalUniverse(UniverseSettings, SecurityInitializer, coarseSelector)", span="264-264"];
m14_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(new FineFundamentalFilteredUniverse(coarse, fineSelector))", span="266-266"];
m14_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m14_64 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Entry lambda expression", span="243-243"];
m14_141 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="x.Members.ContainsKey(security.Symbol)", span="333-333"];
m14_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1366-1366"];
m14_61 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="selector(d.OfType<T>()).Select(x => QuantConnect.Symbol.Create(x, securityType, market))", span="243-243"];
m14_137 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Entry lambda expression", span="333-333"];
m14_140 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Entry lambda expression", span="333-333"];
m14_142 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Exit lambda expression", span="333-333"];
m14_65 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="QuantConnect.Symbol.Create(x, securityType, market)", span="243-243"];
m14_49 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span=""];
m14_60 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Entry lambda expression", span="243-243"];
m14_62 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Exit lambda expression", span="243-243"];
m14_139 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Exit lambda expression", span="333-333"];
m14_138 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="x.Value", span="333-333"];
m14_66 [cluster="lambda expression", file="QCAlgorithm.Universe.cs", label="Exit lambda expression", span="243-243"];
m14_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="316-316"];
m14_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var marketHoursDbEntry = MarketHoursDatabase.GetEntry(market, name, securityType)", span="314-314"];
m14_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(new UserDefinedUniverse(config, universeSettings, SecurityInitializer, resolution.ToTimeSpan(), selector))", span="319-319"];
m14_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="312-312"];
m14_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="315-315"];
m14_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var config = new SubscriptionDataConfig(typeof(CoarseFundamental), symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, isFilteredSubscription: false)", span="318-318"];
m14_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="317-317"];
m14_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="312-312"];
m14_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m14_133 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m14_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="changes.RemovedSecurities", span="116-116"];
m14_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="SymbolData data", span="118-118"];
m14_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Universe.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="119-119"];
m14_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="sd.PreviousDirection = insight.Direction", span="98-98"];
m14_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="yield return insight;", span="99-99"];
m14_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="70-70"];
m14_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="201-201"];
m14_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(securityType, name, resolution, market, UniverseSettings, selector)", span="203-203"];
m14_136 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Universe.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m14_143 [cluster="Unk.ContainsKey", file="QCAlgorithm.Universe.cs", label="Entry Unk.ContainsKey", span=""];
m14_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="_movingAverageType = movingAverageType", span="59-59"];
m14_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="_resolution = resolution", span="60-60"];
m14_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="61-61"];
m14_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="MarketHoursDatabase.SetEntry(uconfig.Market, symbolString, uconfig.SecurityType, security.Exchange.Hours, uconfig.DataTimeZone)", span="359-359"];
m14_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", color=green, community=0, file="QCAlgorithm.Universe.cs", label="62: universe = new UserDefinedUniverse(uconfig,\r\n                    new UniverseSettings(security.Resolution, security.Leverage, security.IsFillDataForward, security.IsExtendedMarketHours, TimeSpan.Zero),\r\n                    SecurityInitializer,\r\n                    QuantConnect.Time.OneDay,\r\n                    new List<Symbol> { security.Symbol }\r\n                    )", span="362-367"];
m14_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m14_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="security.Type == SecurityType.Base", span="355-355"];
m14_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var uconfig = new SubscriptionDataConfig(subscription, symbol: universeSymbol, isInternalFeed: true, fillForward: false)", span="353-353"];
m14_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="UniverseManager.Add(universeSymbol, universe)", span="368-368"];
m14_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var userDefinedUniverse = universe as UserDefinedUniverse", span="371-371"];
m14_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Securities.TryGetValue(security.Symbol, out existingSecurity)", span="329-329"];
m14_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="!security.IsInternalFeed() && existingSecurity.Symbol == _benchmarkSymbol", span="331-331"];
m14_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var securityUniverse = UniverseManager.Select(x => x.Value).OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(security.Symbol))", span="333-333"];
m14_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Securities.Remove(security.Symbol)", span="339-339"];
m14_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Securities.Add(security)", span="343-343"];
m14_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="!UniverseManager.TryGetValue(universeSymbol, out universe)", span="349-349"];
m14_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Security existingSecurity", span="328-328"];
m14_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="securityUniverse.Remove(security.Symbol)", span="336-336"];
m14_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var subscription = security.Subscriptions.First()", span="347-347"];
m14_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="userDefinedUniverse.Add(security.Symbol)", span="374-374"];
m14_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var symbolString = MarketHoursDatabase.GetDatabaseSymbolKey(uconfig.Symbol)", span="358-358"];
m14_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="var universeSymbol = UserDefinedUniverse.CreateSymbol(subscription.SecurityType, subscription.Market)", span="348-348"];
m14_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="userDefinedUniverse != null", span="372-372"];
m14_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="securityUniverse != null", span="334-334"];
m14_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Universe universe", span="346-346"];
m14_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="throw new Exception(''Expected universe with symbol ''' + universeSymbol.Value + ''' to be of type UserDefinedUniverse.'');", span="379-379"];
m14_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m14_50 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.Universe.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span=""];
m14_121 [cluster="Unk.>", file="QCAlgorithm.Universe.cs", label="Entry Unk.>", span=""];
m14_75 [cluster="QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="36-36"];
m14_46 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m14_122 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Universe.cs", label="Entry Unk.FirstOrDefault", span=""];
m14_119 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m14_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="87-87"];
m14_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="85-85"];
m14_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="127-127"];
m14_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="127-127"];
m14_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="115-115"];
m14_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="113-113"];
m14_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>)", span="113-113"];
m14_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="129-129"];
m14_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="286-286"];
m14_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="288-288"];
m14_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="286-286"];
m14_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="QCAlgorithm.Universe.cs", label="_signalPeriod = signalPeriod", span="58-58"];
m14_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m14_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(new CoarseFundamentalUniverse(UniverseSettings, SecurityInitializer, selector))", span="253-253"];
m14_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m14_131 [cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", span="144-144"];
m14_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m14_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Universe.cs", label="UniverseManager.Add(universe.Configuration.Symbol, universe)", span="61-61"];
m14_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m14_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Universe.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_120 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m14_124 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="169-169"];
m14_51 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Universe.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m14_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="158-158"];
m14_130 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", span="212-212"];
m14_129 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m14_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298"];
m14_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="AddUniverse(SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="300-300"];
m14_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Universe.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298"];
m14_126 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.Universe.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m14_94 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="723-723"];
m14_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Universe.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse<T>(string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="156-156"];
m14_63 [cluster="Unk.Select", file="QCAlgorithm.Universe.cs", label="Entry Unk.Select", span=""];
m14_123 [cluster="Unk.Remove", file="QCAlgorithm.Universe.cs", label="Entry Unk.Remove", span=""];
m14_144 [file="QCAlgorithm.Universe.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m14_149 [file="QCAlgorithm.Universe.cs", label="QuantConnect.Securities.Security", span=""];
m14_145 [file="QCAlgorithm.Universe.cs", label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", span=""];
m14_146 [file="QCAlgorithm.Universe.cs", label="QuantConnect.SecurityType", span=""];
m14_147 [file="QCAlgorithm.Universe.cs", label=string, span=""];
m14_148 [file="QCAlgorithm.Universe.cs", label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>", span=""];
m15_36 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="QuoteBarConsolidator.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m15_35 [cluster="QuantConnect.Data.Market.Bar.Clone()", file="QuoteBarConsolidator.cs", label="Entry QuantConnect.Data.Market.Bar.Clone()", span="84-84"];
m15_33 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar()", file="QuoteBarConsolidator.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar()", span="196-196"];
m15_6 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", span="59-59"];
m15_10 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="QuoteBarConsolidator.cs", label="7: workingBar = new QuoteBar\r\n                {\r\n                    Symbol = data.Symbol,\r\n                    Time = GetRoundedBarTime(data.Time),\r\n                    Bid = bid == null ? null : bid.Clone(),\r\n                    Ask = ask == null ? null : ask.Clone(),\r\n                    Period = IsTimeBased && Period.HasValue ? (TimeSpan)Period : data.Period\r\n                }", span="66-73"];
m15_7 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="var bid = data.Bid", span="61-61"];
m15_8 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="var ask = data.Ask", span="62-62"];
m15_9 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar == null", span="64-64"];
m15_11 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="bid != null", span="77-77"];
m15_12 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.LastBidSize = data.LastBidSize", span="79-79"];
m15_13 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid == null", span="80-80"];
m15_14 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid = new Bar(bid.Open, bid.High, bid.Low, bid.Close)", span="82-82"];
m15_15 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid.Close = bid.Close", span="86-86"];
m15_16 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid.High < bid.High", span="87-87"];
m15_17 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid.High = bid.High", span="87-87"];
m15_18 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid.Low > bid.Low", span="88-88"];
m15_19 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Bid.Low = bid.Low", span="88-88"];
m15_21 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.LastAskSize = data.LastAskSize", span="93-93"];
m15_22 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask == null", span="94-94"];
m15_23 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask = new Bar(ask.Open, ask.High, ask.Low, ask.Close)", span="96-96"];
m15_24 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask.Close = ask.Close", span="100-100"];
m15_25 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask.High < ask.High", span="101-101"];
m15_26 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask.High = ask.High", span="101-101"];
m15_27 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask.Low > ask.Low", span="102-102"];
m15_28 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Ask.Low = ask.Low", span="102-102"];
m15_29 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="workingBar.Value = data.Value", span="106-106"];
m15_31 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="QuoteBarConsolidator.cs", label="7: workingBar.Period += data.Period", span="107-107"];
m15_30 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="QuoteBarConsolidator.cs", label="7: !IsTimeBased", span="107-107"];
m15_20 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="ask != null", span="91-91"];
m15_32 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", file="QuoteBarConsolidator.cs", label="Exit QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(ref QuantConnect.Data.Market.QuoteBar, QuantConnect.Data.Market.QuoteBar)", span="59-59"];
m15_34 [cluster="QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", file="QuoteBarConsolidator.cs", label="Entry QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase<T, TConsolidated>.GetRoundedBarTime(System.DateTime)", span="251-251"];
m15_37 [file="QuoteBarConsolidator.cs", label="QuantConnect.Data.Consolidators.QuoteBarConsolidator", span=""];
m16_25 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="152-152"];
m16_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m16_32 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m16_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="114-114"];
m16_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="QuoteBarConsolidatorTests.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="116-116"];
m16_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="QuoteBarConsolidatorTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="114-114"];
m16_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m16_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var errors = new List<string>()", span="74-74"];
m16_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var account = Read<string>(job.BrokerageData, ''ib-account'', errors)", span="83-83"];
m16_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var userId = Read<string>(job.BrokerageData, ''ib-user-name'', errors)", span="84-84"];
m16_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var password = Read<string>(job.BrokerageData, ''ib-password'', errors)", span="85-85"];
m16_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var tradingMode = Read<string>(job.BrokerageData, ''ib-trading-mode'', errors)", span="86-86"];
m16_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var agentDescription = Read<string>(job.BrokerageData, ''ib-agent-description'', errors)", span="87-87"];
m16_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var ib = new InteractiveBrokersBrokerage(algorithm, algorithm.Transactions, algorithm.Portfolio, account, host, port, agentDescription)", span="103-103"];
m16_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="77-77"];
m16_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="errors.Count != 0", span="89-89"];
m16_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="throw new Exception(string.Join(Environment.NewLine, errors));", span="92-92"];
m16_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="78-78"];
m16_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="InteractiveBrokersGatewayRunner.Start(ibControllerDirectory, twsDirectory, userId, password, tradingMode, useTws)", span="101-101"];
m16_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="79-79"];
m16_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var twsDirectory = Config.Get(''ib-tws-dir'', ''C:\\Jts'')", span="80-80"];
m16_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="var ibControllerDirectory = Config.Get(''ib-controller-dir'', ''C:\\IBController'')", span="81-81"];
m16_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="tradingMode == ''''", span="95-95"];
m16_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="throw new Exception(''No trading mode selected. Please select either 'paper' or 'live' trading.'');", span="97-97"];
m16_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", color=red, community=0, file="QuoteBarConsolidatorTests.cs", label="31: Composer.Instance.AddPart<IDataQueueHandler>(ib)", span="104-104"];
m16_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="return ib;", span="106-106"];
m16_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="QuoteBarConsolidatorTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m16_24 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m16_23 [cluster="System.Collections.Generic.List<T>.List()", file="QuoteBarConsolidatorTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_29 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="QuoteBarConsolidatorTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m16_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="32-32"];
m16_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="QuoteBarConsolidatorTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="32-32"];
m16_27 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="86-86"];
m16_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m16_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m16_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="QuoteBarConsolidatorTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m18_0 [cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="30-30"];
m18_1 [cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="30-30"];
m20_113 [cluster="System.Math.Abs(decimal)", file="SecurityTransactionModelTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m20_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="383-383"];
m20_166 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Order queued", span="385-385"];
m20_167 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="386-386"];
m20_168 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_orders[order.Id] = order", span="388-388"];
m20_169 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!_brokerage.CancelOrder(order)", span="390-390"];
m20_170 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Invalid", span="393-393"];
m20_171 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="398-398"];
m20_172 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="383-383"];
m20_119 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="SecurityTransactionModelTests.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m20_91 [cluster="Unk.Where", file="SecurityTransactionModelTests.cs", label="Entry Unk.Where", span=""];
m20_148 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="383-383"];
m20_162 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="371-371"];
m20_164 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="373-376"];
m20_165 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="371-371"];
m20_163 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="89-89"];
m20_192 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="287-287"];
m20_56 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m20_188 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="329-329"];
m20_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="249-249"];
m20_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="251-251"];
m20_100 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="var balances = _brokerage.GetCashBalance()", span="253-253"];
m20_101 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label=balances, span="254-254"];
m20_102 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Cash cash", span="256-256"];
m20_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="_syncedLiveBrokerageCashToday = true", span="270-270"];
m20_103 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="257-257"];
m20_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="var delta = cash.Quantity - balance.Quantity", span="260-260"];
m20_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balance.Symbol, delta.ToString(''0.00''))", span="264-264"];
m20_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Quantity, balance.ConversionRate)", span="267-267"];
m20_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Math.Abs(delta) > _algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)", span="261-261"];
m20_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", color=red, community=0, file="SecurityTransactionModelTests.cs", label="22: Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.Now.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="274-289"];
m20_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="249-249"];
m20_112 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="221-221"];
m20_118 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="SecurityTransactionModelTests.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m20_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m20_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="449-449"];
m20_193 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="SecurityTransactionModelTests.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Quantity - account.CashBalance", span="452-452"];
m20_195 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="SecurityTransactionModelTests.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="455-455"];
m20_194 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="SecurityTransactionModelTests.cs", label="delta != 0", span="453-453"];
m20_196 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="449-449"];
m20_120 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="274-289"];
m20_17 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="HandleOrderEvent(fill)", span="83-83"];
m20_21 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="HandleSecurityHoldingUpdated(holding)", span="88-88"];
m20_25 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="HandleAccountChanged(account)", span="93-93"];
m20_16 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="81-84"];
m20_18 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="81-84"];
m20_20 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="86-89"];
m20_22 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="86-89"];
m20_24 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="91-94"];
m20_26 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="91-94"];
m20_93 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="237-237"];
m20_97 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="x.Key <= lowestOrderIdToKeep", span="239-239"];
m20_96 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="239-239"];
m20_94 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="x.Key", span="237-237"];
m20_95 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="237-237"];
m20_98 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="239-239"];
m20_121 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="277-277"];
m20_122 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="_syncedLiveBrokerageCashToday = false", span="281-281"];
m20_124 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="286-286"];
m20_123 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="282-282"];
m20_125 [cluster="lambda expression", color=red, community=0, file="SecurityTransactionModelTests.cs", label="12: Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="287-287"];
m20_126 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="274-289"];
m20_58 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m20_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="123-123"];
m20_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="!_exitTriggered", span="125-125"];
m20_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Order order", span="129-129"];
m20_53 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="180-180"];
m20_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="!_orderQueue.TryDequeue(out order)", span="130-130"];
m20_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="_algorithm.ProcessingOrder = false", span="132-132"];
m20_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="_algorithm.ProcessingOrder = true", span="137-137"];
m20_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="order.Direction == OrderDirection.Hold", span="140-140"];
m20_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="142-142"];
m20_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="!_orders.TryAdd(order.Id, order)", span="145-145"];
m20_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="147-147"];
m20_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="order.Status", span="153-153"];
m20_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="HandleNewOrder(order)", span="156-156"];
m20_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="HandleUpdatedOrder(order)", span="160-160"];
m20_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="HandleCancelledOrder(order)", span="164-164"];
m20_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="173-173"];
m20_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Thread.Sleep(1)", span="133-133"];
m20_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.New", span="155-155"];
m20_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.Update", span="159-159"];
m20_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.Canceled", span="163-163"];
m20_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.None", span="168-168"];
m20_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.Invalid", span="169-169"];
m20_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.PartiallyFilled", span="170-170"];
m20_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.Filled", span="171-171"];
m20_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="OrderStatus.Submitted", span="172-172"];
m20_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="ProcessAsynchronousEvents()", span="177-177"];
m20_54 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="IsActive = false", span="181-181"];
m20_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="123-123"];
m20_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="455-455"];
m20_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="295-295"];
m20_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityTransactionModelTests.cs", label="_exitTriggered = true", span="297-297"];
m20_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="295-295"];
m20_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SecurityTransactionModelTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m20_59 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m20_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="348-348"];
m20_154 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Order queued", span="350-350"];
m20_155 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_orders.TryGetValue(order.Id, out queued) && CanUpdateOrder(queued)", span="351-351"];
m20_156 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_orders[order.Id] = order", span="353-353"];
m20_157 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!_brokerage.UpdateOrder(order)", span="354-354"];
m20_158 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Invalid", span="357-357"];
m20_159 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="362-362"];
m20_160 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="348-348"];
m20_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="195-195"];
m20_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="!_algorithm.LiveMode", span="200-200"];
m20_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="!Ready", span="203-203"];
m20_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_syncedLiveBrokerageCashToday && DateTime.Now.Date != LastSyncDate", span="211-211"];
m20_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Thread.Sleep(1)", span="205-205"];
m20_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="return;", span="207-207"];
m20_72 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_syncedLiveBrokerageCashToday = false", span="213-213"];
m20_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && DateTime.Now.TimeOfDay >= _liveBrokerageCashSyncTime", span="217-217"];
m20_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="222-222"];
m20_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="int maxOrdersToKeep = 10000", span="234-234"];
m20_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="PerformCashSync()", span="224-224"];
m20_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label=Exception, span="227-227"];
m20_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Log.Error(err, ''Updating cash balances'')", span="229-229"];
m20_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_orders.Count < maxOrdersToKeep + 1", span="235-235"];
m20_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="238-238"];
m20_80 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="return;", span="235-235"];
m20_81 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="int max = _orders.Max(x => x.Key)", span="237-237"];
m20_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="239-239"];
m20_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Order value", span="241-241"];
m20_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="_orders.TryRemove(item.Key, out value)", span="242-242"];
m20_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="195-195"];
m20_92 [cluster="Unk.TryRemove", file="SecurityTransactionModelTests.cs", label="Entry Unk.TryRemove", span=""];
m20_152 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m20_153 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="82-82"];
m20_150 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="254-254"];
m20_189 [cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="SecurityTransactionModelTests.cs", label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0"];
m20_161 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="304-304"];
m20_130 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_orders.TryAdd(order.Id, order)", span="306-306"];
m20_131 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="309-309"];
m20_132 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Invalid", span="311-311"];
m20_133 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="312-312"];
m20_136 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanSubmitOrder(_algorithm.Securities[order.Symbol], order, out message)", span="318-318"];
m20_137 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Invalid", span="321-321"];
m20_139 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="322-322"];
m20_142 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_brokerage.PlaceOrder(order)", span="328-328"];
m20_143 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Submitted", span="330-330"];
m20_144 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Invalid", span="334-334"];
m20_145 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_algorithm.Error(''Brokerage failed to place order: '' + order.Id)", span="335-335"];
m20_146 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="340-340"];
m20_135 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="BrokerageMessageEvent message", span="317-317"];
m20_134 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return;", span="313-313"];
m20_138 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="message == null", span="322-322"];
m20_140 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_algorithm.Error(''OrderID: '' + message)", span="323-323"];
m20_141 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return;", span="324-324"];
m20_147 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="304-304"];
m20_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="187-187"];
m20_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="187-187"];
m20_190 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="477-477"];
m20_57 [cluster="System.Threading.Thread.Sleep(int)", file="SecurityTransactionModelTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m20_116 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="65-65"];
m20_151 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="38-38"];
m20_191 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="209-209"];
m20_114 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="114-114"];
m20_203 [cluster="string.Format(string, object, object, object)", file="SecurityTransactionModelTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m20_149 [cluster="string.Format(string, object, object)", file="SecurityTransactionModelTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_173 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="96-96"];
m20_23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="467-467"];
m20_197 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="var securityHolding = _algorithm.Portfolio[holding.Symbol]", span="470-470"];
m20_198 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="var deltaQuantity = securityHolding.Quantity - holding.Quantity", span="471-471"];
m20_199 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="var deltaAvgPrice = securityHolding.AveragePrice - holding.AveragePrice", span="472-472"];
m20_201 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleSecurityHoldingUpdated(): {0} DeltaQuantity: {1} DeltaAvgPrice: {2}'', holding.Symbol, deltaQuantity, deltaAvgPrice))", span="475-475"];
m20_200 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="deltaQuantity != 0 || deltaAvgPrice != 0", span="473-473"];
m20_202 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="467-467"];
m20_64 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m20_19 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="402-402"];
m20_174 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="405-405"];
m20_176 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="408-408"];
m20_178 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="order.Status = fill.Status", span="413-413"];
m20_179 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="421-421"];
m20_181 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="424-424"];
m20_182 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="fill.Status != OrderStatus.None", span="428-428"];
m20_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="431-431"];
m20_184 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="_algorithm.OnOrderEvent(fill)", span="435-435"];
m20_175 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="order == null", span="406-406"];
m20_177 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="return;", span="409-409"];
m20_180 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.Now.Ticks)", span="423-423"];
m20_185 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label=Exception, span="437-437"];
m20_186 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="439-439"];
m20_187 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="402-402"];
m20_87 [cluster="System.TimeSpan.FromSeconds(double)", file="SecurityTransactionModelTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m20_115 [cluster="decimal.ToString(string)", file="SecurityTransactionModelTests.cs", label="Entry decimal.ToString(string)", span="0-0"];
m20_111 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75"];
m20_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="69-69"];
m20_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="brokerage == null", span="71-71"];
m20_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_brokerage = brokerage", span="80-80"];
m20_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_algorithm = algorithm", span="98-98"];
m20_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_orders = algorithm.Transactions.Orders", span="101-101"];
m20_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", span="102-102"];
m20_13 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_orderQueue = algorithm.Transactions.OrderQueue", span="103-103"];
m20_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="throw new ArgumentNullException(''brokerage'');", span="73-73"];
m20_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_syncedLiveBrokerageCashToday = true", span="77-77"];
m20_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="78-78"];
m20_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="81-84"];
m20_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_brokerage.SecurityHoldingUpdated += (sender, holding) =>\r\n            {\r\n                HandleSecurityHoldingUpdated(holding);\r\n            }", span="86-89"];
m20_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="91-94"];
m20_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="IsActive = true", span="96-96"];
m20_14 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="69-69"];
m20_204 [file="SecurityTransactionModelTests.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m20_205 [file="SecurityTransactionModelTests.cs", label=lowestOrderIdToKeep, span=""];
n111 -> n9  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n112 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n112 -> n107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightManager", style=dashed];
n113 -> n55  [color=darkseagreen4, key=1, label=context, style=dashed];
n114 -> n99  [color=darkseagreen4, key=1, label=context, style=dashed];
n114 -> n103  [color=darkseagreen4, key=1, label=context, style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n4  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<System.Guid, QuantConnect.Algorithm.Framework.Alphas.Analysis.InsightAnalysisContext>", style=dashed];
n5 -> n3  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n10 -> n8  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [color=darkseagreen4, key=1, label=double, style=dashed];
n11 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.IInsightScoreFunctionProvider", style=dashed];
n11 -> n15  [color=darkseagreen4, key=1, label=double, style=dashed];
n11 -> n16  [color=darkseagreen4, key=1, label="params QuantConnect.Algorithm.Framework.Alphas.IInsightManagerExtension[]", style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n13 -> n20  [key=0, style=solid];
n13 -> n21  [key=2, style=dotted];
n13 -> n22  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n16 -> n24  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n25  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n25  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n26  [key=2, style=dotted];
n20 -> n11  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=2, style=dotted];
n29 -> n27  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n33 -> n32  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n34 -> n31  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection", style=dashed];
n36 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection", style=dashed];
n36 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection", style=dashed];
n36 -> n46  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n44  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n44  [key=0, style=solid];
n38 -> n40  [color=darkseagreen4, key=1, label=insight, style=dashed];
n38 -> n41  [color=darkseagreen4, key=1, label=insight, style=dashed];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [color=darkseagreen4, key=1, label=initialValues, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n52  [key=2, style=dotted];
n46 -> n45  [key=0, style=solid];
n46 -> n53  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n48  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n41 -> n43  [color=darkseagreen4, key=1, label=context, style=dashed];
n41 -> n55  [color=darkseagreen4, key=1, label=context, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n50  [key=2, style=dotted];
n43 -> n38  [key=0, style=solid];
n43 -> n51  [key=2, style=dotted];
n43 -> n54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n52 -> n70  [key=0, style=solid];
n52 -> n73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection", style=dashed];
n52 -> n36  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.Alphas.Analysis.ReadOnlySecurityValuesCollection securityValuesCollection", style=bold];
n47 -> n36  [color=blue, key=0, style=bold];
n56 -> n54  [color=blue, key=0, style=bold];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=0, style=solid];
n59 -> n61  [color=darkseagreen4, key=1, label=id, style=dashed];
n60 -> n61  [key=0, style=solid];
n62 -> n58  [color=blue, key=0, style=bold];
n61 -> n59  [key=0, style=solid];
n61 -> n63  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n23  [key=2, style=dotted];
n65 -> n67  [color=darkseagreen4, key=1, label=copy, style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n69  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n68 -> n64  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n70 -> n25  [key=2, style=dotted];
n70 -> n87  [color=darkseagreen4, key=1, label=removals, style=dashed];
n70 -> n89  [color=darkseagreen4, key=1, label=removals, style=dashed];
n73 -> n74  [key=0, style=solid];
n73 -> n91  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n89  [key=0, style=solid];
n71 -> n73  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n74  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n76  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n77  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n78  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n79  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n80  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n81  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n99  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n82  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n83  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n84  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n103  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n85  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n86  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n87  [color=darkseagreen4, key=1, label=context, style=dashed];
n71 -> n88  [color=darkseagreen4, key=1, label=context, style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n50  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n97  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n80  [color=darkseagreen4, key=1, label=previouslyClosed, style=dashed];
n74 -> n75  [key=0, style=solid];
n74 -> n79  [color=darkseagreen4, key=1, label=currentTimeUtc, style=dashed];
n74 -> n82  [color=darkseagreen4, key=1, label=currentTimeUtc, style=dashed];
n74 -> n83  [color=darkseagreen4, key=1, label=currentTimeUtc, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n75  [key=0, style=solid];
n76 -> n92  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n93  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n94  [key=2, style=dotted];
n79 -> n75  [key=0, style=solid];
n79 -> n95  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n51  [key=2, style=dotted];
n81 -> n98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n88  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n96  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n51  [key=2, style=dotted];
n84 -> n102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n88 -> n71  [key=0, style=solid];
n88 -> n50  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n80  [key=0, style=solid];
n75 -> n77  [color=darkseagreen4, key=1, label=scoreType, style=dashed];
n75 -> n78  [color=darkseagreen4, key=1, label=scoreType, style=dashed];
n75 -> n79  [color=darkseagreen4, key=1, label=scoreType, style=dashed];
n98 -> n99  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n90 -> n52  [color=blue, key=0, style=bold];
n100 -> n98  [color=blue, key=0, style=bold];
n104 -> n102  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n109  [key=0, style=solid];
n108 -> n107  [key=0, style=solid];
n108 -> n110  [key=2, style=dotted];
n109 -> n106  [color=blue, key=0, style=bold];
d324 -> d325  [color=green, key=0, style=solid];
d508 -> d324  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d196  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d248  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d275  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d279  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d281  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d282  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d284  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d285  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d286  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d291  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d293  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d310  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d316  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d317  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d322  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d325  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d331  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d341  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d353  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d357  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d368  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d384  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d386  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d388  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d389  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d393  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d394  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d395  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d396  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d397  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d401  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d434  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d441  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d444  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d446  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d447  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d448  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d451  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d458  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d462  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d463  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d464  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d465  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d466  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d467  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d469  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d471  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d472  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d474  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d476  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d477  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d479  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d481  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d482  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d483  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d484  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d486  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d488  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d508 -> d490  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
d323 -> d324  [color=green, key=0, style=solid];
d323 -> d156  [key=2, style=dotted];
d323 -> d157  [key=2, style=dotted];
d323 -> d325  [color=darkseagreen4, key=1, label=result, style=dashed];
d323 -> d326  [color=darkseagreen4, key=1, label=result, style=dashed];
d323 -> d327  [color=darkseagreen4, key=1, label=result, style=dashed];
d325 -> d326  [key=0, style=solid];
d325 -> d158  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d12  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d13  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d14  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d14  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d15  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d30 -> d39  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [key=0, style=solid];
d32 -> d42  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d43  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d44  [key=2, style=dotted];
d35 -> d30  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d52  [key=0, style=solid];
d49 -> d132  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d129  [key=0, style=solid];
d52 -> d131  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d56 -> d59  [key=0, style=solid];
d56 -> d42  [key=2, style=dotted];
d56 -> d58  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
d57 -> d58  [key=0, style=solid];
d57 -> d135  [key=2, style=dotted];
d62 -> d62  [color=darkseagreen4, key=1, label=order, style=dashed];
d62 -> d63  [key=0, style=solid];
d62 -> d139  [key=2, style=dotted];
d62 -> d140  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d66 -> d67  [key=0, style=solid];
d66 -> d69  [key=0, style=solid];
d74 -> d75  [key=0, style=solid];
d76 -> d77  [key=0, style=solid];
d76 -> d147  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=0, style=solid];
d77 -> d148  [key=2, style=dotted];
d77 -> d149  [key=2, style=dotted];
d77 -> d167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d77 -> d172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d80 -> d81  [key=0, style=solid];
d81 -> d82  [key=0, style=solid];
d81 -> d83  [key=0, style=solid];
d84 -> d85  [key=0, style=solid];
d84 -> d88  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
d84 -> d118  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
d85 -> d86  [key=0, style=solid];
d85 -> d152  [key=2, style=dotted];
d85 -> d144  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d152  [key=2, style=dotted];
d86 -> d144  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d152  [key=2, style=dotted];
d87 -> d144  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d89 -> d152  [key=2, style=dotted];
d89 -> d144  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d152  [key=2, style=dotted];
d90 -> d144  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d91 -> d152  [key=2, style=dotted];
d91 -> d144  [key=2, style=dotted];
d92 -> d93  [key=0, style=solid];
d92 -> d153  [key=2, style=dotted];
d94 -> d93  [key=0, style=solid];
d94 -> d43  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d95 -> d107  [key=0, style=solid];
d97 -> d98  [key=0, style=solid];
d97 -> d154  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d100 -> d103  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d103 -> d155  [key=2, style=dotted];
d104 -> d105  [key=0, style=solid];
d104 -> d156  [key=2, style=dotted];
d104 -> d157  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d105 -> d158  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d117  [key=0, style=solid];
d110 -> d111  [key=0, style=solid];
d112 -> d112  [color=darkseagreen4, key=1, label=log, style=dashed];
d112 -> d113  [key=0, style=solid];
d112 -> d159  [key=2, style=dotted];
d112 -> d160  [key=2, style=dotted];
d112 -> d161  [key=2, style=dotted];
d112 -> d114  [color=darkseagreen4, key=1, label=logs, style=dashed];
d113 -> d114  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d114 -> d162  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d115 -> d154  [key=2, style=dotted];
d117 -> d118  [key=0, style=solid];
d117 -> d122  [key=0, style=solid];
d118 -> d119  [key=0, style=solid];
d118 -> d121  [key=0, style=solid];
d118 -> d163  [key=2, style=dotted];
d121 -> d122  [key=0, style=solid];
d121 -> d154  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d128 -> d131  [key=0, style=solid];
d128 -> d166  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d181 -> d183  [key=0, style=solid];
d184 -> d185  [key=0, style=solid];
d184 -> d156  [key=2, style=dotted];
d184 -> d192  [key=2, style=dotted];
d184 -> d193  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d156  [key=2, style=dotted];
d187 -> d192  [key=2, style=dotted];
d187 -> d193  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d156  [key=2, style=dotted];
d188 -> d192  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d196 -> d198  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d198 -> d201  [key=2, style=dotted];
d198 -> d202  [key=2, style=dotted];
d199 -> d200  [key=0, style=solid];
d199 -> d203  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d205 -> d208  [key=2, style=dotted];
d205 -> d202  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d206 -> d203  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d210 -> d212  [key=0, style=solid];
d212 -> d213  [key=0, style=solid];
d212 -> d215  [key=2, style=dotted];
d212 -> d202  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d213 -> d203  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d218 -> d219  [key=0, style=solid];
d218 -> d221  [key=2, style=dotted];
d218 -> d222  [key=2, style=dotted];
d218 -> d193  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d226  [key=0, style=solid];
d226 -> d227  [key=0, style=solid];
d226 -> d229  [key=2, style=dotted];
d226 -> d202  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d227 -> d230  [key=2, style=dotted];
d227 -> d203  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d233 -> d202  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d237 -> d240  [key=2, style=dotted];
d237 -> d202  [key=2, style=dotted];
d238 -> d239  [key=0, style=solid];
d238 -> d230  [key=2, style=dotted];
d238 -> d203  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d244 -> d245  [key=0, style=solid];
d244 -> d246  [key=0, style=solid];
d244 -> d251  [key=2, style=dotted];
d245 -> d246  [key=0, style=solid];
d245 -> d191  [key=2, style=dotted];
d245 -> d252  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d248  [key=0, style=solid];
d246 -> d253  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d247 -> d254  [key=2, style=dotted];
d247 -> d144  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d248 -> d255  [key=2, style=dotted];
d248 -> d193  [key=2, style=dotted];
d259 -> d260  [key=0, style=solid];
d259 -> d241  [key=2, style=dotted];
d264 -> d264  [color=darkseagreen4, key=1, label=security, style=dashed];
d264 -> d265  [key=0, style=solid];
d264 -> d268  [key=0, style=solid];
d264 -> d269  [key=2, style=dotted];
d264 -> d170  [key=2, style=dotted];
d264 -> d266  [color=darkseagreen4, key=1, label=security, style=dashed];
d267 -> d268  [key=0, style=solid];
d267 -> d241  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d275 -> d241  [key=2, style=dotted];
d279 -> d280  [key=0, style=solid];
d281 -> d282  [key=0, style=solid];
d281 -> d283  [key=0, style=solid];
d281 -> d251  [key=2, style=dotted];
d282 -> d283  [key=0, style=solid];
d282 -> d191  [key=2, style=dotted];
d282 -> d252  [key=2, style=dotted];
d284 -> d285  [key=0, style=solid];
d284 -> d286  [key=0, style=solid];
d284 -> d253  [key=2, style=dotted];
d285 -> d286  [key=0, style=solid];
d285 -> d254  [key=2, style=dotted];
d285 -> d144  [key=2, style=dotted];
d286 -> d283  [key=0, style=solid];
d286 -> d289  [key=2, style=dotted];
d291 -> d292  [key=0, style=solid];
d293 -> d294  [key=0, style=solid];
d293 -> d296  [key=0, style=solid];
d293 -> d295  [color=darkseagreen4, key=1, label=security, style=dashed];
d296 -> d297  [key=0, style=solid];
d296 -> d231  [key=2, style=dotted];
d309 -> d310  [key=0, style=solid];
d309 -> d312  [key=2, style=dotted];
d310 -> d311  [key=0, style=solid];
d310 -> d202  [key=2, style=dotted];
d315 -> d316  [key=0, style=solid];
d316 -> d317  [key=0, style=solid];
d316 -> d318  [key=0, style=solid];
d316 -> d253  [key=2, style=dotted];
d317 -> d318  [key=0, style=solid];
d317 -> d144  [key=2, style=dotted];
d318 -> d319  [key=0, style=solid];
d322 -> d323  [key=0, style=solid];
d322 -> d155  [key=2, style=dotted];
d327 -> d328  [key=0, style=solid];
d327 -> d330  [key=0, style=solid];
d327 -> d43  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d331 -> d334  [key=0, style=solid];
d331 -> d335  [key=2, style=dotted];
d331 -> d336  [key=2, style=dotted];
d331 -> d337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d341 -> d342  [key=0, style=solid];
d353 -> d354  [key=0, style=solid];
d353 -> d378  [key=2, style=dotted];
d353 -> d379  [key=2, style=dotted];
d357 -> d358  [key=0, style=solid];
d357 -> d378  [key=2, style=dotted];
d357 -> d379  [key=2, style=dotted];
d368 -> d362  [key=0, style=solid];
d368 -> d382  [key=2, style=dotted];
d368 -> d378  [key=2, style=dotted];
d368 -> d379  [key=2, style=dotted];
d384 -> d385  [key=0, style=solid];
d384 -> d202  [key=2, style=dotted];
d386 -> d387  [key=0, style=solid];
d386 -> d391  [key=2, style=dotted];
d386 -> d202  [key=2, style=dotted];
d388 -> d389  [key=0, style=solid];
d388 -> d195  [key=2, style=dotted];
d389 -> d390  [key=0, style=solid];
d389 -> d209  [key=2, style=dotted];
d393 -> d394  [key=0, style=solid];
d393 -> d396  [key=0, style=solid];
d393 -> d132  [key=2, style=dotted];
d394 -> d395  [key=0, style=solid];
d394 -> d399  [key=2, style=dotted];
d395 -> d396  [key=0, style=solid];
d395 -> d162  [key=2, style=dotted];
d396 -> d397  [key=0, style=solid];
d397 -> d398  [key=0, style=solid];
d397 -> d44  [key=2, style=dotted];
d401 -> d402  [key=0, style=solid];
d401 -> d403  [key=2, style=dotted];
d434 -> d435  [key=0, style=solid];
d434 -> d222  [key=2, style=dotted];
d434 -> d436  [key=2, style=dotted];
d441 -> d442  [key=0, style=solid];
d444 -> d445  [key=0, style=solid];
d444 -> d465  [key=0, style=solid];
d446 -> d447  [key=0, style=solid];
d446 -> d495  [key=2, style=dotted];
d447 -> d448  [key=0, style=solid];
d447 -> d463  [key=0, style=solid];
d448 -> d449  [key=0, style=solid];
d448 -> d463  [key=0, style=solid];
d448 -> d451  [color=darkseagreen4, key=1, label=subscription, style=dashed];
d448 -> d452  [color=darkseagreen4, key=1, label=subscription, style=dashed];
d448 -> d461  [color=darkseagreen4, key=1, label=subscription, style=dashed];
d448 -> d462  [color=darkseagreen4, key=1, label=subscription, style=dashed];
d451 -> d448  [key=0, style=solid];
d451 -> d452  [key=0, style=solid];
d451 -> d269  [key=2, style=dotted];
d451 -> d453  [color=darkseagreen4, key=1, label=security, style=dashed];
d451 -> d457  [color=darkseagreen4, key=1, label=security, style=dashed];
d451 -> d461  [color=darkseagreen4, key=1, label=security, style=dashed];
d458 -> d458  [color=darkseagreen4, key=1, label=c, style=dashed];
d458 -> d459  [key=0, style=solid];
d458 -> d499  [key=2, style=dotted];
d458 -> d460  [color=darkseagreen4, key=1, label=cash, style=dashed];
d462 -> d448  [key=0, style=solid];
d462 -> d262  [key=2, style=dotted];
d463 -> d464  [key=0, style=solid];
d463 -> d503  [key=2, style=dotted];
d463 -> d256  [key=2, style=dotted];
d464 -> d465  [key=0, style=solid];
d464 -> d504  [key=2, style=dotted];
d464 -> d277  [key=2, style=dotted];
d465 -> d466  [key=0, style=solid];
d465 -> d468  [key=0, style=solid];
d466 -> d467  [key=0, style=solid];
d466 -> d376  [key=2, style=dotted];
d466 -> d495  [key=2, style=dotted];
d467 -> d468  [key=0, style=solid];
d467 -> d505  [key=2, style=dotted];
d469 -> d470  [key=0, style=solid];
d469 -> d473  [key=0, style=solid];
d471 -> d469  [key=0, style=solid];
d471 -> d472  [key=0, style=solid];
d471 -> d42  [key=2, style=dotted];
d472 -> d469  [key=0, style=solid];
d472 -> d195  [key=2, style=dotted];
d474 -> d475  [key=0, style=solid];
d474 -> d478  [key=0, style=solid];
d476 -> d474  [key=0, style=solid];
d476 -> d477  [key=0, style=solid];
d476 -> d42  [key=2, style=dotted];
d477 -> d474  [key=0, style=solid];
d477 -> d223  [key=2, style=dotted];
d479 -> d480  [key=0, style=solid];
d479 -> d483  [key=0, style=solid];
d481 -> d479  [key=0, style=solid];
d481 -> d482  [key=0, style=solid];
d481 -> d42  [key=2, style=dotted];
d482 -> d479  [key=0, style=solid];
d482 -> d209  [key=2, style=dotted];
d483 -> d484  [key=0, style=solid];
d483 -> d485  [key=0, style=solid];
d484 -> d483  [key=0, style=solid];
d484 -> d484  [color=darkseagreen4, key=1, label=pair, style=dashed];
d484 -> d313  [key=2, style=dotted];
d486 -> d487  [key=0, style=solid];
d486 -> d493  [key=0, style=solid];
d486 -> d166  [key=2, style=dotted];
d488 -> d486  [key=0, style=solid];
d488 -> d489  [key=0, style=solid];
d488 -> d42  [key=2, style=dotted];
d488 -> d490  [color=darkseagreen4, key=1, label=message, style=dashed];
d488 -> d492  [color=darkseagreen4, key=1, label=message, style=dashed];
d490 -> d486  [key=0, style=solid];
d490 -> d491  [key=0, style=solid];
d490 -> d506  [key=2, style=dotted];
d321 -> d323  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d321 -> d322  [key=0, style=solid];
d326 -> d327  [key=0, style=solid];
d326 -> d192  [key=2, style=dotted];
d158 -> d340  [key=0, style=solid];
d158 -> d342  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
d158 -> d344  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
d0 -> d1  [key=0, style=solid];
d10 -> d0  [color=blue, key=0, style=bold];
d16 -> d17  [key=0, style=solid];
d16 -> d18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
d16 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMessagingHandler", style=dashed];
d16 -> d20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
d16 -> d21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d16 -> d22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d24 -> d27  [key=0, style=solid];
d24 -> d28  [key=2, style=dotted];
d27 -> d16  [color=blue, key=0, style=bold];
d29 -> d30  [key=0, style=solid];
d36 -> d30  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d36 -> d45  [key=2, style=dotted];
d38 -> d30  [key=0, style=solid];
d38 -> d46  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d39 -> d47  [key=2, style=dotted];
d44 -> d48  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d41 -> d29  [color=blue, key=0, style=bold];
d48 -> d49  [key=0, style=solid];
d50 -> d51  [key=0, style=solid];
d50 -> d133  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d129 -> d130  [key=0, style=solid];
d131 -> d44  [color=blue, key=0, style=bold];
d55 -> d56  [key=0, style=solid];
d55 -> d134  [key=2, style=dotted];
d58 -> d56  [key=0, style=solid];
d58 -> d136  [key=2, style=dotted];
d59 -> d62  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d54 -> d62  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
d54 -> d92  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
d54 -> d13  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid];
d54 -> d58  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
d54 -> d59  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
d63 -> d92  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
d63 -> d13  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d63 -> d68  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
d64 -> d65  [key=0, style=solid];
d64 -> d141  [key=2, style=dotted];
d68 -> d66  [key=0, style=solid];
d68 -> d68  [color=darkseagreen4, key=1, label=chart, style=dashed];
d68 -> d143  [key=2, style=dotted];
d68 -> d144  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d67 -> d67  [color=darkseagreen4, key=1, label=chart, style=dashed];
d67 -> d142  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d69 -> d141  [key=2, style=dotted];
d73 -> d74  [key=0, style=solid];
d73 -> d76  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
d73 -> d92  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
d73 -> d104  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
d73 -> d145  [key=2, style=dotted];
d73 -> d75  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
d75 -> d76  [key=0, style=solid];
d75 -> d75  [color=darkseagreen4, key=1, label=upTime, style=dashed];
d75 -> d146  [key=2, style=dotted];
d78 -> d77  [key=0, style=solid];
d78 -> d150  [key=2, style=dotted];
d78 -> d151  [key=2, style=dotted];
d79 -> d80  [key=0, style=solid];
d79 -> d141  [key=2, style=dotted];
d167 -> d168  [key=0, style=solid];
d172 -> d173  [key=0, style=solid];
d82 -> d81  [key=0, style=solid];
d82 -> d82  [color=darkseagreen4, key=1, label=pair, style=dashed];
d82 -> d144  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d141  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d88 -> d152  [key=2, style=dotted];
d88 -> d144  [key=2, style=dotted];
d72 -> d85  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d86  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d87  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d89  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d90  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d91  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d92  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d104  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d13  [key=2, style=dotted];
d72 -> d73  [key=0, style=solid];
d72 -> d82  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d72 -> d88  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
d70 -> d92  [color=darkseagreen4, key=1, label=holdings, style=dashed];
d70 -> d104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
d70 -> d13  [key=2, style=dotted];
d70 -> d78  [color=darkseagreen4, key=1, label=holdings, style=dashed];
d70 -> d71  [key=0, style=solid];
d71 -> d92  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
d71 -> d104  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
d71 -> d13  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d93 -> d95  [key=0, style=solid];
d153 -> d188  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>", style=dashed];
d153 -> d175  [key=0, style=solid];
d153 -> d178  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
d96 -> d97  [key=0, style=solid];
d96 -> d141  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d98 -> d104  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
d98 -> d13  [key=2, style=dotted];
d98 -> d102  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
d102 -> d100  [key=0, style=solid];
d102 -> d144  [key=2, style=dotted];
d102 -> d102  [color=darkseagreen4, key=1, label=chart, style=dashed];
d101 -> d102  [key=0, style=solid];
d101 -> d101  [color=darkseagreen4, key=1, label=chart, style=dashed];
d101 -> d142  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d106 -> d141  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d109 -> d141  [key=2, style=dotted];
d111 -> d112  [key=0, style=solid];
d162 -> d331  [key=0, style=solid];
d116 -> d117  [key=0, style=solid];
d116 -> d141  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d122 -> d141  [key=2, style=dotted];
d119 -> d120  [key=0, style=solid];
d120 -> d121  [key=0, style=solid];
d120 -> d46  [key=2, style=dotted];
d125 -> d124  [key=0, style=solid];
d125 -> d125  [color=darkseagreen4, key=1, label=chart, style=dashed];
d125 -> d126  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d127 -> d141  [key=2, style=dotted];
d178 -> d181  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
d178 -> d179  [key=0, style=solid];
d178 -> d186  [key=0, style=solid];
d178 -> d180  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
d178 -> d182  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
d180 -> d181  [key=0, style=solid];
d180 -> d144  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d183 -> d184  [key=0, style=solid];
d183 -> d178  [key=0, style=solid];
d176 -> d184  [color=darkseagreen4, key=1, label=current, style=dashed];
d176 -> d187  [color=darkseagreen4, key=1, label=current, style=dashed];
d176 -> d13  [key=2, style=dotted];
d176 -> d180  [color=darkseagreen4, key=1, label=current, style=dashed];
d176 -> d183  [color=darkseagreen4, key=1, label=current, style=dashed];
d176 -> d177  [key=0, style=solid];
d176 -> d186  [color=darkseagreen4, key=1, label=current, style=dashed];
d177 -> d184  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
d177 -> d187  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
d177 -> d15  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d177 -> d189  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
d185 -> d187  [color=darkseagreen4, key=1, label=current, style=dashed];
d185 -> d13  [key=2, style=dotted];
d185 -> d178  [key=0, style=solid];
d185 -> d186  [color=darkseagreen4, key=1, label=current, style=dashed];
d186 -> d187  [key=0, style=solid];
d186 -> d188  [key=0, style=solid];
d189 -> d190  [key=0, style=solid];
d189 -> d194  [key=2, style=dotted];
d195 -> d196  [key=0, style=solid];
d195 -> d198  [color=darkseagreen4, key=1, label=string, style=dashed];
d195 -> d199  [color=darkseagreen4, key=1, label=string, style=dashed];
d197 -> d200  [key=0, style=solid];
d200 -> d195  [color=blue, key=0, style=bold];
d203 -> d218  [color=darkseagreen4, key=1, label=string, style=dashed];
d203 -> d216  [key=0, style=solid];
d204 -> d205  [key=0, style=solid];
d204 -> d206  [color=darkseagreen4, key=1, label=string, style=dashed];
d207 -> d204  [color=blue, key=0, style=bold];
d209 -> d210  [key=0, style=solid];
d209 -> d212  [color=darkseagreen4, key=1, label=string, style=dashed];
d209 -> d213  [color=darkseagreen4, key=1, label=string, style=dashed];
d211 -> d214  [key=0, style=solid];
d214 -> d209  [color=blue, key=0, style=bold];
d216 -> d217  [key=0, style=solid];
d216 -> d141  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d219 -> d141  [key=2, style=dotted];
d223 -> d224  [key=0, style=solid];
d223 -> d226  [color=darkseagreen4, key=1, label=string, style=dashed];
d223 -> d227  [color=darkseagreen4, key=1, label=string, style=dashed];
d225 -> d228  [key=0, style=solid];
d228 -> d223  [color=blue, key=0, style=bold];
d232 -> d233  [key=0, style=solid];
d232 -> d235  [key=2, style=dotted];
d234 -> d231  [color=blue, key=0, style=bold];
d236 -> d237  [key=0, style=solid];
d236 -> d238  [color=darkseagreen4, key=1, label=string, style=dashed];
d239 -> d236  [color=blue, key=0, style=bold];
d242 -> d243  [key=0, style=solid];
d242 -> d141  [key=2, style=dotted];
d241 -> d244  [color=darkseagreen4, key=1, label=string, style=dashed];
d241 -> d245  [color=darkseagreen4, key=1, label=string, style=dashed];
d241 -> d246  [color=darkseagreen4, key=1, label=string, style=dashed];
d241 -> d247  [color=darkseagreen4, key=1, label=string, style=dashed];
d241 -> d248  [color=darkseagreen4, key=1, label=string, style=dashed];
d241 -> d242  [key=0, style=solid];
d241 -> d249  [color=darkseagreen4, key=1, label=string, style=dashed];
d249 -> d250  [key=0, style=solid];
d249 -> d141  [key=2, style=dotted];
d256 -> d259  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d256 -> d257  [key=0, style=solid];
d256 -> d258  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d258 -> d259  [key=0, style=solid];
d258 -> d261  [key=2, style=dotted];
d258 -> d141  [key=2, style=dotted];
d260 -> d256  [color=blue, key=0, style=bold];
d262 -> d264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d262 -> d267  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d262 -> d263  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d265 -> d266  [key=0, style=solid];
d265 -> d270  [key=2, style=dotted];
d268 -> d262  [color=blue, key=0, style=bold];
d266 -> d267  [key=0, style=solid];
d266 -> d268  [key=0, style=solid];
d266 -> d271  [key=2, style=dotted];
d274 -> d275  [key=0, style=solid];
d276 -> d274  [color=blue, key=0, style=bold];
d278 -> d279  [key=0, style=solid];
d278 -> d141  [key=2, style=dotted];
d280 -> d281  [key=0, style=solid];
d280 -> d282  [color=darkseagreen4, key=1, label=update, style=dashed];
d280 -> d284  [color=darkseagreen4, key=1, label=update, style=dashed];
d280 -> d285  [color=darkseagreen4, key=1, label=update, style=dashed];
d280 -> d286  [color=darkseagreen4, key=1, label=update, style=dashed];
d280 -> d287  [key=0, style=solid];
d280 -> d283  [color=darkseagreen4, key=1, label=update, style=dashed];
d283 -> d284  [key=0, style=solid];
d283 -> d285  [color=darkseagreen4, key=1, label=series, style=dashed];
d283 -> d286  [color=darkseagreen4, key=1, label=series, style=dashed];
d283 -> d280  [key=0, style=solid];
d290 -> d291  [key=0, style=solid];
d290 -> d297  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d290 -> d298  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d292 -> d293  [key=0, style=solid];
d292 -> d296  [color=darkseagreen4, key=1, label=types, style=dashed];
d292 -> d15  [key=2, style=dotted];
d292 -> d294  [color=darkseagreen4, key=1, label=types, style=dashed];
d292 -> d295  [color=darkseagreen4, key=1, label=types, style=dashed];
d294 -> d293  [key=0, style=solid];
d294 -> d295  [key=0, style=solid];
d294 -> d302  [key=2, style=dotted];
d295 -> d293  [key=0, style=solid];
d295 -> d193  [key=2, style=dotted];
d297 -> d298  [key=0, style=solid];
d297 -> d303  [key=2, style=dotted];
d297 -> d299  [color=darkseagreen4, key=1, label=debug, style=dashed];
d231 -> d232  [key=0, style=solid];
d306 -> d309  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
d306 -> d307  [key=0, style=solid];
d308 -> d309  [key=0, style=solid];
d308 -> d47  [key=2, style=dotted];
d311 -> d306  [color=blue, key=0, style=bold];
d314 -> d315  [key=0, style=solid];
d314 -> d141  [key=2, style=dotted];
d313 -> d316  [color=darkseagreen4, key=1, label=string, style=dashed];
d313 -> d317  [color=darkseagreen4, key=1, label=string, style=dashed];
d313 -> d318  [color=darkseagreen4, key=1, label=string, style=dashed];
d313 -> d314  [key=0, style=solid];
d319 -> d320  [key=0, style=solid];
d319 -> d141  [key=2, style=dotted];
d328 -> d329  [key=0, style=solid];
d330 -> d321  [color=blue, key=0, style=bold];
d332 -> d333  [key=0, style=solid];
d334 -> d162  [color=blue, key=0, style=bold];
d337 -> d338  [key=0, style=solid];
d340 -> d341  [key=0, style=solid];
d340 -> d141  [key=2, style=dotted];
d342 -> d343  [key=0, style=solid];
d342 -> d344  [key=0, style=solid];
d344 -> d353  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d357  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d345  [key=0, style=solid];
d344 -> d348  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d349  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d351  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d352  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d355  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d356  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d358  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d361  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d362  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d364  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d365  [color=darkseagreen4, key=1, label=live, style=dashed];
d344 -> d367  [color=darkseagreen4, key=1, label=live, style=dashed];
d352 -> d353  [key=0, style=solid];
d354 -> d355  [key=0, style=solid];
d354 -> d375  [key=2, style=dotted];
d354 -> d376  [key=2, style=dotted];
d378 -> d434  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d358 -> d359  [key=0, style=solid];
d362 -> d368  [color=darkseagreen4, key=1, label=name, style=dashed];
d362 -> d363  [key=0, style=solid];
d362 -> d370  [key=0, style=solid];
d362 -> d367  [color=darkseagreen4, key=1, label=name, style=dashed];
d367 -> d368  [key=0, style=solid];
d367 -> d381  [key=2, style=dotted];
d363 -> d368  [color=darkseagreen4, key=1, label=result, style=dashed];
d363 -> d192  [key=2, style=dotted];
d363 -> d367  [color=darkseagreen4, key=1, label=result, style=dashed];
d363 -> d364  [key=0, style=solid];
d363 -> d365  [color=darkseagreen4, key=1, label=result, style=dashed];
d363 -> d366  [color=darkseagreen4, key=1, label=result, style=dashed];
d382 -> d437  [key=0, style=solid];
d383 -> d384  [key=0, style=solid];
d383 -> d386  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d383 -> d385  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d383 -> d387  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d385 -> d386  [key=0, style=solid];
d385 -> d47  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d387 -> d389  [color=darkseagreen4, key=1, label=message, style=dashed];
d390 -> d383  [color=blue, key=0, style=bold];
d392 -> d393  [key=0, style=solid];
d399 -> d444  [color=darkseagreen4, key=1, label=bool, style=dashed];
d399 -> d486  [color=darkseagreen4, key=1, label=bool, style=dashed];
d399 -> d443  [key=0, style=solid];
d398 -> d392  [color=blue, key=0, style=bold];
d400 -> d401  [key=0, style=solid];
d402 -> d400  [color=blue, key=0, style=bold];
d435 -> d378  [color=blue, key=0, style=bold];
d440 -> d441  [key=0, style=solid];
d442 -> d440  [color=blue, key=0, style=bold];
d443 -> d444  [key=0, style=solid];
d443 -> d446  [color=darkseagreen4, key=1, label=time, style=dashed];
d443 -> d462  [color=darkseagreen4, key=1, label=time, style=dashed];
d443 -> d463  [color=darkseagreen4, key=1, label=time, style=dashed];
d443 -> d465  [color=darkseagreen4, key=1, label=time, style=dashed];
d443 -> d466  [color=darkseagreen4, key=1, label=time, style=dashed];
d443 -> d461  [color=darkseagreen4, key=1, label=time, style=dashed];
d445 -> d446  [key=0, style=solid];
d445 -> d141  [key=2, style=dotted];
d449 -> d448  [key=0, style=solid];
d449 -> d450  [key=0, style=solid];
d452 -> d462  [color=darkseagreen4, key=1, label=price, style=dashed];
d452 -> d453  [key=0, style=solid];
d452 -> d454  [color=darkseagreen4, key=1, label=price, style=dashed];
d452 -> d456  [color=darkseagreen4, key=1, label=price, style=dashed];
d452 -> d461  [color=darkseagreen4, key=1, label=price, style=dashed];
d461 -> d462  [key=0, style=solid];
d461 -> d501  [key=2, style=dotted];
d461 -> d502  [key=2, style=dotted];
d450 -> d451  [key=0, style=solid];
d453 -> d454  [key=0, style=solid];
d453 -> d496  [key=2, style=dotted];
d453 -> d455  [color=darkseagreen4, key=1, label=last, style=dashed];
d457 -> d458  [key=0, style=solid];
d457 -> d498  [key=2, style=dotted];
d455 -> d458  [color=darkseagreen4, key=1, label=last, style=dashed];
d455 -> d457  [color=darkseagreen4, key=1, label=last, style=dashed];
d455 -> d455  [color=darkseagreen4, key=1, label=last, style=dashed];
d455 -> d456  [key=0, style=solid];
d455 -> d497  [key=2, style=dotted];
d455 -> d460  [color=darkseagreen4, key=1, label=last, style=dashed];
d459 -> d462  [key=0, style=solid];
d459 -> d460  [key=0, style=solid];
d460 -> d462  [key=0, style=solid];
d460 -> d500  [key=2, style=dotted];
d277 -> d278  [key=0, style=solid];
d277 -> d280  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
d468 -> d469  [key=0, style=solid];
d468 -> d134  [key=2, style=dotted];
d470 -> d471  [key=0, style=solid];
d473 -> d474  [key=0, style=solid];
d473 -> d134  [key=2, style=dotted];
d475 -> d476  [key=0, style=solid];
d478 -> d479  [key=0, style=solid];
d478 -> d134  [key=2, style=dotted];
d480 -> d481  [key=0, style=solid];
d485 -> d486  [key=0, style=solid];
d492 -> d486  [key=0, style=solid];
d492 -> d507  [key=2, style=dotted];
d492 -> d46  [key=2, style=dotted];
d487 -> d488  [key=0, style=solid];
d493 -> d494  [key=0, style=solid];
d493 -> d141  [key=2, style=dotted];
d489 -> d490  [key=0, style=solid];
d489 -> d47  [key=2, style=dotted];
d491 -> d492  [key=0, style=solid];
d373 -> d158  [color=blue, key=0, style=bold];
d366 -> d13  [key=2, style=dotted];
d366 -> d367  [key=0, style=solid];
d406 -> d13  [key=2, style=dotted];
d406 -> d407  [key=0, style=solid];
d406 -> d410  [color=darkseagreen4, key=1, label=charts, style=dashed];
d406 -> d415  [color=darkseagreen4, key=1, label=charts, style=dashed];
d51 -> d131  [key=0, style=solid];
d130 -> d131  [key=0, style=solid];
d130 -> d46  [key=2, style=dotted];
d61 -> d59  [key=0, style=solid];
d61 -> d61  [color=darkseagreen4, key=1, label=order, style=dashed];
d61 -> d138  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d60  [color=darkseagreen4, key=1, label=order, style=dashed];
d60 -> d137  [key=2, style=dotted];
d416 -> d148  [key=2, style=dotted];
d416 -> d417  [key=0, style=solid];
d416 -> d424  [key=2, style=dotted];
d416 -> d428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d416 -> d431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d413 -> d148  [key=2, style=dotted];
d413 -> d414  [key=0, style=solid];
d413 -> d422  [key=2, style=dotted];
d413 -> d425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d169 -> d167  [color=blue, key=0, style=bold];
d168 -> d170  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d168 -> d171  [key=2, style=dotted];
d174 -> d172  [color=blue, key=0, style=bold];
d173 -> d174  [key=0, style=solid];
d410 -> d144  [key=2, style=dotted];
d410 -> d410  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d410 -> d411  [key=0, style=solid];
d190 -> d153  [color=blue, key=0, style=bold];
d175 -> d183  [color=darkseagreen4, key=1, label=groupSize, style=dashed];
d175 -> d176  [key=0, style=solid];
d349 -> d155  [key=2, style=dotted];
d349 -> d358  [color=darkseagreen4, key=1, label=highResolutionCharts, style=dashed];
d349 -> d350  [key=0, style=solid];
d364 -> d155  [key=2, style=dotted];
d364 -> d365  [key=0, style=solid];
d365 -> d155  [key=2, style=dotted];
d365 -> d366  [key=0, style=solid];
d359 -> d159  [key=2, style=dotted];
d359 -> d160  [key=2, style=dotted];
d359 -> d360  [key=0, style=solid];
d359 -> d361  [color=darkseagreen4, key=1, label=start, style=dashed];
d360 -> d159  [key=2, style=dotted];
d360 -> d361  [key=0, style=solid];
d360 -> d380  [key=2, style=dotted];
d126 -> d161  [key=2, style=dotted];
d126 -> d125  [key=0, style=solid];
d126 -> d126  [color=darkseagreen4, key=1, label=series, style=dashed];
d126 -> d164  [key=2, style=dotted];
d126 -> d165  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d179 -> d182  [color=darkseagreen4, key=1, label=chart, style=dashed];
d179 -> d191  [key=2, style=dotted];
d220 -> d203  [color=blue, key=0, style=bold];
d307 -> d230  [key=2, style=dotted];
d307 -> d308  [key=0, style=solid];
d250 -> d241  [color=blue, key=0, style=bold];
d257 -> d258  [key=0, style=solid];
d257 -> d260  [key=0, style=solid];
d287 -> d141  [key=2, style=dotted];
d287 -> d288  [key=0, style=solid];
d301 -> d290  [color=blue, key=0, style=bold];
d298 -> d299  [key=0, style=solid];
d298 -> d303  [key=2, style=dotted];
d298 -> d300  [color=darkseagreen4, key=1, label=error, style=dashed];
d299 -> d300  [key=0, style=solid];
d299 -> d304  [key=2, style=dotted];
d320 -> d313  [color=blue, key=0, style=bold];
d329 -> d330  [key=0, style=solid];
d329 -> d46  [key=2, style=dotted];
d333 -> d334  [key=0, style=solid];
d333 -> d46  [key=2, style=dotted];
d339 -> d337  [color=blue, key=0, style=bold];
d338 -> d339  [key=0, style=solid];
d343 -> d373  [key=0, style=solid];
d345 -> d346  [key=0, style=solid];
d345 -> d369  [key=0, style=solid];
d348 -> d349  [key=0, style=solid];
d348 -> d374  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d351 -> d377  [key=2, style=dotted];
d355 -> d356  [key=0, style=solid];
d355 -> d377  [key=2, style=dotted];
d361 -> d362  [key=0, style=solid];
d361 -> d374  [key=2, style=dotted];
d370 -> d373  [key=0, style=solid];
d370 -> d141  [key=2, style=dotted];
d370 -> d371  [key=0, style=solid];
d438 -> d382  [color=blue, key=0, style=bold];
d437 -> d438  [key=0, style=solid];
d437 -> d439  [key=2, style=dotted];
d494 -> d399  [color=blue, key=0, style=bold];
d454 -> d461  [key=0, style=solid];
d454 -> d455  [key=0, style=solid];
d456 -> d457  [key=0, style=solid];
d288 -> d277  [color=blue, key=0, style=bold];
d350 -> d376  [key=2, style=dotted];
d350 -> d351  [key=0, style=solid];
d350 -> d375  [key=2, style=dotted];
d372 -> d373  [key=0, style=solid];
d372 -> d46  [key=2, style=dotted];
d405 -> d406  [key=0, style=solid];
d405 -> d413  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
d405 -> d165  [key=2, style=dotted];
d405 -> d426  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
d407 -> d408  [key=0, style=solid];
d407 -> d415  [key=0, style=solid];
d415 -> d416  [key=0, style=solid];
d369 -> d133  [key=2, style=dotted];
d369 -> d370  [key=0, style=solid];
d374 -> d416  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
d374 -> d405  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d374 -> d407  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
d374 -> d415  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
d374 -> d404  [key=0, style=solid];
d374 -> d429  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d374 -> d417  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
d417 -> d418  [key=0, style=solid];
d417 -> d419  [key=0, style=solid];
d428 -> d429  [key=0, style=solid];
d431 -> d432  [key=0, style=solid];
d404 -> d413  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
d404 -> d405  [key=0, style=solid];
d404 -> d165  [key=2, style=dotted];
d404 -> d426  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
d411 -> d413  [color=darkseagreen4, key=1, label=series, style=dashed];
d411 -> d407  [key=0, style=solid];
d411 -> d412  [key=0, style=solid];
d412 -> d413  [key=0, style=solid];
d412 -> d421  [key=2, style=dotted];
d412 -> d414  [color=darkseagreen4, key=1, label=newSeries, style=dashed];
d414 -> d411  [key=0, style=solid];
d414 -> d423  [key=2, style=dotted];
d425 -> d426  [key=0, style=solid];
d408 -> d410  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d408 -> d411  [color=darkseagreen4, key=1, label=chart, style=dashed];
d408 -> d408  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d408 -> d409  [key=0, style=solid];
d409 -> d410  [key=0, style=solid];
d409 -> d414  [color=darkseagreen4, key=1, label=newChart, style=dashed];
d409 -> d420  [key=2, style=dotted];
d300 -> d301  [key=0, style=solid];
d300 -> d305  [key=2, style=dotted];
d346 -> d348  [color=darkseagreen4, key=1, label=start, style=dashed];
d346 -> d351  [color=darkseagreen4, key=1, label=start, style=dashed];
d346 -> d355  [color=darkseagreen4, key=1, label=start, style=dashed];
d346 -> d347  [key=0, style=solid];
d347 -> d348  [key=0, style=solid];
d347 -> d351  [color=darkseagreen4, key=1, label=stop, style=dashed];
d347 -> d355  [color=darkseagreen4, key=1, label=stop, style=dashed];
d347 -> d164  [key=2, style=dotted];
d371 -> d372  [key=0, style=solid];
d426 -> d427  [key=0, style=solid];
d418 -> d138  [key=2, style=dotted];
d418 -> d417  [key=0, style=solid];
d418 -> d418  [color=darkseagreen4, key=1, label=order, style=dashed];
d419 -> d374  [color=blue, key=0, style=bold];
d429 -> d430  [key=0, style=solid];
d430 -> d428  [color=blue, key=0, style=bold];
d433 -> d431  [color=blue, key=0, style=bold];
d432 -> d433  [key=0, style=solid];
d427 -> d425  [color=blue, key=0, style=bold];
d509 -> d426  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
d510 -> d426  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
d511 -> d429  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d512 -> d429  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_25 -> m0_32  [color=green, key=1, label="System.Net.HttpWebRequest", style=dashed];
m0_25 -> m0_28  [key=0, style=solid];
m0_25 -> m0_39  [color=darkseagreen4, key=1, label="System.Net.HttpWebRequest", style=dashed];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_32 -> m0_45  [color=green, key=2, style=dotted];
m0_32 -> m0_34  [color=green, key=1, label=response, style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_44  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_46  [key=2, style=dotted];
m0_34 -> m0_47  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_28 -> m0_42  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_49  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_42  [key=0, style=solid];
m0_35 -> m0_30  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_48  [key=2, style=dotted];
m0_35 -> m0_42  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_40 -> m0_43  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_37  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_41  [key=0, style=solid];
m0_41 -> m0_30  [key=0, style=solid];
m0_41 -> m0_21  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m0_37 -> m0_37  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m0_43 -> m0_25  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [color=green, key=1, label=granularity, style=dashed];
m0_2 -> m0_18  [key=2, style=dotted];
m0_2 -> m0_9  [color=darkseagreen4, key=1, label=granularity, style=dashed];
m0_2 -> m0_13  [color=darkseagreen4, key=1, label=granularity, style=dashed];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_0 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_0 -> m0_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_19  [color=green, key=2, style=dotted];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_8  [color=darkseagreen4, key=1, label=windowStartTime, style=dashed];
m0_5 -> m0_9  [color=darkseagreen4, key=1, label=windowStartTime, style=dashed];
m0_5 -> m0_14  [color=darkseagreen4, key=1, label=windowStartTime, style=dashed];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=windowEndTime, style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label=windowEndTime, style=dashed];
m0_7 -> m0_14  [color=darkseagreen4, key=1, label=windowEndTime, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> d15  [key=2, style=dotted];
m0_1 -> m0_13  [color=darkseagreen4, key=1, label=returnData, style=dashed];
m0_1 -> m0_15  [color=darkseagreen4, key=1, label=returnData, style=dashed];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_22  [key=2, style=dotted];
m0_9 -> m0_23  [key=2, style=dotted];
m0_13 -> m0_26  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_27  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_20  [key=2, style=dotted];
m0_8 -> m0_21  [key=2, style=dotted];
m0_14 -> m0_4  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_12 -> m0_25  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_24  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_16 -> m0_0  [color=blue, key=0, style=bold];
m0_26 -> m0_55  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m0_26 -> m0_50  [key=0, style=solid];
m0_26 -> m0_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_26 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_55 -> m0_56  [color=green, key=0, style=solid];
m0_55 -> m0_62  [color=green, key=2, style=dotted];
m0_55 -> m0_63  [color=green, key=2, style=dotted];
m0_55 -> m0_60  [color=green, key=2, style=dotted];
m0_55 -> m0_61  [color=green, key=2, style=dotted];
m0_55 -> m0_64  [color=green, key=2, style=dotted];
m0_55 -> m0_19  [color=green, key=2, style=dotted];
m0_55 -> m0_26  [color=green, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector", style=bold];
m0_55 -> m0_50  [color=green, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector", style=bold];
m0_53 -> m0_55  [color=green, key=1, label=datapoint, style=dashed];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_57  [key=0, style=solid];
m0_54 -> m0_55  [color=green, key=0, style=solid];
m0_54 -> m0_60  [key=2, style=dotted];
m0_54 -> m0_61  [key=2, style=dotted];
m0_56 -> m0_53  [key=0, style=solid];
m0_56 -> m0_65  [key=2, style=dotted];
m0_50 -> m0_56  [color=darkseagreen4, key=1, label=returnData, style=dashed];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> d15  [key=2, style=dotted];
m0_50 -> m0_57  [color=darkseagreen4, key=1, label=returnData, style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_59  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_66  [key=2, style=dotted];
m0_57 -> m0_67  [key=2, style=dotted];
m0_57 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_26  [color=blue, key=0, style=bold];
m0_71 -> m0_13  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader", style=dashed];
m0_71 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloader", style=dashed];
m1_26 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=2, style=dotted];
m1_55 -> m1_58  [key=2, style=dotted];
m1_55 -> m1_59  [key=2, style=dotted];
m1_55 -> m1_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_55 -> m1_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_56 -> m1_26  [color=blue, key=0, style=bold];
m1_13 -> m1_19  [key=0, style=solid];
m1_13 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m1_13 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m1_13 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_16  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_13  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_26  [key=2, style=dotted];
m1_31 -> m1_27  [color=blue, key=0, style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Scheduling.ScheduledEvent>", style=dashed];
m1_62 -> m1_60  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_63  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_35 -> m1_34  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_33  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_17  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_7 -> m1_4  [key=0, style=solid];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_4  [key=0, style=solid];
m1_6 -> m1_14  [key=2, style=dotted];
m1_10 -> m1_8  [key=0, style=solid];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_53  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_48  [key=0, style=solid];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m1_39 -> m1_44  [color=red, key=1, label=scheduledEvent, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_39  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_40  [key=0, style=solid];
m1_42 -> m1_37  [key=2, style=dotted];
m1_44 -> m1_45  [color=red, key=0, style=solid];
m1_44 -> m1_46  [color=red, key=1, label=errorMessage, style=dashed];
m1_44 -> m1_47  [color=red, key=1, label=errorMessage, style=dashed];
m1_43 -> m1_44  [color=red, key=0, style=solid];
m1_45 -> m1_46  [color=red, key=0, style=solid];
m1_45 -> d133  [color=red, key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_51  [key=2, style=dotted];
m1_47 -> m1_40  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_48 -> m1_38  [color=blue, key=0, style=bold];
m1_66 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m1_66 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_236 -> m2_202  [color=darkorchid, key=3, label="Field variable string _debugMessage", style=bold];
m2_236 -> m2_211  [color=darkorchid, key=3, label="Field variable string _debugMessage", style=bold];
m2_318 -> m2_319  [key=0, style=solid];
m2_319 -> m2_318  [color=blue, key=0, style=bold];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_228 -> m2_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_228 -> m2_337  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_231  [key=0, style=solid];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_236  [key=2, style=dotted];
m2_233 -> m2_209  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_230 -> m2_235  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_233  [key=0, style=solid];
m2_232 -> m2_235  [key=0, style=solid];
m2_235 -> m2_228  [color=blue, key=0, style=bold];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_205  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_202 -> m2_206  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_202 -> m2_332  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_208  [key=2, style=dotted];
m2_203 -> m2_209  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_210  [key=2, style=dotted];
m2_205 -> m2_131  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_206  [key=0, style=solid];
m2_207 -> m2_202  [color=blue, key=0, style=bold];
m2_304 -> m2_305  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_308  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_53  [key=2, style=dotted];
m2_307 -> m2_304  [color=blue, key=0, style=bold];
m2_111 -> m2_135  [key=0, style=solid];
m2_111 -> m2_136  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m2_111 -> m2_138  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m2_111 -> m2_92  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.Packet packet", style=bold];
m2_111 -> m2_155  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.Packet packet", style=bold];
m2_135 -> m2_136  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [key=0, style=solid];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_138 -> m2_142  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_137 -> m2_146  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_143  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_142 -> m2_144  [key=0, style=solid];
m2_142 -> m2_146  [key=0, style=solid];
m2_142 -> m2_147  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_146  [key=0, style=solid];
m2_143 -> m2_148  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_55  [key=2, style=dotted];
m2_146 -> m2_111  [color=blue, key=0, style=bold];
m2_112 -> m2_119  [key=0, style=solid];
m2_112 -> m2_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m2_112 -> m2_122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_112 -> m2_123  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_112 -> m2_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>", style=dashed];
m2_112 -> m2_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m2_112 -> m2_74  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<string, QuantConnect.Chart> deltaCharts", style=bold];
m2_112 -> m2_63  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order> deltaOrders", style=bold];
m2_112 -> m2_79  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<string, string> runtimeStatistics", style=bold];
m2_112 -> m2_88  [color=darkorchid, key=3, label="Parameter variable decimal progress", style=bold];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_128  [key=2, style=dotted];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_119 -> m2_123  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_119 -> m2_124  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_119 -> m2_125  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_119 -> m2_126  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_123  [key=0, style=solid];
m2_120 -> m2_122  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_122 -> m2_120  [key=0, style=solid];
m2_122 -> m2_110  [key=2, style=dotted];
m2_122 -> m2_130  [key=2, style=dotted];
m2_122 -> m2_102  [key=2, style=dotted];
m2_122 -> m2_131  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_110  [key=2, style=dotted];
m2_123 -> m2_130  [key=2, style=dotted];
m2_123 -> m2_131  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_110  [key=2, style=dotted];
m2_124 -> m2_130  [key=2, style=dotted];
m2_124 -> m2_131  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_110  [key=2, style=dotted];
m2_125 -> m2_130  [key=2, style=dotted];
m2_125 -> m2_131  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_120  [key=0, style=solid];
m2_121 -> m2_129  [key=2, style=dotted];
m2_121 -> m2_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_127 -> m2_112  [color=blue, key=0, style=bold];
m2_265 -> m2_266  [key=0, style=solid];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_244  [key=2, style=dotted];
m2_267 -> m2_265  [color=blue, key=0, style=bold];
m2_268 -> m2_269  [key=0, style=solid];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_244  [key=2, style=dotted];
m2_270 -> m2_268  [color=blue, key=0, style=bold];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_263  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_261 -> m2_322  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_244  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_261  [color=blue, key=0, style=bold];
m2_293 -> m2_294  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_298  [key=0, style=solid];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_300  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_301  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_211  [key=2, style=dotted];
m2_299 -> m2_293  [color=blue, key=0, style=bold];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_221  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_218 -> m2_342  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_223  [key=2, style=dotted];
m2_219 -> m2_209  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_210  [key=2, style=dotted];
m2_221 -> m2_131  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_222  [key=0, style=solid];
m2_222 -> m2_218  [color=blue, key=0, style=bold];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_322  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
m2_310 -> m2_309  [color=blue, key=0, style=bold];
m2_199 -> m2_200  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_113  [color=blue, key=0, style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_116  [color=blue, key=0, style=bold];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_134 -> m2_132  [color=blue, key=0, style=bold];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_56  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_148  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_198 -> m2_196  [color=blue, key=0, style=bold];
m2_201 -> m2_199  [color=blue, key=0, style=bold];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_253  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_244 -> m2_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_244 -> m2_255  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_244 -> m2_8  [color=darkorchid, key=3, label="Parameter variable string chartName", style=bold];
m2_244 -> m2_269  [color=darkorchid, key=3, label="Parameter variable string seriesName", style=bold];
m2_244 -> m2_262  [color=darkorchid, key=3, label="Parameter variable string unit", style=bold];
m2_244 -> m2_266  [color=darkorchid, key=3, label="Parameter variable string unit", style=bold];
m2_244 -> m2_148  [color=darkorchid, key=3, label="Parameter variable int seriesIndex", style=bold];
m2_244 -> m2_261  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m2_244 -> m2_265  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m2_244 -> m2_268  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m2_245 -> m2_246  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_250  [key=0, style=solid];
m2_247 -> m2_257  [key=2, style=dotted];
m2_247 -> m2_251  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_247 -> m2_253  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_16  [key=2, style=dotted];
m2_248 -> m2_251  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_248 -> m2_253  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_17  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_254  [key=0, style=solid];
m2_251 -> m2_258  [key=2, style=dotted];
m2_251 -> m2_255  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_18  [key=2, style=dotted];
m2_252 -> m2_254  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_252 -> m2_255  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_19  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_256  [key=0, style=solid];
m2_254 -> m2_259  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_260  [key=2, style=dotted];
m2_255 -> m2_131  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_256 -> m2_244  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_20 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMessagingHandler", style=dashed];
m2_20 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m2_20 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m2_20 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_31  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_20  [color=blue, key=0, style=bold];
m2_300 -> m2_320  [key=0, style=solid];
m2_300 -> m2_323  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_300 -> m2_243  [color=darkorchid, key=3, label="Parameter variable bool forceProcess", style=bold];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_322  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_330  [key=0, style=solid];
m2_321 -> m2_347  [key=0, style=solid];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_324  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_322 -> m2_325  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_322 -> m2_329  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_348  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_349  [key=2, style=dotted];
m2_325 -> m2_261  [key=2, style=dotted];
m2_329 -> m2_327  [key=0, style=solid];
m2_329 -> m2_309  [key=2, style=dotted];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_351  [key=2, style=dotted];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_350  [key=2, style=dotted];
m2_326 -> m2_271  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_330  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_328  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_335  [key=0, style=solid];
m2_332 -> m2_333  [key=0, style=solid];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_351  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_331  [key=0, style=solid];
m2_333 -> m2_52  [key=2, style=dotted];
m2_334 -> m2_331  [key=0, style=solid];
m2_334 -> m2_202  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_340  [key=0, style=solid];
m2_337 -> m2_338  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_351  [key=2, style=dotted];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_336  [key=0, style=solid];
m2_338 -> m2_52  [key=2, style=dotted];
m2_339 -> m2_336  [key=0, style=solid];
m2_339 -> m2_228  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_345  [key=0, style=solid];
m2_342 -> m2_343  [key=0, style=solid];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_347  [key=0, style=solid];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_341  [key=0, style=solid];
m2_343 -> m2_52  [key=2, style=dotted];
m2_344 -> m2_341  [key=0, style=solid];
m2_344 -> m2_218  [key=2, style=dotted];
m2_346 -> m2_345  [key=0, style=solid];
m2_346 -> m2_314  [key=2, style=dotted];
m2_346 -> m2_346  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_347 -> m2_300  [color=blue, key=0, style=bold];
m2_54 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [key=0, style=solid];
m2_60 -> m2_101  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [key=0, style=solid];
m2_62 -> m2_101  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_102  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [key=0, style=solid];
m2_64 -> m2_103  [key=2, style=dotted];
m2_64 -> m2_64  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_64 -> m2_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_64 -> m2_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_64 -> m2_68  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m2_64 -> m2_96  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_104  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_112  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_55  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_74  [key=0, style=solid];
m2_71 -> m2_105  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_102  [key=2, style=dotted];
m2_74 -> m2_78  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m2_74 -> m2_96  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_55  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_78 -> m2_76  [key=0, style=solid];
m2_78 -> m2_106  [key=2, style=dotted];
m2_78 -> m2_19  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_79  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_77  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_102  [key=2, style=dotted];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_83  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_84  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_85  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_86  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_87  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_91  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_79 -> m2_96  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m2_80 -> m2_81  [key=0, style=solid];
m2_82 -> m2_81  [key=0, style=solid];
m2_82 -> m2_19  [key=2, style=dotted];
m2_82 -> m2_82  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_107  [key=2, style=dotted];
m2_83 -> m2_19  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_107  [key=2, style=dotted];
m2_84 -> m2_19  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_107  [key=2, style=dotted];
m2_85 -> m2_19  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_107  [key=2, style=dotted];
m2_86 -> m2_19  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_107  [key=2, style=dotted];
m2_87 -> m2_19  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_109  [key=2, style=dotted];
m2_91 -> m2_102  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_108  [key=2, style=dotted];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=progress, style=dashed];
m2_88 -> m2_96  [color=darkseagreen4, key=1, label=progress, style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_91  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_110  [key=2, style=dotted];
m2_92 -> m2_95  [color=darkseagreen4, key=1, label=complete, style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [color=darkseagreen4, key=1, label=progress, style=dashed];
m2_90 -> m2_96  [color=darkseagreen4, key=1, label=progress, style=dashed];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_111  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_105  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_99  [key=0, style=solid];
m2_97 -> m2_101  [key=0, style=solid];
m2_98 -> m2_97  [key=0, style=solid];
m2_98 -> m2_53  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_55  [key=2, style=dotted];
m2_101 -> m2_54  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_43  [key=0, style=solid];
m2_36 -> m2_46  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_56  [key=2, style=dotted];
m2_38 -> m2_42  [key=0, style=solid];
m2_38 -> m2_51  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=0, style=solid];
m2_40 -> m2_52  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_53  [key=2, style=dotted];
m2_42 -> m2_36  [key=0, style=solid];
m2_42 -> m2_54  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_55  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_57  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_58  [key=2, style=dotted];
m2_50 -> m2_33  [color=blue, key=0, style=bold];
m2_193 -> m2_224  [key=0, style=solid];
m2_193 -> m2_175  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.SecurityType> types", style=bold];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_227  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_209  [key=2, style=dotted];
m2_226 -> m2_193  [color=blue, key=0, style=bold];
m2_302 -> m2_303  [key=0, style=solid];
m2_303 -> m2_302  [color=blue, key=0, style=bold];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_273  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m2_272 -> m2_273  [key=0, style=solid];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_287  [key=0, style=solid];
m2_273 -> m2_275  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_273 -> m2_276  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_273 -> m2_277  [color=darkseagreen4, key=1, label=update, style=dashed];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_276  [key=0, style=solid];
m2_274 -> m2_288  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_16  [key=2, style=dotted];
m2_275 -> m2_17  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_273  [key=0, style=solid];
m2_276 -> m2_278  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_279  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_280  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_281  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_282  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_283  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_276 -> m2_286  [color=darkseagreen4, key=1, label=series, style=dashed];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_279  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_277 -> m2_280  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_277 -> m2_286  [color=darkseagreen4, key=1, label=chart, style=dashed];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_280  [key=0, style=solid];
m2_278 -> m2_289  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_18  [key=2, style=dotted];
m2_279 -> m2_19  [key=2, style=dotted];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_284  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m2_280 -> m2_285  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_276  [key=0, style=solid];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_286  [key=0, style=solid];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_290  [key=2, style=dotted];
m2_283 -> m2_285  [color=darkseagreen4, key=1, label=lastValue, style=dashed];
m2_286 -> m2_276  [key=0, style=solid];
m2_286 -> m2_292  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_291  [key=2, style=dotted];
m2_285 -> m2_276  [key=0, style=solid];
m2_285 -> m2_131  [key=2, style=dotted];
m2_287 -> m2_271  [color=blue, key=0, style=bold];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_182  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_164 -> m2_183  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_165 -> m2_166  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> d303  [key=2, style=dotted];
m2_182 -> m2_57  [key=2, style=dotted];
m2_183 -> m2_186  [key=0, style=solid];
m2_183 -> d303  [key=2, style=dotted];
m2_183 -> m2_58  [key=2, style=dotted];
m2_166 -> m2_167  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [color=darkseagreen4, key=1, label=resampleMinutes, style=dashed];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_187  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_188  [key=2, style=dotted];
m2_169 -> m2_56  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_189  [key=2, style=dotted];
m2_170 -> m2_190  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_191  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_174  [key=0, style=solid];
m2_173 -> m2_174  [key=0, style=solid];
m2_174 -> m2_175  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_128  [key=2, style=dotted];
m2_175 -> m2_178  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_175 -> m2_179  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_175 -> m2_180  [color=darkseagreen4, key=1, label=types, style=dashed];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_180  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_176  [key=0, style=solid];
m2_178 -> m2_192  [key=2, style=dotted];
m2_179 -> m2_176  [key=0, style=solid];
m2_179 -> m2_131  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_193  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_177  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_177 -> m2_179  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_184  [key=0, style=solid];
m2_181 -> m2_194  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> d303  [key=2, style=dotted];
m2_184 -> m2_57  [key=2, style=dotted];
m2_184 -> m2_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> d303  [key=2, style=dotted];
m2_185 -> m2_58  [key=2, style=dotted];
m2_185 -> m2_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_186 -> m2_164  [color=blue, key=0, style=bold];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_211 -> m2_215  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_217  [key=2, style=dotted];
m2_212 -> m2_209  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_210  [key=2, style=dotted];
m2_214 -> m2_131  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_215  [key=0, style=solid];
m2_216 -> m2_211  [color=blue, key=0, style=bold];
m2_313 -> m2_313  [color=darkorchid, key=3, label="Field variable int _debugMessageLength", style=bold];
m2_148 -> m2_148  [color=darkorchid, key=3, label="Field variable double _lastDaysProcessed", style=bold];
m2_148 -> m2_16  [color=darkorchid, key=3, label="Field variable double _lastDaysProcessed", style=bold];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_237 -> m2_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_242  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_243  [key=2, style=dotted];
m2_239 -> m2_209  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_241 -> m2_237  [color=blue, key=0, style=bold];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_315 -> m2_316  [key=0, style=solid];
m2_316 -> m2_317  [key=0, style=solid];
m2_317 -> m2_314  [color=blue, key=0, style=bold];
m2_242 -> m2_311  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_313  [key=2, style=dotted];
m2_312 -> m2_242  [color=blue, key=0, style=bold];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Statistics.StatisticsResults", style=dashed];
m2_149 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_150 -> m2_151  [key=0, style=solid];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_110  [key=2, style=dotted];
m2_155 -> m2_109  [key=2, style=dotted];
m2_155 -> m2_157  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_162  [key=2, style=dotted];
m2_151 -> m2_155  [color=darkseagreen4, key=1, label=charts, style=dashed];
m2_152 -> m2_153  [key=0, style=solid];
m2_154 -> m2_153  [key=0, style=solid];
m2_154 -> m2_163  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_111  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_53  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_161  [key=0, style=solid];
m2_158 -> m2_56  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_55  [key=2, style=dotted];
m2_161 -> m2_149  [color=blue, key=0, style=bold];
m2_243 -> m2_243  [color=darkorchid, key=3, label="Field variable bool _isActive", style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_12  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_17  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_18  [key=2, style=dotted];
m2_9 -> m2_19  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_18  [key=2, style=dotted];
m2_10 -> m2_19  [key=2, style=dotted];
m2_11 -> m2_0  [color=blue, key=0, style=bold];
m2_352 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_122  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_135  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_141  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_150  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_156  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_157  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_165  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_166  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_170  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_171  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_174  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_176  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_203  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_204  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_262  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_263  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_266  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_269  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_272  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_274  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_275  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_277  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_294  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_295  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_297  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_298  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_306  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_311  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_316  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_320  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_322  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_323  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_325  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_326  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_329  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_331  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_334  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_338  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_341  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_343  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_345  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m2_352 -> m2_346  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_25  [key=2, style=dotted];
m3_2 -> m3_15  [color=darkseagreen4, key=1, label=config, style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_26  [key=2, style=dotted];
m3_3 -> m3_27  [key=2, style=dotted];
m3_3 -> m3_28  [key=2, style=dotted];
m3_3 -> m3_29  [key=2, style=dotted];
m3_3 -> m3_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_3 -> m3_15  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_37  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_30  [key=2, style=dotted];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=mapFileProvider, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_32  [key=2, style=dotted];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=mapFileResolver, style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_31  [key=2, style=dotted];
m3_5 -> m3_8  [color=darkseagreen4, key=1, label=factorFileProvider, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_34  [key=2, style=dotted];
m3_8 -> m3_16  [color=darkseagreen4, key=1, label=factory, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_33  [key=2, style=dotted];
m3_7 -> m3_16  [color=darkseagreen4, key=1, label=fileProvider, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_38  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_35  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_22  [color=darkseagreen4, key=1, label=ramUsageBeforeLoop, style=dashed];
m3_10 -> m3_23  [color=darkseagreen4, key=1, label=ramUsageBeforeLoop, style=dashed];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_36  [key=2, style=dotted];
m3_11 -> m3_15  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_11 -> m3_18  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_41  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_42  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m3_12 -> m3_12  [color=darkorchid, key=3, label="Local variable int iterations", style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> d164  [key=2, style=dotted];
m3_18 -> m3_18  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_13 -> m3_13  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_20  [key=0, style=solid];
m3_19 -> m3_14  [key=0, style=solid];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_35  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_39  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label=ramUsageAfterLoop, style=dashed];
m3_24 -> m3_0  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_19  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_13 -> m4_18  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_16  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_11  [color=blue, key=0, style=bold];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_128  [key=2, style=dotted];
m4_125 -> m4_129  [key=2, style=dotted];
m4_125 -> m4_125  [color=darkseagreen4, key=1, label=rate, style=dashed];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_129  [key=2, style=dotted];
m4_127 -> m4_123  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_113  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_113  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_113  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_94  [color=blue, key=0, style=bold];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m4_99 -> m4_97  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_102 -> m4_100  [color=blue, key=0, style=bold];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_103  [color=blue, key=0, style=bold];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_109  [key=2, style=dotted];
m4_108 -> m4_106  [color=blue, key=0, style=bold];
m4_112 -> m4_110  [color=blue, key=0, style=bold];
m4_116 -> m4_114  [color=blue, key=0, style=bold];
m4_119 -> m4_117  [color=blue, key=0, style=bold];
m4_121 -> m4_122  [key=0, style=solid];
m4_122 -> m4_120  [color=blue, key=0, style=bold];
m4_137 -> m4_63  [color=darkorchid, key=3, label="Property variable QuantConnect.Securities.Security ConversionRateSecurity", style=bold];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_130 -> m4_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_130 -> m4_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_131 -> m4_132  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_134  [key=0, style=solid];
m4_132 -> m4_136  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_137  [key=2, style=dotted];
m4_135 -> m4_130  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_24  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_7  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_10  [key=2, style=dotted];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_65  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_61 -> m4_67  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_61 -> m4_68  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_28 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_28 -> m4_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_28 -> m4_44  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_28 -> m4_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_28 -> m4_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_28 -> m4_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_28 -> m4_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_28 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_28 -> m4_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m4_28 -> m4_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m4_28 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarketHoursDatabase", style=dashed];
m4_28 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m4_28 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_28 -> m4_33  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_28 -> m4_63  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security EnsureCurrencyDataFeed", style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_34  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_44  [key=0, style=solid];
m4_36 -> d148  [key=2, style=dotted];
m4_36 -> m4_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_36 -> m4_40  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_36 -> m4_41  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_38 -> m4_39  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_76  [key=2, style=dotted];
m4_44 -> m4_77  [key=2, style=dotted];
m4_44 -> m4_78  [key=2, style=dotted];
m4_44 -> m4_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_48  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_49  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_44 -> m4_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_76  [key=2, style=dotted];
m4_49 -> m4_81  [key=2, style=dotted];
m4_49 -> m4_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_76  [key=2, style=dotted];
m4_50 -> m4_82  [key=2, style=dotted];
m4_50 -> m4_83  [key=2, style=dotted];
m4_50 -> m4_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_50 -> m4_62  [color=darkseagreen4, key=1, label=minimumResolution, style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_84  [key=2, style=dotted];
m4_56 -> m4_58  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_56 -> m4_59  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_56 -> m4_65  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_56 -> m4_67  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_56 -> m4_68  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=0, style=solid];
m4_58 -> m4_85  [key=2, style=dotted];
m4_58 -> m4_65  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_58 -> m4_67  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_58 -> m4_68  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_87  [key=2, style=dotted];
m4_60 -> m4_62  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_80  [key=2, style=dotted];
m4_62 -> m4_65  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_62 -> m4_67  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_62 -> m4_68  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_62 -> m4_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_91  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_34 -> m4_53  [color=darkseagreen4, key=1, label=normal, style=dashed];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_33 -> m4_74  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_40  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_35 -> m4_53  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_35 -> m4_54  [color=darkseagreen4, key=1, label=invert, style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_40  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_52  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_36  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_39 -> m4_74  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_74  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=0, style=solid];
m4_45 -> m4_79  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_80  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=0, style=solid];
m4_47 -> m4_79  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_80  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_73  [key=0, style=solid];
m4_52 -> m4_54  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_55  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_56  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_60  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_62  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_52 -> m4_71  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_62  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_8  [key=2, style=dotted];
m4_73 -> m4_93  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_64  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_55 -> m4_66  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_59 -> m4_74  [key=0, style=solid];
m4_59 -> m4_86  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_92  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_65 -> m4_69  [key=0, style=solid];
m4_65 -> m4_88  [key=2, style=dotted];
m4_65 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_65 -> m4_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_67 -> m4_69  [key=0, style=solid];
m4_67 -> m4_89  [key=2, style=dotted];
m4_67 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_67 -> m4_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_90  [key=2, style=dotted];
m4_68 -> m4_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_68 -> m4_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_72 -> m4_74  [key=0, style=solid];
m4_74 -> m4_28  [color=blue, key=0, style=bold];
m4_138 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_115  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_124  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_138 -> m4_126  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m4_139 -> m4_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_139 -> m4_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_139 -> m4_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m4_140 -> m4_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_140 -> m4_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m4_140 -> m4_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_29  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=2, style=dotted];
m5_27 -> m5_25  [color=blue, key=0, style=bold];
m5_44 -> m5_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_29  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_47  [key=2, style=dotted];
m5_46 -> m5_44  [color=blue, key=0, style=bold];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_20  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_29  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=2, style=dotted];
m5_38 -> m5_36  [color=blue, key=0, style=bold];
m5_104 -> m5_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_107  [key=2, style=dotted];
m5_106 -> m5_104  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_16  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_18  [key=2, style=dotted];
m5_15 -> m5_11  [key=0, style=solid];
m5_15 -> m5_19  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_16 -> m5_9  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_77 -> m5_55  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_84  [key=2, style=dotted];
m5_78 -> m5_57  [key=2, style=dotted];
m5_80 -> m5_58  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=0, style=solid];
m5_81 -> m5_59  [key=2, style=dotted];
m5_81 -> m5_60  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_82 -> m5_79  [key=0, style=solid];
m5_82 -> m5_85  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [color=darkseagreen4, key=1, label=update, style=dashed];
m5_76 -> m5_80  [color=darkseagreen4, key=1, label=update, style=dashed];
m5_76 -> m5_81  [color=darkseagreen4, key=1, label=update, style=dashed];
m5_76 -> m5_82  [color=darkseagreen4, key=1, label=update, style=dashed];
m5_76 -> m5_83  [key=0, style=solid];
m5_76 -> m5_79  [color=darkseagreen4, key=1, label=update, style=dashed];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [color=darkseagreen4, key=1, label=series, style=dashed];
m5_79 -> m5_82  [color=darkseagreen4, key=1, label=series, style=dashed];
m5_79 -> m5_76  [key=0, style=solid];
m5_83 -> m5_75  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_29  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_43  [key=2, style=dotted];
m5_42 -> m5_40  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> d12  [key=2, style=dotted];
m5_3 -> m5_3  [color=darkorchid, key=3, label="method methodReturn bool HasSufficientBuyingPowerForOrder", style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=2, style=dotted];
m5_3 -> m5_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_48  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_74 -> m5_72  [color=blue, key=0, style=bold];
m5_63 -> m5_64  [key=0, style=solid];
m5_64 -> m5_48  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_63  [color=blue, key=0, style=bold];
m5_100 -> m5_101  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_102 -> m5_100  [color=blue, key=0, style=bold];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_48  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_69  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [color=green, key=0, style=solid];
m5_31 -> m5_32  [color=green, key=0, style=solid];
m5_31 -> m5_33  [color=green, key=2, style=dotted];
m5_31 -> m5_29  [color=green, key=2, style=dotted];
m5_32 -> m5_30  [color=blue, key=0, style=bold];
m5_48 -> m5_49  [color=green, key=0, style=solid];
m5_48 -> m5_51  [color=green, key=1, label=string, style=dashed];
m5_48 -> m5_52  [color=green, key=1, label=string, style=dashed];
m5_48 -> m5_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_48 -> m5_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_49 -> m5_50  [color=green, key=0, style=solid];
m5_49 -> m5_51  [color=green, key=0, style=solid];
m5_49 -> m5_55  [color=green, key=2, style=dotted];
m5_50 -> m5_51  [color=green, key=0, style=solid];
m5_50 -> m5_56  [key=2, style=dotted];
m5_50 -> m5_57  [key=2, style=dotted];
m5_51 -> m5_52  [color=green, key=0, style=solid];
m5_51 -> m5_53  [color=green, key=0, style=solid];
m5_51 -> m5_58  [color=green, key=2, style=dotted];
m5_52 -> m5_53  [color=green, key=0, style=solid];
m5_52 -> m5_59  [color=green, key=2, style=dotted];
m5_52 -> m5_60  [color=green, key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_61  [key=2, style=dotted];
m5_53 -> m5_62  [key=2, style=dotted];
m5_54 -> m5_48  [color=blue, key=0, style=bold];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_48  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_110 -> m5_31  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_49  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_51  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_52  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m5_110 -> m5_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_8  [key=2, style=dotted];
m9_32 -> m9_34  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_10  [key=2, style=dotted];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_33 -> m9_36  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_33 -> m9_37  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_9  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> d503  [key=2, style=dotted];
m9_35 -> m9_12  [key=2, style=dotted];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_35 -> m9_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_35 -> m9_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_35 -> m9_39  [color=darkorchid, key=3, label="method methodReturn string ConvertOrderType", style=bold];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_13  [key=2, style=dotted];
m9_36 -> m9_38  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_14  [key=2, style=dotted];
m9_37 -> m9_12  [key=2, style=dotted];
m9_37 -> m9_43  [key=2, style=dotted];
m9_37 -> m9_41  [key=0, style=solid];
m9_37 -> m9_42  [key=2, style=dotted];
m9_38 -> m9_31  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_8  [key=2, style=dotted];
m9_143 -> m9_145  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_143 -> m9_146  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_10  [key=2, style=dotted];
m9_144 -> m9_147  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_144 -> m9_148  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_144 -> m9_149  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_47  [key=2, style=dotted];
m9_145 -> m9_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_9  [key=2, style=dotted];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> d503  [key=2, style=dotted];
m9_147 -> m9_12  [key=2, style=dotted];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_13  [key=2, style=dotted];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_14  [key=2, style=dotted];
m9_149 -> m9_12  [key=2, style=dotted];
m9_150 -> m9_142  [color=blue, key=0, style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_8  [key=2, style=dotted];
m9_24 -> m9_26  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_9  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_10  [key=2, style=dotted];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_26 -> m9_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> d503  [key=2, style=dotted];
m9_27 -> m9_12  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_13  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_14  [key=2, style=dotted];
m9_29 -> m9_12  [key=2, style=dotted];
m9_30 -> m9_23  [color=blue, key=0, style=bold];
m9_168 -> m9_169  [key=0, style=solid];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_8  [key=2, style=dotted];
m9_169 -> m9_171  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_169 -> m9_172  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_47  [key=2, style=dotted];
m9_170 -> m9_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_10  [key=2, style=dotted];
m9_171 -> m9_173  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_171 -> m9_174  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_171 -> m9_175  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_9  [key=2, style=dotted];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> d503  [key=2, style=dotted];
m9_173 -> m9_12  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_13  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_14  [key=2, style=dotted];
m9_175 -> m9_12  [key=2, style=dotted];
m9_176 -> m9_168  [color=blue, key=0, style=bold];
m9_155 -> m9_156  [key=0, style=solid];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_8  [key=2, style=dotted];
m9_156 -> m9_158  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_156 -> m9_159  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_10  [key=2, style=dotted];
m9_157 -> m9_160  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_157 -> m9_161  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_157 -> m9_162  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_9  [key=2, style=dotted];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_47  [key=2, style=dotted];
m9_159 -> m9_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> d503  [key=2, style=dotted];
m9_160 -> m9_12  [key=2, style=dotted];
m9_161 -> m9_162  [key=0, style=solid];
m9_161 -> m9_13  [key=2, style=dotted];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_14  [key=2, style=dotted];
m9_162 -> m9_12  [key=2, style=dotted];
m9_163 -> m9_155  [color=blue, key=0, style=bold];
m9_78 -> m9_79  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_8  [key=2, style=dotted];
m9_79 -> m9_81  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_10  [key=2, style=dotted];
m9_80 -> m9_82  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_80 -> m9_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_80 -> m9_84  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_47  [key=2, style=dotted];
m9_81 -> m9_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> d503  [key=2, style=dotted];
m9_82 -> m9_12  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_13  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_14  [key=2, style=dotted];
m9_84 -> m9_12  [key=2, style=dotted];
m9_85 -> m9_78  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_8  [key=2, style=dotted];
m9_67 -> m9_69  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_47  [key=2, style=dotted];
m9_68 -> m9_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_10  [key=2, style=dotted];
m9_69 -> m9_71  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_69 -> m9_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> d503  [key=2, style=dotted];
m9_70 -> m9_12  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_13  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_14  [key=2, style=dotted];
m9_72 -> m9_12  [key=2, style=dotted];
m9_73 -> m9_66  [color=blue, key=0, style=bold];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_244  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_52  [key=2, style=dotted];
m9_50 -> m9_51  [color=green, key=0, style=solid];
m9_50 -> m9_53  [key=2, style=dotted];
m9_51 -> m9_48  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [color=green, key=0, style=solid];
m9_51 -> m9_53  [color=green, key=2, style=dotted];
m9_51 -> m9_43  [color=green, key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_52  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_53  [key=2, style=dotted];
m9_65 -> m9_62  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_76  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_52  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_53  [key=2, style=dotted];
m9_77 -> m9_74  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_52  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_53  [key=2, style=dotted];
m9_89 -> m9_86  [color=blue, key=0, style=bold];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_101  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_52  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_53  [key=2, style=dotted];
m9_102 -> m9_99  [color=blue, key=0, style=bold];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_52  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_53  [key=2, style=dotted];
m9_115 -> m9_112  [color=blue, key=0, style=bold];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_127  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_52  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_53  [key=2, style=dotted];
m9_128 -> m9_125  [color=blue, key=0, style=bold];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_140  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_52  [key=2, style=dotted];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_53  [key=2, style=dotted];
m9_141 -> m9_138  [color=blue, key=0, style=bold];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_153  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_52  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_53  [key=2, style=dotted];
m9_154 -> m9_151  [color=blue, key=0, style=bold];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_166  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_52  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_53  [key=2, style=dotted];
m9_167 -> m9_164  [color=blue, key=0, style=bold];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_52  [key=2, style=dotted];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_53  [key=2, style=dotted];
m9_180 -> m9_177  [color=blue, key=0, style=bold];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_192  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_52  [key=2, style=dotted];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_53  [key=2, style=dotted];
m9_193 -> m9_190  [color=blue, key=0, style=bold];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_205  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_52  [key=2, style=dotted];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_53  [key=2, style=dotted];
m9_206 -> m9_203  [color=blue, key=0, style=bold];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_52  [key=2, style=dotted];
m9_218 -> m9_219  [key=0, style=solid];
m9_218 -> m9_53  [key=2, style=dotted];
m9_219 -> m9_216  [color=blue, key=0, style=bold];
m9_229 -> m9_230  [key=0, style=solid];
m9_229 -> m9_231  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_52  [key=2, style=dotted];
m9_231 -> m9_232  [key=0, style=solid];
m9_231 -> m9_53  [key=2, style=dotted];
m9_232 -> m9_229  [color=blue, key=0, style=bold];
m9_243 -> m9_244  [key=0, style=solid];
m9_243 -> m9_52  [key=2, style=dotted];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_53  [key=2, style=dotted];
m9_245 -> m9_242  [color=blue, key=0, style=bold];
m9_194 -> m9_195  [key=0, style=solid];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_8  [key=2, style=dotted];
m9_195 -> m9_197  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_195 -> m9_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_196 -> m9_197  [key=0, style=solid];
m9_196 -> m9_9  [key=2, style=dotted];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_47  [key=2, style=dotted];
m9_197 -> m9_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_10  [key=2, style=dotted];
m9_198 -> m9_200  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_198 -> m9_201  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> d503  [key=2, style=dotted];
m9_199 -> m9_12  [key=2, style=dotted];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_13  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_14  [key=2, style=dotted];
m9_201 -> m9_12  [key=2, style=dotted];
m9_202 -> m9_194  [color=blue, key=0, style=bold];
m9_116 -> m9_117  [key=0, style=solid];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_8  [key=2, style=dotted];
m9_117 -> m9_119  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_117 -> m9_120  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_9  [key=2, style=dotted];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_47  [key=2, style=dotted];
m9_119 -> m9_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_10  [key=2, style=dotted];
m9_120 -> m9_122  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_120 -> m9_123  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> d503  [key=2, style=dotted];
m9_121 -> m9_12  [key=2, style=dotted];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_13  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_14  [key=2, style=dotted];
m9_123 -> m9_12  [key=2, style=dotted];
m9_124 -> m9_116  [color=blue, key=0, style=bold];
m9_181 -> m9_182  [key=0, style=solid];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_8  [key=2, style=dotted];
m9_182 -> m9_184  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_182 -> m9_185  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_47  [key=2, style=dotted];
m9_183 -> m9_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_9  [key=2, style=dotted];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_10  [key=2, style=dotted];
m9_185 -> m9_187  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_185 -> m9_188  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> d503  [key=2, style=dotted];
m9_186 -> m9_12  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_13  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_14  [key=2, style=dotted];
m9_188 -> m9_12  [key=2, style=dotted];
m9_189 -> m9_181  [color=blue, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [key=2, style=dotted];
m9_40 -> m9_44  [key=2, style=dotted];
m9_40 -> m9_8  [key=2, style=dotted];
m9_39 -> m9_41  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_41 -> m9_35  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_47  [key=2, style=dotted];
m9_41 -> m9_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> d503  [key=2, style=dotted];
m9_43 -> m9_12  [key=2, style=dotted];
m9_129 -> m9_130  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_8  [key=2, style=dotted];
m9_130 -> m9_132  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_130 -> m9_133  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_9  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_10  [key=2, style=dotted];
m9_132 -> m9_134  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_132 -> m9_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_132 -> m9_136  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_47  [key=2, style=dotted];
m9_133 -> m9_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> d503  [key=2, style=dotted];
m9_134 -> m9_12  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_13  [key=2, style=dotted];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_14  [key=2, style=dotted];
m9_136 -> m9_12  [key=2, style=dotted];
m9_137 -> m9_129  [color=blue, key=0, style=bold];
m9_207 -> m9_208  [key=0, style=solid];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_8  [key=2, style=dotted];
m9_208 -> m9_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_208 -> m9_211  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_9  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_10  [key=2, style=dotted];
m9_210 -> m9_212  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_210 -> m9_213  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_210 -> m9_214  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_47  [key=2, style=dotted];
m9_211 -> m9_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> d503  [key=2, style=dotted];
m9_212 -> m9_12  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_13  [key=2, style=dotted];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_14  [key=2, style=dotted];
m9_214 -> m9_12  [key=2, style=dotted];
m9_215 -> m9_207  [color=blue, key=0, style=bold];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_10  [key=2, style=dotted];
m9_42 -> m9_44  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_42 -> m9_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_103 -> m9_104  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_8  [key=2, style=dotted];
m9_104 -> m9_106  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_104 -> m9_107  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_47  [key=2, style=dotted];
m9_105 -> m9_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_9  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_10  [key=2, style=dotted];
m9_107 -> m9_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_107 -> m9_110  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> d503  [key=2, style=dotted];
m9_108 -> m9_12  [key=2, style=dotted];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_13  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_14  [key=2, style=dotted];
m9_110 -> m9_12  [key=2, style=dotted];
m9_111 -> m9_103  [color=blue, key=0, style=bold];
m9_220 -> m9_221  [key=0, style=solid];
m9_221 -> m9_222  [key=0, style=solid];
m9_221 -> m9_8  [key=2, style=dotted];
m9_221 -> m9_223  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_221 -> m9_224  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_10  [key=2, style=dotted];
m9_222 -> m9_225  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_222 -> m9_226  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_222 -> m9_227  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_223 -> m9_224  [key=0, style=solid];
m9_223 -> m9_47  [key=2, style=dotted];
m9_223 -> m9_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_9  [key=2, style=dotted];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> d503  [key=2, style=dotted];
m9_225 -> m9_12  [key=2, style=dotted];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_13  [key=2, style=dotted];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_14  [key=2, style=dotted];
m9_227 -> m9_12  [key=2, style=dotted];
m9_228 -> m9_220  [color=blue, key=0, style=bold];
m9_233 -> m9_234  [key=0, style=solid];
m9_234 -> m9_235  [key=0, style=solid];
m9_234 -> m9_8  [key=2, style=dotted];
m9_234 -> m9_236  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_234 -> m9_237  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_235 -> m9_236  [key=0, style=solid];
m9_235 -> m9_10  [key=2, style=dotted];
m9_235 -> m9_238  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_235 -> m9_239  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_235 -> m9_240  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_236 -> m9_237  [key=0, style=solid];
m9_236 -> m9_9  [key=2, style=dotted];
m9_237 -> m9_238  [key=0, style=solid];
m9_237 -> m9_47  [key=2, style=dotted];
m9_237 -> m9_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> d503  [key=2, style=dotted];
m9_238 -> m9_12  [key=2, style=dotted];
m9_239 -> m9_240  [key=0, style=solid];
m9_239 -> m9_13  [key=2, style=dotted];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_14  [key=2, style=dotted];
m9_240 -> m9_12  [key=2, style=dotted];
m9_241 -> m9_233  [color=blue, key=0, style=bold];
m9_52 -> m9_50  [color=blue, key=0, style=bold];
m9_54 -> m9_55  [key=0, style=solid];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_8  [key=2, style=dotted];
m9_55 -> m9_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_10  [key=2, style=dotted];
m9_56 -> m9_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_56 -> m9_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_56 -> m9_60  [color=red, key=1, label=security, style=dashed];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_47  [key=2, style=dotted];
m9_57 -> m9_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> d503  [key=2, style=dotted];
m9_58 -> m9_12  [key=2, style=dotted];
m9_59 -> m9_60  [color=red, key=0, style=solid];
m9_59 -> m9_13  [key=2, style=dotted];
m9_60 -> m9_61  [color=red, key=0, style=solid];
m9_60 -> m9_14  [color=red, key=2, style=dotted];
m9_60 -> m9_12  [color=red, key=2, style=dotted];
m9_61 -> m9_54  [color=blue, key=0, style=bold];
m9_15 -> m9_16  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_8  [key=2, style=dotted];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_10  [key=2, style=dotted];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_17 -> m9_20  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_17 -> m9_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_9  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> d503  [key=2, style=dotted];
m9_19 -> m9_12  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_13  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_14  [key=2, style=dotted];
m9_21 -> m9_12  [key=2, style=dotted];
m9_22 -> m9_15  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_13  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_14  [key=2, style=dotted];
m9_45 -> m9_12  [key=2, style=dotted];
m9_46 -> m9_39  [color=blue, key=0, style=bold];
m9_90 -> m9_91  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_8  [key=2, style=dotted];
m9_91 -> m9_93  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_91 -> m9_94  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_47  [key=2, style=dotted];
m9_92 -> m9_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_10  [key=2, style=dotted];
m9_93 -> m9_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_93 -> m9_96  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_93 -> m9_97  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_9  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> d503  [key=2, style=dotted];
m9_95 -> m9_12  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_13  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_14  [key=2, style=dotted];
m9_97 -> m9_12  [key=2, style=dotted];
m9_98 -> m9_90  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_3  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_10  [key=2, style=dotted];
m9_3 -> m9_5  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_3 -> m9_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> d503  [key=2, style=dotted];
m9_4 -> m9_12  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_12  [key=2, style=dotted];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m9_246 -> m9_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_60  [color=red, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_72  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_84  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_97  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_110  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_136  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_149  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_175  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_201  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_214  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_227  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m9_246 -> m9_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmInitializeTests", style=dashed];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m10_0 -> m10_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m10_0 -> m10_4  [color=darkorchid, key=3, label="method methodReturn decimal GetOrderFee", style=bold];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_5  [color=green, key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=2, style=dotted];
m10_2 -> d161  [key=2, style=dotted];
m10_2 -> m10_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_2 -> m10_2  [color=darkorchid, key=3, label="Field variable string SessionId", style=bold];
m10_3 -> m10_0  [color=blue, key=0, style=bold];
m10_3 -> m10_5  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_4 -> m10_10  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_11  [key=2, style=dotted];
m10_6 -> m10_9  [color=darkseagreen4, key=1, label=fee, style=dashed];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=2, style=dotted];
m10_8 -> m10_8  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_6  [color=blue, key=0, style=bold];
m10_10 -> m10_0  [color=blue, key=0, style=bold];
m10_10 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection", style=dashed];
m10_10 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightCollection", style=dashed];
m11_28 -> m11_109  [color=green, key=0, style=solid];
m11_109 -> m11_110  [color=green, key=0, style=solid];
m11_109 -> m11_112  [color=green, key=1, label=copy, style=dashed];
m11_109 -> m11_117  [color=green, key=1, label=copy, style=dashed];
m11_110 -> m11_111  [color=green, key=0, style=solid];
m11_110 -> m11_112  [color=green, key=1, label=i, style=dashed];
m11_110 -> m11_113  [color=green, key=1, label=i, style=dashed];
m11_111 -> m11_112  [color=green, key=0, style=solid];
m11_111 -> m11_114  [color=green, key=0, style=solid];
m11_112 -> m11_113  [color=green, key=0, style=solid];
m11_113 -> m11_111  [color=green, key=0, style=solid];
m11_113 -> m11_113  [color=green, key=1, label=i, style=dashed];
m11_114 -> m11_115  [color=green, key=0, style=solid];
m11_114 -> m11_117  [color=green, key=0, style=solid];
m11_115 -> m11_116  [color=green, key=0, style=solid];
m11_116 -> m11_117  [color=green, key=0, style=solid];
m11_116 -> d46  [color=green, key=2, style=dotted];
m11_117 -> m11_118  [color=green, key=0, style=solid];
m11_118 -> m11_28  [color=green, key=0, style=bold];
m11_20 -> m11_21  [color=green, key=0, style=solid];
m11_21 -> m11_8  [color=green, key=2, style=dotted];
m11_21 -> m11_22  [color=green, key=0, style=solid];
m11_21 -> m11_23  [color=green, key=1, label=copy, style=dashed];
m11_21 -> m11_26  [color=green, key=1, label=copy, style=dashed];
m11_22 -> m11_23  [color=green, key=0, style=solid];
m11_22 -> m11_24  [color=green, key=0, style=solid];
m11_22 -> m11_26  [color=green, key=0, style=solid];
m11_23 -> m11_12  [color=green, key=2, style=dotted];
m11_23 -> m11_22  [color=green, key=0, style=solid];
m11_23 -> m11_28  [color=green, key=2, style=dotted];
m11_24 -> m11_25  [color=green, key=0, style=solid];
m11_25 -> m11_26  [color=green, key=0, style=solid];
m11_25 -> d46  [color=green, key=2, style=dotted];
m11_26 -> m11_27  [color=green, key=0, style=solid];
m11_27 -> m11_20  [color=green, key=0, style=bold];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_10 -> m11_7  [color=green, key=2, style=dotted];
m11_10 -> m11_11  [color=green, key=0, style=solid];
m11_11 -> m11_8  [color=green, key=0, style=bold];
m11_36 -> m11_124  [color=green, key=0, style=solid];
m11_124 -> m11_125  [color=green, key=0, style=solid];
m11_124 -> m11_126  [color=green, key=1, label=series, style=dashed];
m11_124 -> m11_127  [color=green, key=1, label=series, style=dashed];
m11_125 -> m11_126  [color=green, key=0, style=solid];
m11_125 -> m11_127  [color=green, key=0, style=solid];
m11_126 -> m11_125  [color=green, key=0, style=solid];
m11_127 -> m11_128  [color=green, key=0, style=solid];
m11_128 -> m11_36  [color=green, key=0, style=bold];
m11_12 -> m11_13  [color=green, key=0, style=solid];
m11_12 -> m11_14  [color=green, key=1, label="QuantConnect.Series", style=dashed];
m11_13 -> m11_14  [color=green, key=0, style=solid];
m11_13 -> m11_15  [color=green, key=0, style=solid];
m11_13 -> m11_17  [color=green, key=2, style=dotted];
m11_14 -> m11_16  [color=green, key=0, style=solid];
m11_14 -> m11_18  [color=green, key=2, style=dotted];
m11_15 -> m11_16  [color=green, key=0, style=solid];
m11_15 -> m11_19  [color=green, key=2, style=dotted];
m11_16 -> m11_12  [color=green, key=0, style=bold];
m11_30 -> m11_31  [color=green, key=0, style=solid];
m11_31 -> m11_8  [color=green, key=2, style=dotted];
m11_31 -> m11_32  [color=green, key=0, style=solid];
m11_31 -> m11_33  [color=green, key=1, label=chart, style=dashed];
m11_31 -> m11_34  [color=green, key=1, label=chart, style=dashed];
m11_32 -> m11_33  [color=green, key=0, style=solid];
m11_32 -> m11_34  [color=green, key=0, style=solid];
m11_33 -> m11_18  [color=green, key=2, style=dotted];
m11_33 -> m11_32  [color=green, key=0, style=solid];
m11_33 -> m11_33  [color=green, key=1, label=kvp, style=dashed];
m11_33 -> m11_36  [color=green, key=2, style=dotted];
m11_34 -> m11_35  [color=green, key=0, style=solid];
m11_35 -> m11_30  [color=green, key=0, style=bold];
m11_2 -> m11_3  [color=green, key=0, style=solid];
m11_2 -> m11_5  [color=green, key=1, label="QuantConnect.ChartType", style=dashed];
m11_3 -> m11_4  [color=green, key=0, style=solid];
m11_4 -> m11_5  [color=green, key=0, style=solid];
m11_4 -> m11_7  [color=green, key=2, style=dotted];
m11_5 -> m11_6  [color=green, key=0, style=solid];
m11_6 -> m11_2  [color=green, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_0  [color=green, key=0, style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_8  [key=2, style=dotted];
m12_6 -> m12_3  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_9 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Python.FeeModelPythonWrapper", style=dashed];
m12_9 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Python.FeeModelPythonWrapper", style=dashed];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_40  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_43  [key=2, style=dotted];
m14_36 -> m14_38  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_46  [key=2, style=dotted];
m14_41 -> m14_0  [key=2, style=dotted];
m14_41 -> m14_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m14_7 -> m14_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m14_7 -> m14_36  [key=0, style=solid];
m14_7 -> m14_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m14_7 -> m14_4  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m14_7 -> m14_39  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_7 -> m14_40  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m14_7 -> m14_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
m14_7 -> m14_30  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m14_7 -> m14_12  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m14_7 -> m14_18  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m14_7 -> m14_24  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>> selector", style=bold];
m14_7 -> m14_0  [color=blue, key=0, style=bold];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_45  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_44  [key=2, style=dotted];
m14_42 -> m14_7  [color=blue, key=0, style=bold];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_47  [key=2, style=dotted];
m14_35 -> m14_39  [key=0, style=solid];
m14_35 -> m14_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_35 -> m14_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_35 -> m14_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_35 -> m14_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_35 -> m14_33  [color=blue, key=0, style=bold];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_48  [key=2, style=dotted];
m14_44 -> m14_35  [color=blue, key=0, style=bold];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_27 -> m14_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m14_27 -> m14_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_11  [key=2, style=dotted];
m14_28 -> m14_30  [key=0, style=solid];
m14_29 -> m14_27  [color=blue, key=0, style=bold];
m14_29 -> m14_28  [key=0, style=solid];
m14_29 -> m14_35  [key=2, style=dotted];
m14_29 -> m14_36  [key=2, style=dotted];
m14_26 -> m14_24  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_18  [color=darkseagreen4, key=1, label=direction, style=dashed];
m14_12 -> m14_20  [color=darkseagreen4, key=1, label=direction, style=dashed];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_7  [key=2, style=dotted];
m14_13 -> m14_16  [color=darkseagreen4, key=1, label=normalizedSignal, style=dashed];
m14_14 -> m14_12  [color=blue, key=0, style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=0, style=solid];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_56  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_43  [key=2, style=dotted];
m14_52 -> m14_54  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_59  [key=2, style=dotted];
m14_57 -> m14_0  [key=2, style=dotted];
m14_57 -> m14_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m14_11 -> m14_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m14_11 -> m14_52  [key=0, style=solid];
m14_11 -> m14_57  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_11 -> m14_55  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_11 -> m14_56  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m14_11 -> m14_61  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_11 -> m14_65  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_11 -> m14_33  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_11 -> m14_8  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_11 -> m14_15  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_11 -> m14_21  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_11 -> m14_27  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_10  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_56  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_45  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_44  [key=2, style=dotted];
m14_58 -> m14_11  [color=blue, key=0, style=bold];
m14_47 -> m14_48  [key=0, style=solid];
m14_76 -> m14_77  [key=0, style=solid];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_75  [key=2, style=dotted];
m14_77 -> m14_0  [key=2, style=dotted];
m14_78 -> m14_76  [color=blue, key=0, style=bold];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_73  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_70  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_75  [key=2, style=dotted];
m14_73 -> m14_0  [key=2, style=dotted];
m14_74 -> m14_71  [color=blue, key=0, style=bold];
m14_64 -> m14_65  [key=0, style=solid];
m14_141 -> m14_142  [key=0, style=solid];
m14_141 -> m14_143  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_50  [key=2, style=dotted];
m14_48 -> m14_51  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_50  [key=2, style=dotted];
m14_61 -> m14_51  [key=2, style=dotted];
m14_61 -> m14_63  [key=2, style=dotted];
m14_61 -> m14_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_137 -> m14_138  [key=0, style=solid];
m14_140 -> m14_141  [key=0, style=solid];
m14_142 -> m14_140  [color=blue, key=0, style=bold];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_44  [key=2, style=dotted];
m14_49 -> m14_47  [color=blue, key=0, style=bold];
m14_49 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_49 -> m14_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m14_60 -> m14_61  [key=0, style=solid];
m14_62 -> m14_60  [color=blue, key=0, style=bold];
m14_139 -> m14_137  [color=blue, key=0, style=bold];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m14_66 -> m14_64  [color=blue, key=0, style=bold];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_90  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_43  [key=2, style=dotted];
m14_86 -> m14_88  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_93  [key=2, style=dotted];
m14_91 -> m14_94  [key=2, style=dotted];
m14_91 -> m14_0  [key=2, style=dotted];
m14_82 -> m14_5  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m14_82 -> m14_86  [key=0, style=solid];
m14_82 -> m14_91  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m14_82 -> m14_89  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_82 -> m14_90  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m14_82 -> m14_79  [color=darkorchid, key=3, label="Parameter variable System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_82 -> m14_83  [color=darkorchid, key=3, label="Parameter variable System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>> selector", style=bold];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_90  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_45  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_44  [key=2, style=dotted];
m14_92 -> m14_82  [color=blue, key=0, style=bold];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_34  [key=0, style=solid];
m14_30 -> m14_32  [color=darkseagreen4, key=1, label=removed, style=dashed];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_7  [key=2, style=dotted];
m14_32 -> m14_30  [color=blue, key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_37  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_11  [key=2, style=dotted];
m14_22 -> m14_10  [key=0, style=solid];
m14_23 -> m14_21  [color=blue, key=0, style=bold];
m14_23 -> m14_9  [color=blue, key=0, style=bold];
m14_33 -> m14_30  [key=0, style=solid];
m14_33 -> m14_38  [key=2, style=dotted];
m14_33 -> m14_34  [key=0, style=solid];
m14_34 -> m14_27  [color=blue, key=0, style=bold];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_11  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_6 -> m14_4  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_8  [key=2, style=dotted];
m14_111 -> m14_112  [color=green, key=0, style=solid];
m14_111 -> m14_131  [key=2, style=dotted];
m14_112 -> m14_113  [color=green, key=0, style=solid];
m14_112 -> m14_132  [color=green, key=2, style=dotted];
m14_112 -> m14_133  [color=green, key=2, style=dotted];
m14_112 -> d15  [color=green, key=2, style=dotted];
m14_112 -> m14_114  [color=green, key=1, label=universe, style=dashed];
m14_95 -> m14_112  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_97  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_101  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_102  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_103  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_105  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_109  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_95 -> m14_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_109 -> m14_112  [color=green, key=0, style=solid];
m14_109 -> m14_110  [key=0, style=solid];
m14_108 -> m14_112  [color=green, key=1, label=uconfig, style=dashed];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_111  [color=darkseagreen4, key=1, label=uconfig, style=dashed];
m14_108 -> m14_129  [key=2, style=dotted];
m14_108 -> m14_110  [color=darkseagreen4, key=1, label=uconfig, style=dashed];
m14_113 -> m14_114  [key=0, style=solid];
m14_113 -> m14_3  [key=2, style=dotted];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_116  [color=darkseagreen4, key=1, label=userDefinedUniverse, style=dashed];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_103  [key=0, style=solid];
m14_97 -> m14_119  [key=2, style=dotted];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_103  [key=0, style=solid];
m14_98 -> m14_120  [key=2, style=dotted];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_63  [key=2, style=dotted];
m14_99 -> m14_121  [key=2, style=dotted];
m14_99 -> m14_122  [key=2, style=dotted];
m14_99 -> m14_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_99 -> m14_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_99 -> m14_101  [color=darkseagreen4, key=1, label=securityUniverse, style=dashed];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_124  [key=2, style=dotted];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_125  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_114  [key=0, style=solid];
m14_107 -> m14_128  [key=2, style=dotted];
m14_96 -> m14_97  [key=0, style=solid];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_123  [key=2, style=dotted];
m14_105 -> m14_108  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_126  [key=2, style=dotted];
m14_116 -> m14_118  [key=0, style=solid];
m14_116 -> m14_135  [key=2, style=dotted];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_130  [key=2, style=dotted];
m14_106 -> m14_108  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m14_106 -> m14_113  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_127  [key=2, style=dotted];
m14_106 -> m14_117  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_117  [key=0, style=solid];
m14_100 -> m14_102  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_104 -> m14_105  [key=0, style=solid];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_136  [key=2, style=dotted];
m14_118 -> m14_95  [color=blue, key=0, style=bold];
m14_50 -> m14_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m14_50 -> m14_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m14_50 -> m14_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m14_50 -> m14_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m14_50 -> m14_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_22  [color=crimson, key=0, style=bold];
m14_9 -> m14_11  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_23  [key=0, style=solid];
m14_10 -> m14_13  [color=darkseagreen4, key=1, label=sd, style=dashed];
m14_10 -> m14_18  [color=darkseagreen4, key=1, label=sd, style=dashed];
m14_10 -> m14_20  [color=darkseagreen4, key=1, label=sd, style=dashed];
m14_10 -> m14_21  [color=darkseagreen4, key=1, label=sd, style=dashed];
m14_10 -> m14_8  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_10  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_26  [key=2, style=dotted];
m14_20 -> m14_22  [color=darkseagreen4, key=1, label=insight, style=dashed];
m14_20 -> m14_18  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [key=0, style=solid];
m14_16 -> m14_11  [key=2, style=dotted];
m14_15 -> m14_18  [key=0, style=solid];
m14_15 -> m14_20  [color=darkseagreen4, key=1, label=direction, style=dashed];
m14_15 -> m14_16  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_20  [color=darkseagreen4, key=1, label=direction, style=dashed];
m14_17 -> m14_15  [color=blue, key=0, style=bold];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_24  [key=2, style=dotted];
m14_19 -> m14_25  [key=2, style=dotted];
m14_19 -> m14_7  [key=2, style=dotted];
m14_79 -> m14_80  [key=0, style=solid];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_82  [key=2, style=dotted];
m14_81 -> m14_79  [color=blue, key=0, style=bold];
m14_3 -> m14_4  [key=0, style=solid];
m14_67 -> m14_68  [key=0, style=solid];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_70  [key=2, style=dotted];
m14_68 -> m14_0  [key=2, style=dotted];
m14_69 -> m14_67  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_0 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageType", style=dashed];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_8 -> m14_9  [key=0, style=solid];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_7  [key=2, style=dotted];
m14_83 -> m14_84  [key=0, style=solid];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_82  [key=2, style=dotted];
m14_85 -> m14_83  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_144 -> m14_112  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_144 -> m14_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m14_149 -> m14_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m14_145 -> m14_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>", style=dashed];
m14_146 -> m14_61  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_146 -> m14_65  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m14_147 -> m14_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_147 -> m14_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_148 -> m14_61  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m15_6 -> m15_10  [color=green, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_31  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_9  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_12  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_13  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_14  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_15  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_16  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_17  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_18  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_19  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_21  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_22  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_23  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_24  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_25  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_26  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_27  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_28  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_29  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_6 -> m15_32  [color=darkseagreen4, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_11  [color=green, key=0, style=solid];
m15_10 -> m15_33  [color=green, key=2, style=dotted];
m15_10 -> m15_34  [color=green, key=2, style=dotted];
m15_10 -> m15_35  [color=green, key=2, style=dotted];
m15_10 -> m15_12  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_13  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_14  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_15  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_16  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_17  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_18  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_19  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_21  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_22  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_23  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_24  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_25  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_26  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_27  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_28  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_29  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_31  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_10 -> m15_32  [color=green, key=1, label="ref QuantConnect.Data.Market.QuoteBar", style=dashed];
m15_7 -> m15_10  [color=green, key=1, label=bid, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_11  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_14  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_15  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_16  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_17  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_18  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_7 -> m15_19  [color=darkseagreen4, key=1, label=bid, style=dashed];
m15_8 -> m15_10  [color=green, key=1, label=ask, style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_20  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_23  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_24  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_25  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_26  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_27  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_8 -> m15_28  [color=darkseagreen4, key=1, label=ask, style=dashed];
m15_9 -> m15_10  [color=green, key=0, style=solid];
m15_9 -> m15_11  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_20  [key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_15  [key=0, style=solid];
m15_14 -> m15_20  [key=0, style=solid];
m15_14 -> m15_36  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=0, style=solid];
m15_17 -> m15_18  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_20  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_24  [key=0, style=solid];
m15_23 -> m15_29  [key=0, style=solid];
m15_23 -> m15_36  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_29 -> m15_30  [color=green, key=0, style=solid];
m15_31 -> m15_32  [color=green, key=0, style=solid];
m15_30 -> m15_31  [color=green, key=0, style=solid];
m15_30 -> m15_32  [color=green, key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_29  [key=0, style=solid];
m15_32 -> m15_6  [color=blue, key=0, style=bold];
m15_37 -> m15_10  [color=green, key=1, label="QuantConnect.Data.Consolidators.QuoteBarConsolidator", style=dashed];
m15_37 -> m15_30  [color=green, key=1, label="QuantConnect.Data.Consolidators.QuoteBarConsolidator", style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=2, style=dotted];
m16_35 -> m16_33  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_11  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_12  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m16_2 -> m16_19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_23  [key=2, style=dotted];
m16_3 -> m16_9  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_10  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_11  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_12  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_13  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_14  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_3 -> m16_15  [color=darkseagreen4, key=1, label=errors, style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_27  [key=2, style=dotted];
m16_9 -> m16_19  [color=darkseagreen4, key=1, label=account, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_27  [key=2, style=dotted];
m16_10 -> m16_18  [color=darkseagreen4, key=1, label=userId, style=dashed];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_27  [key=2, style=dotted];
m16_11 -> m16_18  [color=darkseagreen4, key=1, label=password, style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_27  [key=2, style=dotted];
m16_12 -> m16_16  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m16_12 -> m16_18  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_27  [key=2, style=dotted];
m16_13 -> m16_19  [color=darkseagreen4, key=1, label=agentDescription, style=dashed];
m16_19 -> m16_20  [color=red, key=0, style=solid];
m16_19 -> m16_31  [key=2, style=dotted];
m16_19 -> m16_21  [color=darkseagreen4, key=1, label=ib, style=dashed];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_24  [key=2, style=dotted];
m16_4 -> m16_18  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [key=0, style=solid];
m16_15 -> m16_22  [key=0, style=solid];
m16_15 -> d28  [key=2, style=dotted];
m16_15 -> m16_29  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_25  [key=2, style=dotted];
m16_5 -> m16_19  [color=darkseagreen4, key=1, label=port, style=dashed];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_30  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_26  [key=2, style=dotted];
m16_6 -> m16_19  [color=darkseagreen4, key=1, label=host, style=dashed];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_26  [key=2, style=dotted];
m16_7 -> m16_18  [color=darkseagreen4, key=1, label=twsDirectory, style=dashed];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_26  [key=2, style=dotted];
m16_8 -> m16_18  [color=darkseagreen4, key=1, label=ibControllerDirectory, style=dashed];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_18  [key=0, style=solid];
m16_17 -> m16_22  [key=0, style=solid];
m16_17 -> d28  [key=2, style=dotted];
m16_20 -> m16_21  [color=red, key=0, style=solid];
m16_20 -> m16_32  [color=red, key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_2  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m20_62 -> m20_166  [key=0, style=solid];
m20_62 -> m20_167  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_62 -> m20_168  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_62 -> m20_169  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_62 -> m20_170  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_62 -> m20_171  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_62 -> m20_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m20_166 -> m20_167  [key=0, style=solid];
m20_167 -> m20_168  [key=0, style=solid];
m20_167 -> m20_171  [key=0, style=solid];
m20_167 -> m20_161  [key=2, style=dotted];
m20_167 -> m20_167  [color=darkseagreen4, key=1, label=queued, style=dashed];
m20_168 -> m20_169  [key=0, style=solid];
m20_169 -> m20_170  [key=0, style=solid];
m20_169 -> m20_172  [key=0, style=solid];
m20_169 -> m20_173  [key=2, style=dotted];
m20_170 -> m20_172  [key=0, style=solid];
m20_171 -> m20_172  [key=0, style=solid];
m20_171 -> m20_58  [key=2, style=dotted];
m20_172 -> m20_62  [color=blue, key=0, style=bold];
m20_162 -> m20_164  [key=0, style=solid];
m20_162 -> m20_154  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m20_164 -> m20_165  [key=0, style=solid];
m20_165 -> m20_162  [color=blue, key=0, style=bold];
m20_88 -> m20_99  [key=0, style=solid];
m20_99 -> m20_100  [key=0, style=solid];
m20_99 -> m20_64  [key=2, style=dotted];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_111  [key=2, style=dotted];
m20_101 -> m20_102  [key=0, style=solid];
m20_101 -> m20_108  [key=0, style=solid];
m20_101 -> m20_103  [color=darkseagreen4, key=1, label=balance, style=dashed];
m20_101 -> m20_104  [color=darkseagreen4, key=1, label=balance, style=dashed];
m20_101 -> m20_106  [color=darkseagreen4, key=1, label=balance, style=dashed];
m20_101 -> m20_107  [color=darkseagreen4, key=1, label=balance, style=dashed];
m20_102 -> m20_103  [key=0, style=solid];
m20_108 -> m20_109  [color=red, key=0, style=solid];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_107  [key=0, style=solid];
m20_103 -> m20_112  [key=2, style=dotted];
m20_103 -> m20_105  [color=darkseagreen4, key=1, label=cash, style=dashed];
m20_104 -> m20_105  [key=0, style=solid];
m20_104 -> m20_106  [color=darkseagreen4, key=1, label=delta, style=dashed];
m20_106 -> m20_107  [key=0, style=solid];
m20_106 -> m20_115  [key=2, style=dotted];
m20_106 -> m20_116  [key=2, style=dotted];
m20_107 -> m20_101  [key=0, style=solid];
m20_107 -> m20_117  [key=2, style=dotted];
m20_105 -> m20_106  [key=0, style=solid];
m20_105 -> m20_107  [key=0, style=solid];
m20_105 -> m20_113  [key=2, style=dotted];
m20_105 -> m20_114  [key=2, style=dotted];
m20_109 -> m20_110  [color=red, key=0, style=solid];
m20_109 -> m20_87  [color=red, key=2, style=dotted];
m20_109 -> m20_118  [color=red, key=2, style=dotted];
m20_109 -> m20_119  [color=red, key=2, style=dotted];
m20_109 -> m20_120  [color=red, key=1, label="lambda expression", style=dashed];
m20_110 -> m20_88  [color=blue, key=0, style=bold];
m20_27 -> m20_193  [key=0, style=solid];
m20_27 -> m20_195  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m20_27 -> m20_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.AccountEvent account", style=bold];
m20_193 -> m20_194  [key=0, style=solid];
m20_193 -> m20_195  [color=darkseagreen4, key=1, label=delta, style=dashed];
m20_195 -> m20_196  [key=0, style=solid];
m20_195 -> m20_149  [key=2, style=dotted];
m20_195 -> m20_64  [key=2, style=dotted];
m20_194 -> m20_195  [key=0, style=solid];
m20_194 -> m20_196  [key=0, style=solid];
m20_196 -> m20_27  [color=blue, key=0, style=bold];
m20_120 -> m20_121  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_19  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_23  [key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_27  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_18 -> m20_16  [color=blue, key=0, style=bold];
m20_20 -> m20_21  [key=0, style=solid];
m20_22 -> m20_20  [color=blue, key=0, style=bold];
m20_24 -> m20_25  [key=0, style=solid];
m20_26 -> m20_24  [color=blue, key=0, style=bold];
m20_93 -> m20_94  [key=0, style=solid];
m20_97 -> m20_98  [key=0, style=solid];
m20_97 -> m20_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m20_96 -> m20_97  [key=0, style=solid];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_94  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m20_95 -> m20_93  [color=blue, key=0, style=bold];
m20_98 -> m20_96  [color=blue, key=0, style=bold];
m20_121 -> m20_122  [key=0, style=solid];
m20_121 -> m20_124  [key=0, style=solid];
m20_121 -> m20_87  [key=2, style=dotted];
m20_122 -> m20_123  [key=0, style=solid];
m20_124 -> m20_125  [color=red, key=0, style=solid];
m20_123 -> m20_126  [key=0, style=solid];
m20_123 -> m20_64  [key=2, style=dotted];
m20_125 -> m20_126  [color=red, key=0, style=solid];
m20_125 -> m20_64  [color=red, key=2, style=dotted];
m20_126 -> m20_120  [color=blue, key=0, style=bold];
m20_28 -> m20_29  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_53  [key=0, style=solid];
m20_30 -> m20_31  [key=0, style=solid];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_64  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_34  [key=0, style=solid];
m20_31 -> m20_56  [key=2, style=dotted];
m20_31 -> m20_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_37  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_39  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_43  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_31 -> m20_51  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_32 -> m20_33  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_39  [key=0, style=solid];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_58  [key=2, style=dotted];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_29  [key=0, style=solid];
m20_37 -> m20_59  [key=2, style=dotted];
m20_38 -> m20_29  [key=0, style=solid];
m20_38 -> m20_58  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_42  [key=0, style=solid];
m20_39 -> m20_44  [key=0, style=solid];
m20_39 -> m20_46  [key=0, style=solid];
m20_41 -> m20_52  [key=0, style=solid];
m20_41 -> m20_60  [key=2, style=dotted];
m20_43 -> m20_52  [key=0, style=solid];
m20_43 -> m20_61  [key=2, style=dotted];
m20_45 -> m20_52  [key=0, style=solid];
m20_45 -> m20_62  [key=2, style=dotted];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_58  [key=2, style=dotted];
m20_33 -> m20_29  [key=0, style=solid];
m20_33 -> m20_57  [key=2, style=dotted];
m20_40 -> m20_41  [key=0, style=solid];
m20_42 -> m20_43  [key=0, style=solid];
m20_44 -> m20_45  [key=0, style=solid];
m20_46 -> m20_47  [key=0, style=solid];
m20_47 -> m20_48  [key=0, style=solid];
m20_48 -> m20_49  [key=0, style=solid];
m20_49 -> m20_50  [key=0, style=solid];
m20_50 -> m20_51  [key=0, style=solid];
m20_52 -> m20_29  [key=0, style=solid];
m20_52 -> m20_63  [key=2, style=dotted];
m20_54 -> m20_55  [key=0, style=solid];
m20_55 -> m20_28  [color=blue, key=0, style=bold];
m20_127 -> m20_128  [key=0, style=solid];
m20_128 -> m20_129  [key=0, style=solid];
m20_129 -> m20_127  [color=blue, key=0, style=bold];
m20_61 -> m20_154  [key=0, style=solid];
m20_61 -> m20_155  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_156  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_157  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_158  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_159  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m20_154 -> m20_155  [key=0, style=solid];
m20_155 -> m20_156  [key=0, style=solid];
m20_155 -> m20_159  [key=0, style=solid];
m20_155 -> m20_161  [key=2, style=dotted];
m20_155 -> m20_162  [key=2, style=dotted];
m20_155 -> m20_155  [color=darkseagreen4, key=1, label=queued, style=dashed];
m20_156 -> m20_157  [key=0, style=solid];
m20_157 -> m20_158  [key=0, style=solid];
m20_157 -> m20_160  [key=0, style=solid];
m20_157 -> m20_163  [key=2, style=dotted];
m20_158 -> m20_160  [key=0, style=solid];
m20_159 -> m20_160  [key=0, style=solid];
m20_159 -> m20_58  [key=2, style=dotted];
m20_160 -> m20_61  [color=blue, key=0, style=bold];
m20_66 -> m20_67  [key=0, style=solid];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_71  [key=0, style=solid];
m20_68 -> m20_69  [key=0, style=solid];
m20_68 -> m20_70  [key=0, style=solid];
m20_71 -> m20_72  [key=0, style=solid];
m20_71 -> m20_73  [key=0, style=solid];
m20_69 -> m20_68  [key=0, style=solid];
m20_69 -> m20_57  [key=2, style=dotted];
m20_70 -> m20_86  [key=0, style=solid];
m20_72 -> m20_73  [key=0, style=solid];
m20_73 -> m20_74  [key=0, style=solid];
m20_73 -> m20_78  [key=0, style=solid];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_76  [key=0, style=solid];
m20_74 -> m20_78  [key=0, style=solid];
m20_74 -> m20_87  [key=2, style=dotted];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_82  [color=darkseagreen4, key=1, label=maxOrdersToKeep, style=dashed];
m20_78 -> m20_78  [color=darkorchid, key=3, label="Local variable int maxOrdersToKeep", style=bold];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_78  [key=0, style=solid];
m20_75 -> m20_88  [key=2, style=dotted];
m20_76 -> m20_77  [key=0, style=solid];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> d46  [key=2, style=dotted];
m20_79 -> m20_80  [key=0, style=solid];
m20_79 -> m20_81  [key=0, style=solid];
m20_82 -> m20_83  [key=0, style=solid];
m20_82 -> m20_97  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m20_80 -> m20_86  [key=0, style=solid];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_90  [key=2, style=dotted];
m20_81 -> m20_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_83 -> m20_84  [key=0, style=solid];
m20_83 -> m20_86  [key=0, style=solid];
m20_83 -> m20_91  [key=2, style=dotted];
m20_83 -> m20_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_83 -> m20_85  [color=darkseagreen4, key=1, label=item, style=dashed];
m20_84 -> m20_85  [key=0, style=solid];
m20_85 -> m20_83  [key=0, style=solid];
m20_85 -> m20_92  [key=2, style=dotted];
m20_86 -> m20_66  [color=blue, key=0, style=bold];
m20_60 -> m20_130  [key=0, style=solid];
m20_60 -> m20_131  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_132  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_136  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_137  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_139  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_142  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_143  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_144  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_145  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_60 -> m20_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m20_130 -> m20_131  [key=0, style=solid];
m20_130 -> m20_146  [key=0, style=solid];
m20_130 -> m20_59  [key=2, style=dotted];
m20_131 -> m20_132  [key=0, style=solid];
m20_131 -> m20_135  [key=0, style=solid];
m20_131 -> m20_148  [key=2, style=dotted];
m20_132 -> m20_133  [key=0, style=solid];
m20_133 -> m20_134  [key=0, style=solid];
m20_133 -> m20_149  [key=2, style=dotted];
m20_133 -> m20_150  [key=2, style=dotted];
m20_136 -> m20_137  [key=0, style=solid];
m20_136 -> m20_142  [key=0, style=solid];
m20_136 -> m20_151  [key=2, style=dotted];
m20_136 -> m20_138  [color=darkseagreen4, key=1, label=message, style=dashed];
m20_136 -> m20_140  [color=darkseagreen4, key=1, label=message, style=dashed];
m20_137 -> m20_138  [key=0, style=solid];
m20_139 -> m20_140  [key=0, style=solid];
m20_139 -> m20_152  [key=2, style=dotted];
m20_142 -> m20_143  [key=0, style=solid];
m20_142 -> m20_144  [key=0, style=solid];
m20_142 -> m20_153  [key=2, style=dotted];
m20_143 -> m20_147  [key=0, style=solid];
m20_144 -> m20_145  [key=0, style=solid];
m20_145 -> m20_147  [key=0, style=solid];
m20_145 -> m20_150  [key=2, style=dotted];
m20_146 -> m20_147  [key=0, style=solid];
m20_146 -> m20_58  [key=2, style=dotted];
m20_135 -> m20_136  [key=0, style=solid];
m20_134 -> m20_147  [key=0, style=solid];
m20_138 -> m20_139  [key=0, style=solid];
m20_138 -> m20_140  [key=0, style=solid];
m20_140 -> m20_141  [key=0, style=solid];
m20_140 -> m20_150  [key=2, style=dotted];
m20_141 -> m20_147  [key=0, style=solid];
m20_147 -> m20_60  [color=blue, key=0, style=bold];
m20_63 -> m20_65  [key=0, style=solid];
m20_65 -> m20_63  [color=blue, key=0, style=bold];
m20_23 -> m20_197  [key=0, style=solid];
m20_23 -> m20_198  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m20_23 -> m20_199  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m20_23 -> m20_201  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m20_23 -> m20_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.SecurityEvent holding", style=bold];
m20_197 -> m20_198  [key=0, style=solid];
m20_197 -> m20_199  [color=darkseagreen4, key=1, label=securityHolding, style=dashed];
m20_198 -> m20_199  [key=0, style=solid];
m20_198 -> m20_200  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m20_198 -> m20_201  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m20_199 -> m20_200  [key=0, style=solid];
m20_199 -> m20_201  [color=darkseagreen4, key=1, label=deltaAvgPrice, style=dashed];
m20_201 -> m20_202  [key=0, style=solid];
m20_201 -> m20_203  [key=2, style=dotted];
m20_201 -> m20_64  [key=2, style=dotted];
m20_200 -> m20_201  [key=0, style=solid];
m20_200 -> m20_202  [key=0, style=solid];
m20_202 -> m20_23  [color=blue, key=0, style=bold];
m20_19 -> m20_174  [key=0, style=solid];
m20_19 -> m20_176  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_178  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_179  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_181  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_182  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_183  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_184  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_19 -> m20_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m20_174 -> m20_175  [key=0, style=solid];
m20_174 -> m20_188  [key=2, style=dotted];
m20_174 -> m20_178  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_176 -> m20_177  [key=0, style=solid];
m20_176 -> m20_58  [key=2, style=dotted];
m20_178 -> m20_179  [key=0, style=solid];
m20_179 -> m20_180  [key=0, style=solid];
m20_179 -> m20_182  [key=0, style=solid];
m20_181 -> m20_182  [key=0, style=solid];
m20_181 -> m20_190  [key=2, style=dotted];
m20_182 -> m20_183  [key=0, style=solid];
m20_182 -> m20_187  [key=0, style=solid];
m20_183 -> m20_184  [key=0, style=solid];
m20_183 -> m20_191  [key=2, style=dotted];
m20_184 -> m20_185  [key=0, style=solid];
m20_184 -> m20_187  [key=0, style=solid];
m20_184 -> m20_192  [key=2, style=dotted];
m20_175 -> m20_176  [key=0, style=solid];
m20_175 -> m20_178  [key=0, style=solid];
m20_177 -> m20_187  [key=0, style=solid];
m20_180 -> m20_181  [key=0, style=solid];
m20_180 -> m20_189  [key=2, style=dotted];
m20_185 -> m20_186  [key=0, style=solid];
m20_186 -> m20_187  [key=0, style=solid];
m20_186 -> m20_150  [key=2, style=dotted];
m20_187 -> m20_19  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_5  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m20_0 -> m20_10  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m20_0 -> m20_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m20_0 -> m20_12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m20_0 -> m20_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_10 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_12 -> m20_13  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_2 -> m20_14  [key=0, style=solid];
m20_2 -> m20_15  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m20_9 -> m20_10  [key=0, style=solid];
m20_14 -> m20_0  [color=blue, key=0, style=bold];
m20_204 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_109  [color=red, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_122  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_145  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_155  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_156  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_157  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_169  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_174  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_186  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_204 -> m20_197  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m20_205 -> m20_97  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
}
