digraph  {
n0 [cluster="AssemblyInitialize.SetLogHandler()", label="Entry AssemblyInitialize.SetLogHandler()", span="7-7"];
n2 [cluster="AssemblyInitialize.SetLogHandler()", label="Exit AssemblyInitialize.SetLogHandler()", span="7-7"];
n3 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler()", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler()", span="28-28"];
d1 [cluster="AssemblyInitialize.SetLogHandler()", color=green, community=0, label="Log.LogHandler = new ConsoleLogHandler()", prediction=0, span="10-10"];
d3 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="31-31"];
m0_86 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="var entry = zipStream.GetNextEntry()", span="213-213"];
m0_81 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="Entry QuantConnect.Compression.UnzipData(byte[])", span="198-198"];
m0_82 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="var data = new Dictionary<string, string>()", span="201-201"];
m0_83 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="var ms = new MemoryStream(zipData)", span="205-205"];
m0_90 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="data.Add(entry.Name, buffer.GetString())", span="222-222"];
m0_93 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="return data;", span="237-237"];
m0_84 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="var zipStream = new ZipInputStream(ms)", span="208-208"];
m0_85 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label=true, span="210-210"];
m0_89 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="219-219"];
m0_91 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label=Exception, span="233-233"];
m0_87 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="entry != null", span="215-215"];
m0_88 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="var buffer = new byte[entry.Size]", span="218-218"];
m0_92 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="Log.Error(err)", span="235-235"];
m0_94 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Composer.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="198-198"];
m0_290 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Composer.cs", label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="605-605"];
m0_286 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Composer.cs", label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="605-605"];
m0_287 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Composer.cs", label="var entryReader = new StreamReader(entry.OpenReader())", span="607-607"];
m0_289 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Composer.cs", label="yield return entryReader.ReadLine();", span="611-611"];
m0_288 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Composer.cs", label="!entryReader.EndOfStream", span="609-609"];
m0_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="stream.PutNextEntry(entry)", span="100-100"];
m0_35 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="var ms = new MemoryStream(file.Value)", span="102-102"];
m0_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="107-107"];
m0_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="stream.Finish()", span="115-115"];
m0_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="success = false", span="122-122"];
m0_49 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="134-134"];
m0_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="int sourceBytes", span="104-104"];
m0_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="stream.Write(buffer, 0, sourceBytes)", span="108-108"];
m0_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="sourceBytes > 0", span="110-110"];
m0_41 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="stream.Close()", span="116-116"];
m0_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label=Exception, span="119-119"];
m0_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="Log.Error(err)", span="121-121"];
m0_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="return success;", span="124-124"];
m0_46 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="85-85"];
m0_47 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="Composer.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m0_48 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="Composer.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m0_50 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="138-138"];
m0_51 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var writer = new StreamWriter(stream)", span="139-139"];
m0_52 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var entry = new ZipEntry(zipEntry)", span="141-141"];
m0_53 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="stream.PutNextEntry(entry)", span="142-142"];
m0_54 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label=lines, span="143-143"];
m0_80 [cluster="ZipFile.cstr", file="Composer.cs", label="Entry ZipFile.cstr", span=""];
m0_159 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="stream.PutNextEntry(entry)", span="342-342"];
m0_156 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="337-337"];
m0_157 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="339-339"];
m0_158 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="var entry = new ZipEntry(zipEntry)", span="341-341"];
m0_161 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="344-344"];
m0_164 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="stream.Write(buffer, 0, sourceBytes)", span="350-350"];
m0_160 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="var buffer = new byte[4096]", span="343-343"];
m0_163 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="349-349"];
m0_162 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="int sourceBytes", span="346-346"];
m0_165 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="sourceBytes > 0", span="352-352"];
m0_166 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Composer.cs", label="Exit QuantConnect.Compression.Zip(string, string, string)", span="337-337"];
m0_328 [cluster="string.LastIndexOf(char)", file="Composer.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m0_149 [cluster="System.IO.File.OpenRead(string)", file="Composer.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m0_24 [cluster="Unk.CloseEntry", file="Composer.cs", label="Entry Unk.CloseEntry", span=""];
m0_19 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.AreEqual(2, window.Samples)", span="47-47"];
m0_23 [cluster="QuantConnect.Indicators.RollingWindow<T>.Add(T)", file="Composer.cs", label="Entry QuantConnect.Indicators.RollingWindow<T>.Add(T)", span="167-167"];
m0_61 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.EnumeratesAsExpected()", file="Composer.cs", label="Exit QuantConnect.Tests.Indicators.RollingWindowTests.EnumeratesAsExpected()", span="96-96"];
m0_98 [cluster="byte[].GetString(System.Text.Encoding)", file="Composer.cs", label="Entry byte[].GetString(System.Text.Encoding)", span="85-85"];
m0_62 [cluster="System.IO.TextWriter.WriteLine(string)", file="Composer.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m0_259 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Composer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_305 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Composer.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m0_272 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="579-579"];
m0_268 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="569-569"];
m0_269 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="!File.Exists(filename)", span="571-571"];
m0_270 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="573-573"];
m0_271 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="return Enumerable.Empty<string>();", span="574-574"];
m0_273 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label=Exception, span="581-581"];
m0_274 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="Log.Error(err)", span="583-583"];
m0_275 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="return Enumerable.Empty<string>();", span="585-585"];
m0_276 [cluster="QuantConnect.Compression.ReadLines(string)", file="Composer.cs", label="Exit QuantConnect.Compression.ReadLines(string)", span="569-569"];
m0_365 [cluster="System.IO.MemoryStream.ToArray()", file="Composer.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m0_21 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.IsTrue(window.IsReady)", span="49-49"];
m0_333 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Composer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_103 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="var entry = archive.CreateEntry(zipEntryName)", span="251-251"];
m0_100 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="246-246"];
m0_101 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="var memoryStream = new MemoryStream()", span="248-248"];
m0_105 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="entryStream.Write(bytes, 0, bytes.Length)", span="254-254"];
m0_102 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true)", span="249-249"];
m0_106 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="return memoryStream.GetBuffer();", span="257-257"];
m0_104 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="var entryStream = entry.Open()", span="252-252"];
m0_107 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="246-246"];
m0_245 [cluster="System.IO.StreamReader.Close()", file="Composer.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m0_341 [cluster="Unk.CreateInputTarArchive", file="Composer.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m0_381 [cluster="System.Math.Max(int, int)", file="Composer.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m0_27 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.OldDataFallsOffBackOfWindow()", file="Composer.cs", label="window.Add(0)", span="56-56"];
m0_78 [cluster="Unk.AddEntry", file="Composer.cs", label="Entry Unk.AddEntry", span=""];
m0_327 [cluster="System.Collections.Generic.List<T>.List()", file="Composer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_343 [cluster="System.IO.Stream.Close()", file="Composer.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m0_25 [cluster="Unk.Finish", file="Composer.cs", label="Entry Unk.Finish", span=""];
m0_26 [cluster="Unk.Close", file="Composer.cs", label="Entry Unk.Close", span=""];
m0_29 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="var success = true", span="87-87"];
m0_30 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="var buffer = new byte[4096]", span="88-88"];
m0_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="93-93"];
m0_28 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="85-85"];
m0_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label=filenamesAndData, span="95-95"];
m0_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Composer.cs", label="var entry = new ZipEntry(file.Key)", span="98-98"];
m0_176 [cluster="Unk.CreateFromDirectory", file="Composer.cs", label="Entry Unk.CreateFromDirectory", span=""];
m0_246 [cluster="lambda expression", file="Composer.cs", label="Entry lambda expression", span="489-489"];
m0_247 [cluster="lambda expression", file="Composer.cs", label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="489-489"];
m0_248 [cluster="lambda expression", file="Composer.cs", label="Exit lambda expression", span="489-489"];
m0_4 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Assert.AreEqual(0, window.Samples)", span="30-30"];
m0_0 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Entry QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", span="25-25"];
m0_1 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="var window = new RollingWindow<int>(1)", span="27-27"];
m0_3 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Assert.AreEqual(0, window.Count)", span="29-29"];
m0_5 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Assert.IsFalse(window.IsReady)", span="31-31"];
m0_2 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Assert.AreEqual(1, window.Size)", span="28-28"];
m0_7 [cluster="QuantConnect.Indicators.RollingWindow<T>.RollingWindow(int)", file="Composer.cs", label="Entry QuantConnect.Indicators.RollingWindow<T>.RollingWindow(int)", span="44-44"];
m0_8 [cluster="Unk.AreEqual", file="Composer.cs", label="Entry Unk.AreEqual", span=""];
m0_9 [cluster="Unk.IsFalse", file="Composer.cs", label="Entry Unk.IsFalse", span=""];
m0_10 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Entry QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", span="35-35"];
m0_11 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", color=green, community=0, file="Composer.cs", label="var window = new RollingWindow<int>(1)", prediction=1, span="37-37"];
m0_6 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", file="Composer.cs", label="Exit QuantConnect.Tests.Indicators.RollingWindowTests.NewWindowIsEmpty()", span="25-25"];
m0_12 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", color=green, community=0, file="Composer.cs", label="window.Add(1)", prediction=2, span="38-38"];
m0_15 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.AreEqual(1, window.Size)", span="41-41"];
m0_13 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", color=green, community=0, file="Composer.cs", label="Assert.AreEqual(1, window.Count)", prediction=1, span="39-39"];
m0_14 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.AreEqual(1, window.Samples)", span="40-40"];
m0_16 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.IsFalse(window.IsReady)", span="42-42"];
m0_200 [cluster="System.IO.DirectoryInfo.Create()", file="Composer.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m0_364 [cluster="KeyValuePair<string, byte[]>.cstr", file="Composer.cs", label="Entry KeyValuePair<string, byte[]>.cstr", span=""];
m0_122 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="Composer.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m0_112 [cluster="System.IO.MemoryStream.GetBuffer()", file="Composer.cs", label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0"];
m0_99 [cluster="Unk.Add", file="Composer.cs", label="Entry Unk.Add", span=""];
m0_151 [cluster="System.IO.File.Delete(string)", file="Composer.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m0_96 [cluster="ZipInputStream.cstr", file="Composer.cs", label="Entry ZipInputStream.cstr", span=""];
m0_244 [cluster="Unk.Dispose", file="Composer.cs", label="Entry Unk.Dispose", span=""];
m0_77 [cluster="Unk.Read", file="Composer.cs", label="Entry Unk.Read", span=""];
m0_199 [cluster="System.IO.FileInfo.FileInfo(string)", file="Composer.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m0_215 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Composer.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m0_177 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="385-385"];
m0_178 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="!File.Exists(zip)", span="387-387"];
m0_180 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="!overwrite", span="391-391"];
m0_181 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="393-393"];
m0_182 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="var archive = new ZipArchive(File.OpenRead(zip))", span="397-397"];
m0_185 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="var filepath = Path.Combine(directory, file.FullName)", span="403-403"];
m0_179 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="return false;", span="387-387"];
m0_183 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="archive.Entries", span="399-399"];
m0_184 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="file.Name == ''''", span="402-402"];
m0_192 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="return true;", span="415-415"];
m0_191 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="file.ExtractToFile(outputFile.FullName, true)", span="410-410"];
m0_186 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="OS.IsLinux", span="404-404"];
m0_187 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="filepath = filepath.Replace(@''\'', ''/'')", span="404-404"];
m0_188 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="var outputFile = new FileInfo(filepath)", span="405-405"];
m0_189 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="!outputFile.Directory.Exists", span="406-406"];
m0_190 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="outputFile.Directory.Create()", span="408-408"];
m0_193 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label=Exception, span="417-417"];
m0_194 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="Log.Error(err)", span="419-419"];
m0_195 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="return false;", span="420-420"];
m0_196 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="385-385"];
m0_155 [cluster="System.IO.Path.GetFileName(string)", file="Composer.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m0_249 [cluster="Unk.Compare", file="Composer.cs", label="Entry Unk.Compare", span=""];
m0_55 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="writer.WriteLine(line)", span="145-145"];
m0_56 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="return true;", span="148-148"];
m0_58 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Log.Error(err)", span="152-152"];
m0_59 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="return false;", span="153-153"];
m0_60 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="134-134"];
m0_57 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label=Exception, span="150-150"];
m0_20 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.AreEqual(1, window.Size)", span="48-48"];
m0_97 [cluster="Unk.GetNextEntry", file="Composer.cs", label="Entry Unk.GetNextEntry", span=""];
m0_113 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="Entry QuantConnect.Compression.UnGZip(string, string)", span="265-265"];
m0_114 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="var dataBuffer = new byte[4096]", span="268-268"];
m0_115 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="var newFileOutput = Path.Combine(targetDirectory, Path.GetFileNameWithoutExtension(gzipFileName))", span="269-269"];
m0_116 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="Stream fileStream = new FileStream(gzipFileName, FileMode.Open, FileAccess.Read)", span="270-270"];
m0_119 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="StreamUtils.Copy(gzipStream, fileOutput, dataBuffer)", span="274-274"];
m0_118 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="var fileOutput = File.Create(newFileOutput)", span="272-272"];
m0_120 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="return newFileOutput;", span="276-276"];
m0_117 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="var gzipStream = new GZipInputStream(fileStream)", span="271-271"];
m0_121 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Composer.cs", label="Exit QuantConnect.Compression.UnGZip(string, string)", span="265-265"];
m0_110 [cluster="Unk.CreateEntry", file="Composer.cs", label="Entry Unk.CreateEntry", span=""];
m0_277 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Composer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_291 [cluster="System.IO.StreamReader.ReadLine()", file="Composer.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m0_124 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="Composer.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0"];
m0_344 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="728-728"];
m0_345 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="var inStream = File.OpenRead(source)", span="730-730"];
m0_348 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="tarArchive.ExtractContents(destination)", span="733-733"];
m0_346 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="var gzipStream = new GZipInputStream(inStream)", span="731-731"];
m0_351 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="inStream.Close()", span="736-736"];
m0_347 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="732-732"];
m0_350 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="gzipStream.Close()", span="735-735"];
m0_349 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="tarArchive.Close()", span="734-734"];
m0_352 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Composer.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="728-728"];
m0_334 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="714-714"];
m0_335 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="var inStream = File.OpenRead(source)", span="716-716"];
m0_337 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="tarArchive.ExtractContents(destination)", span="718-718"];
m0_336 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="717-717"];
m0_339 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="inStream.Close()", span="720-720"];
m0_338 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="tarArchive.Close()", span="719-719"];
m0_340 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Composer.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="714-714"];
m0_242 [cluster="StreamReader.cstr", file="Composer.cs", label="Entry StreamReader.cstr", span=""];
m0_208 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var entry = new ZipEntry(Path.GetFileName(file))", span="442-442"];
m0_202 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="427-427"];
m0_203 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var zipStream = new ZipOutputStream(File.Create(destination))", span="431-431"];
m0_205 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label=files, span="434-434"];
m0_204 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var buffer = new byte[4096]", span="433-433"];
m0_209 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="zipStream.PutNextEntry(entry)", span="443-443"];
m0_211 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="StreamUtils.Copy(fstream, zipStream, buffer)", span="446-446"];
m0_206 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="!File.Exists(file)", span="436-436"];
m0_212 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label=Exception, span="451-451"];
m0_207 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="438-438"];
m0_210 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="var fstream = File.OpenRead(file)", span="444-444"];
m0_213 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Log.Error(err)", span="453-453"];
m0_214 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="427-427"];
m0_342 [cluster="Unk.ExtractContents", file="Composer.cs", label="Entry Unk.ExtractContents", span=""];
m0_240 [cluster="Unk.FirstOrDefault", file="Composer.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_382 [cluster="string.Substring(int)", file="Composer.cs", label="Entry string.Substring(int)", span="0-0"];
m0_125 [cluster="GZipInputStream.cstr", file="Composer.cs", label="Entry GZipInputStream.cstr", span=""];
m0_330 [cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="Composer.cs", label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span=""];
m0_296 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="var entry = zipStream.GetNextEntry()", span="631-631"];
m0_292 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="619-619"];
m0_293 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="StreamReader reader = null", span="621-621"];
m0_295 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="var zipStream = new ZipInputStream(zipstream)", span="628-628"];
m0_294 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="MemoryStream file", span="625-625"];
m0_298 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="633-633"];
m0_297 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="var buffer = new byte[entry.Size]", span="632-632"];
m0_299 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="file = new MemoryStream(buffer)", span="636-636"];
m0_300 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="reader = new StreamReader(file)", span="640-640"];
m0_301 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label=Exception, span="642-642"];
m0_303 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="return reader;", span="647-647"];
m0_302 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="Log.Error(err)", span="644-644"];
m0_304 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="Composer.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="619-619"];
m0_279 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label=firstEntryOnly, span="592-592"];
m0_260 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="588-588"];
m0_278 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="var zip = ZipFile.Read(filename)", span="590-590"];
m0_281 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="595-595"];
m0_282 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="yield break;", span="596-596"];
m0_284 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="600-600"];
m0_280 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="var entry = zip[0]", span="594-594"];
m0_283 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label=zip, span="598-598"];
m0_285 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="588-588"];
m0_123 [cluster="System.IO.Path.Combine(string, string)", file="Composer.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m0_111 [cluster="Unk.Open", file="Composer.cs", label="Entry Unk.Open", span=""];
m0_359 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="tar.CopyEntryContents(output)", span="756-756"];
m0_353 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="745-745"];
m0_354 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="747-747"];
m0_360 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="757-757"];
m0_355 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="TarEntry entry", span="749-749"];
m0_356 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="(entry = tar.GetNextEntry()) != null", span="750-750"];
m0_357 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="entry.IsDirectory", span="752-752"];
m0_358 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="var output = new MemoryStream()", span="754-754"];
m0_361 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="745-745"];
m0_267 [cluster="Unk.ReadZipEntry", file="Composer.cs", label="Entry Unk.ReadZipEntry", span=""];
m0_243 [cluster="Unk.OpenReader", file="Composer.cs", label="Entry Unk.OpenReader", span=""];
m0_332 [cluster="Unk.GetInputStream", file="Composer.cs", label="Entry Unk.GetInputStream", span=""];
m0_317 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="678-678"];
m0_306 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="655-655"];
m0_307 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var files = new List<string>()", span="658-658"];
m0_308 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="659-659"];
m0_311 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="outFolder = zipFile.Substring(0, slash)", span="663-663"];
m0_313 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var fs = File.OpenRead(zipFile)", span="669-669"];
m0_322 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="files.Add(fullZipToPath)", span="688-688"];
m0_325 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="return files;", span="706-706"];
m0_309 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var outFolder = ''''", span="660-660"];
m0_310 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="slash > 0", span="661-661"];
m0_321 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="685-685"];
m0_312 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="665-665"];
m0_314 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="670-670"];
m0_315 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label=zf, span="672-672"];
m0_320 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="682-682"];
m0_316 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="!zipEntry.IsFile", span="675-675"];
m0_318 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="entryFileName == null", span="679-679"];
m0_319 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var buffer = new byte[4096]", span="681-681"];
m0_324 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="694-694"];
m0_323 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="var streamWriter = File.Create(fullZipToPath)", span="692-692"];
m0_326 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Composer.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="655-655"];
m0_331 [cluster="Unk.GetFileName", file="Composer.cs", label="Entry Unk.GetFileName", span=""];
m0_226 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Log.Error(''Compression.Unzip(): Unable to locate zip entry with name: '' + zipEntryName + '' in file: '' + filename)", span="492-492"];
m0_219 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="477-477"];
m0_220 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="StreamReader reader = null", span="479-479"];
m0_222 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="File.Exists(filename)", span="484-484"];
m0_223 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="zip = new ZipFile(filename)", span="488-488"];
m0_224 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="489-489"];
m0_235 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="507-507"];
m0_237 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Log.Error(err, ''File: '' + filename)", span="512-512"];
m0_221 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="zip = null", span="480-480"];
m0_238 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="return reader;", span="514-514"];
m0_231 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="zip != null", span="501-501"];
m0_232 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="zip.Dispose()", span="501-501"];
m0_225 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="entry == null", span="490-490"];
m0_228 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="reader = new StreamReader(entry.OpenReader())", span="496-496"];
m0_227 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="return null;", span="493-493"];
m0_229 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label=Exception, span="498-498"];
m0_236 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label=Exception, span="510-510"];
m0_233 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="reader != null", span="502-502"];
m0_234 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="reader.Close()", span="502-502"];
m0_230 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Log.Error(err, ''Inner try/catch'')", span="500-500"];
m0_239 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="477-477"];
m0_108 [cluster="System.IO.MemoryStream.MemoryStream()", file="Composer.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_167 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="364-364"];
m0_168 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="File.Exists(destination)", span="368-368"];
m0_169 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="File.Delete(destination)", span="368-368"];
m0_170 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip)", span="369-369"];
m0_171 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="return true;", span="370-370"];
m0_172 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label=Exception, span="372-372"];
m0_173 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="Log.Error(err)", span="374-374"];
m0_174 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="return false;", span="375-375"];
m0_175 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="364-364"];
m0_18 [cluster="QuantConnect.Tests.Indicators.RollingWindowTests.AddsData()", file="Composer.cs", label="Assert.AreEqual(1, window.Count)", span="46-46"];
m0_266 [cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="Composer.cs", label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span=""];
m0_68 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="var zip = new ZipFile(path)", span="178-178"];
m0_264 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Composer.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="559-559"];
m0_261 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Composer.cs", label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="553-553"];
m0_262 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Composer.cs", label="var zip = ZipFile.Read(stream)", span="555-555"];
m0_263 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Composer.cs", label=zip, span="557-557"];
m0_265 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Composer.cs", label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="553-553"];
m0_152 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="332-332"];
m0_153 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Composer.cs", label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="334-334"];
m0_154 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="332-332"];
m0_198 [cluster="Unk.Combine", file="Composer.cs", label="Entry Unk.Combine", span=""];
m0_329 [cluster="string.Substring(int, int)", file="Composer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_241 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Composer.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m0_63 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="Entry QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="164-164"];
m0_64 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="File.Exists(path)", span="168-168"];
m0_66 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="zip.AddEntry(entry, data)", span="172-172"];
m0_65 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="var zip = ZipFile.Read(path)", span="170-170"];
m0_67 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="zip.Save()", span="173-173"];
m0_126 [cluster="Unk.Copy", file="Composer.cs", label="Entry Unk.Copy", span=""];
m0_216 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="464-464"];
m0_217 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="return Unzip(filename, null, out zip);", span="466-466"];
m0_218 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Composer.cs", label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="464-464"];
m0_363 [cluster="Unk.CopyEntryContents", file="Composer.cs", label="Entry Unk.CopyEntryContents", span=""];
m0_250 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="528-528"];
m0_251 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="!File.Exists(filename)", span="530-530"];
m0_252 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="532-532"];
m0_254 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="return ReadLinesImpl(filename);", span="538-538"];
m0_253 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="533-533"];
m0_255 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label=Exception, span="540-540"];
m0_256 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="Log.Error(err)", span="542-542"];
m0_257 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="544-544"];
m0_258 [cluster="QuantConnect.Compression.Unzip(string)", file="Composer.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="528-528"];
m0_362 [cluster="TarInputStream.cstr", file="Composer.cs", label="Entry TarInputStream.cstr", span=""];
m0_148 [cluster="string.Replace(string, string)", file="Composer.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_76 [cluster="System.IO.File.Exists(string)", file="Composer.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m0_79 [cluster="Unk.Save", file="Composer.cs", label="Entry Unk.Save", span=""];
m0_134 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="stream.PutNextEntry(entry)", span="300-300"];
m0_127 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="286-286"];
m0_128 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="var zipPath = ''''", span="288-288"];
m0_130 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="zipPath = textPath.Replace(''.csv'', ''.zip'')", span="293-293"];
m0_133 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="var entry = new ZipEntry(zipEntryName)", span="299-299"];
m0_135 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="var fs = File.OpenRead(textPath)", span="302-302"];
m0_142 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label=deleteOriginal, span="317-317"];
m0_143 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="File.Delete(textPath)", span="317-317"];
m0_129 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="var buffer = new byte[4096]", span="292-292"];
m0_137 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="307-307"];
m0_138 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="stream.Write(buffer, 0, sourceBytes)", span="308-308"];
m0_131 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", span="294-294"];
m0_132 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="296-296"];
m0_146 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="return zipPath;", span="323-323"];
m0_140 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="stream.Finish()", span="313-313"];
m0_141 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="stream.Close()", span="314-314"];
m0_136 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="int sourceBytes", span="304-304"];
m0_139 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="sourceBytes > 0", span="310-310"];
m0_144 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label=Exception, span="319-319"];
m0_145 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="Log.Error(err)", span="321-321"];
m0_147 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Composer.cs", label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="286-286"];
m0_375 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="tarEntry.IsDirectory", span="786-786"];
m0_366 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="Entry QuantConnect.Compression.UnTar(string)", span="768-768"];
m0_367 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="771-771"];
m0_378 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="791-791"];
m0_368 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="var file = File.OpenRead(source)", span="773-773"];
m0_370 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label=gzip, span="777-777"];
m0_369 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="var tarIn = new TarInputStream(file)", span="775-775"];
m0_371 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="var gzipStream = new GZipInputStream(file)", span="779-779"];
m0_374 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="(tarEntry = tarIn.GetNextEntry()) != null", span="784-784"];
m0_377 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="tarIn.CopyEntryContents(stream)", span="790-790"];
m0_379 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="tarIn.Close()", span="794-794"];
m0_373 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="TarEntry tarEntry", span="783-783"];
m0_372 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="tarIn = new TarInputStream(gzipStream)", span="780-780"];
m0_376 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="var stream = new MemoryStream()", span="788-788"];
m0_380 [cluster="QuantConnect.Compression.UnTar(string)", file="Composer.cs", label="Exit QuantConnect.Compression.UnTar(string)", span="768-768"];
m0_95 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Composer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_17 [cluster="ZipOutputStream.cstr", file="Composer.cs", label="Entry ZipOutputStream.cstr", span=""];
m0_22 [cluster="Unk.PutNextEntry", file="Composer.cs", label="Entry Unk.PutNextEntry", span=""];
m0_150 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="Composer.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m0_201 [cluster="Unk.ExtractToFile", file="Composer.cs", label="Entry Unk.ExtractToFile", span=""];
m0_69 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="zip.AddEntry(entry, data)", span="180-180"];
m0_70 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="zip.Save()", span="181-181"];
m0_71 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label=Exception, span="185-185"];
m0_74 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="return true;", span="190-190"];
m0_72 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="Log.Error(err)", span="187-187"];
m0_73 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="return false;", span="188-188"];
m0_75 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Composer.cs", label="Exit QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="164-164"];
m0_197 [cluster="Unk.ExtractToDirectory", file="Composer.cs", label="Entry Unk.ExtractToDirectory", span=""];
m0_109 [cluster="ZipArchive.cstr", file="Composer.cs", label="Entry ZipArchive.cstr", span=""];
m0_383 [file="Composer.cs", label=string, span=""];
m1_274 [cluster="lambda expression", file="Compression.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="624-624"];
m1_342 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="522-522"];
m1_59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_previousTime.Date != time.Date", span="247-247"];
m1_60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="249-249"];
m1_61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="252-252"];
m1_285 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
m1_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="655-655"];
m1_299 [cluster="QuantConnect.Securities.Security.GetLastData()", file="Compression.cs", label="System.DateTime", span=""];
m1_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="629-629"];
m1_334 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="260-260"];
m1_347 [cluster="System.Reflection.MethodBase.GetParameters()", file="Compression.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_291 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="Compression.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m1_262 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="593-611"];
m1_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="486-486"];
m1_187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="570-570"];
m1_188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="572-572"];
m1_300 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Compression.cs", label="System.DateTime", span=""];
m1_298 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="Compression.cs", label=int, span=""];
m1_341 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
m1_477 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_322 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="Compression.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m1_120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="412-412"];
m1_124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="417-417"];
m1_125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="418-418"];
m1_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="432-432"];
m1_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="433-433"];
m1_129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="430-430"];
m1_127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnMarginCallWarning()", span="426-426"];
m1_123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="416-416"];
m1_126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=issueMarginCallWarning, span="422-422"];
m1_128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="428-428"];
m1_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="431-431"];
m1_122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="415-415"];
m1_121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="414-414"];
m1_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="nextMarginCallTime = time + marginCallFrequency", span="437-437"];
m1_343 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
m1_462 [cluster="Unk.ToList", file="Compression.cs", label="Entry Unk.ToList", span=""];
m1_24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_previousTime = algorithm.StartDate.Date", span="157-157"];
m1_25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="162-162"];
m1_26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="163-163"];
m1_27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="164-164"];
m1_28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="165-165"];
m1_279 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="627-627"];
m1_366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="bool setStartTime = false", span="741-741"];
m1_417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="yield break;", span="844-844"];
m1_427 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="yield return timeSlice;", span="863-863"];
m1_454 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="yield return timeSlice;", span="930-930"];
m1_367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var timeZone = algorithm.TimeZone", span="742-742"];
m1_368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var history = algorithm.HistoryProvider", span="743-743"];
m1_369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.LiveMode", span="746-746"];
m1_370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="ProcessVolatilityHistoryRequirements(algorithm)", span="748-748"];
m1_372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="753-753"];
m1_375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.UniverseSettings?.Resolution.ToTimeSpan() ?? algorithm.UniverseSettings.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="758-761"];
m1_378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="768-768"];
m1_382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="773-773"];
m1_397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var security = algorithm.Securities[symbol]", span="809-809"];
m1_406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="config = algorithm.SubscriptionManager.Subscriptions.FirstOrDefault(\r\n                                    subscription => subscription.Symbol == symbol && dataType.IsAssignableFrom(subscription.Type))", span="820-821"];
m1_413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None, new Dictionary<Universe, BaseDataCollection>())", span="838-838"];
m1_416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="843-843"];
m1_422 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Debug(''Algorithm warming up...'')", span="853-853"];
m1_426 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="861-861"];
m1_429 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="!algorithm.LiveMode || historyRequests.Count == 0", span="870-870"];
m1_430 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.SetFinishedWarmingUp()", span="872-872"];
m1_432 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="875-875"];
m1_434 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label=feed, span="880-880"];
m1_438 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="887-887"];
m1_442 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="898-898"];
m1_447 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.SetFinishedWarmingUp()", span="917-917"];
m1_448 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="918-918"];
m1_453 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="927-927"];
m1_419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="!setStartTime", span="849-849"];
m1_435 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="!setStartTime", span="882-882"];
m1_393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="history.GetHistory(historyRequests, timeZone)", span="800-800"];
m1_371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="DateTime? lastHistoryTimeUtc = null", span="752-752"];
m1_439 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="lastHistoryTimeUtc.HasValue", span="891-891"];
m1_373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var start = DateTime.UtcNow.Ticks", span="756-756"];
m1_377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="historyRequests.Count != 0", span="765-765"];
m1_380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label=historyRequests, span="770-770"];
m1_386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="784-784"];
m1_387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="786-786"];
m1_388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="787-787"];
m1_390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label=historyRequests, span="793-793"];
m1_431 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="historyRequests.Count != 0", span="873-873"];
m1_374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="757-757"];
m1_391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="795-795"];
m1_425 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="860-860"];
m1_452 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="926-926"];
m1_423 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="DateTime.UtcNow > nextStatusTime", span="855-855"];
m1_450 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="DateTime.UtcNow > nextStatusTime", span="921-921"];
m1_376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="763-763"];
m1_446 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="915-915"];
m1_379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="769-769"];
m1_383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="request.Resolution < minResolution", span="775-775"];
m1_384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="request.Resolution = minResolution", span="777-777"];
m1_385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="778-778"];
m1_381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Security security", span="772-772"];
m1_389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="request.FillForwardResolution = minResolution", span="789-789"];
m1_392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="796-796"];
m1_394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="TimeSlice timeSlice", span="802-802"];
m1_396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="slice.Keys", span="807-807"];
m1_398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var data = slice[symbol]", span="810-810"];
m1_395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var paired = new List<DataFeedPacket>()", span="806-806"];
m1_412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="paired.Add(new DataFeedPacket(security, config, list))", span="835-835"];
m1_409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="config = security.Subscriptions.FirstOrDefault(subscription => dataType.IsAssignableFrom(subscription.Type))", span="827-827"];
m1_399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var list = new List<BaseData>()", span="811-811"];
m1_402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var ticks = data as List<Tick>", span="815-815"];
m1_407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="list.Add(data)", span="825-825"];
m1_408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="dataType = data.GetType()", span="826-826"];
m1_400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Type dataType", span="812-812"];
m1_404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="list.AddRange(ticks)", span="818-818"];
m1_401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="SubscriptionDataConfig config", span="813-813"];
m1_403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="ticks != null", span="816-816"];
m1_405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="dataType = typeof(Tick)", span="819-819"];
m1_411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="throw new Exception($''A data subscription for type '{dataType.Name}' was not found.'');", span="832-832"];
m1_410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="config == null", span="830-830"];
m1_414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="840-840"];
m1_418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice != null", span="847-847"];
m1_421 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_previousTime = timeSlice.Time", span="852-852"];
m1_428 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="lastHistoryTimeUtc = timeSlice.Time", span="864-864"];
m1_415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(err)", span="842-842"];
m1_420 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="setStartTime = true", span="851-851"];
m1_424 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="859-859"];
m1_433 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="876-876"];
m1_437 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_previousTime = timeSlice.Time", span="885-885"];
m1_441 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="895-895"];
m1_436 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="setStartTime = true", span="884-884"];
m1_440 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasHistoricalData = false", span="894-894"];
m1_444 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label=hasHistoricalData, span="904-904"];
m1_443 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="hasHistoricalData = true", span="900-900"];
m1_445 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="lastHistoryTimeUtc = null", span="910-910"];
m1_449 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="919-919"];
m1_451 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="925-925"];
m1_455 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="739-739"];
m1_292 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="Compression.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
m1_504 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Compression.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_340 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226"];
m1_336 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="458-458"];
m1_622 [cluster="decimal.SmartRounding()", file="Compression.cs", label="Entry decimal.SmartRounding()", span="208-208"];
m1_307 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="Compression.cs", label="QuantConnect.Resolution?", span=""];
m1_277 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="627-627"];
m1_311 [cluster="string.Format(string, object)", file="Compression.cs", label=end, span=""];
m1_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_previousTime = time", span="639-639"];
m1_319 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="568-568"];
m1_46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="feed.AddSubscription(new SubscriptionRequest(false, null, security, new SubscriptionDataConfig(security.Subscriptions.First()), algorithm.UtcTime, algorithm.EndDate))", span="211-211"];
m1_464 [cluster="Unk.Any", file="Compression.cs", label="Entry Unk.Any", span=""];
m1_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="642-642"];
m1_45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=addedSecurities, span="208-208"];
m1_244 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.LogMessage(''Algorithm Stopped'')", span="691-691"];
m1_245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="692-692"];
m1_568 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="Compression.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m1_320 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="Compression.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m1_571 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m1_309 [cluster="string.Format(string, params object[])", file="Compression.cs", label=security, span=""];
m1_264 [cluster="Unk.Where", file="Compression.cs", label="Entry Unk.Where", span=""];
m1_468 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_474 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="420-420"];
m1_472 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges, System.Collections.Generic.Dictionary<QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Data.UniverseSelection.BaseDataCollection>)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges, System.Collections.Generic.Dictionary<QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Data.UniverseSelection.BaseDataCollection>)", span="112-112"];
m1_457 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="600-600"];
m1_246 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status == AlgorithmStatus.Deleted", span="696-696"];
m1_62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="portfolioValue == 0m", span="255-255"];
m1_90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.UniverseData", span="337-337"];
m1_91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="kvp.Value.Data", span="339-339"];
m1_92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Security security", span="341-341"];
m1_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="Compression.cs", label="_warmupBarCount = null", span="74-74"];
m1_354 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="Compression.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m1_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.ProcessSynchronousEvents()", span="645-645"];
m1_276 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="619-628"];
m1_542 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="184-184"];
m1_212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="614-614"];
m1_467 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_473 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_294 [cluster="lambda expression", file="Compression.cs", label="s.Resolution", span="658-658"];
m1_68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(logMessage)", span="269-269"];
m1_314 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
m1_603 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="Compression.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m1_272 [cluster="lambda expression", file="Compression.cs", label="Resolution? res = resolution ?? security.Resolution", span="622-622"];
m1_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="109-109"];
m1_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="Compression.cs", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');\r\n                }\r\n\r\n                return null;\r\n            }", span="111-121"];
m1_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="Compression.cs", label="_liveMode = liveMode", span="122-122"];
m1_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="109-109"];
m1_4 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="111-121"];
m1_604 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="Compression.cs", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496"];
m1_273 [cluster="lambda expression", file="Compression.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="623-623"];
m1_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="transactions.ProcessSynchronousEvents()", span="636-636"];
m1_260 [cluster="lambda expression", file="Compression.cs", label="requests.Add(request)", span="607-607"];
m1_333 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="200-200"];
m1_338 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="583-583"];
m1_220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="631-631"];
m1_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="613-613"];
m1_614 [cluster="QuantConnect.Symbol.IsCanonical()", file="Compression.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m1_317 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="541-541"];
m1_461 [cluster="Unk.Min", file="Compression.cs", label="Entry Unk.Min", span=""];
m1_293 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m1_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m1_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="Compression.cs", label="SetWarmup(timeSpan)", span="64-64"];
m1_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m1_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
m1_349 [cluster="lambda expression", file="Compression.cs", label="x.DeclaringType == algorithm.GetType()", span="176-176"];
m1_344 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="175-175"];
m1_348 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="176-176"];
m1_352 [cluster="lambda expression", file="Compression.cs", label="x.Status.IsOpen() && x.Symbol == symbol", span="302-302"];
m1_351 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="302-302"];
m1_356 [cluster="lambda expression", file="Compression.cs", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="489-489"];
m1_355 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="489-489"];
m1_358 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="599-599"];
m1_345 [cluster="lambda expression", file="Compression.cs", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="175-175"];
m1_346 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="175-175"];
m1_350 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="176-176"];
m1_353 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="302-302"];
m1_357 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="489-489"];
m1_359 [cluster="lambda expression", file="Compression.cs", label="x.Key.ID.SecurityType == SecurityType.Forex", span="599-599"];
m1_360 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="599-599"];
m1_480 [cluster="lambda expression", file="Compression.cs", label="x.Value.UniverseSettings?.Resolution.ToTimeSpan() ?? algorithm.UniverseSettings.Resolution.ToTimeSpan()", span="759-759"];
m1_479 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="759-759"];
m1_483 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="768-768"];
m1_486 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="769-769"];
m1_489 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="784-784"];
m1_492 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="786-786"];
m1_495 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="786-786"];
m1_498 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="787-787"];
m1_502 [cluster="lambda expression", file="Compression.cs", label="subscription.Symbol == symbol && dataType.IsAssignableFrom(subscription.Type)", span="821-821"];
m1_506 [cluster="lambda expression", file="Compression.cs", label="dataType.IsAssignableFrom(subscription.Type)", span="827-827"];
m1_505 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="827-827"];
m1_501 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="821-821"];
m1_508 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="895-895"];
m1_481 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="759-759"];
m1_484 [cluster="lambda expression", file="Compression.cs", label="!x.IsInternalFeed", span="768-768"];
m1_485 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="768-768"];
m1_487 [cluster="lambda expression", file="Compression.cs", label="x.Resolution", span="769-769"];
m1_488 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="769-769"];
m1_490 [cluster="lambda expression", file="Compression.cs", label="x.FillForwardResolution.HasValue", span="784-784"];
m1_491 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="784-784"];
m1_493 [cluster="lambda expression", file="Compression.cs", label="x.FillForwardResolution.HasValue", span="786-786"];
m1_494 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="786-786"];
m1_496 [cluster="lambda expression", file="Compression.cs", label="x.FillForwardResolution.Value", span="786-786"];
m1_497 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="786-786"];
m1_499 [cluster="lambda expression", file="Compression.cs", label="x.FillForwardResolution.HasValue", span="787-787"];
m1_500 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="787-787"];
m1_503 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="821-821"];
m1_507 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="827-827"];
m1_509 [cluster="lambda expression", file="Compression.cs", label=x, span="895-895"];
m1_510 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="895-895"];
m1_544 [cluster="lambda expression", file="Compression.cs", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="992-992"];
m1_543 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="992-992"];
m1_545 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="992-992"];
m1_580 [cluster="lambda expression", file="Compression.cs", label="x.Symbol == split.Symbol && x.Type == SplitType.Warning", span="1077-1077"];
m1_579 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="1077-1077"];
m1_581 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="1077-1077"];
m1_612 [cluster="lambda expression", file="Compression.cs", label="kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock", span="1109-1113"];
m1_608 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="1101-1101"];
m1_611 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="1109-1113"];
m1_609 [cluster="lambda expression", file="Compression.cs", label="sub.Resolution", span="1101-1101"];
m1_610 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="1101-1101"];
m1_613 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="1109-1113"];
m1_72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="realtime.ScanPastEvents(time)", span="287-287"];
m1_77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="timeSlice.Slice.SymbolChangedEvents.Keys", prediction=4, span="299-299"];
m1_73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="algorithm.SetDateTime(time)", prediction=4, span="291-291"];
m1_75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label=hasOnDataSymbolChangedEvents, prediction=6, span="295-295"];
m1_78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", prediction=4, span="302-302"];
m1_79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", prediction=4, span="304-304"];
m1_74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", prediction=4, span="293-293"];
m1_80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="309-309"];
m1_87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="security.SetMarketPrice(data)", span="327-327"];
m1_76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", prediction=4, span="297-297"];
m1_88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", prediction=4, span="331-331"];
m1_89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.UniverseData.Count > 0", span="335-335"];
m1_94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="security.Cache.AddData(data)", span="344-344"];
m1_98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="updateData != null", span="355-355"];
m1_252 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="708-708"];
m1_254 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="portfolioValue == 0m", span="712-712"];
m1_271 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="Compression.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m1_275 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="Compression.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m1_278 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Portfolio.CashBook", span="351-351"];
m1_93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Securities.TryGetValue(data.Symbol, out security)", span="342-342"];
m1_96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var cash = kvp.Value", span="353-353"];
m1_99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="cash.Update(updateData)", span="357-357"];
m1_100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="alphas.ProcessSynchronousEvents()", span="362-362"];
m1_247 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="698-698"];
m1_250 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="704-704"];
m1_251 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SampleRange(algorithm.GetChartUpdates())", span="707-707"];
m1_253 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="709-709"];
m1_255 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="714-714"];
m1_257 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="138-138"];
m1_259 [cluster="System.TimeSpan.FromMinutes(double)", file="Compression.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m1_267 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Compression.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_270 [cluster="Unk.Add", file="Compression.cs", label="Entry Unk.Add", span=""];
m1_138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="453-453"];
m1_154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="490-490"];
m1_256 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="718-719"];
m1_258 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Compression.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var updateData = cash.ConversionRateSecurity?.GetLastData()", span="354-354"];
m1_102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="transactions.ProcessSynchronousEvents()", span="368-368"];
m1_101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="realtime.SetTime(timeSlice.Time)", span="365-365"];
m1_248 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="699-699"];
m1_268 [cluster="System.Exception.Exception(string)", file="Compression.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_249 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="700-700"];
m1_261 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="970-970"];
m1_269 [cluster="Unk.DelegateForCallMethod", file="Compression.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m1_140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="456-456"];
m1_139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnFrameworkSecuritiesChanged(timeSlice.SecurityChanges)", span="454-454"];
m1_156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="495-495"];
m1_155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="493-493"];
m1_295 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Compression.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="546-546"];
m1_525 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="Compression.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m1_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SystemDebugMessage(logMessage)", span="270-270"];
m1_306 [cluster="QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", file="Compression.cs", label="bool?", span=""];
m1_475 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="594-594"];
m1_567 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m1_623 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
m1_136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="nextSettlementScanTime = time + settlementScanFrequency", span="445-445"];
m1_312 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="443-443"];
m1_318 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="561-561"];
m1_242 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status == AlgorithmStatus.Stopped", span="688-688"];
m1_289 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="493-493"];
m1_290 [cluster="Unk.]", file="Compression.cs", label="Entry Unk.]", span=""];
m1_63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SamplePerformance(_previousTime.Date, 0)", span="257-257"];
m1_64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", prediction=4, span="261-261"];
m1_65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, file="Compression.cs", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", prediction=13, span="263-263"];
m1_66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="portfolioValue <= 0", span="266-266"];
m1_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="return request;", span="646-646"];
m1_615 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1152-1152"];
m1_617 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label="algorithm.RunTimeError = err", span="1156-1156"];
m1_616 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label=Exception, span="1154-1154"];
m1_618 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1157-1157"];
m1_619 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label="Log.Error(err)", span="1158-1158"];
m1_620 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1147-1147"];
m1_288 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m1_157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="496-496"];
m1_160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.ConsolidatorUpdateData", span="505-505"];
m1_161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var consolidators = update.Target.Consolidators", span="507-507"];
m1_159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="498-498"];
m1_158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="497-497"];
m1_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=consolidators, span="508-508"];
m1_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="Compression.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="652-652"];
m1_602 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="config.IsCustomData", span="182-182"];
m1_36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="185-185"];
m1_37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="methodInvokers.ContainsKey(config.Type)", span="188-188"];
m1_38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="genericMethod == null && !hasOnDataSlice", span="191-191"];
m1_39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="193-193"];
m1_40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="194-194"];
m1_41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="195-195"];
m1_42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="genericMethod != null", span="197-197"];
m1_243 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="690-690"];
m1_466 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m1_83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Securities.Add(security)", span="316-316"];
m1_471 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Compression.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618"];
m1_176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="update.Data", span="544-544"];
m1_189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="574-574"];
m1_190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="577-577"];
m1_55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="leanManager.Update()", span="236-236"];
m1_174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="MethodInvoker methodInvoker", span="536-536"];
m1_172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="530-530"];
m1_173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.CustomData", span="534-534"];
m1_175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="537-537"];
m1_191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="579-579"];
m1_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="666-666"];
m1_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="alphas.ProcessSynchronousEvents()", span="670-670"];
m1_239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Liquidate()", span="682-682"];
m1_240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="683-683"];
m1_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="665-665"];
m1_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="673-673"];
m1_238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="681-681"];
m1_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="664-664"];
m1_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="663-663"];
m1_237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="679-679"];
m1_236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="676-676"];
m1_241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="684-684"];
m1_321 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1165-1165"];
m1_624 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="config.Increment == TimeSpan.Zero", span="1167-1167"];
m1_626 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1172-1172"];
m1_627 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="return dataPointEndTime == roundedDataPointEndTime;", span="1173-1173"];
m1_625 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="return true;", span="1169-1169"];
m1_628 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1165-1165"];
m1_330 [cluster="Unk.Collapse", file="Compression.cs", label="Entry Unk.Collapse", span=""];
m1_331 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
m1_337 [cluster="System.Exception.Exception(string, System.Exception)", file="Compression.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m1_215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnFrameworkData(timeSlice.Slice)", span="623-623"];
m1_569 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="Compression.cs", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214"];
m1_339 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
m1_67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="268-268"];
m1_459 [cluster="Unk.Select", file="Compression.cs", label="Entry Unk.Select", span=""];
m1_44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var addedSecurities = algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager,\r\n                MarketHoursDatabase.FromDataFolder(), SymbolPropertiesDatabase.FromDataFolder(),\r\n                DefaultBrokerageModel.DefaultMarketMap, SecurityChanges.None)", span="205-207"];
m1_323 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="Compression.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
m1_478 [cluster="Unk.Subtract", file="Compression.cs", label="Entry Unk.Subtract", span=""];
m1_325 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Compression.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="626-626"];
m1_304 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="QuantConnect.Resolution?", span=""];
m1_546 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var i = delistings.Count - 1", span="1015-1015"];
m1_548 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var security = algorithm.Securities[delistings[i].Symbol]", span="1018-1018"];
m1_550 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var delistingTime = delistings[i].Time", span="1022-1022"];
m1_558 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="1037-1038"];
m1_560 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, message)", span="1046-1047"];
m1_561 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="1052-1053"];
m1_562 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="algorithm.Transactions.ProcessRequest(request)", span="1056-1056"];
m1_563 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="delistings.RemoveAt(i)", span="1058-1058"];
m1_547 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="i >= 0", span="1015-1015"];
m1_564 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="i--", span="1015-1015"];
m1_549 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="security.Holdings.Quantity == 0", span="1019-1019"];
m1_551 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="1023-1023"];
m1_552 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="1024-1024"];
m1_553 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="security.LocalTime < nextMarketClose", span="1026-1026"];
m1_555 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="security.Type == SecurityType.Option", span="1031-1031"];
m1_556 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var option = (Option)security", span="1033-1033"];
m1_557 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="security.Holdings.Quantity > 0", span="1035-1035"];
m1_554 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="SubmitOrderRequest request", span="1029-1029"];
m1_559 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var message = option.GetPayOff(option.Underlying.Price) > 0\r\n                            ? ''Automatic option assignment on expiration''\r\n                            : ''Option expiration''", span="1042-1044"];
m1_565 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="1013-1013"];
m1_327 [cluster="Unk.methodInvoker", file="Compression.cs", label="Entry Unk.methodInvoker", span=""];
m1_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="649-649"];
m1_329 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1065-1065"];
m1_572 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="newSplits.Values", span="1067-1067"];
m1_576 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="!splitWarnings.Any(x => x.Symbol == split.Symbol && x.Type == SplitType.Warning)", span="1077-1077"];
m1_577 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="splitWarnings.Add(split)", span="1079-1079"];
m1_573 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="split.Type != SplitType.Warning", span="1069-1069"];
m1_574 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="Log.Trace($''AlgorithmManager.Run() Security split occurred: {split}'')", span="1071-1071"];
m1_575 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="Log.Trace($''AlgorithmManager.Run() Security split warning: {split}'')", span="1075-1075"];
m1_578 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1065-1065"];
m1_470 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m1_332 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
m1_51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="224-224"];
m1_217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="628-628"];
m1_605 [cluster="Unk.CancelOpenOrders", file="Compression.cs", label="Entry Unk.CancelOpenOrders", span=""];
m1_118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=executedTickets, span="407-407"];
m1_137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="449-449"];
m1_469 [cluster="Unk.GetType", file="Compression.cs", label="Entry Unk.GetType", span=""];
m1_566 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
m1_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="630-630"];
m1_526 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="972-972"];
m1_528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="975-975"];
m1_527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="newSplitMethodInfo != null", span="973-973"];
m1_530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="return false;", span="978-978"];
m1_529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="return true;", span="976-976"];
m1_531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="970-970"];
m1_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null,\r\n                TickType = subscription.TickType\r\n            }", span="638-644"];
m1_524 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="Compression.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m1_119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="409-409"];
m1_476 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m1_213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.Slice.HasData", span="619-619"];
m1_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="656-656"];
m1_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnEndOfAlgorithm()", span="659-659"];
m1_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnEndOfTimeStep()", span="648-648"];
m1_226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_currentTimeStepTime = DateTime.MinValue", span="653-653"];
m1_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="661-661"];
m1_117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="406-406"];
m1_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="update.Data", span="510-510"];
m1_170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="528-528"];
m1_171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="529-529"];
m1_153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="489-489"];
m1_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="443-443"];
m1_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="Compression.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="619-628"];
m1_29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="168-168"];
m1_30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="169-169"];
m1_31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="170-170"];
m1_621 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
m1_523 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
m1_56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var time = timeSlice.Time", span="238-238"];
m1_57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_dataPointCount += timeSlice.DataPointCount", span="239-239"];
m1_58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=backtestMode, span="244-244"];
m1_10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="138-138"];
m1_11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_dataPointCount = 0", span="141-141"];
m1_12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm = algorithm", span="142-142"];
m1_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="631-631"];
m1_50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status != AlgorithmStatus.Running", span="222-222"];
m1_177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="update.DataType.IsInstanceOfType(dataPoint)", span="546-546"];
m1_178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="methodInvoker(algorithm, dataPoint)", span="548-548"];
m1_305 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="bool?", span=""];
m1_582 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="int i = splitWarnings.Count - 1", span="1093-1093"];
m1_584 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var split = splitWarnings[i]", span="1095-1095"];
m1_585 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var security = algorithm.Securities[split.Symbol]", span="1096-1096"];
m1_590 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var derivatives = algorithm.Securities.Where(kvp => kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock\r\n                )", span="1109-1114"];
m1_594 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="algorithm.Transactions.CancelOpenOrders(optionContractSymbol, ''Canceled due to impending split. Separate MarketOnClose order submitted to liquidate position.'')", span="1122-1122"];
m1_595 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var request = new SubmitOrderRequest(OrderType.MarketOnClose, optionContractSecurity.Type, optionContractSymbol,\r\n                        -optionContractSecurity.Holdings.Quantity, 0, 0, algorithm.UtcTime,\r\n                        ''Liquidated due to impending split. Option splits are not currently supported.''\r\n                    )", span="1124-1127"];
m1_596 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="algorithm.Transactions.AddOrder(request)", span="1130-1130"];
m1_598 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="algorithm.Debug($''MarktetOnClose order submitted for option contract '{optionContractSymbol}' due to impending {split.Symbol.Value} split event. ''\r\n                        + ''Option splits are not currently supported.'')", span="1135-1136"];
m1_599 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="splitWarnings.RemoveAt(i)", span="1140-1140"];
m1_583 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="i >= 0", span="1093-1093"];
m1_600 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="i--", span="1093-1093"];
m1_586 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="1098-1098"];
m1_587 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var highestResolutionSubscription = security.Subscriptions.OrderBy(sub => sub.Resolution).First()", span="1101-1101"];
m1_588 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var latestMarketOnCloseTimeRoundedDownByResolution = nextMarketClose.Subtract(MarketOnCloseOrder.DefaultSubmissionTimeBuffer)\r\n                    .RoundDownInTimeZone(security.Resolution.ToTimeSpan(), security.Exchange.TimeZone, highestResolutionSubscription.DataTimeZone)", span="1102-1103"];
m1_589 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="security.LocalTime < latestMarketOnCloseTimeRoundedDownByResolution", span="1106-1106"];
m1_591 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label=derivatives, span="1116-1116"];
m1_592 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var optionContractSymbol = kvp.Key", span="1118-1118"];
m1_593 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="var optionContractSecurity = (Option) kvp.Value", span="1119-1119"];
m1_597 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="optionContractSecurity.IsTradable = false", span="1133-1133"];
m1_601 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1087-1087"];
m1_463 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="Compression.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m1_570 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
m1_308 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="Compression.cs", label=int, span=""];
m1_456 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="934-934"];
m1_511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="936-936"];
m1_512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="algorithm.Securities", span="938-938"];
m1_515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="944-944"];
m1_516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="historyReq != null && algorithm.HistoryProvider != null", span="946-946"];
m1_517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="948-948"];
m1_513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="var security = kvp.Value", span="940-940"];
m1_514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="security.VolatilityModel != VolatilityModel.Null", span="942-942"];
m1_520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="slice.Bars.ContainsKey(security.Symbol)", span="953-953"];
m1_521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="954-954"];
m1_518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="history != null", span="949-949"];
m1_519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label=history, span="951-951"];
m1_522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="934-934"];
m1_301 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", file="Compression.cs", label="QuantConnect.Resolution?", span=""];
m1_361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="726-726"];
m1_362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Compression.cs", label=_lock, span="728-728"];
m1_363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Compression.cs", label="state != AlgorithmStatus.Running", span="732-732"];
m1_364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Compression.cs", label="_algorithm.Status = state", span="734-734"];
m1_365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="726-726"];
m1_324 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m1_106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="379-379"];
m1_142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="459-459"];
m1_143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="460-460"];
m1_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="split.Type != SplitType.SplitOccurred", span="478-478"];
m1_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Split for {split.Symbol}'')", span="483-483"];
m1_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Portfolio.ApplyDividend(dividend)", span="469-469"];
m1_145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.Slice.Dividends.Values", span="466-466"];
m1_141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="458-458"];
m1_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="461-461"];
m1_146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Dividend for {dividend.Symbol}'')", span="468-468"];
m1_148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.Slice.Splits.Values", span="473-473"];
m1_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.Portfolio.ApplySplit(split)", span="484-484"];
m1_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="resolution = resolution ?? security.Resolution", span="633-633"];
m1_328 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="985-985"];
m1_532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="newDelistings.Values", span="987-987"];
m1_534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="992-992"];
m1_535 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="delistings.Add(delisting)", span="994-994"];
m1_538 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="1001-1001"];
m1_533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="delisting.Type == DelistingType.Warning", span="990-990"];
m1_536 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="995-995"];
m1_537 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="1000-1000"];
m1_539 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label=cancelledOrders, span="1002-1002"];
m1_540 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="1004-1004"];
m1_541 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="Compression.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="985-985"];
m1_84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.SecuritiesUpdateData", span="322-322"];
m1_482 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="Compression.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m1_52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="token.IsCancellationRequested", span="229-229"];
m1_53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="231-231"];
m1_54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="232-232"];
m1_315 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
m1_302 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="Compression.cs", label="System.DateTime", span=""];
m1_21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var splitWarnings = new List<Split>()", span="152-152"];
m1_22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithmId = job.AlgorithmId", span="155-155"];
m1_23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.Running", span="156-156"];
m1_214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnData(timeSlice.Slice)", span="622-622"];
m1_335 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfTimeStep()", file="Compression.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfTimeStep()", span="414-414"];
m1_13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="143-143"];
m1_14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="144-144"];
m1_15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="145-145"];
m1_81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="timeSlice.SecurityChanges.AddedSecurities", span="311-311"];
m1_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="636-636"];
m1_82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="313-313"];
m1_179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label=Exception, span="552-552"];
m1_182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="556-556"];
m1_183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="return;", span="557-557"];
m1_180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError = err", span="554-554"];
m1_181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="555-555"];
m1_184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="564-564"];
m1_16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="146-146"];
m1_17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var nextMarginCallTime = DateTime.MinValue", span="147-147"];
m1_18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="148-148"];
m1_19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var nextSettlementScanTime = DateTime.MinValue", span="149-149"];
m1_20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var delistings = new List<Delisting>()", span="151-151"];
m1_32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="171-171"];
m1_33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="174-176"];
m1_34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.SubscriptionManager.Subscriptions", span="179-179"];
m1_296 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="Compression.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m1_85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var security = update.Target", span="324-324"];
m1_70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="SampleBenchmark(algorithm, results, time)", span="277-277"];
m1_310 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Compression.cs", label=start, span=""];
m1_47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="215-215"];
m1_48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Stream(algorithm, feed, results, token)", span="216-216"];
m1_49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_currentTimeStepTime = DateTime.UtcNow", span="219-219"];
m1_313 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="672-672"];
m1_107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.RunTimeError != null", span="382-382"];
m1_109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="385-385"];
m1_110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="390-390"];
m1_111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="bool issueMarginCallWarning", span="393-393"];
m1_114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var executingMarginCall = false", span="397-397"];
m1_115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="algorithm.OnMarginCall(marginCallOrders)", span="401-401"];
m1_108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="384-384"];
m1_112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="var marginCallOrders = algorithm.Portfolio.MarginCallModel.GetMarginCallOrders(out issueMarginCallWarning)", span="394-394"];
m1_113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="marginCallOrders.Count != 0", span="395-395"];
m1_116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="Compression.cs", label="executingMarginCall = true", span="403-403"];
m1_297 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="Compression.cs", label="QuantConnect.Resolution?", span=""];
m1_316 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m1_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="288-288"];
m1_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="Compression.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="291-291"];
m1_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="288-288"];
m1_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="398-398"];
m1_185 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Compression.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427"];
m1_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="500-500"];
m1_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, dataType)", span="513-513"];
m1_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="518-518"];
m1_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="522-535"];
m1_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="history.Any() && history.First().Values.Any()", span="539-539"];
m1_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="return null;", span="544-544"];
m1_71 [cluster="Unk.Memoize", file="Compression.cs", label="Entry Unk.Memoize", span=""];
m1_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="617-617"];
m1_134 [cluster="Unk.DefaultIfEmpty", file="Compression.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m1_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="502-502"];
m1_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="509-509"];
m1_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="516-516"];
m1_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="519-519"];
m1_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="537-537"];
m1_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="503-503"];
m1_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="var dataType = typeof(BaseData)", span="506-506"];
m1_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="507-507"];
m1_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="401-401"];
m1_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="631-631"];
m1_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="return History(new[] { symbol }, start, end, resolution).Get(symbol).Memoize();", span="406-406"];
m1_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="398-398"];
m1_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=green, community=0, file="Compression.cs", label="var securityType = symbol.ID.SecurityType", prediction=14, span="400-400"];
m1_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="Compression.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="403-403"];
m1_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="492-492"];
m1_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="494-494"];
m1_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="return null;", span="496-496"];
m1_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="return history.First().Values.First();", span="541-541"];
m1_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="492-492"];
m1_303 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="Compression.cs", label="System.DateTime", span=""];
m1_607 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Compression.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
m1_458 [cluster="System.DateTime.AddSeconds(double)", file="Compression.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m1_465 [cluster="System.Math.Min(long, long)", file="Compression.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m1_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="Compression.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="617-617"];
m1_606 [cluster="SubmitOrderRequest.cstr", file="Compression.cs", label="Entry SubmitOrderRequest.cstr", span=""];
m1_326 [cluster="System.Type.IsInstanceOfType(object)", file="Compression.cs", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
m1_460 [cluster="Unk.DefaultIfEmpty", file="Compression.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m1_629 [file="Compression.cs", label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
m1_630 [file="Compression.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m1_631 [file="Compression.cs", label=symbol, span=""];
m1_632 [file="Compression.cs", label=split, span=""];
m1_633 [file="Compression.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m1_634 [file="Compression.cs", label=symbol, span=""];
m1_635 [file="Compression.cs", label=dataType, span=""];
m1_636 [file="Compression.cs", label=delisting, span=""];
m1_637 [file="Compression.cs", label=split, span=""];
m1_638 [file="Compression.cs", label=security, span=""];
m2_33 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="158-158"];
m2_40 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="var value = Get(key)", span="161-161"];
m2_42 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Log.Trace(''Config.GetValue(): '' + key + '' - Using default value: '' + defaultValue)", span="164-164"];
m2_43 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return defaultValue;", span="165-165"];
m2_41 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="string.IsNullOrEmpty(value)", span="162-162"];
m2_46 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return (T) Enum.Parse(type, value);", span="171-171"];
m2_47 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return (T)Convert.ChangeType(value, type);", span="173-173"];
m2_44 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="var type = typeof (T)", span="168-168"];
m2_45 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="type.IsEnum", span="169-169"];
m2_48 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="158-158"];
m2_26 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Config.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m2_34 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="134-134"];
m2_35 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="return GetValue(key, defaultValue);", span="136-136"];
m2_36 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="134-134"];
m2_50 [cluster="System.Enum.Parse(System.Type, string)", file="Config.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m2_10 [cluster="System.IO.File.ReadAllText(string)", file="Config.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m2_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Config.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_9 [cluster="System.IO.File.Exists(string)", file="Config.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m2_37 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m2_38 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="return GetValue(key, defaultValue);", span="147-147"];
m2_39 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m2_49 [cluster="string.IsNullOrEmpty(string)", file="Config.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_30 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="123-123"];
m2_31 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="return GetValue(key, defaultValue);", span="125-125"];
m2_32 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="123-123"];
m2_25 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Config.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m2_51 [cluster="System.Convert.ChangeType(object, System.Type)", file="Config.cs", label="Entry System.Convert.ChangeType(object, System.Type)", span="0-0"];
m2_11 [cluster="Unk.>", file="Config.cs", label="Entry Unk.>", span=""];
m2_12 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m2_13 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="var value = ''''", span="85-85"];
m2_16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="_settings != null && _settings.ContainsKey(key)", span="90-90"];
m2_17 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="value = _settings[key]", span="92-92"];
m2_18 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="value = defaultValue", span="96-96"];
m2_14 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="!_loaded", span="88-88"];
m2_15 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Initialize()", span="88-88"];
m2_22 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="return value;", span="104-104"];
m2_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label=Exception, span="100-100"];
m2_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Log.Error(''Config.Get(): '' + err.Message)", span="102-102"];
m2_23 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m2_27 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="112-112"];
m2_28 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="Config.cs", label="_settings[key] = value", span="114-114"];
m2_29 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.Set(string, string)", span="112-112"];
m2_0 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="Entry QuantConnect.Configuration.Config.Initialize()", span="61-61"];
m2_1 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="var file = ''''", span="63-63"];
m2_2 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label=_loaded, span="65-65"];
m2_3 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="return;", span="65-65"];
m2_4 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="File.Exists(_config)", span="68-68"];
m2_5 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="file = File.ReadAllText(_config)", span="70-70"];
m2_7 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="_loaded = true", span="74-74"];
m2_6 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="_settings = JsonConvert.DeserializeObject<Dictionary<string, string>>(file)", span="71-71"];
m2_8 [cluster="QuantConnect.Configuration.Config.Initialize()", file="Config.cs", label="Exit QuantConnect.Configuration.Config.Initialize()", span="61-61"];
m3_138 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Engine.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="69-69"];
m3_143 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="32-32"];
m3_256 [cluster="System.Runtime.Remoting.ObjectHandle.Unwrap()", file="Engine.cs", label="Entry System.Runtime.Remoting.ObjectHandle.Unwrap()", span="0-0"];
m3_180 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_158 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91"];
m3_141 [cluster="Unk.Error", file="Engine.cs", label="Entry Unk.Error", span=""];
m3_224 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", span="143-143"];
m3_179 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_164 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="176-176"];
m3_181 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", file="Engine.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", span="118-118"];
m3_186 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59"];
m3_153 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="74-74"];
m3_140 [cluster="System.DateTime.ToShortTimeString()", file="Engine.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m3_159 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Engine.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m3_162 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="422-422"];
m3_142 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m3_168 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="100-100"];
m3_202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="142-142"];
m3_196 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="319-337"];
m3_197 [cluster="lambda expression", file="Engine.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="327-327"];
m3_198 [cluster="lambda expression", file="Engine.cs", label=Exception, span="329-329"];
m3_200 [cluster="lambda expression", file="Engine.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="335-335"];
m3_199 [cluster="lambda expression", file="Engine.cs", label="Log.Error(''Engine.Run'', err)", span="332-332"];
m3_201 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="319-337"];
m3_195 [cluster="System.Console.Read()", file="Engine.cs", label="Entry System.Console.Read()", span="0-0"];
m3_149 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m3_155 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="577-577"];
m3_251 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh.Initialize(job)", span="585-585"];
m3_252 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Loaded and Initialized Result Handler: '' + resultHandler + ''  v'' + Constants.Version)", span="586-586"];
m3_253 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rh;", span="587-587"];
m3_254 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="577-577"];
m3_171 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="99-99"];
m3_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="189-189"];
m3_246 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="69-69"];
m3_163 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="333-333"];
m3_167 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="524-524"];
m3_225 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rth = default(IRealTimeHandler)", span="526-526"];
m3_226 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.RealTimeEndpoint", span="527-527"];
m3_229 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="532-532"];
m3_232 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="538-538"];
m3_227 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.Backtesting", span="530-530"];
m3_230 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.LiveTrading", span="536-536"];
m3_228 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="531-531"];
m3_231 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="537-537"];
m3_233 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rth;", span="541-541"];
m3_234 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="524-524"];
m3_165 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="488-488"];
m3_204 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var df = default(IDataFeed)", span="490-490"];
m3_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.DataEndpoint", span="491-491"];
m3_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="496-496"];
m3_210 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new DatabaseDataFeed(algorithm, (BacktestNodePacket)job)", span="501-501"];
m3_213 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="507-507"];
m3_217 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new LiveTradingDataFeed(algorithm, (LiveNodePacket)job, ds)", span="514-514"];
m3_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Backtesting", span="495-495"];
m3_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Database", span="500-500"];
m3_212 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.FileSystem", span="506-506"];
m3_215 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.LiveTrading", span="512-512"];
m3_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="497-497"];
m3_211 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Database Datafeed'')", span="502-502"];
m3_214 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="508-508"];
m3_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var ds = Composer.Instance.GetExportedValueByTypeName<IDataQueueHandler>(Config.Get(''data-queue-handler'', ''LiveDataQueue''))", span="513-513"];
m3_218 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="515-515"];
m3_219 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return df;", span="518-518"];
m3_220 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="488-488"];
m3_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m3_174 [cluster="System.Exception.Exception(string)", file="Engine.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_157 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="82-82"];
m3_194 [cluster="System.IDisposable.Dispose()", file="Engine.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_172 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="Engine.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="82-82"];
m3_221 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="46-46"];
m3_152 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="38-38"];
m3_145 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m3_146 [cluster="System.Threading.Thread.Start()", file="Engine.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m3_166 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="553-553"];
m3_237 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ITransactionHandler th", span="555-555"];
m3_238 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.TransactionEndpoint", span="556-556"];
m3_240 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BrokerageTransactionHandler(algorithm, brokerage)", span="559-559"];
m3_242 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="565-565"];
m3_239 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="TransactionHandlerEndpoint.Brokerage", span="558-558"];
m3_241 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Brokerage Transaction Models.'')", span="560-560"];
m3_243 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="566-566"];
m3_244 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return th;", span="569-569"];
m3_245 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="553-553"];
m3_151 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m3_273 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68"];
m3_193 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="106-106"];
m3_222 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="152-152"];
m3_235 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="100-100"];
m3_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m3_257 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket)", span="88-88"];
m3_192 [cluster="System.Threading.Thread.Abort()", file="Engine.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m3_154 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="596-596"];
m3_258 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="var sh = default(ISetupHandler)", span="598-598"];
m3_259 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=setupMethod, span="600-600"];
m3_260 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Console", span="603-603"];
m3_263 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Backtesting", span="608-608"];
m3_266 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Brokerage", span="612-612"];
m3_261 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new ConsoleSetupHandler()", span="604-604"];
m3_262 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="605-605"];
m3_264 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BacktestingSetupHandler()", span="609-609"];
m3_265 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="610-610"];
m3_267 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BrokerageSetupHandler()", span="613-613"];
m3_268 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Brokerage Algorithm Setup Handler.'')", span="614-614"];
m3_269 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return sh;", span="617-617"];
m3_270 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="596-596"];
m3_182 [cluster="double.ToString(string)", file="Engine.cs", label="Entry double.ToString(string)", span="0-0"];
m3_272 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="111-111"];
m3_191 [cluster="System.Threading.Thread.Sleep(int)", file="Engine.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m3_144 [cluster="QuantConnect.Interfaces.IJobQueueHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.Initialize()", span="32-32"];
m3_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="585-585"];
m3_190 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m3_148 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="38-38"];
m3_187 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="106-106"];
m3_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168"];
m3_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithmPath = ''''", span="171-171"];
m3_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string mode = ''RELEASE''", span="172-172"];
m3_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmNodePacket job = null", span="173-173"];
m3_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Constants.Version + '' Mode: '' + mode)", span="184-184"];
m3_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithm = default(IAlgorithm)", span="174-174"];
m3_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var startTime = DateTime.Now", span="175-175"];
m3_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="176-176"];
m3_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="183-183"];
m3_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="185-185"];
m3_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="186-186"];
m3_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="192-192"];
m3_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="193-193"];
m3_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="194-194"];
m3_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=CompositionException, span="196-196"];
m3_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.Initialize()", span="201-201"];
m3_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="197-197"];
m3_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.Initialize()", span="202-202"];
m3_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.Initialize()", span="203-203"];
m3_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="206-206"];
m3_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Start()", span="207-207"];
m3_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="438-438"];
m3_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Abort()", span="438-438"];
m3_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.ResetManager()", span="212-212"];
m3_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var initializeComplete = false", span="215-215"];
m3_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadFeed = null", span="216-216"];
m3_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadTransactions = null", span="217-217"];
m3_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed != null && threadFeed.IsAlive", span="435-435"];
m3_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Abort()", span="435-435"];
m3_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadResults = null", span="218-218"];
m3_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="436-436"];
m3_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Abort()", span="436-436"];
m3_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadRealTime = null", span="219-219"];
m3_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = JobQueue.NextJob(out algorithmPath)", span="224-224"];
m3_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job.Version != Constants.Version || (LiveMode && job.Redelivered)", span="228-228"];
m3_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Constants.Version)", span="230-230"];
m3_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.AcknowledgeJob(job)", span="234-234"];
m3_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="235-235"];
m3_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="236-236"];
m3_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="237-237"];
m3_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job == null", span="240-240"];
m3_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="244-244"];
m3_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="247-247"];
m3_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler = GetResultHandler(job)", span="250-250"];
m3_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="257-257"];
m3_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="260-260"];
m3_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError)", span="270-270"];
m3_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="277-277"];
m3_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="287-287"];
m3_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="293-293"];
m3_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="294-294"];
m3_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="295-295"];
m3_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="301-301"];
m3_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Constants.Version))", span="314-314"];
m3_71 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, AlgorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(''Engine.Run'', err);\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                            }, job.UserPlan == UserPlan.Free ? 1024 : MaximumRamAllocation)", span="319-337"];
m3_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="362-362"];
m3_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                            job.AlgorithmId, totalSeconds.ToString(''F2''), ((AlgorithmManager.DataPoints / (double)1000) / totalSeconds).ToString(''F0''), AlgorithmManager.DataPoints.ToString(''N0'')))", span="407-408"];
m3_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="410-410"];
m3_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = null", span="238-238"];
m3_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="251-251"];
m3_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Start()", span="252-252"];
m3_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults != null && threadResults.IsAlive", span="437-437"];
m3_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Abort()", span="437-437"];
m3_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="263-263"];
m3_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="267-267"];
m3_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLiveMode(LiveMode)", span="288-288"];
m3_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLocked()", span="289-289"];
m3_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="292-292"];
m3_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.RunTimeError != null", span="346-346"];
m3_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw algorithm.RunTimeError;", span="348-348"];
m3_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="375-375"];
m3_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var profitLoss =\r\n                                    new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="394-395"];
m3_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                    SetupHandler.StartingPortfolioValue, algorithm.Portfolio.TotalFees, 252)", span="396-397"];
m3_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=initializeComplete, span="281-281"];
m3_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = false", span="265-265"];
m3_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="273-273"];
m3_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="268-268"];
m3_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(errorMessage)", span="269-269"];
m3_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="275-275"];
m3_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="276-276"];
m3_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="startTime = DateTime.Now", span="284-284"];
m3_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.Exit()", span="424-424"];
m3_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="406-406"];
m3_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="298-298"];
m3_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed = new Thread(DataFeed.Run) {Name = ''DataFeed Thread''}", span="304-304"];
m3_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions = new Thread(TransactionHandler.Run) {Name = ''Transaction Thread''}", span="305-305"];
m3_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Start()", span="309-309"];
m3_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime = new Thread(RealTimeHandler.Run) {Name = ''RealTime Thread''}", span="306-306"];
m3_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Start()", span="310-310"];
m3_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime.Start()", span="311-311"];
m3_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!complete", span="339-339"];
m3_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="341-341"];
m3_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="342-342"];
m3_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="351-351"];
m3_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="374-374"];
m3_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="354-354"];
m3_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed != null", span="355-355"];
m3_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="355-355"];
m3_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler != null", span="356-356"];
m3_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var message = ''Runtime Error: '' + err.Message", span="358-358"];
m3_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="359-359"];
m3_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.LogMessage(message)", span="360-360"];
m3_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="361-361"];
m3_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="388-390"];
m3_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="392-392"];
m3_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="393-393"];
m3_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var holdings = new Dictionary<string, Holding>()", span="376-376"];
m3_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statistics = new Dictionary<string, string>()", span="377-377"];
m3_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var banner = new Dictionary<string, string>()", span="378-378"];
m3_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string strategyEquityKey = ''Strategy Equity''", span="383-383"];
m3_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string equityKey = ''Equity''", span="384-384"];
m3_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="385-385"];
m3_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="400-400"];
m3_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="402-402"];
m3_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="412-412"];
m3_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler.Exit()", span="418-418"];
m3_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="414-414"];
m3_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="419-419"];
m3_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler.Exit()", span="420-420"];
m3_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="StateCheck.Ping.Exit()", span="425-425"];
m3_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var ts = Stopwatch.StartNew()", span="428-428"];
m3_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="429-429"];
m3_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.Sleep(100)", span="431-431"];
m3_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="431-431"];
m3_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="_brokerage != null", span="440-440"];
m3_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="_brokerage.Disconnect()", span="442-442"];
m3_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler != null", span="444-444"];
m3_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.Dispose()", span="446-446"];
m3_128 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="448-448"];
m3_129 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="450-450"];
m3_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.Dispose()", span="469-469"];
m3_130 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="452-452"];
m3_132 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=IsLocal, span="472-472"];
m3_133 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Analysis Complete. Press any key to continue.'')", span="474-474"];
m3_135 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler.Dispose()", span="477-477"];
m3_134 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Console.Read()", span="475-475"];
m3_136 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168"];
m3_236 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="102-102"];
m3_156 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m3_178 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_161 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="328-328"];
m3_169 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="197-197"];
m3_184 [cluster="string.Format(string, params object[])", file="Engine.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m3_271 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m3_203 [cluster="QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", span="104-104"];
m3_223 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="129-129"];
m3_170 [cluster="string.Format(string, object, object)", file="Engine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_255 [cluster="System.Activator.CreateInstance(string, string)", file="Engine.cs", label="Entry System.Activator.CreateInstance(string, string)", span="0-0"];
m3_177 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_183 [cluster="long.ToString(string)", file="Engine.cs", label="Entry long.ToString(string)", span="0-0"];
m3_139 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m3_176 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="111-111"];
m3_189 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83"];
m3_173 [cluster="System.TimeSpan.ToString(string)", file="Engine.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m3_137 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Engine.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m3_188 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="222-222"];
m3_160 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="125-125"];
m3_150 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m3_274 [file="Engine.cs", label=job, span=""];
m3_275 [file="Engine.cs", label=algorithm, span=""];
m4_343 [cluster="QuantConnect.Holding.Holding()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m4_125 [cluster="Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", span="30-30"];
m4_119 [cluster="Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", span="1979-1979"];
m4_8 [cluster="Oanda.RestV20.Client.Configuration.AddDefaultHeader(string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Client.Configuration.AddDefaultHeader(string, string)", span="167-167"];
m4_139 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="309-309"];
m4_140 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="SecurityTransactionModelTests.cs", label="_ratesSession != null", span="311-311"];
m4_141 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="SecurityTransactionModelTests.cs", label="_ratesSession.DataReceived -= OnPricingDataReceived", span="313-313"];
m4_142 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="SecurityTransactionModelTests.cs", label="_ratesSession.StopSession()", span="314-314"];
m4_143 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="309-309"];
m4_7 [cluster="Oanda.RestV20.Api.DefaultApi.DefaultApi(string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.DefaultApi(string)", span="1872-1872"];
m4_224 [cluster="Oanda.RestV20.Api.DefaultApi.GetBasePath()", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetBasePath()", span="1911-1911"];
m4_44 [cluster="Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", span="4286-4286"];
m4_204 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_169 [cluster="Unk.ToString", file="SecurityTransactionModelTests.cs", label="Entry Unk.ToString", span=""];
m4_283 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m4_266 [cluster="System.DateTime.ToString(string)", file="SecurityTransactionModelTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_30 [cluster="Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", span="5475-5475"];
m4_15 [cluster="Unk.ToList", file="SecurityTransactionModelTests.cs", label="Entry Unk.ToList", span=""];
m4_31 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="121-121"];
m4_32 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.GetAccountSummary(Authorization, AccountId)", span="123-123"];
m4_33 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="SecurityTransactionModelTests.cs", label="return new List<Cash>\r\n            {\r\n                new Cash(response.Account.Currency,\r\n                    response.Account.Balance.ToDecimal(),\r\n                    GetUsdConversion(response.Account.Currency))\r\n            };", span="125-130"];
m4_34 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="121-121"];
m4_200 [cluster="Unk.GetTickDateTimeFromString", file="SecurityTransactionModelTests.cs", label="Entry Unk.GetTickDateTimeFromString", span=""];
m4_106 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_198 [cluster="Unk.GetBrokerageSecurityType", file="SecurityTransactionModelTests.cs", label="Entry Unk.GetBrokerageSecurityType", span=""];
m4_39 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", span="466-466"];
m4_229 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SecurityTransactionModelTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_81 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_381 [cluster="Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m4_324 [cluster="NotSupportedException.cstr", file="SecurityTransactionModelTests.cs", label="Entry NotSupportedException.cstr", span=""];
m4_80 [cluster="Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", span="96-96"];
m4_24 [cluster="Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", span="34-34"];
m4_85 [cluster="System.Convert.ToDecimal(string)", file="SecurityTransactionModelTests.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m4_107 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_109 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="255-255"];
m4_110 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): '' + order)", span="257-257"];
m4_111 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!order.BrokerId.Any()", span="259-259"];
m4_114 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.BrokerId", span="265-265"];
m4_116 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Oanda Cancel Order Event'') { Status = OrderStatus.Canceled })", span="268-268"];
m4_112 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="261-261"];
m4_113 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return false;", span="262-262"];
m4_115 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="_apiRest.CancelOrder(Authorization, AccountId, orderId)", span="267-267"];
m4_117 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return true;", span="271-271"];
m4_118 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="255-255"];
m4_144 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="322-322"];
m4_145 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="SecurityTransactionModelTests.cs", label="return OandaBrokerage.GetDateTimeFromString(time.Remove(25, 3));", span="325-325"];
m4_146 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="322-322"];
m4_138 [cluster="Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", span="34-34"];
m4_383 [cluster="System.NotSupportedException.NotSupportedException(string)", file="SecurityTransactionModelTests.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m4_232 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="465-465"];
m4_233 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/transactions/stream''", span="467-467"];
m4_234 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="var request = WebRequest.CreateHttp(requestString)", span="469-469"];
m4_235 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="request.Method = ''GET''", span="470-470"];
m4_236 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="471-471"];
m4_237 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="request.Headers[OandaAgentKey] = Agent", span="472-472"];
m4_238 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="return request.GetResponse();", span="476-476"];
m4_239 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label=WebException, span="478-478"];
m4_240 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="ex.Response == null", span="480-480"];
m4_241 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="throw;", span="482-482"];
m4_242 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="var stream = GetResponseStream(ex.Response)", span="485-485"];
m4_243 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="var reader = new StreamReader(stream)", span="486-486"];
m4_244 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="throw new Exception(reader.ReadToEnd());", span="488-488"];
m4_245 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="465-465"];
m4_84 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m4_231 [cluster="System.IO.StreamReader.ReadToEnd()", file="SecurityTransactionModelTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m4_36 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_321 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m4_86 [cluster="System.Convert.ToInt32(string)", file="SecurityTransactionModelTests.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m4_88 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="191-191"];
m4_16 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="89-89"];
m4_17 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="x.Name", span="89-89"];
m4_18 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="89-89"];
m4_46 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="144-144"];
m4_49 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Entry lambda expression", span="145-145"];
m4_47 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="x.Instrument", span="144-144"];
m4_48 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="144-144"];
m4_50 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }", span="145-145"];
m4_51 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="145-145"];
m4_89 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Convert.ToInt32(trade.Units)", span="191-191"];
m4_90 [cluster="lambda expression", file="SecurityTransactionModelTests.cs", label="Exit lambda expression", span="191-191"];
m4_269 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="703-703"];
m4_344 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="CandlestickGranularity interval", span="705-705"];
m4_345 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label=resolution, span="707-707"];
m4_354 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="throw new ArgumentException(''Unsupported resolution: '' + resolution);", span="726-726"];
m4_346 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Resolution.Second", span="709-709"];
m4_348 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Resolution.Minute", span="713-713"];
m4_350 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Resolution.Hour", span="717-717"];
m4_352 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Resolution.Daily", span="721-721"];
m4_347 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="interval = CandlestickGranularity.S5", span="710-710"];
m4_349 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="interval = CandlestickGranularity.M1", span="714-714"];
m4_351 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="interval = CandlestickGranularity.H1", span="718-718"];
m4_353 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="interval = CandlestickGranularity.D", span="722-722"];
m4_355 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="return interval;", span="729-729"];
m4_356 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="703-703"];
m4_284 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m4_149 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="332-332"];
m4_150 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="334-334"];
m4_151 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var type = obj[''type''].ToString()", span="335-335"];
m4_157 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var transaction = obj.ToObject<OrderFillTransaction>()", span="347-347"];
m4_152 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label=type, span="337-337"];
m4_153 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="''HEARTBEAT''", span="339-339"];
m4_156 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="''ORDER_FILL''", span="346-346"];
m4_154 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label=LockerConnectionMonitor, span="340-340"];
m4_155 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="342-342"];
m4_158 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Order order", span="349-349"];
m4_160 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="order = OrderProvider.GetOrderByBrokerageId(transaction.OrderID)", span="352-352"];
m4_166 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                            {\r\n                                Status = OrderStatus.Filled,\r\n                                FillPrice = transaction.Price.ToDecimal(),\r\n                                FillQuantity = Convert.ToInt32(transaction.Units)\r\n                            })", span="363-368"];
m4_167 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Log.Error($''OandaBrokerage.OnTransactionDataReceived(): order id not found: {transaction.OrderID}'')", span="373-373"];
m4_159 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label=_locker, span="350-350"];
m4_161 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="order != null", span="354-354"];
m4_162 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="order.Type != OrderType.Market || order.Status != OrderStatus.Filled", span="356-356"];
m4_163 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Filled", span="358-358"];
m4_164 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="360-360"];
m4_165 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="int orderFee = 0", span="362-362"];
m4_168 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="332-332"];
m4_19 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="97-97"];
m4_20 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="SecurityTransactionModelTests.cs", label="var json = _apiRest.ListPendingOrdersAsJson(Authorization, AccountId)", span="99-99"];
m4_21 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="SecurityTransactionModelTests.cs", label="var response = (JObject)JsonConvert.DeserializeObject(json)", span="101-101"];
m4_22 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="SecurityTransactionModelTests.cs", label="return response[''orders''].Select(ConvertOrder).ToList();", span="103-103"];
m4_23 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="97-97"];
m4_132 [cluster="Oanda.RestV20.Session.StreamSession.StopSession()", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Session.StreamSession.StopSession()", span="73-73"];
m4_13 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", span="3245-3245"];
m4_54 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="154-154"];
m4_55 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="int orderFee = 0", span="156-156"];
m4_58 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var request = GenerateOrderRequest(order)", span="161-161"];
m4_60 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.BrokerId.Add(response.Data.OrderCreateTransaction.Id)", span="163-163"];
m4_61 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="166-166"];
m4_62 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="167-167"];
m4_66 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Type == OrderType.Market", span="175-175"];
m4_74 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Type == OrderType.Market && order.Status != OrderStatus.Filled", span="195-195"];
m4_75 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Status = OrderStatus.Filled", span="197-197"];
m4_76 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = marketOrderFillPrice,\r\n                    FillQuantity = marketOrderFillQuantity\r\n                })", span="200-205"];
m4_56 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="ApiResponse<InlineResponse201> response", span="157-157"];
m4_57 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label=_locker, span="159-159"];
m4_59 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="response = _apiRest.CreateOrder(Authorization, AccountId, request)", span="162-162"];
m4_63 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var fill = response.Data.OrderFillTransaction", span="171-171"];
m4_64 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var marketOrderFillPrice = 0m", span="172-172"];
m4_67 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="marketOrderFillPrice = Convert.ToDecimal(fill.Price)", span="177-177"];
m4_68 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="fill.TradeOpened != null && fill.TradeOpened.TradeID.Length > 0", span="179-179"];
m4_69 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeOpened.Units)", span="181-181"];
m4_70 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="fill.TradeReduced != null && fill.TradeReduced.TradeID.Length > 0", span="184-184"];
m4_71 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeReduced.Units)", span="186-186"];
m4_72 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="fill.TradesClosed != null && fill.TradesClosed.Count > 0", span="189-189"];
m4_73 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="marketOrderFillQuantity += fill.TradesClosed.Sum(trade => Convert.ToInt32(trade.Units))", span="191-191"];
m4_65 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var marketOrderFillQuantity = 0", span="173-173"];
m4_77 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return true;", span="208-208"];
m4_78 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="154-154"];
m4_323 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m4_325 [cluster="Unk.Add", file="SecurityTransactionModelTests.cs", label="Entry Unk.Add", span=""];
m4_40 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="138-138"];
m4_41 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.GetPrices(Authorization, AccountId, instruments)", span="140-140"];
m4_42 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="return response.Prices\r\n                .ToDictionary(\r\n                    x => x.Instrument,\r\n                    x => new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }\r\n                );", span="142-146"];
m4_43 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="138-138"];
m4_228 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="493-493"];
m4_246 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="var stream = response.GetResponseStream()", span="495-495"];
m4_247 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="response.Headers[''Content-Encoding''] == ''gzip''", span="496-496"];
m4_248 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="stream != null", span="499-499"];
m4_249 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="stream = new GZipStream(stream, CompressionMode.Decompress)", span="499-499"];
m4_250 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="return stream;", span="501-501"];
m4_251 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="493-493"];
m4_270 [cluster="System.Enum.ToString()", file="SecurityTransactionModelTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m4_206 [cluster="Unk.Last", file="SecurityTransactionModelTests.cs", label="Entry Unk.Last", span=""];
m4_9 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="85-85"];
m4_10 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.GetAccountInstruments(Authorization, AccountId)", span="87-87"];
m4_11 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="SecurityTransactionModelTests.cs", label="return response.Instruments.Select(x => x.Name).ToList();", span="89-89"];
m4_12 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="85-85"];
m4_173 [cluster="Unk.ToInt32", file="SecurityTransactionModelTests.cs", label="Entry Unk.ToInt32", span=""];
m4_207 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m4_382 [cluster="Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m4_147 [cluster="string.Remove(int, int)", file="SecurityTransactionModelTests.cs", label="Entry string.Remove(int, int)", span="0-0"];
m4_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="81-81"];
m4_127 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="287-287"];
m4_128 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession != null", span="289-289"];
m4_129 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession.DataReceived -= OnTransactionDataReceived", span="291-291"];
m4_130 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession.StopSession()", span="292-292"];
m4_131 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="287-287"];
m4_105 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m4_341 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", span="936-936"];
m4_14 [cluster="Unk.Select", file="SecurityTransactionModelTests.cs", label="Entry Unk.Select", span=""];
m4_45 [cluster="Unk.ToDictionary", file="SecurityTransactionModelTests.cs", label="Entry Unk.ToDictionary", span=""];
m4_272 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m4_205 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="SecurityTransactionModelTests.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
m4_0 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="65-65"];
m4_1 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="var basePathRest = environment == Environment.Trade ?\r\n                ''https://api-fxtrade.oanda.com/v3'' :\r\n                ''https://api-fxpractice.oanda.com/v3''", span="68-70"];
m4_2 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="var basePathStreaming = environment == Environment.Trade ?\r\n                ''https://stream-fxtrade.oanda.com/v3'' :\r\n                ''https://stream-fxpractice.oanda.com/v3''", span="72-74"];
m4_3 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="_apiRest = new DefaultApi(basePathRest)", span="76-76"];
m4_5 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="_apiStreaming = new DefaultApi(basePathStreaming)", span="79-79"];
m4_4 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="_apiRest.Configuration.AddDefaultHeader(OandaAgentKey, Agent)", span="77-77"];
m4_6 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="65-65"];
m4_271 [cluster="Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", span="3732-3732"];
m4_201 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_148 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", span="256-256"];
m4_202 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m4_171 [cluster="Unk.GetOrderByBrokerageId", file="SecurityTransactionModelTests.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m4_108 [cluster="Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", span="167-167"];
m4_230 [cluster="System.Exception.Exception(string)", file="SecurityTransactionModelTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_273 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="550-550"];
m4_274 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="552-552"];
m4_281 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="yield return new QuoteBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    new Bar(\r\n                        candle.Bid.O.ToDecimal(),\r\n                        candle.Bid.H.ToDecimal(),\r\n                        candle.Bid.L.ToDecimal(),\r\n                        candle.Bid.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    new Bar(\r\n                        candle.Ask.O.ToDecimal(),\r\n                        candle.Ask.H.ToDecimal(),\r\n                        candle.Ask.L.ToDecimal(),\r\n                        candle.Ask.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    period);", span="565-582"];
m4_275 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="553-553"];
m4_276 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="556-556"];
m4_277 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''BA'', ToGranularity(resolution).ToString(), OandaBrokerage.MaxBarsPerRequest, startUtc)", span="558-558"];
m4_280 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="time > endTimeUtc", span="562-562"];
m4_278 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="response.Candles", span="559-559"];
m4_279 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="561-561"];
m4_282 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="550-550"];
m4_342 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="914-914"];
m4_357 [cluster="System.ArgumentException.ArgumentException(string)", file="SecurityTransactionModelTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_376 [cluster="Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="192-192"];
m4_380 [cluster="decimal.ToString(System.IFormatProvider)", file="SecurityTransactionModelTests.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m4_254 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="513-513"];
m4_255 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="515-515"];
m4_263 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="yield return new TradeBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    candle.Bid.O.ToDecimal(),\r\n                    candle.Bid.H.ToDecimal(),\r\n                    candle.Bid.L.ToDecimal(),\r\n                    candle.Bid.C.ToDecimal(),\r\n                    0,\r\n                    period);", span="529-537"];
m4_256 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="516-516"];
m4_257 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var endUtc = endTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="517-517"];
m4_258 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="520-520"];
m4_259 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''M'', ToGranularity(resolution).ToString(), null, startUtc, endUtc)", span="522-522"];
m4_262 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="time > endTimeUtc", span="526-526"];
m4_260 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="response.Candles", span="523-523"];
m4_261 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="525-525"];
m4_264 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="513-513"];
m4_79 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="737-737"];
m4_358 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var instrument = SymbolMapper.GetBrokerageSymbol(order.Symbol)", span="739-739"];
m4_360 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.Type", span="742-742"];
m4_362 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var marketOrderRequest = new MarketOrderRequest\r\n                    {\r\n                        Type = MarketOrderRequest.TypeEnum.MARKET,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString()\r\n                    }", span="745-750"];
m4_365 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var limitOrderRequest = new LimitOrderRequest\r\n                    {\r\n                        Type = LimitOrderRequest.TypeEnum.LIMIT,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((LimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="755-761"];
m4_368 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var marketIfTouchedOrderRequest = new MarketIfTouchedOrderRequest\r\n                    {\r\n                        Type = MarketIfTouchedOrderRequest.TypeEnum.MARKETIFTOUCHED,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopMarketOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="766-772"];
m4_371 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var stopOrderRequest = new StopOrderRequest\r\n                    {\r\n                        Type = StopOrderRequest.TypeEnum.STOP,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopLimitOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture),\r\n                        PriceBound = ((StopLimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="777-784"];
m4_373 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="throw new NotSupportedException(''The order type '' + order.Type + '' is not supported.'');", span="789-789"];
m4_359 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="string request", span="741-741"];
m4_361 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OrderType.Market", span="744-744"];
m4_364 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OrderType.Limit", span="754-754"];
m4_367 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OrderType.StopMarket", span="765-765"];
m4_370 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="OrderType.StopLimit", span="776-776"];
m4_363 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="request = JsonConvert.SerializeObject(new { order = marketOrderRequest })", span="751-751"];
m4_366 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="request = JsonConvert.SerializeObject(new { order = limitOrderRequest })", span="762-762"];
m4_369 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="request = JsonConvert.SerializeObject(new { order = marketIfTouchedOrderRequest })", span="773-773"];
m4_372 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="request = JsonConvert.SerializeObject(new { order = stopOrderRequest })", span="785-785"];
m4_374 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return request;", span="792-792"];
m4_375 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="737-737"];
m4_253 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", file="SecurityTransactionModelTests.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", span="0-0"];
m4_326 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="666-666"];
m4_327 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(position.Instrument)", span="668-668"];
m4_328 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="var symbol = SymbolMapper.GetLeanSymbol(position.Instrument, securityType, Market.Oanda)", span="669-669"];
m4_329 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="var longUnits = Convert.ToInt32(position._Long.Units)", span="671-671"];
m4_330 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="var shortUnits = Convert.ToInt32(position._Short.Units)", span="672-672"];
m4_334 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="averagePrice = position._Long.AveragePrice.ToDecimal()", span="678-678"];
m4_337 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="averagePrice = position._Short.AveragePrice.ToDecimal()", span="683-683"];
m4_339 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = securityType,\r\n                AveragePrice = averagePrice,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                Quantity = quantity\r\n            };", span="687-695"];
m4_333 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="longUnits > 0", span="676-676"];
m4_335 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="quantity = longUnits", span="679-679"];
m4_331 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="decimal averagePrice = 0", span="674-674"];
m4_336 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="shortUnits < 0", span="681-681"];
m4_338 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="quantity = shortUnits", span="684-684"];
m4_332 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="var quantity = 0", span="675-675"];
m4_340 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="666-666"];
m4_25 [cluster="Unk.DeserializeObject", file="SecurityTransactionModelTests.cs", label="Entry Unk.DeserializeObject", span=""];
m4_52 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m4_268 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m4_175 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="383-383"];
m4_176 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="385-385"];
m4_177 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var type = obj[''type''].ToString()", span="386-386"];
m4_183 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var data = obj.ToObject<Price>()", span="398-398"];
m4_178 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label=type, span="388-388"];
m4_179 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="''HEARTBEAT''", span="390-390"];
m4_182 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="''PRICE''", span="397-397"];
m4_180 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label=LockerConnectionMonitor, span="391-391"];
m4_181 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="393-393"];
m4_184 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(data.Instrument)", span="400-400"];
m4_185 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var symbol = SymbolMapper.GetLeanSymbol(data.Instrument, securityType, Market.Oanda)", span="401-401"];
m4_186 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var time = GetTickDateTimeFromString(data.Time)", span="402-402"];
m4_192 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var bidPrice = Convert.ToDecimal(data.Bids.Last().Price)", span="413-413"];
m4_193 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var askPrice = Convert.ToDecimal(data.Asks.Last().Price)", span="414-414"];
m4_189 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.Oanda, symbol, securityType).TimeZone", span="408-408"];
m4_188 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="406-406"];
m4_190 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="409-409"];
m4_194 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="var tick = new Tick(time, symbol, bidPrice, askPrice)", span="415-415"];
m4_187 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="DateTimeZone exchangeTimeZone", span="405-405"];
m4_191 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="time = time.ConvertFromUtc(exchangeTimeZone)", span="411-411"];
m4_195 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label=Ticks, span="417-417"];
m4_196 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Ticks.Add(tick)", span="419-419"];
m4_197 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="383-383"];
m4_91 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="216-216"];
m4_92 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): '' + order)", span="218-218"];
m4_93 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="!order.BrokerId.Any()", span="220-220"];
m4_96 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var request = GenerateOrderRequest(order)", span="227-227"];
m4_97 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var orderId = order.BrokerId.First()", span="229-229"];
m4_99 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="order.BrokerId[0] = response.Data.OrderCreateTransaction.Id", span="233-233"];
m4_94 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="223-223"];
m4_95 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="return false;", span="224-224"];
m4_98 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.ReplaceOrder(Authorization, AccountId, orderId, request)", span="230-230"];
m4_100 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="response.Data.OrderFillTransaction != null", span="236-236"];
m4_101 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="int orderFee = 0", span="238-238"];
m4_104 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="216-216"];
m4_267 [cluster="System.TimeSpan.FromSeconds(double)", file="SecurityTransactionModelTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_83 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m4_226 [cluster="System.Net.WebRequest.CreateHttp(string)", file="SecurityTransactionModelTests.cs", label="Entry System.Net.WebRequest.CreateHttp(string)", span="0-0"];
m4_82 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m4_35 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", span="3406-3406"];
m4_223 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SecurityTransactionModelTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_378 [cluster="Unk.SerializeObject", file="SecurityTransactionModelTests.cs", label="Entry Unk.SerializeObject", span=""];
m4_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m4_26 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="110-110"];
m4_27 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="SecurityTransactionModelTests.cs", label="var response = _apiRest.ListOpenPositions(Authorization, AccountId)", span="112-112"];
m4_28 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="SecurityTransactionModelTests.cs", label="return response.Positions.Select(ConvertHolding).ToList();", span="114-114"];
m4_29 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="110-110"];
m4_252 [cluster="System.Net.WebResponse.GetResponseStream()", file="SecurityTransactionModelTests.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m4_174 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_285 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="594-594"];
m4_286 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var type = order[''type''].ToString()", span="596-596"];
m4_290 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var stopOrder = order.ToObject<MarketIfTouchedOrder>()", span="602-602"];
m4_293 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var limitOrder = order.ToObject<OandaLimitOrder>()", span="610-610"];
m4_296 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var stopLimitOrder = order.ToObject<StopOrder>()", span="618-618"];
m4_301 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var instrument = order[''instrument''].ToString()", span="635-635"];
m4_302 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var id = order[''id''].ToString()", span="636-636"];
m4_303 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var units = Convert.ToInt32(order[''units''])", span="637-637"];
m4_304 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var createTime = order[''createTime''].ToString()", span="638-638"];
m4_314 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var gtdTime = order[''gtdTime'']", span="653-653"];
m4_287 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="Order qcOrder", span="598-598"];
m4_288 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label=type, span="599-599"];
m4_300 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="throw new NotSupportedException(\r\n                        ''An existing '' + type + '' working order was found and is currently unsupported. Please manually cancel the order before restarting the algorithm.'');", span="631-632"];
m4_289 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="''MARKET_IF_TOUCHED''", span="601-601"];
m4_292 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="''LIMIT''", span="609-609"];
m4_295 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="''STOP''", span="617-617"];
m4_298 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="''MARKET''", span="626-626"];
m4_291 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder = new StopMarketOrder\r\n                    {\r\n                        StopPrice = stopOrder.Price.ToDecimal()\r\n                    }", span="603-606"];
m4_294 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder = new LimitOrder\r\n                    {\r\n                        LimitPrice = limitOrder.Price.ToDecimal()\r\n                    }", span="611-614"];
m4_297 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder = new StopLimitOrder\r\n                    {\r\n                        Price = Convert.ToDecimal(stopLimitOrder.Price),\r\n                        LimitPrice = Convert.ToDecimal(stopLimitOrder.PriceBound)\r\n                    }", span="619-623"];
m4_299 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder = new MarketOrder()", span="627-627"];
m4_306 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Symbol = SymbolMapper.GetLeanSymbol(instrument, securityType, Market.Oanda)", span="641-641"];
m4_307 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Time = GetTickDateTimeFromString(createTime)", span="642-642"];
m4_308 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Quantity = units", span="643-643"];
m4_309 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Status = OrderStatus.None", span="644-644"];
m4_310 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.BrokerId.Add(id)", span="645-645"];
m4_313 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="650-650"];
m4_316 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.Duration = OrderDuration.Custom", span="656-656"];
m4_317 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="qcOrder.DurationValue = GetTickDateTimeFromString(gtdTime.ToString())", span="657-657"];
m4_318 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="return qcOrder;", span="660-660"];
m4_305 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(instrument)", span="640-640"];
m4_311 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="var orderByBrokerageId = OrderProvider.GetOrderByBrokerageId(id)", span="647-647"];
m4_312 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="orderByBrokerageId != null", span="648-648"];
m4_315 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="gtdTime != null", span="654-654"];
m4_319 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="594-594"];
m4_120 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="277-277"];
m4_121 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession = new TransactionStreamSession(this)", span="279-279"];
m4_122 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession.DataReceived += OnTransactionDataReceived", span="280-280"];
m4_123 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="SecurityTransactionModelTests.cs", label="_eventsSession.StartSession()", span="281-281"];
m4_124 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="277-277"];
m4_172 [cluster="Unk.ToDecimal", file="SecurityTransactionModelTests.cs", label="Entry Unk.ToDecimal", span=""];
m4_227 [cluster="System.Net.HttpWebRequest.GetResponse()", file="SecurityTransactionModelTests.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m4_379 [cluster="Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="245-245"];
m4_170 [cluster="Unk.>", file="SecurityTransactionModelTests.cs", label="Entry Unk.>", span=""];
m4_87 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="SecurityTransactionModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m4_126 [cluster="Oanda.RestV20.Session.StreamSession.StartSession()", file="SecurityTransactionModelTests.cs", label="Entry Oanda.RestV20.Session.StreamSession.StartSession()", span="49-49"];
m4_322 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m4_208 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="430-430"];
m4_209 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var instrumentList = string.Join('','', instruments)", span="432-432"];
m4_210 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/pricing/stream'' +\r\n                ''?instruments='' + Uri.EscapeDataString(instrumentList)", span="434-435"];
m4_211 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var request = WebRequest.CreateHttp(requestString)", span="437-437"];
m4_212 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="request.Method = ''GET''", span="438-438"];
m4_213 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="439-439"];
m4_214 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="request.Headers[OandaAgentKey] = Agent", span="440-440"];
m4_215 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="return request.GetResponse();", span="444-444"];
m4_216 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label=WebException, span="446-446"];
m4_217 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="ex.Response == null", span="448-448"];
m4_218 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="throw;", span="450-450"];
m4_219 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var stream = GetResponseStream(ex.Response)", span="453-453"];
m4_220 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="var reader = new StreamReader(stream)", span="454-454"];
m4_221 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="throw new Exception(reader.ReadToEnd());", span="456-456"];
m4_222 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="430-430"];
m4_225 [cluster="System.Uri.EscapeDataString(string)", file="SecurityTransactionModelTests.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m4_199 [cluster="Unk.GetLeanSymbol", file="SecurityTransactionModelTests.cs", label="Entry Unk.GetLeanSymbol", span=""];
m4_320 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m4_133 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="299-299"];
m4_134 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="_ratesSession = new PricingStreamSession(this, instruments)", span="301-301"];
m4_135 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="_ratesSession.DataReceived += OnPricingDataReceived", span="302-302"];
m4_136 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="_ratesSession.StartSession()", span="303-303"];
m4_137 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="SecurityTransactionModelTests.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="299-299"];
m4_38 [cluster="string.ToDecimal()", file="SecurityTransactionModelTests.cs", label="Entry string.ToDecimal()", span="250-250"];
m4_203 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74"];
m4_377 [cluster="decimal.ToString()", file="SecurityTransactionModelTests.cs", label="Entry decimal.ToString()", span="0-0"];
m4_265 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="SecurityTransactionModelTests.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="888-888"];
m4_384 [file="SecurityTransactionModelTests.cs", label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", span=""];
m0_86 -> m0_89  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_86 -> m0_90  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_82 -> m0_90  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_82 -> m0_93  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_84 -> m0_89  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_287 -> m0_289  [color=darkseagreen4, key=1, label=entryReader, style=dashed];
m0_35 -> m0_38  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_39  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_40  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_41  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_42  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_43  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_45  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_46  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_47  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_48  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_49  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_35 -> m0_53  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m0_49 -> m0_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_51 -> m0_55  [color=darkseagreen4, key=1, label=writer, style=dashed];
m0_157 -> m0_159  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_157 -> m0_164  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_160 -> m0_164  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m0_268 -> m0_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_268 -> m0_272  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_100 -> m0_105  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m0_101 -> m0_106  [color=darkseagreen4, key=1, label=memoryStream, style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_26 -> m0_32  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_30 -> m0_38  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_31 -> m0_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_31 -> m0_40  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_31 -> m0_41  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_28 -> m0_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>", style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m0_1 -> m0_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_1 -> m0_8  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_1 -> m0_9  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_1 -> m0_10  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=filename, style=dashed];
m0_11 -> m0_13  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_14  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_16  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_17  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_18  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_19  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_20  [color=green, key=1, label=window, style=dashed];
m0_11 -> m0_21  [color=green, key=1, label=window, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m0_177 -> m0_180  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_177 -> m0_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_183 -> m0_191  [color=darkseagreen4, key=1, label=file, style=dashed];
m0_188 -> m0_190  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m0_188 -> m0_191  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m0_57 -> m0_59  [color=darkseagreen4, key=1, label=inOrder, style=dashed];
m0_57 -> m0_60  [color=darkseagreen4, key=1, label=inOrder, style=dashed];
m0_114 -> m0_119  [color=darkseagreen4, key=1, label=dataBuffer, style=dashed];
m0_115 -> m0_120  [color=darkseagreen4, key=1, label=newFileOutput, style=dashed];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m0_344 -> m0_348  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_345 -> m0_351  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m0_346 -> m0_350  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m0_347 -> m0_349  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m0_334 -> m0_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_335 -> m0_339  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m0_336 -> m0_338  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m0_202 -> m0_205  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_203 -> m0_209  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m0_203 -> m0_211  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m0_205 -> m0_207  [color=darkseagreen4, key=1, label=file, style=dashed];
m0_204 -> m0_211  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_296 -> m0_298  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_295 -> m0_298  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m0_260 -> m0_279  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_278 -> m0_283  [color=darkseagreen4, key=1, label=zip, style=dashed];
m0_354 -> m0_359  [color=darkseagreen4, key=1, label=tar, style=dashed];
m0_356 -> m0_360  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_358 -> m0_360  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_307 -> m0_322  [color=darkseagreen4, key=1, label=files, style=dashed];
m0_307 -> m0_325  [color=darkseagreen4, key=1, label=files, style=dashed];
m0_308 -> m0_310  [color=darkseagreen4, key=1, label=slash, style=dashed];
m0_320 -> m0_324  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m0_319 -> m0_324  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_219 -> m0_222  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_219 -> m0_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_219 -> m0_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_219 -> m0_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_219 -> m0_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_220 -> m0_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_223 -> m0_231  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m0_223 -> m0_232  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m0_223 -> m0_239  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m0_224 -> m0_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_221 -> m0_239  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m0_228 -> m0_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_228 -> m0_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m0_167 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_167 -> m0_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=zip, style=dashed];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_63 -> m0_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=window, style=dashed];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=zip, style=dashed];
m0_250 -> m0_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_250 -> m0_254  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_127 -> m0_142  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_127 -> m0_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_129 -> m0_138  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_137 -> m0_139  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m0_131 -> m0_146  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_132 -> m0_138  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_132 -> m0_140  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_132 -> m0_141  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_367 -> m0_370  [color=darkseagreen4, key=1, label=gzip, style=dashed];
m0_369 -> m0_377  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m0_369 -> m0_379  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m0_374 -> m0_378  [color=darkseagreen4, key=1, label=tarEntry, style=dashed];
m0_372 -> m0_377  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m0_372 -> m0_379  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m0_376 -> m0_378  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_383 -> m0_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_274 -> m1_278  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_299 -> m1_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_300 -> m1_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_298 -> m1_78  [color=green, key=1, label=int, style=dashed];
m1_120 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_120 -> m1_131  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_120 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_125 -> m1_127  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_125 -> m1_132  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_129 -> m1_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_202  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
m1_279 -> m1_369  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_370  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_480  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_382  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_422  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_426  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_279 -> m1_429  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_430  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_432  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_434  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m1_279 -> m1_438  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_442  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_447  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_448  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_279 -> m1_453  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_366 -> m1_419  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_366 -> m1_435  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_367 -> m1_393  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m1_368 -> m1_393  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_372 -> m1_377  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_380  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_386  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_388  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_390  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_393  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_429  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_372 -> m1_431  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_375 -> m1_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_378 -> m1_483  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_382 -> m1_382  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_397 -> m1_412  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_406 -> m1_501  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_406 -> m1_412  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_413 -> m1_427  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_434 -> m1_441  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_434 -> m1_446  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_434 -> m1_454  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_393 -> m1_396  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_371 -> m1_439  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_371 -> m1_442  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_380 -> m1_382  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_380 -> m1_383  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_386 -> m1_489  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_387 -> m1_492  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_387 -> m1_495  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_388 -> m1_498  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_390 -> m1_392  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_374 -> m1_423  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_374 -> m1_450  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_376 -> m1_446  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m1_379 -> m1_486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_379 -> m1_383  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_396 -> m1_502  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_398 -> m1_407  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_395 -> m1_412  [color=darkseagreen4, key=1, label=paired, style=dashed];
m1_409 -> m1_505  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_409 -> m1_412  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_399 -> m1_404  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_399 -> m1_407  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_399 -> m1_412  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_402 -> m1_404  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m1_408 -> m1_506  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_408 -> m1_411  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_405 -> m1_502  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_405 -> m1_411  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_428 -> m1_439  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_428 -> m1_442  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_420 -> m1_435  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_424 -> m1_450  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_441 -> m1_508  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_440 -> m1_444  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
m1_307 -> m1_275  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_307 -> m1_278  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_311 -> m1_278  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_45 -> m1_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_45 -> m1_255  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_45 -> m1_256  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_45 -> m1_257  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_45 -> m1_258  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_45 -> m1_259  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_244 -> m1_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_244 -> m1_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_309 -> m1_278  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_62 -> m1_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_91 -> m1_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_91 -> m1_91  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_273 -> m1_275  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_273 -> m1_278  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_359 -> m1_359  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
m1_480 -> m1_480  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m1_612 -> m1_612  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m1_72 -> m1_78  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m1_77 -> m1_79  [color=green, key=1, label=res, style=dashed];
m1_77 -> m1_352  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_73 -> m1_77  [color=green, key=1, label=security, style=dashed];
m1_73 -> m1_79  [color=green, key=1, label=security, style=dashed];
m1_78 -> m1_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_74 -> m1_79  [color=green, key=1, label=config, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_252 -> m1_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_252 -> m1_255  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_254 -> m1_259  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_254 -> m1_260  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_271 -> m1_275  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_271 -> m1_278  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_275 -> m1_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_96 -> m1_99  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_250 -> m1_252  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_251 -> m1_260  [color=darkseagreen4, key=1, label=requests, style=dashed];
m1_251 -> m1_261  [color=darkseagreen4, key=1, label=requests, style=dashed];
m1_255 -> m1_257  [color=darkseagreen4, key=1, label=res, style=dashed];
m1_261 -> m1_528  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m1_306 -> m1_259  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_306 -> m1_258  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_289 -> m1_289  [color=darkseagreen4, key=1, label=sub, style=dashed];
m1_289 -> m1_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_63 -> m1_77  [color=green, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_63 -> m1_78  [color=green, key=1, label=int, style=dashed];
m1_63 -> m1_79  [color=green, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_64 -> m1_72  [color=green, key=1, label="lambda expression", style=dashed];
m1_65 -> m1_87  [color=green, key=1, label="lambda expression", style=dashed];
m1_65 -> m1_254  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_65 -> m1_256  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_160 -> m1_163  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_160 -> m1_164  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_160 -> m1_166  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_162 -> m1_167  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m1_36 -> m1_42  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m1_36 -> m1_43  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m1_176 -> m1_178  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m1_55 -> m1_174  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m1_173 -> m1_176  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_173 -> m1_177  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_175 -> m1_178  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
m1_191 -> m1_240  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m1_232 -> m1_234  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_232 -> m1_235  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_232 -> m1_236  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_231 -> m1_240  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m1_230 -> m1_237  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m1_321 -> m1_627  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m1_304 -> m1_562  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_304 -> m1_563  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_304 -> m1_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_304 -> m1_255  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_546 -> m1_563  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_546 -> m1_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_548 -> m1_553  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_548 -> m1_555  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_548 -> m1_557  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_564 -> m1_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_329 -> m1_576  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
m1_329 -> m1_577  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
m1_572 -> m1_574  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_572 -> m1_575  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_572 -> m1_576  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_572 -> m1_580  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_572 -> m1_577  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_576 -> m1_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_526 -> m1_528  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m1_213 -> m1_227  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_213 -> m1_228  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_153 -> m1_355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_265 -> m1_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_265 -> m1_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_29 -> m1_184  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m1_30 -> m1_186  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m1_31 -> m1_188  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_70  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_72  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_73  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_110  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_134  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_56 -> m1_166  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_10 -> m1_349  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_52  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_10 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
m1_10 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m1_10 -> m1_73  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_10 -> m1_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_88  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
m1_10 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m1_10 -> m1_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_10 -> m1_103  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_105  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_107  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_109  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_127  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_135  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_147  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_154  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_169  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_178  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_185  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_187  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_189  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_207  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_209  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_214  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_215  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_10 -> m1_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_225  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
m1_10 -> m1_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_248  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_10 -> m1_249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_250  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_251  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_252  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_253  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_10 -> m1_255  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_10 -> m1_256  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_305 -> m1_594  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_305 -> m1_596  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_305 -> m1_598  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_305 -> m1_599  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
m1_305 -> m1_257  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_305 -> m1_256  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_582 -> m1_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_582 -> m1_600  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_584 -> m1_598  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_585 -> m1_589  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_585 -> m1_612  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_590 -> m1_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_600 -> m1_600  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_587 -> m1_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_592 -> m1_594  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
m1_592 -> m1_598  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
m1_456 -> m1_512  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_456 -> m1_516  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_517 -> m1_519  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_513 -> m1_520  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_513 -> m1_521  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_519 -> m1_521  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_301 -> m1_98  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_361 -> m1_363  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m1_106 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_106 -> m1_149  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_106 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_106 -> m1_148  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_143 -> m1_145  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_143 -> m1_147  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_143 -> m1_149  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_147 -> m1_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_145 -> m1_149  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_145 -> m1_147  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m1_144 -> m1_148  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m1_148 -> m1_150  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_148 -> m1_152  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_148 -> m1_356  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_148 -> m1_154  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_328 -> m1_534  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_328 -> m1_535  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_532 -> m1_534  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_532 -> m1_544  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_532 -> m1_535  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_532 -> m1_536  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_532 -> m1_537  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_534 -> m1_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_52 -> m1_52  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_302 -> m1_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_21 -> m1_104  [color=darkseagreen4, key=1, label=splitWarnings, style=dashed];
m1_13 -> m1_62  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_13 -> m1_64  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_13 -> m1_66  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_13 -> m1_254  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_13 -> m1_256  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_14 -> m1_58  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_14 -> m1_71  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_14 -> m1_253  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_14 -> m1_255  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_14 -> m1_256  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_15 -> m1_37  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_43  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_76  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_175  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_185  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_187  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_189  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_207  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_81 -> m1_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_82 -> m1_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_179 -> m1_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_179 -> m1_183  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_17 -> m1_110  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m1_19 -> m1_134  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
m1_20 -> m1_103  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m1_32 -> m1_75  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
m1_33 -> m1_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_38  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_34 -> m1_43  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_296 -> m1_64  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_78  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_79  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_73  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_168  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_177  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_187  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_234  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_252  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_296 -> m1_278  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_85 -> m1_88  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_310 -> m1_278  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_48 -> m1_53  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_74  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_76  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_77  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_80  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_81  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_84  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_89  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_90  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_101  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_109  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_137  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_138  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_139  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_145  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_148  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_160  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_199  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_202  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_207  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_213  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_214  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_48 -> m1_215  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_107 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_110 -> m1_115  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_111 -> m1_115  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_112 -> m1_115  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_112 -> m1_126  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
m1_297 -> m1_77  [color=green, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_297 -> m1_78  [color=green, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_297 -> m1_79  [color=green, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_43 -> m1_275  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_43 -> m1_278  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_198 -> m1_358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_164 -> m1_168  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_192 -> m1_199  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_303 -> m1_254  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_629 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_134  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_192  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_252  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_253  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_255  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_256  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_362  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_629 -> m1_370  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_630 -> m1_349  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_631 -> m1_352  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_632 -> m1_356  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_633 -> m1_480  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_634 -> m1_502  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_635 -> m1_502  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_635 -> m1_506  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m1_636 -> m1_544  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_637 -> m1_580  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_638 -> m1_612  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_33 -> m2_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_33 -> m2_43  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_40 -> m2_46  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_40 -> m2_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_44 -> m2_47  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_12 -> m2_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_18 -> m2_22  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_155 -> m3_251  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m3_167 -> m3_226  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m3_165 -> m3_205  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m3_217 -> m3_219  [color=darkseagreen4, key=1, label=df, style=dashed];
m3_166 -> m3_238  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m3_242 -> m3_244  [color=darkseagreen4, key=1, label=th, style=dashed];
m3_154 -> m3_259  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m3_267 -> m3_269  [color=darkseagreen4, key=1, label=sh, style=dashed];
m3_2 -> m3_8  [color=darkseagreen4, key=1, label=mode, style=dashed];
m3_19 -> m3_122  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m3_19 -> m3_123  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m3_23 -> m3_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m3_23 -> m3_117  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m3_24 -> m3_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m3_24 -> m3_119  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m3_27 -> m3_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_197  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_27 -> m3_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_41 -> m3_43  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_197  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_41 -> m3_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_42 -> m3_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m3_71 -> m3_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_197  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_34 -> m3_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_39 -> m3_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m3_39 -> m3_121  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m3_88 -> m3_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m3_99 -> m3_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m3_44 -> m3_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m3_50 -> m3_52  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m3_64 -> m3_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m3_64 -> m3_117  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m3_65 -> m3_68  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m3_65 -> m3_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m3_65 -> m3_119  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m3_66 -> m3_69  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m3_87 -> m3_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m3_82 -> m3_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m3_82 -> m3_85  [color=darkseagreen4, key=1, label=message, style=dashed];
m3_82 -> m3_86  [color=darkseagreen4, key=1, label=message, style=dashed];
m3_89 -> m3_104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m3_90 -> m3_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m3_91 -> m3_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m3_92 -> m3_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m3_93 -> m3_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m3_274 -> m3_197  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_275 -> m3_197  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_109 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_109 -> m4_114  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_234 -> m4_238  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_269 -> m4_345  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_269 -> m4_354  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_157 -> m4_167  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m4_160 -> m4_162  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_54 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_54 -> m4_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_54 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_63 -> m4_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_63 -> m4_70  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_63 -> m4_72  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_73 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_228 -> m4_247  [color=darkseagreen4, key=1, label="System.Net.WebResponse", style=dashed];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=stream, style=dashed];
m4_246 -> m4_250  [color=darkseagreen4, key=1, label=stream, style=dashed];
m4_11 -> m4_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_273 -> m4_280  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_276 -> m4_281  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_278 -> m4_281  [color=darkseagreen4, key=1, label=candle, style=dashed];
m4_279 -> m4_281  [color=darkseagreen4, key=1, label=time, style=dashed];
m4_254 -> m4_262  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_258 -> m4_263  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_260 -> m4_263  [color=darkseagreen4, key=1, label=candle, style=dashed];
m4_261 -> m4_263  [color=darkseagreen4, key=1, label=time, style=dashed];
m4_79 -> m4_360  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_79 -> m4_373  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_329 -> m4_333  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m4_330 -> m4_336  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m4_185 -> m4_188  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_185 -> m4_190  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_194 -> m4_196  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_98 -> m4_100  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_286 -> m4_288  [color=darkseagreen4, key=1, label=type, style=dashed];
m4_286 -> m4_300  [color=darkseagreen4, key=1, label=type, style=dashed];
m4_302 -> m4_310  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_299 -> m4_310  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m4_299 -> m4_318  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m4_211 -> m4_215  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_384 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_128  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_130  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_136  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_188  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_195  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m4_384 -> m4_196  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
}
