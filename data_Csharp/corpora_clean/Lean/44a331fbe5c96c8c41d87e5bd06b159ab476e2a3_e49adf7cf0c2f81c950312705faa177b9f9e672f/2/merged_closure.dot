digraph  {
n538 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
n539 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n540 [label=symbol, span=""];
n541 [label=split, span=""];
n542 [label=delisting, span=""];
n0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
n1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n\r\n                return null;\r\n            }", span="109-117"];
n2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="118-118"];
n3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
n4 [cluster="lambda expression", label="Entry lambda expression", span="109-117"];
n5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="111-111"];
n6 [cluster="lambda expression", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="113-113"];
n7 [cluster="lambda expression", label="return null;", span="116-116"];
n8 [cluster="lambda expression", label="Exit lambda expression", span="109-117"];
n9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="138-138"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="139-139"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="140-140"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="141-141"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="151-151"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="153-153"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="158-158"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="159-159"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="160-160"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="161-161"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="164-164"];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="165-165"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="166-166"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="167-167"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="170-172"];
n315 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="172-172"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="175-175"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="181-181"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="189-189"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="201-201"];
n43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Stream(job, algorithm, feed, results, token)", span="202-202"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="215-215"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="leanManager.Update()", span="222-222"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="235-235"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="238-238"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="243-243"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="247-247"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="249-249"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SystemDebugMessage(logMessage)", span="256-256"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="263-263"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="realtime.ScanPastEvents(time)", span="273-273"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="277-277"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="283-283"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="288-288"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="299-299"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="302-302"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="327-327"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="331-331"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="334-334"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="ProcessDelistedSymbols(algorithm, delistings)", span="337-337"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="340-340"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="345-345"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="348-348"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="357-357"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="364-364"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="369-369"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="372-372"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="377-377"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="389-389"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="393-393"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="406-406"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="416-416"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="421-421"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Dividend for {1}'', algorithm.Time, dividend.Symbol.ToString())", span="431-431"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="432-432"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Split for {1}'', algorithm.Time, split.Symbol.ToString())", span="440-440"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="441-441"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="443-443"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="446-446"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="447-447"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="452-452"];
n154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="484-484"];
n163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="505-505"];
n165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="511-511"];
n170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="523-523"];
n172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="527-527"];
n174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="531-531"];
n176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="536-536"];
n180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="543-543"];
n185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="558-558"];
n187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="559-559"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="560-560"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="561-561"];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="565-565"];
n198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="576-576"];
n201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="582-582"];
n205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="590-590"];
n207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="596-596"];
n210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="606-606"];
n213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="611-611"];
n216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="617-617"];
n219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="623-623"];
n220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="624-624"];
n221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="625-625"];
n224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="632-632"];
n225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="633-633"];
n228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="640-640"];
n229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="641-641"];
n230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="645-645"];
n231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="648-648"];
n232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="649-649"];
n233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="650-650"];
n235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="655-655"];
n236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="659-660"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="241-241"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue <= 0", span="252-252"];
n234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="653-653"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="142-142"];
n53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=backtestMode, span="230-230"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=backtestMode, span="271-271"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="143-143"];
n238 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="184-184"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="195-195"];
n160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="494-494"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="144-144"];
n239 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="400-400"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="145-145"];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="353-353"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="146-146"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="408-408"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var delistings = new List<Delisting>()", span="148-148"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="404-404"];
n240 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="152-152"];
n241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="888-888"];
n184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="558-558"];
n186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="559-559"];
n188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="560-560"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="561-561"];
n169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="521-521"];
n171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="525-525"];
n173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="529-529"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="281-281"];
n242 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n243 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n244 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n245 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
n310 [cluster="lambda expression", label="Entry lambda expression", span="171-171"];
n314 [cluster="lambda expression", label="Entry lambda expression", span="172-172"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="187-187"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="config.IsCustomData", span="178-178"];
n246 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="genericMethod != null", span="193-193"];
n247 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="190-190"];
n248 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="191-191"];
n249 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n250 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n251 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="205-205"];
n208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="600-600"];
n252 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="680-680"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="210-210"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="217-217"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="224-224"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="225-225"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="279-279"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="285-285"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="295-295"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="297-297"];
n79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.CashBookUpdateData", span="308-308"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="318-318"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="412-412"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="429-429"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="436-436"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="462-462"];
n158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="491-491"];
n181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Count > 0", span="551-551"];
n182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="553-553"];
n183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="555-555"];
n197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="573-573"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status != AlgorithmStatus.Running", span="208-208"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="218-218"];
n254 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n255 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="233-233"];
n151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="477-477"];
n206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime = time", span="593-593"];
n256 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="982-982"];
n257 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n258 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
n259 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="254-254"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(logMessage)", span="255-255"];
n261 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
n262 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="460-460"];
n263 [cluster="Unk.]", label="Entry Unk.]", span=""];
n318 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="288-288"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="290-290"];
n264 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
n317 [cluster="lambda expression", label="Entry lambda expression", span="288-288"];
n265 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
n266 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
n267 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
n80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var cash = update.Target", span="310-310"];
n81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="311-311"];
n82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="cash.Update(data)", span="313-313"];
n268 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="80-80"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var security = update.Target", span="320-320"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="321-321"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="security.SetMarketPrice(data)", span="323-323"];
n269 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
n270 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
n271 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
n272 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
n273 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="930-930"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="342-342"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="347-347"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="356-356"];
n99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="358-358"];
n274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="542-542"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="385-385"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="360-360"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="executingMarginCall = true", span="366-366"];
n275 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="405-405"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="379-379"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=executedTickets, span="370-370"];
n276 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="375-375"];
n277 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n278 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="399-399"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="378-378"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="380-380"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="381-381"];
n279 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="391-391"];
n280 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="410-410"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="394-394"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="395-395"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="396-396"];
n281 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="824-824"];
n282 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="375-375"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="419-419"];
n283 [cluster="QuantConnect.Interfaces.IAlgorithm.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="381-381"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="422-422"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="423-423"];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="424-424"];
n284 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
n285 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
n286 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="596-596"];
n322 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="446-446"];
n287 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="616-616"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="450-450"];
n321 [cluster="lambda expression", label="Entry lambda expression", span="446-446"];
n288 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n289 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="453-453"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="454-454"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="455-455"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var consolidators = update.Target.Consolidators", span="464-464"];
n153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="482-482"];
n148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="467-467"];
n149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="470-470"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=consolidators, span="465-465"];
n150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="472-472"];
n152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="consolidator.Scan(localTime)", span="478-478"];
n290 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1000-1000"];
n291 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
n292 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
n293 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
n155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="485-485"];
n156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="486-486"];
n157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="487-487"];
n159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="493-493"];
n161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="501-501"];
n162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.DataType.IsInstanceOfType(dataPoint)", span="503-503"];
n294 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="509-509"];
n295 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
n296 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
n166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="512-512"];
n167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="513-513"];
n168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="514-514"];
n175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="534-534"];
n177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="537-537"];
n178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="538-538"];
n179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="539-539"];
n297 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="903-903"];
n324 [cluster="lambda expression", label="Entry lambda expression", span="553-553"];
n298 [cluster="Unk.Collapse", label="Entry Unk.Collapse", span=""];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="563-563"];
n194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="566-566"];
n195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="567-567"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="568-568"];
n200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="580-580"];
n299 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="363-363"];
n300 [cluster="QuantConnect.Interfaces.IAlgorithm.FrameworkOnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.FrameworkOnData(QuantConnect.Data.Slice)", span="369-369"];
n202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="583-583"];
n203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="584-584"];
n204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="585-585"];
n301 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="254-254"];
n253 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n260 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109"];
n209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="603-603"];
n211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="608-608"];
n302 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="425-425"];
n212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="610-610"];
n214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="612-612"];
n303 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="613-613"];
n217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="620-620"];
n218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="622-622"];
n222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="629-629"];
n304 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="544-544"];
n305 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
n306 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="220-220"];
n223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="631-631"];
n226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="637-637"];
n227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="639-639"];
n307 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
n308 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="483-483"];
n309 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
n237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
n311 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="171-171"];
n312 [cluster="lambda expression", label="Exit lambda expression", span="171-171"];
n313 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n316 [cluster="lambda expression", label="Exit lambda expression", span="172-172"];
n319 [cluster="lambda expression", label="Exit lambda expression", span="288-288"];
n320 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
n323 [cluster="lambda expression", label="Exit lambda expression", span="446-446"];
n325 [cluster="lambda expression", label="x.Key.ID.SecurityType == SecurityType.Forex", span="553-553"];
n326 [cluster="lambda expression", label="Exit lambda expression", span="553-553"];
n327 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="667-667"];
n328 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="669-669"];
n329 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="673-673"];
n330 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="675-675"];
n331 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="667-667"];
n332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="682-682"];
n375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="764-764"];
n385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="783-783"];
n412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="850-850"];
n333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="683-683"];
n334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="684-684"];
n335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode", span="687-687"];
n336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ProcessVolatilityHistoryRequirements(algorithm)", span="689-689"];
n338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="694-694"];
n341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="699-702"];
n344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="709-709"];
n348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="714-714"];
n363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="750-750"];
n371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="758-758"];
n374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="763-763"];
n380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="773-773"];
n384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="781-781"];
n387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="790-790"];
n388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="792-792"];
n390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="795-795"];
n392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="800-800"];
n396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="807-807"];
n400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="818-818"];
n405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="837-837"];
n406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="838-838"];
n411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="847-847"];
n377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="769-769"];
n393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="802-802"];
n359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="741-741"];
n337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="693-693"];
n414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="854-854"];
n397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="811-811"];
n339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="697-697"];
n415 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="561-561"];
n343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="706-706"];
n346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="711-711"];
n352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="725-725"];
n353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="727-727"];
n354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="728-728"];
n356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="734-734"];
n389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="793-793"];
n340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="698-698"];
n357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="736-736"];
n383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="780-780"];
n410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="846-846"];
n416 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="775-775"];
n408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="841-841"];
n342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="704-704"];
n417 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n418 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
n419 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
n438 [cluster="lambda expression", label="Entry lambda expression", span="700-700"];
n404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="835-835"];
n345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="710-710"];
n420 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n442 [cluster="lambda expression", label="Entry lambda expression", span="709-709"];
n445 [cluster="lambda expression", label="Entry lambda expression", span="710-710"];
n349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="716-716"];
n350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="718-718"];
n351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="719-719"];
n347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="713-713"];
n421 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
n422 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
n423 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n448 [cluster="lambda expression", label="Entry lambda expression", span="725-725"];
n451 [cluster="lambda expression", label="Entry lambda expression", span="727-727"];
n454 [cluster="lambda expression", label="Entry lambda expression", span="727-727"];
n355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="730-730"];
n457 [cluster="lambda expression", label="Entry lambda expression", span="728-728"];
n358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="737-737"];
n424 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
n360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="743-743"];
n425 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
n362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="748-748"];
n364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="751-751"];
n361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<DataFeedPacket>()", span="747-747"];
n370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="756-756"];
n365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="752-752"];
n366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="753-753"];
n369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="755-755"];
n368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="754-754"];
n367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="754-754"];
n427 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n426 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n428 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
n429 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="760-760"];
n376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="767-767"];
n430 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
n431 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
n379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="772-772"];
n386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="784-784"];
n373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="762-762"];
n432 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="771-771"];
n433 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="387-387"];
n382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="779-779"];
n434 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="555-555"];
n391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="796-796"];
n413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="680-680"];
n395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="805-805"];
n399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="815-815"];
n394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="804-804"];
n398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="814-814"];
n402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="824-824"];
n435 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n436 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n460 [cluster="lambda expression", label="Entry lambda expression", span="815-815"];
n401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="820-820"];
n403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="830-830"];
n437 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
n407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="839-839"];
n409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="845-845"];
n439 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="700-700"];
n440 [cluster="lambda expression", label="Exit lambda expression", span="700-700"];
n441 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
n443 [cluster="lambda expression", label="!x.IsInternalFeed", span="709-709"];
n444 [cluster="lambda expression", label="Exit lambda expression", span="709-709"];
n446 [cluster="lambda expression", label="x.Resolution", span="710-710"];
n447 [cluster="lambda expression", label="Exit lambda expression", span="710-710"];
n449 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="725-725"];
n450 [cluster="lambda expression", label="Exit lambda expression", span="725-725"];
n452 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="727-727"];
n453 [cluster="lambda expression", label="Exit lambda expression", span="727-727"];
n455 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="727-727"];
n456 [cluster="lambda expression", label="Exit lambda expression", span="727-727"];
n458 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="728-728"];
n459 [cluster="lambda expression", label="Exit lambda expression", span="728-728"];
n461 [cluster="lambda expression", label=x, span="815-815"];
n462 [cluster="lambda expression", label="Exit lambda expression", span="815-815"];
n463 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="856-856"];
n464 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="algorithm.Securities.Values", span="858-858"];
n466 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="862-862"];
n467 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="historyReq != null && algorithm.HistoryProvider != null", span="864-864"];
n468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="866-866"];
n465 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel != VolatilityModel.Null", span="860-860"];
n473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="854-854"];
n471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="slice.Bars.ContainsKey(security.Symbol)", span="871-871"];
n472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="872-872"];
n474 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
n469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="history != null", span="867-867"];
n470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label=history, span="869-869"];
n475 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
n476 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
n477 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="890-890"];
n479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="893-893"];
n478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="891-891"];
n481 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="896-896"];
n480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="894-894"];
n482 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="888-888"];
n483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="newDelistings.Values", span="905-905"];
n485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="910-910"];
n486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.Add(delisting)", span="912-912"];
n489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="919-919"];
n484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delisting.Type == DelistingType.Warning", span="908-908"];
n492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="903-903"];
n495 [cluster="lambda expression", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="910-910"];
n487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="913-913"];
n488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="918-918"];
n494 [cluster="lambda expression", label="Entry lambda expression", span="910-910"];
n490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label=cancelledOrders, span="920-920"];
n493 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
n491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="922-922"];
n496 [cluster="lambda expression", label="Exit lambda expression", span="910-910"];
n497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var i = delistings.Count - 1", span="932-932"];
n499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var security = algorithm.Securities[delistings[i].Symbol]", span="935-935"];
n501 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var delistingTime = delistings[i].Time", span="939-939"];
n509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="954-955"];
n512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="969-970"];
n513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="algorithm.Transactions.ProcessRequest(request)", span="973-973"];
n514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.RemoveAt(i)", span="975-975"];
n498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i >= 0", span="932-932"];
n515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i--", span="932-932"];
n516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="930-930"];
n500 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity == 0", span="936-936"];
n502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="940-940"];
n503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="941-941"];
n504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.LocalTime < nextMarketClose", span="943-943"];
n506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Type == SecurityType.Option", span="948-948"];
n507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var option = (Option)security", span="950-950"];
n508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity > 0", span="952-952"];
n517 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
n518 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
n505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="SubmitOrderRequest request", span="946-946"];
n520 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214"];
n519 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
n521 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
n522 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="987-987"];
n525 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="991-991"];
n524 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="989-989"];
n528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="982-982"];
n529 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
n530 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="206-206"];
n531 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
n526 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="992-992"];
n527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="993-993"];
n532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="config.Increment == TimeSpan.Zero", span="1002-1002"];
n534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1007-1007"];
n535 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return dataPointEndTime == roundedDataPointEndTime;", span="1008-1008"];
n533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return true;", span="1004-1004"];
n537 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
n536 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1000-1000"];
m0_61 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="562-562"];
m0_62 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.Debug(message)", span="564-564"];
m0_63 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="562-562"];
m0_147 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="776-776"];
m0_148 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="780-780"];
m0_149 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="782-782"];
m0_152 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="requests.Clear()", span="790-790"];
m0_156 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="requests.Add(request)", span="797-797"];
m0_157 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="requests.Count == 0", span="802-802"];
m0_161 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.OnMarginCall(requests)", span="813-813"];
m0_150 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="pyRequests == null || !pyRequests.IsIterable()", span="785-785"];
m0_153 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label=pyRequests, span="792-792"];
m0_151 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="787-787"];
m0_154 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="SubmitOrderRequest request", span="794-794"];
m0_155 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="TryConvert(pyRequest, out request)", span="795-795"];
m0_158 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="804-804"];
m0_159 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label=PythonException, span="808-808"];
m0_160 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="pythonException.Message.Contains(''TypeError : No method matches given arguments'')", span="811-811"];
m0_162 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="throw pythonException;", span="818-818"];
m0_163 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="776-776"];
m0_168 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="1075-1075"];
m0_261 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="result = default(T)", span="1077-1077"];
m0_262 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="1078-1078"];
m0_264 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="result = (T)pyObject.AsManagedObject(typeof(T))", span="1082-1082"];
m0_263 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="type == typeof(T)", span="1080-1080"];
m0_265 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="return type == typeof(T);", span="1085-1085"];
m0_266 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="1075-1075"];
m0_49 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="527-527"];
m0_50 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.AddSecurity(securityType, symbol, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="529-529"];
m0_51 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="527-527"];
m0_24 [cluster="Unk.Split", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Split", span=""];
m0_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1262-1262"];
m0_228 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="968-968"];
m0_229 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetRunTimeError(exception)", span="970-970"];
m0_230 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="968-968"];
m0_208 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="919-919"];
m0_209 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetBrokerageMessageHandler(handler)", span="921-921"];
m0_210 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="919-919"];
m0_23 [cluster="Unk.Repr", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Repr", span=""];
m0_26 [cluster="Unk.ToString", file="AlgorithmPythonWrapper.cs", label="Entry Unk.ToString", span=""];
m0_248 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="1011-1011"];
m0_249 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetMaximumOrders(max)", span="1013-1013"];
m0_250 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="1011-1011"];
m0_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="569-569"];
m0_196 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="888-888"];
m0_197 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.PostInitialize()", span="890-890"];
m0_198 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="888-888"];
m0_108 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="670-670"];
m0_109 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="672-672"];
m0_110 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnBrokerageReconnect()", span="674-674"];
m0_111 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="670-670"];
m0_41 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="424-424"];
m0_42 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetOptionChainProvider(optionChainProvider)", span="426-426"];
m0_43 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="424-424"];
m0_220 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="950-950"];
m0_221 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetCash(symbol, startingCash, conversionRate)", span="952-952"];
m0_222 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="950-950"];
m0_103 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="659-659"];
m0_104 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="661-661"];
m0_105 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnBrokerageMessage(messageEvent)", span="663-663"];
m0_106 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="659-659"];
m0_185 [cluster="Unk.OnAssignmentOrderEvent", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnAssignmentOrderEvent", span=""];
m0_29 [cluster="Unk.SetAttr", file="AlgorithmPythonWrapper.cs", label="Entry Unk.SetAttr", span=""];
m0_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="935-935"];
m0_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315"];
m0_232 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="976-976"];
m0_233 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetFinishedWarmingUp()", span="978-978"];
m0_234 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="976-976"];
m0_25 [cluster="Unk.Dir", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Dir", span=""];
m0_53 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="540-540"];
m0_54 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.AddFutureContract(symbol, resolution, fillDataForward, leverage);", span="542-542"];
m0_55 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="540-540"];
m0_45 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="433-433"];
m0_47 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="433-433"];
m0_102 [cluster="Unk.OnBrokerageDisconnect", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnBrokerageDisconnect", span=""];
m0_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1574-1574"];
m0_32 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m0_65 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="571-571"];
m0_66 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.Error(message)", span="573-573"];
m0_67 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="571-571"];
m0_94 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="640-640"];
m0_95 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.Log(message)", span="642-642"];
m0_96 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="640-640"];
m0_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="541-541"];
m0_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1088-1088"];
m0_85 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="617-617"];
m0_86 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="619-619"];
m0_87 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="AlgorithmPythonWrapper.cs", label="_algorithm.Initialize()", span="621-621"];
m0_88 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="617-617"];
m0_260 [cluster="Unk.ModuleFromString", file="AlgorithmPythonWrapper.cs", label="Entry Unk.ModuleFromString", span=""];
m0_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="610-610"];
m0_0 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", span="49-49"];
m0_1 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="_algorithm = null", span="51-51"];
m0_3 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="!module.HasAttr(''QCAlgorithm'')", span="57-57"];
m0_5 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="var baseClass = module.GetAttr(''QCAlgorithm'')", span="62-62"];
m0_7 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="var moduleName = module.Repr().Split('\'')[1]", span="67-67"];
m0_8 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="module.Dir()", span="69-69"];
m0_9 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="var attr = module.GetAttr(name.ToString())", span="71-71"];
m0_2 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="55-55"];
m0_4 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="return;", span="59-59"];
m0_6 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="_util = ImportUtil()", span="65-65"];
m0_10 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="attr.IsSubclass(baseClass) && attr.Repr().Contains(moduleName)", span="73-73"];
m0_16 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label=Exception, span="90-90"];
m0_11 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="attr.SetAttr(''OnPythonData'', _util.GetAttr(''OnPythonData''))", span="75-75"];
m0_12 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="_algorithm = attr.Invoke()", span="77-77"];
m0_13 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm = (QCAlgorithm)_algorithm", span="80-80"];
m0_15 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="return;", span="85-85"];
m0_17 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="Logging.Log.Error(e)", span="92-92"];
m0_18 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", span="49-49"];
m0_176 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="839-839"];
m0_177 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="841-841"];
m0_178 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnOrderEvent(newEvent)", span="843-843"];
m0_179 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="839-839"];
m0_126 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="712-712"];
m0_127 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="714-714"];
m0_128 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnEndOfAlgorithm()", span="716-716"];
m0_129 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="712-712"];
m0_81 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="609-609"];
m0_82 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.GetWarmupHistoryRequests();", span="611-611"];
m0_83 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="609-609"];
m0_190 [cluster="Unk.OnSecuritiesChanged", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnSecuritiesChanged", span=""];
m0_164 [cluster="Unk.OnMarginCall", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnMarginCall", span=""];
m0_272 [cluster="object.ToString()", file="AlgorithmPythonWrapper.cs", label="Entry object.ToString()", span="0-0"];
m0_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1815-1815"];
m0_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1677-1677"];
m0_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="863-863"];
m0_20 [cluster="Unk.HasAttr", file="AlgorithmPythonWrapper.cs", label="Entry Unk.HasAttr", span=""];
m0_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1690-1690"];
m0_165 [cluster="Unk.IsIterable", file="AlgorithmPythonWrapper.cs", label="Entry Unk.IsIterable", span=""];
m0_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="158-158"];
m0_240 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="994-994"];
m0_241 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetLiveMode(live)", span="996-996"];
m0_242 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="994-994"];
m0_131 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="724-724"];
m0_137 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="724-724"];
m0_212 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="930-930"];
m0_213 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetBrokerageModel(brokerageModel)", span="932-932"];
m0_214 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="930-930"];
m0_119 [cluster="Unk.OnPythonData", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnPythonData", span=""];
m0_98 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="648-648"];
m0_99 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="650-650"];
m0_100 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnBrokerageDisconnect()", span="652-652"];
m0_101 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="648-648"];
m0_268 [cluster="Unk.AsManagedObject", file="AlgorithmPythonWrapper.cs", label="Entry Unk.AsManagedObject", span=""];
m0_191 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="876-876"];
m0_194 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="876-876"];
m0_138 [cluster="Unk.OnEndOfDay", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnEndOfDay", span=""];
m0_252 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="1020-1020"];
m0_253 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetParameters(parameters)", span="1022-1022"];
m0_254 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="1020-1020"];
m0_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="765-765"];
m0_167 [cluster="System.Collections.Generic.List<T>.Clear()", file="AlgorithmPythonWrapper.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m0_30 [cluster="Unk.Invoke", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Invoke", span=""];
m0_21 [cluster="Unk.GetAttr", file="AlgorithmPythonWrapper.cs", label="Entry Unk.GetAttr", span=""];
m0_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1702-1702"];
m0_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1842-1842"];
m0_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1158-1158"];
m0_166 [cluster="System.Exception.Exception(string)", file="AlgorithmPythonWrapper.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_90 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="631-631"];
m0_91 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.Liquidate(symbolToLiquidate, tag);", span="633-633"];
m0_92 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="631-631"];
m0_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1508-1508"];
m0_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="485-485"];
m0_130 [cluster="Unk.OnEndOfAlgorithm", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnEndOfAlgorithm", span=""];
m0_121 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnData(QuantConnect.Data.Slice)", span="701-701"];
m0_124 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.FrameworkOnData(QuantConnect.Data.Slice)", span="701-701"];
m0_175 [cluster="Unk.OnMarginCallWarning", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnMarginCallWarning", span=""];
m0_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1270-1270"];
m0_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="551-551"];
m0_200 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="898-898"];
m0_201 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.RemoveSecurity(symbol);", span="900-900"];
m0_202 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="898-898"];
m0_57 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="553-553"];
m0_58 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.AddOptionContract(symbol, resolution, fillDataForward, leverage);", span="555-555"];
m0_59 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="553-553"];
m0_125 [cluster="Unk.FrameworkOnData", file="AlgorithmPythonWrapper.cs", label="Entry Unk.FrameworkOnData", span=""];
m0_113 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="682-682"];
m0_114 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="684-684"];
m0_116 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnPythonData(slice)", span="688-688"];
m0_117 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnData(slice)", span="692-692"];
m0_115 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="SubscriptionManager.HasCustomData", span="686-686"];
m0_118 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="682-682"];
m0_269 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1092-1092"];
m0_270 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="AlgorithmPythonWrapper.cs", label="return _algorithm == null ? base.ToString() : _algorithm.Repr();", span="1094-1094"];
m0_271 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1092-1092"];
m0_120 [cluster="Unk.OnData", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnData", span=""];
m0_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m0_77 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="600-600"];
m0_78 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.GetParameter(name);", span="602-602"];
m0_79 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="600-600"];
m0_181 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="852-852"];
m0_182 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="854-854"];
m0_183 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnAssignmentOrderEvent(assignmentEvent)", span="856-856"];
m0_184 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="852-852"];
m0_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1070-1070"];
m0_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="619-619"];
m0_195 [cluster="Unk.FrameworkOnSecuritiesChanged", file="AlgorithmPythonWrapper.cs", label="Entry Unk.FrameworkOnSecuritiesChanged", span=""];
m0_140 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="752-752"];
m0_146 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="752-752"];
m0_171 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="826-826"];
m0_172 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="828-828"];
m0_173 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnMarginCallWarning()", span="830-830"];
m0_174 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="826-826"];
m0_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1828-1828"];
m0_89 [cluster="Unk.Initialize", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Initialize", span=""];
m0_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1490-1490"];
m0_37 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="415-415"];
m0_38 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetAvailableDataTypes(availableDataTypes)", span="417-417"];
m0_39 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="415-415"];
m0_216 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="939-939"];
m0_217 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetCash(startingCash)", span="941-941"];
m0_218 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="939-939"];
m0_236 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="985-985"];
m0_237 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetHistoryProvider(historyProvider)", span="987-987"];
m0_238 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="985-985"];
m0_112 [cluster="Unk.OnBrokerageReconnect", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnBrokerageReconnect", span=""];
m0_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1333-1333"];
m0_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
m0_244 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="1002-1002"];
m0_245 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetLocked()", span="1004-1004"];
m0_246 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="1002-1002"];
m0_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="41-41"];
m0_69 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="581-581"];
m0_70 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.GetChartUpdates(clearChartData);", span="583-583"];
m0_71 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="581-581"];
m0_180 [cluster="Unk.OnOrderEvent", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnOrderEvent", span=""];
m0_224 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="959-959"];
m0_225 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetDateTime(time)", span="961-961"];
m0_226 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="959-959"];
m0_139 [cluster="Unk.Equals", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Equals", span=""];
m0_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="967-967"];
m0_107 [cluster="Unk.OnBrokerageMessage", file="AlgorithmPythonWrapper.cs", label="Entry Unk.OnBrokerageMessage", span=""];
m0_267 [cluster="Unk.GetPythonType", file="AlgorithmPythonWrapper.cs", label="Entry Unk.GetPythonType", span=""];
m0_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m0_186 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="864-864"];
m0_187 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="866-866"];
m0_188 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="_algorithm.OnSecuritiesChanged(changes)", span="868-868"];
m0_189 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="864-864"];
m0_19 [cluster="Unk.GIL", file="AlgorithmPythonWrapper.cs", label="Entry Unk.GIL", span=""];
m0_33 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="406-406"];
m0_34 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetStatus(status)", span="408-408"];
m0_35 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="406-406"];
m0_22 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="1029-1029"];
m0_256 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="AlgorithmPythonWrapper.cs", label="var code =\r\n                ''from clr import AddReference\n'' +\r\n                ''AddReference(\''System\'')\n'' +\r\n                ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n                ''import decimal\n'' +\r\n\r\n                // OnPythonData call OnData after converting the Slice object\r\n                ''def OnPythonData(self, data):\n'' +\r\n                ''    self.OnData(PythonSlice(data))\n'' +\r\n\r\n                // PythonSlice class\r\n                ''class PythonSlice(dict):\n'' +\r\n                ''    def __init__(self, slice):\n'' +\r\n                ''        for data in slice:\n'' +\r\n                ''            self[data.Key] = Data(data.Value)\n'' +\r\n                ''            self[data.Key.Value] = Data(data.Value)\n'' +\r\n\r\n                // Python Data class: Converts custom data (PythonData) into a python object'''\r\n                ''class Data(object):\n'' +\r\n                ''    def __init__(self, data):\n'' +\r\n                ''        members = [attr for attr in dir(data) if not callable(attr) and not attr.startswith(\''__\'')]\n'' +\r\n                ''        for member in members:\n'' +\r\n                ''            setattr(self, member, getattr(data, member))\n'' +\r\n\r\n                ''        if not hasattr(data, 'GetStorageDictionary'): return\n'' +\r\n\r\n                ''        for kvp in data.GetStorageDictionary():\n'' +\r\n                ''           name = kvp.Key.replace('-',' ').replace('.',' ').title().replace(' ', '')\n'' +\r\n                ''           value = decimal.Decimal(kvp.Value) if isinstance(kvp.Value, float) else kvp.Value\n'' +\r\n                ''           setattr(self, name, value)''", span="1031-1060"];
m0_257 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="AlgorithmPythonWrapper.cs", label="Py.GIL()", span="1062-1062"];
m0_258 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="AlgorithmPythonWrapper.cs", label="return PythonEngine.ModuleFromString(''AlgorithmPythonUtil'', code);", span="1064-1064"];
m0_259 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="1029-1029"];
m0_204 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="907-907"];
m0_205 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="AlgorithmPythonWrapper.cs", label="_baseAlgorithm.SetAlgorithmId(algorithmId)", span="909-909"];
m0_206 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="907-907"];
m0_28 [cluster="Unk.Contains", file="AlgorithmPythonWrapper.cs", label="Entry Unk.Contains", span=""];
m0_27 [cluster="Unk.IsSubclass", file="AlgorithmPythonWrapper.cs", label="Entry Unk.IsSubclass", span=""];
m0_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1254-1254"];
m0_73 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="589-589"];
m0_74 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="AlgorithmPythonWrapper.cs", label="return _baseAlgorithm.GetLocked();", span="591-591"];
m0_75 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="589-589"];
m0_273 [file="AlgorithmPythonWrapper.cs", label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span=""];
m1_52 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42"];
m1_51 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="106-106"];
m1_45 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m1_47 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m1_62 [cluster="lambda expression", file="AlgorithmRunner.cs", label="Entry lambda expression", span="76-82"];
m1_64 [cluster="lambda expression", file="AlgorithmRunner.cs", label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="79-79"];
m1_66 [cluster="lambda expression", file="AlgorithmRunner.cs", label="engine.Run(job, algorithmManager, algorithmPath)", span="81-81"];
m1_63 [cluster="lambda expression", file="AlgorithmRunner.cs", label="string algorithmPath", span="78-78"];
m1_65 [cluster="lambda expression", file="AlgorithmRunner.cs", label="var algorithmManager = new AlgorithmManager(false)", span="80-80"];
m1_67 [cluster="lambda expression", file="AlgorithmRunner.cs", label="Exit lambda expression", span="76-82"];
m1_40 [cluster="QuantConnect.Util.Composer.Reset()", file="AlgorithmRunner.cs", label="Entry QuantConnect.Util.Composer.Reset()", span="198-198"];
m1_56 [cluster="System.Threading.Tasks.Task.Wait()", file="AlgorithmRunner.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m1_70 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m1_49 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", span="38-38"];
m1_43 [cluster="System.IO.Directory.CreateDirectory(string)", file="AlgorithmRunner.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m1_50 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="178-178"];
m1_41 [cluster="System.Enum.ToLower()", file="AlgorithmRunner.cs", label="Entry System.Enum.ToLower()", span="879-879"];
m1_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
m1_44 [cluster="System.IO.File.Delete(string)", file="AlgorithmRunner.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m1_59 [cluster="Unk.AreEqual", file="AlgorithmRunner.cs", label="Entry Unk.AreEqual", span=""];
m1_46 [cluster="System.Enum.ToString()", file="AlgorithmRunner.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_60 [cluster="string.Replace(string, string)", file="AlgorithmRunner.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_42 [cluster="System.IO.Path.GetDirectoryName(string)", file="AlgorithmRunner.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m1_53 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m1_68 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36"];
m1_48 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", span="38-38"];
m1_57 [cluster="QuantConnect.Logging.ILogHandler.Error(string, params object[])", file="AlgorithmRunner.cs", label="Entry QuantConnect.Logging.ILogHandler.Error(string, params object[])", span="30-30"];
m1_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_61 [cluster="System.IO.File.Copy(string, string)", file="AlgorithmRunner.cs", label="Entry System.IO.File.Copy(string, string)", span="0-0"];
m1_55 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="AlgorithmRunner.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m1_54 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m1_0 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="33-33"];
m1_1 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var statistics = new Dictionary<string, string>()", span="35-35"];
m1_3 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var logFile = $''./regression/{algorithm}.{language.ToLower()}.log''", span="38-38"];
m1_6 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''algorithm-type-name'', algorithm)", span="45-45"];
m1_13 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''algorithm-language'', language.ToString())", span="52-52"];
m1_14 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''algorithm-location'',\r\n                    language == Language.Python\r\n                        ? ''../../../Algorithm.Python/'' + algorithm + ''.py''\r\n                        : ''QuantConnect.Algorithm.'' + language + ''.dll'')", span="53-56"];
m1_22 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.LogHandler.Trace(''{0}: Running '' + algorithm + ''...'', DateTime.UtcNow)", span="70-70"];
m1_31 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label=expectedStatistics, span="95-95"];
m1_2 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Composer.Instance.Reset()", span="37-37"];
m1_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(logFile))", span="39-39"];
m1_5 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="File.Delete(logFile)", span="40-40"];
m1_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var logHandlers = new ILogHandler[] {new ConsoleLogHandler(), new FileLogHandler(logFile, false)}", span="62-62"];
m1_34 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var passedFile = logFile.Replace(''./regression/'', ''./passed/'')", span="103-103"];
m1_37 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="File.Copy(logFile, passedFile)", span="106-106"];
m1_7 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''live-mode'', ''false'')", span="46-46"];
m1_8 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''environment'', '''')", span="47-47"];
m1_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="48-48"];
m1_10 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="49-49"];
m1_11 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="50-50"];
m1_12 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Config.Set(''result-handler'', ''QuantConnect.Lean.Engine.Results.BacktestingResultHandler'')", span="51-51"];
m1_15 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var debugEnabled = Log.DebuggingEnabled", span="59-59"];
m1_28 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.DebuggingEnabled = debugEnabled", span="87-87"];
m1_17 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.LogHandler = new CompositeLogHandler(logHandlers)", span="63-63"];
m1_18 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="64-64"];
m1_19 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="65-65"];
m1_24 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="75-75"];
m1_26 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="var backtestingResultHandler = (BacktestingResultHandler)algorithmHandlers.Results", span="84-84"];
m1_20 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.DebuggingEnabled = true", span="67-67"];
m1_25 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Task.Factory.StartNew(() =>\r\n                    {\r\n                        string algorithmPath;\r\n                        var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                        var algorithmManager = new AlgorithmManager(false);\r\n                        engine.Run(job, algorithmManager, algorithmPath);\r\n                    }).Wait()", span="76-82"];
m1_21 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.LogHandler.Trace('''')", span="69-69"];
m1_23 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.LogHandler.Trace('''')", span="71-71"];
m1_27 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="statistics = backtestingResultHandler.FinalStatistics", span="85-85"];
m1_32 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="97-97"];
m1_33 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Assert.AreEqual(stat.Value, statistics[stat.Key], ''Failed on '' + stat.Key)", span="98-98"];
m1_29 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label=Exception, span="90-90"];
m1_30 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Log.LogHandler.Error(''{0} {1}'', ex.Message, ex.StackTrace)", span="92-92"];
m1_35 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(passedFile))", span="104-104"];
m1_36 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="File.Delete(passedFile)", span="105-105"];
m1_38 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="AlgorithmRunner.cs", label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="33-33"];
m1_71 [file="AlgorithmRunner.cs", label=systemHandlers, span=""];
m1_72 [file="AlgorithmRunner.cs", label=engine, span=""];
m4_176 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="386-386"];
m4_177 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="MarketSimulation != null", span="389-389"];
m4_178 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="MarketSimulation.SimulateMarketConditions(this, Algorithm)", span="390-390"];
m4_179 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="386-386"];
m4_169 [cluster="Unk.All", file="BacktestingBrokerage.cs", label="Entry Unk.All", span=""];
m4_153 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m4_52 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m4_48 [cluster="int.ToString()", file="BacktestingBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m4_191 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
m4_157 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
m4_158 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
m4_199 [cluster="QuantConnect.Orders.Order.Clone()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m4_173 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="368-368"];
m4_24 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="107-107"];
m4_25 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Symbol", span="107-107"];
m4_26 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="107-107"];
m4_170 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Entry lambda expression", span="235-235"];
m4_171 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Key", span="235-235"];
m4_172 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="235-235"];
m4_174 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="x.Status.IsClosed()", span="368-368"];
m4_175 [cluster="lambda expression", file="BacktestingBrokerage.cs", label="Exit lambda expression", span="368-368"];
m4_31 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126"];
m4_33 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.Status == OrderStatus.New", span="130-130"];
m4_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="SetPendingOrder(order)", span="135-135"];
m4_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="138-138"];
m4_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="139-139"];
m4_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(orderId)", span="139-139"];
m4_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="143-143"];
m4_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="132-132"];
m4_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="148-148"];
m4_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_needsScan = true", span="134-134"];
m4_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="142-142"];
m4_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(submitted)", span="144-144"];
m4_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="146-146"];
m4_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="126-126"];
m4_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116"];
m4_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="return Algorithm.Portfolio.CashBook.Values.ToList();", span="118-118"];
m4_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="116-116"];
m4_149 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61"];
m4_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="64-64"];
m4_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="65-65"];
m4_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="61-61"];
m4_152 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m4_180 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
m4_14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95"];
m4_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="return Algorithm.Transactions.GetOpenOrders();", span="97-97"];
m4_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="95-95"];
m4_168 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
m4_23 [cluster="Unk.ToList", file="BacktestingBrokerage.cs", label="Entry Unk.ToList", span=""];
m4_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
m4_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=_needsScanLock, span="224-224"];
m4_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!_needsScan", span="227-227"];
m4_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="return;", span="229-229"];
m4_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var stillNeedsScan = false", span="232-232"];
m4_90 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.OrderBy(x => x.Key)", span="235-235"];
m4_147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_needsScan = stillNeedsScan", span="379-379"];
m4_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var order = kvp.Value", span="237-237"];
m4_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order == null", span="238-238"];
m4_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="240-240"];
m4_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status.IsClosed()", span="245-245"];
m4_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="248-248"];
m4_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="253-253"];
m4_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="259-259"];
m4_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="262-262"];
m4_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="264-264"];
m4_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="266-266"];
m4_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="267-267"];
m4_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="272-272"];
m4_107 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="sufficientBuyingPower = Algorithm.Transactions.GetSufficientCapitalForOrder(Algorithm.Portfolio, order)", span="281-281"];
m4_110 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out pending)", span="287-287"];
m4_111 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status = OrderStatus.Invalid", span="288-288"];
m4_112 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="289-289"];
m4_114 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="292-292"];
m4_117 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Type", span="305-305"];
m4_119 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="308-308"];
m4_121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="312-312"];
m4_123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="316-316"];
m4_125 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="320-320"];
m4_127 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="324-324"];
m4_129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="328-328"];
m4_132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="333-333"];
m4_135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="340-341"];
m4_136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status = OrderStatus.Invalid", span="347-347"];
m4_137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="348-349"];
m4_139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="355-355"];
m4_141 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Type == OrderType.OptionExercise", span="361-361"];
m4_145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(order.Id, out order)", span="370-370"];
m4_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_pending.TryRemove(kvp.Key, out order)", span="241-241"];
m4_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="stillNeedsScan = true", span="255-255"];
m4_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Security security", span="261-261"];
m4_138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=fills, span="352-352"];
m4_144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fills.All(x => x.Status.IsClosed())", span="368-368"];
m4_116 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var model = security.FillModel", span="300-300"];
m4_131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var option = (Option)security", span="332-332"];
m4_106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="bool sufficientBuyingPower", span="278-278"];
m4_108 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=Exception, span="283-283"];
m4_115 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=sufficientBuyingPower, span="297-297"];
m4_109 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Order pending", span="286-286"];
m4_113 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(err)", span="291-291"];
m4_118 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.Limit", span="307-307"];
m4_120 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.StopMarket", span="311-311"];
m4_122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.Market", span="315-315"];
m4_124 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.StopLimit", span="319-319"];
m4_126 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.MarketOnOpen", span="323-323"];
m4_128 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.MarketOnClose", span="327-327"];
m4_130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.OptionExercise", span="331-331"];
m4_133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=Exception, span="337-337"];
m4_134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(err)", span="339-339"];
m4_140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(fill)", span="358-358"];
m4_143 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOptionPositionAssigned(fill)", span="364-364"];
m4_146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="stillNeedsScan = true", span="374-374"];
m4_148 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
m4_156 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="399-399"];
m4_69 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_22 [cluster="Holding.cstr", file="BacktestingBrokerage.cs", label="Entry Holding.cstr", span=""];
m4_84 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m4_167 [cluster="decimal.SmartRounding()", file="BacktestingBrokerage.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m4_192 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m4_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m4_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="76-76"];
m4_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="MarketSimulation = marketSimulation", span="77-77"];
m4_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="78-78"];
m4_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m4_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m4_166 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m4_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
m4_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Algorithm = algorithm", span="52-52"];
m4_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="53-53"];
m4_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49"];
m4_53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
m4_54 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="158-158"];
m4_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!_pending.TryGetValue(order.Id, out pending)", span="163-163"];
m4_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="SetPendingOrder(order)", span="170-170"];
m4_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="173-173"];
m4_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="174-174"];
m4_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(orderId)", span="174-174"];
m4_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="178-178"];
m4_55 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="160-160"];
m4_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Order pending", span="162-162"];
m4_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="166-166"];
m4_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_needsScan = true", span="169-169"];
m4_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="177-177"];
m4_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(updated)", span="179-179"];
m4_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="181-181"];
m4_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
m4_181 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="398-398"];
m4_182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0.0m, 0.0m, Algorithm.UtcTime, ''Simulated option assignment'')", span="400-400"];
m4_184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="402-402"];
m4_185 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="403-403"];
m4_187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="portfolioModel.ProcessFill(Algorithm.Portfolio, option, fill)", span="408-408"];
m4_183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="var order = (OptionExerciseOrder)Order.CreateOrder(request)", span="401-401"];
m4_186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label=fills, span="405-405"];
m4_188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="OnOptionPositionAssigned(fill)", span="411-411"];
m4_189 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="398-398"];
m4_49 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m4_164 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_17 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="244-244"];
m4_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_151 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m4_163 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m4_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_159 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
m4_193 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="418-418"];
m4_194 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="418-418"];
m4_190 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m4_70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
m4_71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="191-191"];
m4_74 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!_pending.TryRemove(order.Id, out pending)", span="196-196"];
m4_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var orderId = order.Id.ToString()", span="203-203"];
m4_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="!order.BrokerId.Contains(orderId)", span="204-204"];
m4_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.BrokerId.Add(order.Id.ToString())", span="204-204"];
m4_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="208-208"];
m4_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label=_needsScanLock, span="193-193"];
m4_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Order pending", span="195-195"];
m4_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="199-199"];
m4_79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="int orderFee = 0", span="207-207"];
m4_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="OnOrderEvent(canceled)", span="209-209"];
m4_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="211-211"];
m4_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
m4_160 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
m4_165 [cluster="string.Format(string, object, object, object)", file="BacktestingBrokerage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_50 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_195 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="426-426"];
m4_196 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="426-426"];
m4_47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="436-436"];
m4_197 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="_pending[order.Id] = order.Clone()", span="439-439"];
m4_198 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="436-436"];
m4_150 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m4_162 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
m4_161 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
m4_155 [cluster="string.Format(string, object, object)", file="BacktestingBrokerage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104"];
m4_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="return (from security in Algorithm.Portfolio.Securities.Values.OrderBy(x => x.Symbol)\r\n                    where security.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(security)).ToList();", span="107-109"];
m4_20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="104-104"];
m4_46 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m4_51 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m4_200 [file="BacktestingBrokerage.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m5_12 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="BacktestingFutureChainProvider.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m5_13 [cluster="System.IO.File.Exists(string)", file="BacktestingFutureChainProvider.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m5_16 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="BacktestingFutureChainProvider.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m5_15 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="BacktestingFutureChainProvider.cs", label="Entry QuantConnect.Compression.GetZipEntryFileNames(string)", span="859-859"];
m5_11 [cluster="System.NotSupportedException.NotSupportedException(string)", file="BacktestingFutureChainProvider.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m5_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingFutureChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m5_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingFutureChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m6_82 [cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94"];
m6_85 [cluster="System.Collections.IEnumerator.MoveNext()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m6_111 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m6_88 [cluster="object.ReferenceEquals(object, object)", file="BacktestingSetupHandler.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m6_99 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m6_100 [cluster="Unk.TryGetValue", file="BacktestingSetupHandler.cs", label="Entry Unk.TryGetValue", span=""];
m6_113 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="79-79"];
m6_7 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="dataFeed.Subscriptions", span="53-53"];
m6_6 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="53-53"];
m6_8 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="53-53"];
m6_114 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="new[] { dateTimeUtc }", span="79-79"];
m6_117 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="123-123"];
m6_116 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="123-123"];
m6_121 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="147-147"];
m6_120 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="147-147"];
m6_115 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="79-79"];
m6_118 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="123-123"];
m6_122 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="147-147"];
m6_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43"];
m6_105 [cluster="QuantConnect.Symbol.ToString()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m6_133 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m6_98 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="119-119"];
m6_131 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="237-237"];
m6_96 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m6_102 [cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="188-188"];
m6_108 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="219-219"];
m6_78 [cluster="QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="82-82"];
m6_135 [cluster="QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", span="92-92"];
m6_80 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m6_104 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m6_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var exchangeHours = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours", span="82-82"];
m6_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="62-62"];
m6_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="IEnumerable<Symbol> selectSymbolsResult", span="64-64"];
m6_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var fineFiltered = universe as FineFundamentalFilteredUniverse", span="67-67"];
m6_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="selectSymbolsResult = universe.SelectSymbols(dateTimeUtc, universeData)", span="71-71"];
m6_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var factory = new FineFundamentalSubscriptionEnumeratorFactory(_algorithm.LiveMode, x => new[] { dateTimeUtc })", span="79-79"];
m6_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var request = new SubscriptionRequest(true, universe, security, new SubscriptionDataConfig(config), dateTimeUtc, dateTimeUtc)", span="88-88"];
m6_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="selectSymbolsResult = fineFiltered.FineFundamentalUniverse.PerformSelection(dateTimeUtc, fineCollection)", span="99-99"];
m6_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="selectSymbolsResult = universe.PerformSelection(dateTimeUtc, universeData)", span="104-104"];
m6_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="126-126"];
m6_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="universe.Members.Values", span="133-133"];
m6_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!universe.CanRemoveMember(dateTimeUtc, member)", span="139-139"];
m6_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="150-150"];
m6_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="security = universe.CreateSecurity(symbol, _algorithm, _marketHoursDatabase, _symbolPropertiesDatabase)", span="165-165"];
m6_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="universe.GetSubscriptionRequests(security, dateTimeUtc, algorithmEndDateUtc)", span="170-170"];
m6_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var addedMember = universe.AddMember(dateTimeUtc, security)", span="194-194"];
m6_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_dataFeed.AddSubscription(new SubscriptionRequest(false, universe, security, new SubscriptionDataConfig(security.Subscriptions.First()), dateTimeUtc, algorithmEndDateUtc))", span="210-210"];
m6_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Log.Debug(''UniverseSelection.ApplyUniverseSelection(): '' + dateTimeUtc + '': '' + securityChanges)", span="221-221"];
m6_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="fineFiltered != null", span="68-68"];
m6_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var fineCollection = new BaseDataCollection()", span="74-74"];
m6_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label=selectSymbolsResult, span="77-77"];
m6_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var dataProvider = new DefaultDataProvider()", span="75-75"];
m6_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="fineCollection.Data.Add(enumerator.Current)", span="93-93"];
m6_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var enumerator = factory.CreateEnumerator(request, dataProvider)", span="89-89"];
m6_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var config = FineFundamentalUniverse.CreateConfiguration(symbol)", span="80-80"];
m6_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, CashBook.AccountCurrency)", span="83-83"];
m6_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var security = new Equity(symbol, exchangeHours, quoteCash, symbolProperties)", span="86-86"];
m6_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var quoteCash = _algorithm.Portfolio.CashBook[symbolProperties.QuoteCurrency]", span="84-84"];
m6_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="enumerator.MoveNext()", span="91-91"];
m6_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="ReferenceEquals(selectSymbolsResult, Universe.Unchanged)", span="108-108"];
m6_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var selections = selectSymbolsResult.ToHashSet()", span="114-114"];
m6_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="return SecurityChanges.None;", span="110-110"];
m6_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var additions = new List<Security>()", span="116-116"];
m6_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="selections.Contains(member.Symbol)", span="136-136"];
m6_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label=selections, span="159-159"];
m6_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var removals = new List<Security>()", span="117-117"];
m6_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="additions.Add(security)", span="198-198"];
m6_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="additions.Count > 0", span="204-204"];
m6_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var securityChanges = additions.Count + removals.Count != 0\r\n                ? new SecurityChanges(additions, removals)\r\n                : SecurityChanges.None", span="215-217"];
m6_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var algorithmEndDateUtc = _algorithm.EndDate.ConvertToUtc(_algorithm.TimeZone)", span="118-118"];
m6_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="removals.Add(member)", span="144-144"];
m6_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_pendingRemovals.ToList()", span="121-121"];
m6_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="123-123"];
m6_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!member.HoldStock && !openOrders.Any()", span="124-124"];
m6_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_pendingRemovals.Remove(member)", span="128-128"];
m6_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="147-147"];
m6_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!member.HoldStock && !openOrders.Any()", span="148-148"];
m6_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_pendingRemovals.Add(member)", span="154-154"];
m6_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Security security", span="162-162"];
m6_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!_algorithm.Securities.TryGetValue(symbol, out security)", span="163-163"];
m6_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var addedSubscription = false", span="168-168"];
m6_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label=addedSubscription, span="192-192"];
m6_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="string reason", span="173-173"];
m6_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!_limiter.CanAddSubscription(request.Configuration.Resolution, out reason)", span="174-174"];
m6_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Log.Trace(''UniverseSelection.ApplyUniverseSelection(): Skipping adding subscription: '' + request.Configuration.Symbol.ToString() + '': '' + reason)", span="179-179"];
m6_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_dataFeed.AddSubscription(request)", span="183-183"];
m6_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="!request.IsUniverseSubscription", span="186-186"];
m6_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="_algorithm.Error(reason)", span="178-178"];
m6_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="addedSubscription = true", span="188-188"];
m6_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label=addedMember, span="196-196"];
m6_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="var addedSecurities = _algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(_algorithm.Securities, _algorithm.SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, _algorithm.BrokerageModel.DefaultMarkets)", span="206-206"];
m6_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label=addedSecurities, span="207-207"];
m6_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="securityChanges != SecurityChanges.None", span="219-219"];
m6_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="return securityChanges;", span="224-224"];
m6_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="62-62"];
m6_103 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="85-85"];
m6_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="227-227"];
m6_123 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="universe.RemoveMember(dateTimeUtc, member)", span="230-230"];
m6_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="member.Cache.Reset()", span="235-235"];
m6_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="universe.GetSubscriptionRequests(member, dateTimeUtc, algorithmEndDateUtc)", span="236-236"];
m6_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="removals.Remove(member)", span="240-240"];
m6_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="SymbolCache.TryRemove(member.Symbol)", span="249-249"];
m6_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="subscription.IsUniverseSubscription", span="238-238"];
m6_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="_dataFeed.RemoveSubscription(subscription.Configuration)", span="244-244"];
m6_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="227-227"];
m6_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60"];
m6_132 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m6_92 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_87 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="139-139"];
m6_75 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="46-46"];
m6_109 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m6_112 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m6_74 [cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="163-163"];
m6_93 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m6_94 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m6_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="26-26"];
m6_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="49-49"];
m6_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="_dataFeed = dataFeed", span="51-51"];
m6_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="_algorithm = algorithm", span="52-52"];
m6_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="_limiter = new SubscriptionLimiter(() => dataFeed.Subscriptions, controls.TickLimit, controls.SecondLimit, controls.MinuteLimit)", span="53-53"];
m6_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="49-49"];
m6_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67"];
m6_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47"];
m6_91 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577"];
m6_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59"];
m6_86 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_97 [cluster="Unk.Contains", file="BacktestingSetupHandler.cs", label="Entry Unk.Contains", span=""];
m6_83 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m6_119 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m6_89 [cluster="Unk.ToHashSet", file="BacktestingSetupHandler.cs", label="Entry Unk.ToHashSet", span=""];
m6_79 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210"];
m6_106 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m6_101 [cluster="Unk.CreateSecurity", file="BacktestingSetupHandler.cs", label="Entry Unk.CreateSecurity", span=""];
m6_110 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_81 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m6_136 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", span=""];
m6_137 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", span=""];
m6_138 [file="BacktestingSetupHandler.cs", label="System.DateTime", span=""];
m6_139 [file="BacktestingSetupHandler.cs", label=member, span=""];
m6_140 [file="BacktestingSetupHandler.cs", label=member, span=""];
m8_18 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="118-118"];
m8_19 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="SessionId = job.SessionId", span="123-123"];
m8_20 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="CompileId = job.CompileId", span="124-124"];
m8_21 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="DeployId = job.DeployId", span="125-125"];
m8_22 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Results = results", span="126-126"];
m8_23 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="UserId = job.UserId", span="127-127"];
m8_24 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="ProjectId = job.ProjectId", span="128-128"];
m8_25 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="SessionId = job.SessionId", span="129-129"];
m8_26 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Channel = job.Channel", span="130-130"];
m8_27 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label=Exception, span="132-132"];
m8_28 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Log.Error(''LiveResultPacket.Constructor: '' + err.Message)", span="133-133"];
m8_29 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Exit QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="118-118"];
m8_42 [cluster="QuantConnect.OS.GetServerStatistics()", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.OS.GetServerStatistics()", span="222-222"];
m8_0 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket()", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket()", span="83-83"];
m8_1 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket()", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Exit QuantConnect.Packets.LiveResultPacket.LiveResultPacket()", span="83-83"];
m8_33 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="189-189"];
m8_34 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Charts = charts", span="191-191"];
m8_35 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Orders = orders", span="192-192"];
m8_36 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="ProfitLoss = profitLoss", span="193-193"];
m8_37 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Statistics = statistics", span="194-194"];
m8_38 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Holdings = holdings", span="195-195"];
m8_39 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="RuntimeStatistics = runtime", span="196-196"];
m8_40 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="ServerStatistics = serverStatistics ?? OS.GetServerStatistics()", span="197-197"];
m8_41 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Exit QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="189-189"];
m8_17 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m8_16 [cluster="Unk.>", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry Unk.>", span=""];
m8_2 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", span="90-90"];
m8_3 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="var packet = JsonConvert.DeserializeObject<LiveResultPacket>(json)", span="95-95"];
m8_4 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="CompileId          = packet.CompileId", span="96-96"];
m8_5 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Channel            = packet.Channel", span="97-97"];
m8_6 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="SessionId          = packet.SessionId", span="98-98"];
m8_7 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="DeployId           = packet.DeployId", span="99-99"];
m8_8 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Type               = packet.Type", span="100-100"];
m8_9 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="UserId             = packet.UserId", span="101-101"];
m8_10 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="ProjectId          = packet.ProjectId", span="102-102"];
m8_11 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Results            = packet.Results", span="103-103"];
m8_12 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="ProcessingTime     = packet.ProcessingTime", span="104-104"];
m8_13 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label=Exception, span="106-106"];
m8_14 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Log.Trace(''LiveResultPacket(): Error converting json: '' + err.Message)", span="108-108"];
m8_15 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Exit QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", span="90-90"];
m8_31 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="183-183"];
m8_32 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", file="BasicTemplateFxcmVolumeAlgorithm.cs", label="Exit QuantConnect.Packets.LiveResult.LiveResult()", span="183-183"];
m8_43 [file="BasicTemplateFxcmVolumeAlgorithm.cs", label="QuantConnect.Packets.LiveResultPacket", span=""];
m8_44 [file="BasicTemplateFxcmVolumeAlgorithm.cs", label="QuantConnect.Packets.LiveResult", span=""];
m9_95 [cluster="System.Math.Abs(decimal)", file="BrokerageSetupHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m9_67 [cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38"];
m9_72 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", span="293-293"];
m9_73 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label=_cancelRequestLock, span="295-295"];
m9_74 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="_cancelRequest != null", span="297-297"];
m9_75 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="return _cancelRequest;", span="299-299"];
m9_76 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="var lastUpdate = _updateRequests.LastOrDefault()", span="303-303"];
m9_77 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="lastUpdate != null", span="304-304"];
m9_78 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="return lastUpdate;", span="306-306"];
m9_79 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="return SubmitRequest;", span="308-308"];
m9_80 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest()", span="293-293"];
m9_59 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
m9_60 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="var request = new CancelOrderRequest(_transactionManager.UtcTime, OrderId, tag)", span="266-266"];
m9_61 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="_transactionManager.ProcessRequest(request)", span="267-267"];
m9_62 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label=_cancelRequestLock, span="269-269"];
m9_63 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="_cancelRequest != null", span="271-271"];
m9_64 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="return _cancelRequest.Response;", span="273-273"];
m9_65 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''CancelRequest is null.'');", span="277-277"];
m9_66 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
m9_179 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", span="490-490"];
m9_180 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="var response = ticket.GetMostRecentOrderResponse()", span="492-492"];
m9_183 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="return ticket.OrderId;", span="497-497"];
m9_181 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="response != null && response.IsError", span="493-493"];
m9_182 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="return (int) response.ErrorCode;", span="495-495"];
m9_184 [cluster="QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.implicit operator int(QuantConnect.Orders.OrderTicket)", span="490-490"];
m9_56 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54"];
m9_8 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m9_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
m9_171 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="463-463"];
m9_34 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="228-228"];
m9_37 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="228-228"];
m9_46 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="239-239"];
m9_49 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="239-239"];
m9_28 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="224-224"];
m9_31 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="224-224"];
m9_40 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="235-235"];
m9_43 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="235-235"];
m9_29 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="o.LimitPrice", span="224-224"];
m9_30 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="224-224"];
m9_32 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="r.LimitPrice", span="224-224"];
m9_33 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="224-224"];
m9_35 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="o.LimitPrice", span="228-228"];
m9_36 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="228-228"];
m9_38 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="r.LimitPrice", span="228-228"];
m9_39 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="228-228"];
m9_41 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="o.StopPrice", span="235-235"];
m9_42 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="235-235"];
m9_44 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="r.StopPrice", span="235-235"];
m9_45 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="235-235"];
m9_47 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="o.StopPrice", span="239-239"];
m9_48 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="239-239"];
m9_50 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="r.StopPrice", span="239-239"];
m9_51 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="239-239"];
m9_98 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="325-325"];
m9_102 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="325-325"];
m9_99 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Status.IsFill()", span="325-325"];
m9_100 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="325-325"];
m9_103 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.AbsoluteFillQuantity*x.FillPrice", span="325-325"];
m9_104 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="325-325"];
m9_172 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Response != OrderResponse.Unprocessed", span="463-463"];
m9_173 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="463-463"];
m9_26 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="BrokerageSetupHandler.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m9_25 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", span="501-501"];
m9_185 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="var order = ticket._order", span="504-504"];
m9_187 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="return requestSelector(ticket._submitRequest);", span="507-507"];
m9_190 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="return orderSelector(typedOrder);", span="512-512"];
m9_191 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(string.Format(''Unable to access property {0} on order of type {1}'', field, order.Type));", span="514-514"];
m9_186 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="order == null", span="505-505"];
m9_188 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="var typedOrder = order as T", span="509-509"];
m9_189 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="typedOrder != null", span="510-510"];
m9_192 [cluster="QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.AccessOrder<T>(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderField, System.Func<T, decimal>, System.Func<QuantConnect.Orders.SubmitOrderRequest, decimal>)", span="501-501"];
m9_105 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", span="341-341"];
m9_106 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs", label="_order != null && _order.Id != order.Id", span="343-343"];
m9_108 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs", label="_order = order", span="348-348"];
m9_107 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''Order id mismatch'');", span="345-345"];
m9_109 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", span="341-341"];
m9_9 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="BrokerageSetupHandler.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m9_82 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="315-315"];
m9_83 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label=_orderEventsLock, span="317-317"];
m9_84 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="_orderEvents.Add(orderEvent)", span="319-319"];
m9_85 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="orderEvent.FillQuantity != 0", span="320-320"];
m9_86 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="_quantityFilled += orderEvent.FillQuantity", span="324-324"];
m9_89 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="orderEvent.Status.IsClosed()", span="331-331"];
m9_87 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="var quantityWeightedFillPrice = _orderEvents.Where(x => x.Status.IsFill()).Sum(x => x.AbsoluteFillQuantity*x.FillPrice)", span="325-325"];
m9_88 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="_averageFillPrice = quantityWeightedFillPrice/Math.Abs(_quantityFilled)", span="326-326"];
m9_90 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="_orderStatusClosedEvent.Set()", span="333-333"];
m9_91 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="315-315"];
m9_27 [cluster="System.ArgumentException.ArgumentException(string)", file="BrokerageSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m9_157 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.ToString()", span="450-450"];
m9_158 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="var counts = ''Request Count: '' + RequestCount() + '' Response Count: '' + ResponseCount()", span="452-452"];
m9_159 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="_order != null", span="453-453"];
m9_160 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="return OrderId + '': '' + _order + '' '' + counts;", span="455-455"];
m9_161 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="return OrderId + '': '' + counts;", span="457-457"];
m9_162 [cluster="QuantConnect.Orders.OrderTicket.ToString()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.ToString()", span="450-450"];
m9_10 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="217-217"];
m9_11 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label=field, span="219-219"];
m9_14 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="return AccessOrder<LimitOrder>(this, field, o => o.LimitPrice, r => r.LimitPrice);", span="224-224"];
m9_16 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="return AccessOrder<StopLimitOrder>(this, field, o => o.LimitPrice, r => r.LimitPrice);", span="228-228"];
m9_19 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="return AccessOrder<StopLimitOrder>(this, field, o => o.StopPrice, r => r.StopPrice);", span="235-235"];
m9_21 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="return AccessOrder<StopMarketOrder>(this, field, o => o.StopPrice, r => r.StopPrice);", span="239-239"];
m9_22 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="throw new ArgumentOutOfRangeException(''field'', field, null);", span="244-244"];
m9_23 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''Unable to get field '' + field + '' on order of type '' + _submitRequest.OrderType);", span="246-246"];
m9_12 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="OrderField.LimitPrice", span="221-221"];
m9_17 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="OrderField.StopPrice", span="232-232"];
m9_13 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="_submitRequest.OrderType == OrderType.Limit", span="222-222"];
m9_15 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="_submitRequest.OrderType == OrderType.StopLimit", span="226-226"];
m9_18 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="_submitRequest.OrderType == OrderType.StopLimit", span="233-233"];
m9_20 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="_submitRequest.OrderType == OrderType.StopMarket", span="237-237"];
m9_24 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="217-217"];
m9_156 [cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164"];
m9_116 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="376-376"];
m9_117 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="request.OrderId != OrderId", span="378-378"];
m9_122 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="_cancelRequest = request", span="389-389"];
m9_118 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''Received CancelOrderRequest for incorrect order id.'');", span="380-380"];
m9_119 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label=_cancelRequestLock, span="383-383"];
m9_120 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="_cancelRequest != null", span="385-385"];
m9_121 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="return false;", span="387-387"];
m9_123 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="return true;", span="392-392"];
m9_124 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="376-376"];
m9_164 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.ResponseCount()", span="460-460"];
m9_165 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label="var count = (_submitRequest.Response == OrderResponse.Unprocessed ? 0 : 1) +\r\n                        _updateRequests.Count(x => x.Response != OrderResponse.Unprocessed)", span="462-463"];
m9_166 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label=_cancelRequestLock, span="465-465"];
m9_167 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label="count += _cancelRequest == null || _cancelRequest.Response == OrderResponse.Unprocessed ? 0 : 1", span="467-467"];
m9_168 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label="return count;", span="470-470"];
m9_169 [cluster="QuantConnect.Orders.OrderTicket.ResponseCount()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.ResponseCount()", span="460-460"];
m9_135 [cluster="QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", span="145-145"];
m9_163 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.RequestCount()", span="473-473"];
m9_174 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label="var count = 1 + _updateRequests.Count", span="475-475"];
m9_175 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label=_cancelRequestLock, span="477-477"];
m9_176 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label="count += _cancelRequest == null ? 0 : 1", span="479-479"];
m9_177 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label="return count;", span="482-482"];
m9_178 [cluster="QuantConnect.Orders.OrderTicket.RequestCount()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.RequestCount()", span="473-473"];
m9_136 [cluster="QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", span="93-93"];
m9_137 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", span="412-412"];
m9_138 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="var submit = new SubmitOrderRequest(OrderType.Market, SecurityType.Base, Symbol.Empty, 0, 0, 0, DateTime.MaxValue, string.Empty)", span="414-414"];
m9_139 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="submit.SetResponse(OrderResponse.UnableToFindOrder(request))", span="415-415"];
m9_140 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="var ticket = new OrderTicket(transactionManager, submit)", span="416-416"];
m9_141 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="417-417"];
m9_142 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="ticket.AddUpdateRequest(request)", span="418-418"];
m9_143 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="ticket._orderStatusOverride = OrderStatus.Invalid", span="419-419"];
m9_144 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="return ticket;", span="420-420"];
m9_145 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", span="412-412"];
m9_134 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m9_94 [cluster="Unk.Sum", file="BrokerageSetupHandler.cs", label="Entry Unk.Sum", span=""];
m9_101 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m9_146 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="426-426"];
m9_147 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="BrokerageSetupHandler.cs", label="request.SetResponse(response)", span="428-428"];
m9_148 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="BrokerageSetupHandler.cs", label="return new OrderTicket(transactionManager, request) { _orderStatusOverride = OrderStatus.Invalid };", span="429-429"];
m9_149 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="426-426"];
m9_68 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m9_110 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="355-355"];
m9_111 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="request.OrderId != OrderId", span="357-357"];
m9_114 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="_updateRequests.Add(request)", span="364-364"];
m9_112 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="throw new ArgumentException(''Received UpdateOrderRequest for incorrect order id.'');", span="359-359"];
m9_113 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label=_updateRequestsLock, span="362-362"];
m9_115 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="355-355"];
m9_125 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="398-398"];
m9_126 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="var submit = new SubmitOrderRequest(OrderType.Market, SecurityType.Base, Symbol.Empty, 0, 0, 0, DateTime.MaxValue, string.Empty)", span="400-400"];
m9_127 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="submit.SetResponse(OrderResponse.UnableToFindOrder(request))", span="401-401"];
m9_128 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="var ticket = new OrderTicket(transactionManager, submit)", span="402-402"];
m9_129 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="403-403"];
m9_130 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="ticket.TrySetCancelRequest(request)", span="404-404"];
m9_131 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="ticket._orderStatusOverride = OrderStatus.Invalid", span="405-405"];
m9_132 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="return ticket;", span="406-406"];
m9_133 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="398-398"];
m9_150 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="435-435"];
m9_151 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="submit.SetResponse(OrderResponse.WarmingUp(submit))", span="437-437"];
m9_152 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="var ticket = new OrderTicket(transactionManager, submit)", span="438-438"];
m9_153 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="ticket._orderStatusOverride = OrderStatus.Invalid", span="439-439"];
m9_154 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="return ticket;", span="440-440"];
m9_155 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="435-435"];
m9_193 [cluster="System.Func<T, TResult>.Invoke(T)", file="BrokerageSetupHandler.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_92 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_52 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="255-255"];
m9_53 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="BrokerageSetupHandler.cs", label="_transactionManager.UpdateOrder(new UpdateOrderRequest(_transactionManager.UtcTime, SubmitRequest.OrderId, fields))", span="257-257"];
m9_54 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="BrokerageSetupHandler.cs", label="return _updateRequests.Last().Response;", span="258-258"];
m9_55 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="255-255"];
m9_96 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m9_57 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154"];
m9_69 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse()", span="284-284"];
m9_70 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse()", file="BrokerageSetupHandler.cs", label="return GetMostRecentOrderRequest().Response;", span="286-286"];
m9_71 [cluster="QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse()", span="284-284"];
m9_170 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m9_194 [cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_0 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200"];
m9_1 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_submitRequest = submitRequest", span="202-202"];
m9_2 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_orderId = submitRequest.OrderId", span="203-203"];
m9_3 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_transactionManager = transactionManager", span="204-204"];
m9_4 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_orderEvents = new List<OrderEvent>()", span="206-206"];
m9_5 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_updateRequests = new List<UpdateOrderRequest>()", span="207-207"];
m9_6 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="_orderStatusClosedEvent = new ManualResetEvent(false)", span="208-208"];
m9_7 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200"];
m9_97 [cluster="System.Threading.EventWaitHandle.Set()", file="BrokerageSetupHandler.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m9_195 [file="BrokerageSetupHandler.cs", label="QuantConnect.Orders.OrderTicket", span=""];
m12_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m12_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="_optionChainProvider = optionChainProvider", span="37-37"];
m12_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m12_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="69-69"];
m12_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="69-69"];
m12_13 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m12_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="OptionChainCacheEntry entry", span="50-50"];
m12_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m12_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="List<Symbol> symbols", span="48-48"];
m12_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="!_cache.TryGetValue(symbol, out entry) || date.Date != entry.Date", span="51-51"];
m12_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="symbols = _optionChainProvider.GetOptionContractList(symbol, date.Date).ToList()", span="53-53"];
m12_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="_cache[symbol] = new OptionChainCacheEntry(date.Date, symbols)", span="54-54"];
m12_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="symbols = entry.Symbols", span="58-58"];
m12_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="return symbols;", span="61-61"];
m12_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CachingOptionChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m12_12 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CachingOptionChainProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m12_19 [file="CachingOptionChainProvider.cs", label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", span=""];
m12_20 [file="CachingOptionChainProvider.cs", label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.OptionChainCacheEntry", span=""];
m13_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="35-35"];
m13_22 [cluster="System.TimeSpan.FromHours(double)", file="ConsoleSetupHandler.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_9 [cluster="System.Collections.Generic.List<T>.List()", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_86 [cluster="object.GetType()", file="ConsoleSetupHandler.cs", label="Entry object.GetType()", span="0-0"];
m13_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="550-550"];
m13_89 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="317-317"];
m13_33 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103"];
m13_34 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ConsoleSetupHandler.cs", label="factory = new BacktestingBrokerageFactory()", span="105-105"];
m13_36 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ConsoleSetupHandler.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="108-108"];
m13_35 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ConsoleSetupHandler.cs", label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="106-106"];
m13_37 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103"];
m13_28 [cluster="Unk.SingleOrDefault", file="ConsoleSetupHandler.cs", label="Entry Unk.SingleOrDefault", span=""];
m13_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="612-612"];
m13_29 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Entry lambda expression", span="89-89"];
m13_26 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="names.SingleOrDefault(name => MatchTypeName(name, algorithmName))", span="89-89"];
m13_30 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="MatchTypeName(name, algorithmName)", span="89-89"];
m13_25 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Entry lambda expression", span="89-89"];
m13_27 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Exit lambda expression", span="89-89"];
m13_31 [cluster="lambda expression", file="ConsoleSetupHandler.cs", label="Exit lambda expression", span="89-89"];
m13_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m13_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", span="27-27"];
m13_103 [cluster="string.LastIndexOf(char)", file="ConsoleSetupHandler.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m13_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="600-600"];
m13_24 [cluster="System.Exception.Exception(string)", file="ConsoleSetupHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_7 [cluster="System.DateTime.DateTime(int, int, int)", file="ConsoleSetupHandler.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m13_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="331-331"];
m13_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="567-567"];
m13_97 [cluster="Unk.>", file="ConsoleSetupHandler.cs", label="Entry Unk.>", span=""];
m13_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m13_10 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81"];
m13_11 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="string error", span="83-83"];
m13_14 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromHours(1), names => names.SingleOrDefault(name => MatchTypeName(name, algorithmName)))", span="89-89"];
m13_15 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="90-90"];
m13_12 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="IAlgorithm algorithm", span="84-84"];
m13_13 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="var algorithmName = Config.Get(''algorithm-type-name'')", span="85-85"];
m13_16 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="!complete", span="91-91"];
m13_17 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="throw new Exception(error + '': try re-building algorithm.'');", span="91-91"];
m13_18 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="return algorithm;", span="93-93"];
m13_19 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81"];
m13_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27"];
m13_85 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="460-460"];
m13_8 [cluster="System.TimeSpan.FromDays(double)", file="ConsoleSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m13_104 [cluster="string.Substring(int)", file="ConsoleSetupHandler.cs", label="Entry string.Substring(int)", span="0-0"];
m13_41 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121"];
m13_42 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="var initializeComplete = false", span="123-123"];
m13_43 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="baseJob.Type == PacketType.BacktestNode", span="129-129"];
m13_44 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="var backtestJob = baseJob as BacktestNodePacket", span="131-131"];
m13_45 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetMaximumOrders(int.MaxValue)", span="132-132"];
m13_46 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetParameters(baseJob.Parameters)", span="135-135"];
m13_47 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetLiveMode(false)", span="136-136"];
m13_48 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="137-137"];
m13_49 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="140-140"];
m13_50 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="143-143"];
m13_52 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.Initialize()", span="149-149"];
m13_53 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="152-152"];
m13_54 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.PeriodStart = algorithm.StartDate", span="155-155"];
m13_55 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.PeriodFinish = algorithm.EndDate", span="156-156"];
m13_56 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.BacktestId = algorithm.GetType().Name", span="157-157"];
m13_58 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.UserId = baseJob.UserId", span="159-159"];
m13_59 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.Channel = baseJob.Channel", span="160-160"];
m13_61 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="164-164"];
m13_68 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="algorithm.PostInitialize()", span="182-182"];
m13_69 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="return initializeComplete;", span="184-184"];
m13_62 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="168-168"];
m13_57 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="backtestJob.Type = PacketType.BacktestNode", span="158-158"];
m13_60 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="StartingDate = backtestJob.PeriodStart", span="163-163"];
m13_63 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label=Exception, span="171-171"];
m13_66 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Errors.Count == 0", span="177-177"];
m13_64 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Log.Error(err)", span="173-173"];
m13_65 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="174-174"];
m13_67 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="initializeComplete = true", span="179-179"];
m13_70 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121"];
m13_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69"];
m13_84 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="ConsoleSetupHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m13_96 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_32 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211"];
m13_98 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="string.IsNullOrEmpty(expectedTypeName)", span="213-213"];
m13_100 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="217-218"];
m13_99 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="return true;", span="215-215"];
m13_101 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211"];
m13_21 [cluster="Loader.cstr", file="ConsoleSetupHandler.cs", label="Entry Loader.cstr", span=""];
m13_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m13_88 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ConsoleSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_74 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191"];
m13_90 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="193-193"];
m13_91 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="195-195"];
m13_92 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="dataFeedsConfigString != string.Empty", span="196-196"];
m13_93 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="198-198"];
m13_94 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="return dataFeeds;", span="201-201"];
m13_95 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191"];
m13_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="606-606"];
m13_76 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m13_105 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225"];
m13_106 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225"];
m13_102 [cluster="string.IsNullOrEmpty(string)", file="ConsoleSetupHandler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_39 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34"];
m13_0 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m13_1 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="MaxOrders = int.MaxValue", span="68-68"];
m13_2 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="StartingPortfolioValue = 0", span="69-69"];
m13_3 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="70-70"];
m13_4 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="71-71"];
m13_5 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Errors = new List<string>()", span="72-72"];
m13_6 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m13_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m13_83 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="311-311"];
m13_107 [file="ConsoleSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span=""];
m13_108 [file="ConsoleSetupHandler.cs", label=algorithmName, span=""];
m14_2 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", span="54-54"];
m14_8 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", span="54-54"];
m14_9 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69"];
m14_11 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69"];
m14_0 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection)", span="41-41"];
m14_1 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection)", file="ConstantSignalModel.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection)", span="41-41"];
m14_16 [cluster="QuantConnect.Algorithm.Framework.Signals.Signal.Signal(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.Signal.Signal(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.SignalDirection, double?, double?, System.TimeSpan?)", span="63-63"];
m14_20 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m14_17 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86"];
m14_19 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86"];
m14_13 [cluster="lambda expression", file="ConstantSignalModel.cs", label="Entry lambda expression", span="71-78"];
m14_15 [cluster="lambda expression", file="ConstantSignalModel.cs", label="Exit lambda expression", span="71-78"];
m14_21 [file="ConstantSignalModel.cs", label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", span=""];
m16_3 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="EmptyFutureChainProvider.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m16_0 [cluster="QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="EmptyFutureChainProvider.cs", label="Entry QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m16_2 [cluster="QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="EmptyFutureChainProvider.cs", label="Exit QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m17_60 [cluster="lambda expression", file="FactorFile.cs", label="Entry lambda expression", span="1044-1044"];
m17_61 [cluster="lambda expression", file="FactorFile.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="1044-1044"];
m17_62 [cluster="lambda expression", file="FactorFile.cs", label="Exit lambda expression", span="1044-1044"];
m17_59 [cluster="Unk.ToArray", file="FactorFile.cs", label="Entry Unk.ToArray", span=""];
m17_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m17_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="28-28"];
m17_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="31-31"];
m17_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="parameters.Algorithm == ''BasicTemplateIntrinioEconomicData''", span="39-39"];
m17_10 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="49-49"];
m17_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''forward-console-messages'', ''false'')", span="29-29"];
m17_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="34-34"];
m17_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="35-35"];
m17_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="36-36"];
m17_8 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="var intrinioCredentials = new Dictionary<string, string>\r\n                {\r\n                    {''intrinio-username'', ''121078c02c20a09aa5d9c541087e7fa4''},\r\n                    {''intrinio-password'', ''65be35238b14de4cd0afc0edf364efc3'' }\r\n                }", span="41-45"];
m17_9 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="QuantConnect.Configuration.Config.Set(''parameters'', JsonConvert.SerializeObject(intrinioCredentials))", span="46-46"];
m17_11 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="FactorFile.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m17_57 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFile.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m17_65 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFile.cs", label="Algorithm = algorithm", span="1056-1056"];
m17_66 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFile.cs", label="Statistics = statistics", span="1057-1057"];
m17_67 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFile.cs", label="Language = language", span="1058-1058"];
m17_68 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FactorFile.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m17_64 [cluster="Unk.SetName", file="FactorFile.cs", label="Entry Unk.SetName", span=""];
m17_15 [cluster="Unk.Set", file="FactorFile.cs", label="Entry Unk.Set", span=""];
m17_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m17_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m17_54 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CancelOpenOrdersRegressionAlgorithm'', cancelOpenOrdersRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="960-1044"];
m17_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''3''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''245.773%''},\r\n                {''Drawdown'', ''2.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''1.599%''},\r\n                {''Sharpe Ratio'', ''4.164''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''73.258''},\r\n                {''Annual Standard Deviation'', ''0.196''},\r\n                {''Annual Variance'', ''0.038''},\r\n                {''Information Ratio'', ''4.109''},\r\n                {''Tracking Error'', ''0.196''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$9.27''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$167506.2210''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$26987.1134''},\r\n                {''Mean Population Estimated Insight Value'', ''$272.5971''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''},\r\n            }", span="100-134"];
m17_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m17_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m17_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m17_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m17_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m17_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m17_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m17_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m17_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m17_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m17_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387"];
m17_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m17_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''1.40%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''40.200%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.398%''},\r\n                {''Sharpe Ratio'', ''3.081''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.033''},\r\n                {''Beta'', ''19.088''},\r\n                {''Annual Standard Deviation'', ''0.096''},\r\n                {''Annual Variance'', ''0.009''},\r\n                {''Information Ratio'', ''2.905''},\r\n                {''Tracking Error'', ''0.096''},\r\n                {''Treynor Ratio'', ''0.016''},\r\n                {''Total Fees'', ''$2.00''},\r\n            }", span="412-433"];
m17_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m17_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m17_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m17_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m17_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m17_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m17_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m17_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m17_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m17_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m17_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m17_45 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.17%''},\r\n                {''Compounding Annual Return'', ''-99.993%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-2.577%''},\r\n                {''Sharpe Ratio'', ''-15.89''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-5.559''},\r\n                {''Beta'', ''333.506''},\r\n                {''Annual Standard Deviation'', ''0.205''},\r\n                {''Annual Variance'', ''0.042''},\r\n                {''Information Ratio'', ''-15.972''},\r\n                {''Tracking Error'', ''0.204''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$96.51''}\r\n            }", span="688-709"];
m17_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="711-732"];
m17_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="734-755"];
m17_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="757-791"];
m17_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="793-827"];
m17_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var cancelOpenOrdersRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.339%''},\r\n                {''Sharpe Ratio'', ''-11.206''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-8.422''},\r\n                {''Beta'', ''610.348''},\r\n                {''Annual Standard Deviation'', ''0.375''},\r\n                {''Annual Variance'', ''0.141''},\r\n                {''Information Ratio'', ''-11.243''},\r\n                {''Tracking Error'', ''0.375''},\r\n                {''Treynor Ratio'', ''-0.007''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="829-850"];
m17_51 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var scheduledUniverseSelectionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''17''},\r\n                {''Average Win'', ''0.26%''},\r\n                {''Average Loss'', ''-0.11%''},\r\n                {''Compounding Annual Return'', ''26.961%''},\r\n                {''Drawdown'', ''0.700%''},\r\n                {''Expectancy'', ''1.895''},\r\n                {''Net Profit'', ''2.115%''},\r\n                {''Sharpe Ratio'', ''4.218''},\r\n                {''Loss Rate'', ''12%''},\r\n                {''Win Rate'', ''88%''},\r\n                {''Profit-Loss Ratio'', ''2.31''},\r\n                {''Alpha'', ''0.327''},\r\n                {''Beta'', ''-9.439''},\r\n                {''Annual Standard Deviation'', ''0.043''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''3.864''},\r\n                {''Tracking Error'', ''0.043''},\r\n                {''Treynor Ratio'', ''-0.019''},\r\n                {''Total Fees'', ''$0.00''},\r\n                {''Total Insights Generated'', ''54''},\r\n                {''Total Insights Closed'', ''48''},\r\n                {''Total Insights Analysis Completed'', ''46''},\r\n                {''Long Insight Count'', ''54''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''43.4783%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''65.5952%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="852-886"];
m17_52 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var compositeAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''288''},\r\n                {''Average Win'', ''0.07%''},\r\n                {''Average Loss'', ''-0.05%''},\r\n                {''Compounding Annual Return'', ''-95.659%''},\r\n                {''Drawdown'', ''4.100%''},\r\n                {''Expectancy'', ''-0.467''},\r\n                {''Net Profit'', ''-3.932%''},\r\n                {''Sharpe Ratio'', ''-23.357''},\r\n                {''Loss Rate'', ''79%''},\r\n                {''Win Rate'', ''21%''},\r\n                {''Profit-Loss Ratio'', ''1.51''},\r\n                {''Alpha'', ''-1.167''},\r\n                {''Beta'', ''-76.443''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''-23.448''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.026''},\r\n                {''Total Fees'', ''$1899.95''},\r\n                {''Total Insights Generated'', ''289''},\r\n                {''Total Insights Closed'', ''0''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''146''},\r\n                {''Short Insight Count'', ''143''},\r\n                {''Long/Short Ratio'', ''102.10%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="888-922"];
m17_53 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="var pairsTradingAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''2.18%''},\r\n                {''Average Loss'', ''-1.38%''},\r\n                {''Compounding Annual Return'', ''75.646%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0.290''},\r\n                {''Net Profit'', ''0.723%''},\r\n                {''Sharpe Ratio'', ''7.017''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''1.58''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''33.003''},\r\n                {''Annual Standard Deviation'', ''0.052''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0.052''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$70.58''},\r\n                {''Total Insights Generated'', ''4''},\r\n                {''Total Insights Closed'', ''4''},\r\n                {''Total Insights Analysis Completed'', ''4''},\r\n                {''Long Insight Count'', ''2''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$-1201.722''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$-193.6107''},\r\n                {''Mean Population Estimated Insight Value'', ''$-48.40268''},\r\n                {''Mean Population Direction'', ''50%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''3.8827%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="924-958"];
m17_55 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="FactorFile.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m17_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="FactorFile.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44"];
m17_63 [cluster="TestCaseData.cstr", file="FactorFile.cs", label="Entry TestCaseData.cstr", span=""];
m17_58 [cluster="Unk.Select", file="FactorFile.cs", label="Entry Unk.Select", span=""];
m17_14 [cluster="Unk.SerializeObject", file="FactorFile.cs", label="Entry Unk.SerializeObject", span=""];
m17_12 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="FactorFile.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m17_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FactorFile.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_69 [file="FactorFile.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m18_53 [cluster="System.Collections.Generic.SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)", file="FactorFileGeneratorTests.cs", label="Entry System.Collections.Generic.SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_54 [cluster="System.Math.Abs(decimal)", file="FactorFileGeneratorTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m18_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="FactorFileGeneratorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m18_21 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", span="69-69"];
m18_22 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var yahooEvents = _yahooDataDownloader.DownloadSplitAndDividendData(_symbol, DateTime.Parse(''01/01/1970''), DateTime.MaxValue)", span="72-72"];
m18_23 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var filePath = LeanData.GenerateRelativeFactorFilePath(_symbol)", span="73-73"];
m18_28 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var newFactorFileInstance = _factorFileGenerator.CreateFactorFile(yahooEvents.ToList())", span="83-83"];
m18_24 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var tolerance = 0.00001m", span="74-74"];
m18_25 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="!File.Exists(filePath)", span="76-76"];
m18_41 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(Math.Abs(expected.PriceFactor - actual.PriceFactor) < tolerance)", span="107-107"];
m18_42 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(Math.Abs(expected.SplitFactor - actual.SplitFactor) < tolerance)", span="108-108"];
m18_26 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="throw new ArgumentException(''This test requires an already calculated factor file.'' +\r\n                                            ''Try using one of the pre-existing factor files '');", span="77-78"];
m18_27 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var originalFactorFileInstance = FactorFile.Read(PermTick, Market)", span="80-80"];
m18_29 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var earliestDate = originalFactorFileInstance.SortedFactorFileData.First().Key", span="85-85"];
m18_30 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var latestDate = originalFactorFileInstance.SortedFactorFileData.Last().Key", span="86-86"];
m18_31 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Assert.AreEqual(originalFactorFileInstance.SortedFactorFileData.Count,\r\n                            newFactorFileInstance.SortedFactorFileData.Count)", span="89-90"];
m18_36 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="originalFactorFileInstance.SortedFactorFileData.TryGetValue(i, out expected)", span="97-97"];
m18_37 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="newFactorFileInstance.SortedFactorFileData.TryGetValue(i, out actual)", span="98-98"];
m18_32 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="var i = earliestDate", span="92-92"];
m18_33 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="i < latestDate", span="92-92"];
m18_43 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="i = i.AddDays(1)", span="92-92"];
m18_34 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="FactorFileRow expected = null", span="94-94"];
m18_35 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="FactorFileRow actual = null", span="95-95"];
m18_38 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="expected == null || actual == null", span="100-100"];
m18_40 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(expected == null)", span="103-103"];
m18_39 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(actual == null)", span="102-102"];
m18_44 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", file="FactorFileGeneratorTests.cs", label="Exit QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFiles_CanBeGenerated_Accurately()", span="69-69"];
m18_13 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", span="60-60"];
m18_14 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", file="FactorFileGeneratorTests.cs", label="var yahooEvents = _yahooDataDownloader.DownloadSplitAndDividendData(_symbol, DateTime.Parse(''01/01/1980''), DateTime.MaxValue)", span="62-62"];
m18_15 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", file="FactorFileGeneratorTests.cs", label="var factorFile = _factorFileGenerator.CreateFactorFile(yahooEvents.ToList())", span="63-63"];
m18_16 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(factorFile.Permtick == _symbol.Value)", span="65-65"];
m18_17 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", file="FactorFileGeneratorTests.cs", label="Exit QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.FactorFile_CanBeCreatedFromYahooData_Successfully()", span="60-60"];
m18_18 [cluster="System.DateTime.Parse(string)", file="FactorFileGeneratorTests.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m18_20 [cluster="QuantConnect.ToolBox.FactorFileGenerator.CreateFactorFile(System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.ToolBox.FactorFileGenerator.CreateFactorFile(System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="66-66"];
m18_12 [cluster="Unk.IsTrue", file="FactorFileGeneratorTests.cs", label="Entry Unk.IsTrue", span=""];
m18_48 [cluster="QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", span="79-79"];
m18_47 [cluster="System.ArgumentException.ArgumentException(string)", file="FactorFileGeneratorTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m18_5 [cluster="QuantConnect.ToolBox.YahooDownloader.YahooDataDownloader.YahooDataDownloader()", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.ToolBox.YahooDownloader.YahooDataDownloader.YahooDataDownloader()", span="28-28"];
m18_51 [cluster="Unk.AreEqual", file="FactorFileGeneratorTests.cs", label="Entry Unk.AreEqual", span=""];
m18_46 [cluster="System.IO.File.Exists(string)", file="FactorFileGeneratorTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m18_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="FactorFileGeneratorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_4 [cluster="QuantConnect.ToolBox.FactorFileGenerator.FactorFileGenerator(QuantConnect.Symbol, string)", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.ToolBox.FactorFileGenerator.FactorFileGenerator(QuantConnect.Symbol, string)", span="54-54"];
m18_45 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m18_6 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", span="52-52"];
m18_7 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", file="FactorFileGeneratorTests.cs", label="var yahooEvents = _yahooDataDownloader.DownloadSplitAndDividendData(_symbol, DateTime.MinValue, DateTime.MaxValue)", span="54-54"];
m18_8 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", file="FactorFileGeneratorTests.cs", label="Assert.IsTrue(yahooEvents.Any())", span="56-56"];
m18_9 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", file="FactorFileGeneratorTests.cs", label="Exit QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.SplitsAndDividends_CanBeDownloadedFromYahoo_Successfully()", span="52-52"];
m18_10 [cluster="QuantConnect.ToolBox.YahooDownloader.YahooDataDownloader.DownloadSplitAndDividendData(QuantConnect.Symbol, System.DateTime, System.DateTime)", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.ToolBox.YahooDownloader.YahooDataDownloader.DownloadSplitAndDividendData(QuantConnect.Symbol, System.DateTime, System.DateTime)", span="76-76"];
m18_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="FactorFileGeneratorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m18_0 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", file="FactorFileGeneratorTests.cs", label="Entry QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", span="45-45"];
m18_1 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", file="FactorFileGeneratorTests.cs", label="_factorFileGenerator = new FactorFileGenerator(_symbol, _dataPath)", span="47-47"];
m18_2 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", file="FactorFileGeneratorTests.cs", label="_yahooDataDownloader = new YahooDataDownloader()", span="48-48"];
m18_3 [cluster="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", file="FactorFileGeneratorTests.cs", label="Exit QuantConnect.Tests.Common.Util.FactorFileGeneratorTests.Setup()", span="45-45"];
m18_52 [cluster="System.DateTime.AddDays(double)", file="FactorFileGeneratorTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m18_55 [file="FactorFileGeneratorTests.cs", label="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests", span=""];
m19_0 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool)", span="37-37"];
m19_1 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool)", span="37-37"];
m19_18 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectFine(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectFine(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", span="106-106"];
m19_36 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectFine(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectFine(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", span="106-106"];
m19_2 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m19_6 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.FundamentalPortfolioSelectionModel(bool, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m19_30 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectCoarse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectCoarse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="98-98"];
m19_34 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectCoarse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.SelectCoarse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="98-98"];
m19_13 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateCoarseFundamentalUniverse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateCoarseFundamentalUniverse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="76-76"];
m19_22 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateCoarseFundamentalUniverse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateCoarseFundamentalUniverse(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="76-76"];
m19_37 [cluster="Unk.Select", file="FundamentalPortfolioSelectionModel.cs", label="Entry Unk.Select", span=""];
m19_7 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="60-60"];
m19_12 [cluster="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="FundamentalPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="60-60"];
m19_23 [cluster="CoarseFundamentalUniverse.cstr", file="FundamentalPortfolioSelectionModel.cs", label="Entry CoarseFundamentalUniverse.cstr", span=""];
m19_14 [cluster="QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="FundamentalPortfolioSelectionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalFilteredUniverse(QuantConnect.Data.UniverseSelection.Universe, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="36-36"];
m19_38 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Entry lambda expression", span="109-109"];
m19_15 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Entry lambda expression", span="65-65"];
m19_17 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Exit lambda expression", span="65-65"];
m19_24 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Entry lambda expression", span="80-89"];
m19_31 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Entry lambda expression", span="85-85"];
m19_28 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Exit lambda expression", span="80-89"];
m19_33 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Exit lambda expression", span="85-85"];
m19_40 [cluster="lambda expression", file="FundamentalPortfolioSelectionModel.cs", label="Exit lambda expression", span="109-109"];
m19_41 [file="FundamentalPortfolioSelectionModel.cs", label="QuantConnect.Algorithm.Framework.Selection.FundamentalPortfolioSelectionModel", span=""];
m19_42 [file="FundamentalPortfolioSelectionModel.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m19_43 [file="FundamentalPortfolioSelectionModel.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m20_19 [cluster="Unk.ToPython", file="FutureHistory.cs", label="Entry Unk.ToPython", span=""];
m20_10 [cluster="QuantConnect.Jupyter.FutureHistory.GetExpiryDates()", file="FutureHistory.cs", label="Entry QuantConnect.Jupyter.FutureHistory.GetExpiryDates()", span="56-56"];
m20_14 [cluster="QuantConnect.Jupyter.FutureHistory.GetExpiryDates()", file="FutureHistory.cs", label="Exit QuantConnect.Jupyter.FutureHistory.GetExpiryDates()", span="56-56"];
m20_6 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FutureHistory.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m20_0 [cluster="QuantConnect.Jupyter.FutureHistory.FutureHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FutureHistory.cs", label="Entry QuantConnect.Jupyter.FutureHistory.FutureHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="36-36"];
m20_4 [cluster="QuantConnect.Jupyter.FutureHistory.FutureHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FutureHistory.cs", label="Exit QuantConnect.Jupyter.FutureHistory.FutureHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="36-36"];
m20_15 [cluster="Unk.SelectMany", file="FutureHistory.cs", label="Entry Unk.SelectMany", span=""];
m20_5 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="FutureHistory.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m20_33 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="FutureHistory.cs", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="159-159"];
m20_7 [cluster="QuantConnect.Jupyter.FutureHistory.GetAllData()", file="FutureHistory.cs", label="Entry QuantConnect.Jupyter.FutureHistory.GetAllData()", span="47-47"];
m20_9 [cluster="QuantConnect.Jupyter.FutureHistory.GetAllData()", file="FutureHistory.cs", label="Exit QuantConnect.Jupyter.FutureHistory.GetAllData()", span="47-47"];
m20_26 [cluster="Unk.Select", file="FutureHistory.cs", label="Entry Unk.Select", span=""];
m20_16 [cluster="Unk.GIL", file="FutureHistory.cs", label="Entry Unk.GIL", span=""];
m20_17 [cluster="Unk.Distinct", file="FutureHistory.cs", label="Entry Unk.Distinct", span=""];
m20_30 [cluster="QuantConnect.Jupyter.FutureHistory.ToString()", file="FutureHistory.cs", label="Entry QuantConnect.Jupyter.FutureHistory.ToString()", span="69-69"];
m20_32 [cluster="QuantConnect.Jupyter.FutureHistory.ToString()", file="FutureHistory.cs", label="Exit QuantConnect.Jupyter.FutureHistory.ToString()", span="69-69"];
m20_27 [cluster="lambda expression", file="FutureHistory.cs", label="Entry lambda expression", span="58-58"];
m20_20 [cluster="lambda expression", file="FutureHistory.cs", label="Entry lambda expression", span="58-58"];
m20_22 [cluster="lambda expression", file="FutureHistory.cs", label="Exit lambda expression", span="58-58"];
m20_23 [cluster="lambda expression", file="FutureHistory.cs", label="Entry lambda expression", span="58-58"];
m20_25 [cluster="lambda expression", file="FutureHistory.cs", label="Exit lambda expression", span="58-58"];
m20_29 [cluster="lambda expression", file="FutureHistory.cs", label="Exit lambda expression", span="58-58"];
m20_34 [file="FutureHistory.cs", label="QuantConnect.Jupyter.FutureHistory", span=""];
m21_56 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="var entry = zipStream.GetNextEntry()", span="167-167"];
m21_51 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.UnzipData(byte[])", span="152-152"];
m21_52 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="var data = new Dictionary<string, string>()", span="155-155"];
m21_53 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="var ms = new MemoryStream(zipData)", span="159-159"];
m21_60 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="data.Add(entry.Name, buffer.GetString())", span="176-176"];
m21_63 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="return data;", span="191-191"];
m21_54 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="var zipStream = new ZipInputStream(ms)", span="162-162"];
m21_55 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label=true, span="164-164"];
m21_59 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="173-173"];
m21_61 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label=Exception, span="187-187"];
m21_57 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="entry != null", span="169-169"];
m21_58 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="var buffer = new byte[entry.Size]", span="172-172"];
m21_62 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="Log.Error(''Data.UnzipData(): '' + err.Message)", span="189-189"];
m21_64 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="152-152"];
m21_21 [cluster="System.IO.File.Create(string)", file="IAlgorithm.cs", label="Entry System.IO.File.Create(string)", span="0-0"];
m21_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var entry = new ZipEntry(filename)", span="117-117"];
m21_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", span="104-104"];
m21_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var success = true", span="106-106"];
m21_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="112-112"];
m21_35 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="filenamesAndData.Keys", span="114-114"];
m21_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var file = filenamesAndData[filename]", span="119-119"];
m21_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="107-107"];
m21_41 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="127-127"];
m21_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="stream.Write(buffer, 0, sourceBytes)", span="128-128"];
m21_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="stream.PutNextEntry(entry)", span="120-120"];
m21_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="stream.Finish()", span="135-135"];
m21_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="stream.Close()", span="136-136"];
m21_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="var ms = new MemoryStream(file)", span="122-122"];
m21_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="int sourceBytes", span="124-124"];
m21_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="sourceBytes > 0", span="130-130"];
m21_46 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label=Exception, span="139-139"];
m21_49 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="return success;", span="144-144"];
m21_47 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="Log.Error(''QC.Data.ZipData(): '' + err.Message)", span="141-141"];
m21_48 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="success = false", span="142-142"];
m21_50 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", span="104-104"];
m21_22 [cluster="ZipEntry.cstr", file="IAlgorithm.cs", label="Entry ZipEntry.cstr", span=""];
m21_67 [cluster="Unk.GetNextEntry", file="IAlgorithm.cs", label="Entry Unk.GetNextEntry", span=""];
m21_78 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="stream.PutNextEntry(entry)", span="214-214"];
m21_71 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="200-200"];
m21_72 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="var zipPath = ''''", span="202-202"];
m21_74 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="zipPath = textPath.Replace(''.csv'', ''.zip'')", span="207-207"];
m21_77 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="var entry = new ZipEntry(Path.GetFileName(textPath))", span="213-213"];
m21_79 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="var fs = File.OpenRead(textPath)", span="216-216"];
m21_86 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label=deleteOriginal, span="231-231"];
m21_87 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="File.Delete(textPath)", span="231-231"];
m21_73 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="206-206"];
m21_81 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="221-221"];
m21_82 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="stream.Write(buffer, 0, sourceBytes)", span="222-222"];
m21_75 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", span="208-208"];
m21_76 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="210-210"];
m21_90 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="return zipPath;", span="237-237"];
m21_84 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="stream.Finish()", span="227-227"];
m21_85 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="stream.Close()", span="228-228"];
m21_80 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="int sourceBytes", span="218-218"];
m21_83 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="sourceBytes > 0", span="224-224"];
m21_88 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label=Exception, span="233-233"];
m21_89 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="Log.Error(''QC.Data.Zip(): '' + err.Message)", span="235-235"];
m21_91 [cluster="QuantConnect.Compression.Zip(string, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="200-200"];
m21_197 [cluster="System.Collections.Generic.List<T>.List()", file="IAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_200 [cluster="ZipFile.cstr", file="IAlgorithm.cs", label="Entry ZipFile.cstr", span=""];
m21_214 [cluster="System.IO.Stream.Close()", file="IAlgorithm.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m21_199 [cluster="string.Substring(int, int)", file="IAlgorithm.cs", label="Entry string.Substring(int, int)", span="0-0"];
m21_100 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="stream.PutNextEntry(entry)", span="245-245"];
m21_97 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="240-240"];
m21_98 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="242-242"];
m21_99 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="var entry = new ZipEntry(zipEntry)", span="244-244"];
m21_102 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="247-247"];
m21_105 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="stream.Write(buffer, 0, sourceBytes)", span="253-253"];
m21_101 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="246-246"];
m21_104 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="252-252"];
m21_103 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="int sourceBytes", span="249-249"];
m21_106 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="sourceBytes > 0", span="255-255"];
m21_107 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.Zip(string, string, string)", span="240-240"];
m21_30 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m21_165 [cluster="System.IO.StreamReader.ReadLine()", file="IAlgorithm.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m21_123 [cluster="Unk.Copy", file="IAlgorithm.cs", label="Entry Unk.Copy", span=""];
m21_5 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var entry = new ZipEntry(filename)", span="68-68"];
m21_0 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="55-55"];
m21_1 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var success = true", span="57-57"];
m21_3 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="63-63"];
m21_4 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="filenamesAndData.Keys", span="65-65"];
m21_6 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var file = Encoding.Default.GetBytes(filenamesAndData[filename])", span="70-70"];
m21_2 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="58-58"];
m21_10 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="78-78"];
m21_11 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="stream.Write(buffer, 0, sourceBytes)", span="79-79"];
m21_7 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="stream.PutNextEntry(entry)", span="71-71"];
m21_13 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="stream.Finish()", span="86-86"];
m21_14 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="stream.Close()", span="87-87"];
m21_8 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="var ms = new MemoryStream(file)", span="73-73"];
m21_9 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="int sourceBytes", span="75-75"];
m21_12 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="sourceBytes > 0", span="81-81"];
m21_15 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label=Exception, span="90-90"];
m21_18 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="return success;", span="95-95"];
m21_16 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Log.Error(''QC.Data.ZipData(): '' + err.Message)", span="92-92"];
m21_17 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="success = false", span="93-93"];
m21_19 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="55-55"];
m21_198 [cluster="string.LastIndexOf(char)", file="IAlgorithm.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m21_125 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="298-298"];
m21_129 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="var zip1 = Ionic.Zip.ZipFile.Read(filename)", span="308-308"];
m21_138 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="323-323"];
m21_140 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="Log.Error(''Data.UnZip(3): '' + filename + '' >> '' + err.Message)", span="328-328"];
m21_141 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="return reader;", span="330-330"];
m21_131 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="e.Extract(ms)", span="311-311"];
m21_132 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="ms.Position = 0", span="311-311"];
m21_133 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="reader = new StreamReader(ms)", span="312-312"];
m21_130 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="var e = zip1[0]", span="310-310"];
m21_134 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label=Exception, span="315-315"];
m21_139 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label=Exception, span="326-326"];
m21_136 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="reader != null", span="318-318"];
m21_137 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="reader.Close()", span="318-318"];
m21_135 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="Log.Error(''QC.Data.Unzip(1): '' + err.Message)", span="317-317"];
m21_142 [cluster="QuantConnect.Compression.Unzip(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="298-298"];
m21_94 [cluster="System.IO.File.OpenRead(string)", file="IAlgorithm.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m21_215 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="479-479"];
m21_216 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="var inStream = File.OpenRead(source)", span="481-481"];
m21_219 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="tarArchive.ExtractContents(destination)", span="484-484"];
m21_217 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="var gzipStream = new GZipInputStream(inStream)", span="482-482"];
m21_222 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="inStream.Close()", span="487-487"];
m21_218 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="483-483"];
m21_221 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="gzipStream.Close()", span="486-486"];
m21_220 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="tarArchive.Close()", span="485-485"];
m21_223 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="479-479"];
m21_25 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="IAlgorithm.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m21_205 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="465-465"];
m21_206 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="var inStream = File.OpenRead(source)", span="467-467"];
m21_208 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="tarArchive.ExtractContents(destination)", span="469-469"];
m21_207 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="468-468"];
m21_210 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="inStream.Close()", span="471-471"];
m21_209 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="tarArchive.Close()", span="470-470"];
m21_211 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="465-465"];
m21_156 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.ReadLinesImpl(string)", span="357-357"];
m21_157 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="var zip = Ionic.Zip.ZipFile.Read(filename)", span="359-359"];
m21_158 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="var entry = zip[0]", span="361-361"];
m21_159 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="var entryReader = new StreamReader(entry.OpenReader())", span="362-362"];
m21_160 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="!entryReader.EndOfStream", span="364-364"];
m21_162 [cluster="QuantConnect.Compression.ReadLinesImpl(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.ReadLinesImpl(string)", span="357-357"];
m21_163 [cluster="StreamReader.cstr", file="IAlgorithm.cs", label="Entry StreamReader.cstr", span=""];
m21_69 [cluster="byte[].GetString()", file="IAlgorithm.cs", label="Entry byte[].GetString()", span="92-92"];
m21_26 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="IAlgorithm.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m21_27 [cluster="Unk.Write", file="IAlgorithm.cs", label="Entry Unk.Write", span=""];
m21_70 [cluster="Unk.Add", file="IAlgorithm.cs", label="Entry Unk.Add", span=""];
m21_96 [cluster="System.IO.File.Delete(string)", file="IAlgorithm.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m21_114 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="var entry = new ZipEntry(Path.GetFileName(file))", span="278-278"];
m21_108 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="263-263"];
m21_109 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="var zipStream = new ZipOutputStream(File.Create(destination))", span="267-267"];
m21_111 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label=files, span="270-270"];
m21_110 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="269-269"];
m21_115 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="zipStream.PutNextEntry(entry)", span="279-279"];
m21_117 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="StreamUtils.Copy(fstream, zipStream, buffer)", span="282-282"];
m21_112 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="!File.Exists(file)", span="272-272"];
m21_118 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label=Exception, span="287-287"];
m21_113 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="274-274"];
m21_116 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="var fstream = File.OpenRead(file)", span="280-280"];
m21_119 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="Log.Error(err)", span="289-289"];
m21_120 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="263-263"];
m21_66 [cluster="ZipInputStream.cstr", file="IAlgorithm.cs", label="Entry ZipInputStream.cstr", span=""];
m21_213 [cluster="Unk.ExtractContents", file="IAlgorithm.cs", label="Entry Unk.ExtractContents", span=""];
m21_92 [cluster="string.Replace(string, string)", file="IAlgorithm.cs", label="Entry string.Replace(string, string)", span="0-0"];
m21_121 [cluster="System.IO.File.Exists(string)", file="IAlgorithm.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m21_29 [cluster="Unk.Close", file="IAlgorithm.cs", label="Entry Unk.Close", span=""];
m21_68 [cluster="Unk.Read", file="IAlgorithm.cs", label="Entry Unk.Read", span=""];
m21_224 [cluster="GZipInputStream.cstr", file="IAlgorithm.cs", label="Entry GZipInputStream.cstr", span=""];
m21_170 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="var entry = zipStream.GetNextEntry()", span="387-387"];
m21_166 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="375-375"];
m21_169 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="var zipStream = new ZipInputStream(zipstream)", span="384-384"];
m21_172 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="389-389"];
m21_171 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="var buffer = new byte[entry.Size]", span="388-388"];
m21_173 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="file = new MemoryStream(buffer)", span="392-392"];
m21_174 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="reader = new StreamReader(file)", span="396-396"];
m21_175 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label=Exception, span="398-398"];
m21_177 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="return reader;", span="403-403"];
m21_176 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="Log.Error(err, ''Data.UnZip(): Stream >> '' + err.Message)", span="400-400"];
m21_178 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="375-375"];
m21_203 [cluster="System.IO.Path.Combine(string, string)", file="IAlgorithm.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m21_145 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="IAlgorithm.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m21_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_149 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="342-342"];
m21_147 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="338-338"];
m21_148 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="!File.Exists(filename)", span="340-340"];
m21_151 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="return ReadLinesImpl(filename);", span="348-348"];
m21_150 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="return null;", span="343-343"];
m21_152 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label=Exception, span="350-350"];
m21_153 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="Log.Error(err)", span="352-352"];
m21_154 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="return null;", span="354-354"];
m21_155 [cluster="QuantConnect.Compression.ReadLines(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.ReadLines(string)", span="338-338"];
m21_23 [cluster="System.Text.Encoding.GetBytes(string)", file="IAlgorithm.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m21_95 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="IAlgorithm.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m21_24 [cluster="Unk.PutNextEntry", file="IAlgorithm.cs", label="Entry Unk.PutNextEntry", span=""];
m21_204 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_20 [cluster="ZipOutputStream.cstr", file="IAlgorithm.cs", label="Entry ZipOutputStream.cstr", span=""];
m21_146 [cluster="System.IO.StreamReader.Close()", file="IAlgorithm.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m21_122 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m21_144 [cluster="Unk.Extract", file="IAlgorithm.cs", label="Entry Unk.Extract", span=""];
m21_202 [cluster="Unk.GetInputStream", file="IAlgorithm.cs", label="Entry Unk.GetInputStream", span=""];
m21_164 [cluster="Unk.OpenReader", file="IAlgorithm.cs", label="Entry Unk.OpenReader", span=""];
m21_212 [cluster="Unk.CreateInputTarArchive", file="IAlgorithm.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m21_187 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="429-429"];
m21_179 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="411-411"];
m21_180 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var files = new List<string>()", span="414-414"];
m21_181 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var outFolder = zipFile.Substring(0, zipFile.LastIndexOf(Path.DirectorySeparatorChar))", span="415-415"];
m21_183 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var fs = File.OpenRead(zipFile)", span="420-420"];
m21_192 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="files.Add(fullZipToPath)", span="439-439"];
m21_195 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="return files;", span="457-457"];
m21_182 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="ZipFile zf = null", span="416-416"];
m21_191 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="436-436"];
m21_184 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="zf = new ZipFile(fs)", span="421-421"];
m21_185 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label=zf, span="423-423"];
m21_190 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="433-433"];
m21_186 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="!zipEntry.IsFile", span="426-426"];
m21_188 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="entryFileName == null", span="430-430"];
m21_189 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var buffer = new byte[4096]", span="432-432"];
m21_194 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="445-445"];
m21_193 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="var streamWriter = File.Create(fullZipToPath)", span="443-443"];
m21_196 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="411-411"];
m21_201 [cluster="Unk.GetFileName", file="IAlgorithm.cs", label="Entry Unk.GetFileName", span=""];
m21_143 [cluster="System.IO.MemoryStream.MemoryStream()", file="IAlgorithm.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m21_28 [cluster="Unk.Finish", file="IAlgorithm.cs", label="Entry Unk.Finish", span=""];
m21_93 [cluster="System.IO.Path.GetFileName(string)", file="IAlgorithm.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m22_0 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="31-31"];
m22_1 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="IExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="31-31"];
m23_0 [cluster="QuantConnect.Interfaces.IFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="IFutureChainProvider.cs", label="Entry QuantConnect.Interfaces.IFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m23_1 [cluster="QuantConnect.Interfaces.IFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="IFutureChainProvider.cs", label="Exit QuantConnect.Interfaces.IFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m24_13 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m24_14 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m24_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m24_7 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m24_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m24_0 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m24_6 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m24_10 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="38-38"];
m24_12 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="38-38"];
m25_0 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="INotifiedSecurityChanges.cs", label="Entry QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29"];
m25_1 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="INotifiedSecurityChanges.cs", label="Exit QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29"];
m26_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31"];
m26_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="IPortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="31-31"];
m27_0 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m27_1 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m29_0 [cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IRiskManagementModel.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="26-26"];
m29_1 [cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IRiskManagementModel.cs", label="Exit QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="26-26"];
m31_0 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ISignalModel.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m31_1 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ISignalModel.cs", label="Exit QuantConnect.Algorithm.Framework.Signals.ISignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m32_60 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="KrakenDataDownloader.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m32_52 [cluster="QuantConnect.Util.RateGate.RateGate(int, System.TimeSpan)", file="KrakenDataDownloader.cs", label="Entry QuantConnect.Util.RateGate.RateGate(int, System.TimeSpan)", span="87-87"];
m32_48 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="KrakenDataDownloader.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
m32_61 [cluster="decimal.Parse(string)", file="KrakenDataDownloader.cs", label="Entry decimal.Parse(string)", span="0-0"];
m32_64 [cluster="Unk.Format", file="KrakenDataDownloader.cs", label="Entry Unk.Format", span=""];
m32_51 [cluster="System.Net.WebClient.WebClient()", file="KrakenDataDownloader.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m32_0 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="KrakenDataDownloader.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="40-40"];
m32_45 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="KrakenDataDownloader.cs", label="Exit QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="40-40"];
m32_50 [cluster="string.Format(string, object, object)", file="KrakenDataDownloader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_49 [cluster="System.Convert.ToInt64(double)", file="KrakenDataDownloader.cs", label="Entry System.Convert.ToInt64(double)", span="0-0"];
m32_55 [cluster="System.Net.WebClient.DownloadString(string)", file="KrakenDataDownloader.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m32_57 [cluster="System.Exception.Exception(string)", file="KrakenDataDownloader.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m32_54 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="KrakenDataDownloader.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m32_58 [cluster="string.Split(params char[])", file="KrakenDataDownloader.cs", label="Entry string.Split(params char[])", span="0-0"];
m32_59 [cluster="System.Convert.ToDouble(string)", file="KrakenDataDownloader.cs", label="Entry System.Convert.ToDouble(string)", span="0-0"];
m32_62 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="KrakenDataDownloader.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m32_47 [cluster="System.NotSupportedException.NotSupportedException(string)", file="KrakenDataDownloader.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m32_56 [cluster="Unk.>", file="KrakenDataDownloader.cs", label="Entry Unk.>", span=""];
m32_63 [cluster="Unk.ToInt64", file="KrakenDataDownloader.cs", label="Entry Unk.ToInt64", span=""];
m32_46 [cluster="System.ArgumentException.ArgumentException(string)", file="KrakenDataDownloader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m33_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="LiveFutureChainProvider.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m33_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="LiveFutureChainProvider.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m33_3 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LiveFutureChainProvider.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m34_3 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ManualPortfolioSelectionModel.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m34_0 [cluster="QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m34_2 [cluster="QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Securities.Future.EmptyFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m35_9 [cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="ManualUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94"];
m35_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="ManualUniverse.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m35_2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="ManualUniverse.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="39-39"];
m35_4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="ManualUniverse.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="39-39"];
m35_0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverse.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m35_1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverse.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m35_6 [cluster="lambda expression", file="ManualUniverse.cs", label="Entry lambda expression", span="41-49"];
m35_8 [cluster="lambda expression", file="ManualUniverse.cs", label="Exit lambda expression", span="41-49"];
m35_11 [file="ManualUniverse.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualUniverse", span=""];
m35_12 [file="ManualUniverse.cs", label="QuantConnect.Securities.Security", span=""];
m35_13 [file="ManualUniverse.cs", label="System.DateTime", span=""];
m35_14 [file="ManualUniverse.cs", label="System.DateTime", span=""];
m36_28 [cluster="string.ToUpper()", file="Market.cs", label="Entry string.ToUpper()", span="0-0"];
m36_32 [cluster="System.TimeSpan.FromHours(double)", file="Market.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m36_46 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Market.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m36_33 [cluster="System.TimeSpan.FromDays(double)", file="Market.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m36_0 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", span="109-109"];
m36_1 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Type = objectType", span="120-120"];
m36_2 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="SecurityType = securityType", span="121-121"];
m36_8 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="HasVolume = hasVolume", span="127-127"];
m36_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="MappedSymbol = symbol", span="129-129"];
m36_11 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="IsInternalFeed = isInternalFeed", span="130-130"];
m36_12 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="SubscriptionIndex = subscriptionIndex", span="131-131"];
m36_14 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label=resolution, span="134-134"];
m36_26 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="throw new InvalidEnumArgumentException(''Unexpected Resolution: '' + resolution);", span="154-154"];
m36_9 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="PriceScaleFactor = 1", span="128-128"];
m36_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Consolidators = new List<IDataConsolidator>()", span="132-132"];
m36_15 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Resolution.Tick", span="136-136"];
m36_18 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Resolution.Second", span="141-141"];
m36_20 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Resolution.Minute", span="144-144"];
m36_22 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Resolution.Hour", span="147-147"];
m36_24 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Resolution.Daily", span="150-150"];
m36_16 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Increment = TimeSpan.FromSeconds(0)", span="138-138"];
m36_17 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="FillDataForward = false", span="139-139"];
m36_19 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Increment = TimeSpan.FromSeconds(1)", span="142-142"];
m36_21 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Increment = TimeSpan.FromMinutes(1)", span="145-145"];
m36_23 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Increment = TimeSpan.FromHours(1)", span="148-148"];
m36_25 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Increment = TimeSpan.FromDays(1)", span="151-151"];
m36_27 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="Market.cs", label="Exit QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", span="109-109"];
m36_34 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", file="Market.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", span="0-0"];
m36_29 [cluster="System.Collections.Generic.List<T>.List()", file="Market.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m36_35 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="162-162"];
m36_36 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label=DataNormalizationMode, span="164-164"];
m36_38 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="return price;", span="167-167"];
m36_41 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="return price*PriceScaleFactor;", span="172-172"];
m36_43 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="return price + SumOfDividends;", span="175-175"];
m36_37 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="DataNormalizationMode.Raw", span="166-166"];
m36_39 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="DataNormalizationMode.Adjusted", span="170-170"];
m36_42 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="DataNormalizationMode.TotalReturn", span="174-174"];
m36_44 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="throw new ArgumentOutOfRangeException();", span="178-178"];
m36_40 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="DataNormalizationMode.SplitAdjusted", span="171-171"];
m36_45 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Market.cs", label="Exit QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="162-162"];
m36_30 [cluster="System.TimeSpan.FromSeconds(double)", file="Market.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m36_47 [file="Market.cs", label="QuantConnect.Data.SubscriptionDataConfig", span=""];
m37_33 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", span="74-74"];
m37_34 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick1 = new Tick(DateTime.Now, Symbols.SPY, 1, 2)", span="76-76"];
m37_35 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick2 = new Tick(DateTime.Now, Symbols.SPY, 1.1m, 2.1m)", span="77-77"];
m37_38 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { tick1, tick2, tick3, tick4 })", span="80-80"];
m37_36 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick3 = new Tick(DateTime.Now, Symbols.AAPL, 1, 2)", span="78-78"];
m37_37 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick4 = new Tick(DateTime.Now, Symbols.AAPL, 1.1m, 2.1m)", span="79-79"];
m37_39 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Ticks ticks = slice.Ticks", span="82-82"];
m37_40 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, ticks.Count)", span="83-83"];
m37_41 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, ticks[Symbols.SPY].Count)", span="84-84"];
m37_42 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, ticks[Symbols.AAPL].Count)", span="85-85"];
m37_43 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksCollection()", span="74-74"];
m37_0 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesBaseBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesBaseBySymbol()", span="29-29"];
m37_5 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesBaseBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesBaseBySymbol()", span="29-29"];
m37_6 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m37_9 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarBySymbol()", span="40-40"];
m37_14 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarBySymbol()", span="40-40"];
m37_8 [cluster="Unk.AreEqual", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry Unk.AreEqual", span=""];
m37_61 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", span="112-112"];
m37_62 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="TradeBar TradeBarSpy = new TradeBar { Symbol = Symbols.SPY, Time = DateTime.Now }", span="114-114"];
m37_63 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="TradeBar TradeBarAapl = new TradeBar { Symbol = Symbols.AAPL, Time = DateTime.Now }", span="115-115"];
m37_64 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { TradeBarSpy, TradeBarAapl })", span="116-116"];
m37_65 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="DataDictionary<TradeBar> TradeBarData = slice.Get<TradeBar>()", span="118-118"];
m37_66 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, TradeBarData.Count)", span="119-119"];
m37_67 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarGenericallyByType()", span="112-112"];
m37_75 [cluster="QuantConnect.Data.Slice.Get<T>(QuantConnect.Symbol)", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Slice.Get<T>(QuantConnect.Symbol)", span="270-270"];
m37_7 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="174-174"];
m37_44 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", span="89-89"];
m37_45 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Quandl quandlSpy = new Quandl { Symbol = Symbols.SPY, Time = DateTime.Now }", span="91-91"];
m37_46 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Quandl quandlAapl = new Quandl { Symbol = Symbols.AAPL, Time = DateTime.Now }", span="92-92"];
m37_47 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { quandlSpy, quandlAapl })", span="93-93"];
m37_48 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="DataDictionary<Quandl> quandlData = slice.Get<Quandl>()", span="95-95"];
m37_49 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, quandlData.Count)", span="96-96"];
m37_50 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesCustomGenericallyByType()", span="89-89"];
m37_53 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", span="100-100"];
m37_54 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick TickSpy = new Tick { Symbol = Symbols.SPY, Time = DateTime.Now }", span="102-102"];
m37_55 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick TickAapl = new Tick { Symbol = Symbols.AAPL, Time = DateTime.Now }", span="103-103"];
m37_56 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { TickSpy, TickAapl })", span="104-104"];
m37_57 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="DataDictionary<Tick> TickData = slice.Get<Tick>()", span="106-106"];
m37_58 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, TickData.Count)", span="107-107"];
m37_59 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTickGenericallyByType()", span="100-100"];
m37_32 [cluster="Unk.IsInstanceOf", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry Unk.IsInstanceOf", span=""];
m37_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m37_60 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m37_52 [cluster="QuantConnect.Data.Slice.Get<T>()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Slice.Get<T>()", span="244-244"];
m37_51 [cluster="QuantConnect.Data.Custom.Quandl.Quandl()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Custom.Quandl.Quandl()", span="62-62"];
m37_23 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", span="62-62"];
m37_24 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick1 = new Tick(DateTime.Now, Symbols.SPY, 1, 2)", span="64-64"];
m37_25 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Tick tick2 = new Tick(DateTime.Now, Symbols.SPY, 1.1m, 2.1m)", span="65-65"];
m37_26 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { tick1, tick2 })", span="66-66"];
m37_27 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="List<Tick> data = slice[tick1.Symbol]", span="68-68"];
m37_28 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.IsInstanceOf(typeof(List<Tick>), data)", span="69-69"];
m37_29 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, data.Count)", span="70-70"];
m37_30 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTicksBySymbol()", span="62-62"];
m37_16 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", span="51-51"];
m37_17 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="TradeBar tradeBar1 = new TradeBar { Symbol = Symbols.SPY, Time = DateTime.Now }", span="53-53"];
m37_18 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="TradeBar tradeBar2 = new TradeBar { Symbol = Symbols.AAPL, Time = DateTime.Now }", span="54-54"];
m37_19 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { tradeBar1, tradeBar2 })", span="55-55"];
m37_20 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="TradeBars tradeBars = slice.Bars", span="57-57"];
m37_21 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(2, tradeBars.Count)", span="58-58"];
m37_22 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesTradeBarCollection()", span="51-51"];
m37_68 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", span="123-123"];
m37_69 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Quandl quandlSpy = new Quandl { Symbol = Symbols.SPY, Time = DateTime.Now }", span="125-125"];
m37_70 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Quandl quandlAapl = new Quandl { Symbol = Symbols.AAPL, Time = DateTime.Now }", span="126-126"];
m37_71 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Slice slice = new Slice(DateTime.Now, new[] { quandlSpy, quandlAapl })", span="127-127"];
m37_73 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Assert.AreEqual(quandlSpy, quandlData)", span="130-130"];
m37_72 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Quandl quandlData = slice.Get<Quandl>(Symbols.SPY)", span="129-129"];
m37_74 [cluster="QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", file="MaximumDrawdownPercentPerSecurity.cs", label="Exit QuantConnect.Tests.Common.Data.SliceTests.AccessesGenericallyByTypeAndSymbol()", span="123-123"];
m37_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="MaximumDrawdownPercentPerSecurity.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m38_6 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="NotifiedSecurityChanges.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m38_0 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m38_5 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NotifiedSecurityChanges.cs", label="Exit QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m38_7 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="NotifiedSecurityChanges.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m39_2 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullRiskManagementModel.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="22-22"];
m39_3 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="NullRiskManagementModel.cs", label="Exit QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="22-22"];
m39_0 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="NullRiskManagementModel.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="13-13"];
m39_1 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="NullRiskManagementModel.cs", label="Exit QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="13-13"];
m40_0 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="PandasData.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="41-41"];
m40_1 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="PandasData.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="41-41"];
m42_25 [cluster="System.Enum.Parse(System.Type, string)", file="Program.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m42_26 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Program.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m42_22 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m42_0 [cluster="QuantConnect.ToolBox.KrakenDownloader.Program.Main(string[])", file="Program.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.Program.Main(string[])", span="28-28"];
m42_21 [cluster="QuantConnect.ToolBox.KrakenDownloader.Program.Main(string[])", file="Program.cs", label="Exit QuantConnect.ToolBox.KrakenDownloader.Program.Main(string[])", span="28-28"];
m42_30 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="Program.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="40-40"];
m42_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="Program.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m42_28 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.KrakenDataDownloader()", file="Program.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.KrakenDataDownloader()", span="28-28"];
m42_24 [cluster="string.Split(params char[])", file="Program.cs", label="Entry string.Split(params char[])", span="0-0"];
m42_29 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Program.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m42_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Program.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m42_23 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m42_31 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="Program.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m44_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="223-223"];
m44_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="226-226"];
m44_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="223-223"];
m44_285 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m44_218 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="108-108"];
m44_291 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m44_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="471-471"];
m44_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="471-471"];
m44_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="326-326"];
m44_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="329-329"];
m44_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="symbol == QuantConnect.Symbol.Empty", span="330-330"];
m44_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="332-332"];
m44_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="339-339"];
m44_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="342-342"];
m44_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="343-343"];
m44_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="329-329"];
m44_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="330-330"];
m44_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="334-334"];
m44_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="335-335"];
m44_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="338-338"];
m44_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="336-336"];
m44_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="326-326"];
m44_24 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="106-106"];
m44_26 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", color=green, community=0, file="QCAlgorithm.History.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and objects cannot be removed.'');", prediction=0, span="114-114"];
m44_28 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", span="122-122"];
m44_292 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m44_222 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m44_186 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m44_46 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="QCAlgorithm.History.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m44_223 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m44_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="591-591"];
m44_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                var security = Securities[x];\r\n                foreach (var config in GetMatchingSubscriptions(security, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    Resolution? res = resolution ?? security.Resolution;\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="593-611"];
m44_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="591-591"];
m44_264 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m44_246 [cluster="Unk.SelectMany", file="QCAlgorithm.History.cs", label="Entry Unk.SelectMany", span=""];
m44_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="265-265"];
m44_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="268-275"];
m44_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="277-277"];
m44_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="265-265"];
m44_224 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m44_212 [cluster="System.Math.Max(int, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m44_68 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m44_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", span="134-134"];
m44_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m44_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupBarCount = null", span="53-53"];
m44_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = timeSpan", span="54-54"];
m44_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m44_221 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m44_220 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="751-751"];
m44_211 [cluster="QuantConnect.Symbol.IsCanonical()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m44_293 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="658-658"];
m44_77 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="248-248"];
m44_78 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="249-249"];
m44_79 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="250-250"];
m44_72 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="242-251"];
m44_87 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="253-253"];
m44_73 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="244-244"];
m44_74 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="245-245"];
m44_75 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="246-246"];
m44_76 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="246-246"];
m44_80 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="242-251"];
m44_88 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="253-253"];
m44_89 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="253-253"];
m44_98 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="274-274"];
m44_93 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="268-275"];
m44_100 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="277-277"];
m44_94 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="270-270"];
m44_95 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="271-271"];
m44_96 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="272-272"];
m44_97 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="272-272"];
m44_99 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="268-275"];
m44_101 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="277-277"];
m44_102 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="277-277"];
m44_138 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="338-338"];
m44_139 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="338-338"];
m44_140 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="338-338"];
m44_154 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="364-364"];
m44_155 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="364-364"];
m44_156 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="364-364"];
m44_254 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="600-600"];
m44_255 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="603-603"];
m44_256 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="fillForward.HasValue", span="604-604"];
m44_257 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="604-604"];
m44_258 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="extendedMarket.HasValue", span="605-605"];
m44_259 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="605-605"];
m44_247 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="593-593"];
m44_250 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="593-611"];
m44_248 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="593-593"];
m44_249 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="593-593"];
m44_251 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var requests = new List<HistoryRequest>()", span="595-595"];
m44_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="597-597"];
m44_260 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="requests.Add(request)", span="607-607"];
m44_261 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return requests;", span="610-610"];
m44_253 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="GetMatchingSubscriptions(security, typeof(BaseData))", span="598-598"];
m44_262 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="593-611"];
m44_272 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="622-622"];
m44_273 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="623-623"];
m44_275 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));", span="626-627"];
m44_278 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="627-627"];
m44_267 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="619-619"];
m44_270 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="619-628"];
m44_268 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="619-619"];
m44_269 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="619-619"];
m44_271 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="621-621"];
m44_274 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="624-624"];
m44_276 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="619-628"];
m44_277 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="627-627"];
m44_279 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="627-627"];
m44_294 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="658-658"];
m44_295 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="658-658"];
m44_69 [cluster="Unk.History", file="QCAlgorithm.History.cs", label="Entry Unk.History", span=""];
m44_136 [cluster="ArgumentException.cstr", file="QCAlgorithm.History.cs", label="Entry ArgumentException.cstr", span=""];
m44_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1677-1677"];
m44_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="655-655"];
m44_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                where type.IsAssignableFrom(sub.Type)\r\n                select sub;", span="658-660"];
m44_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="655-655"];
m44_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="239-239"];
m44_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="242-251"];
m44_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="253-253"];
m44_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="239-239"];
m44_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="379-379"];
m44_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="381-381"];
m44_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="382-382"];
m44_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="384-384"];
m44_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="379-379"];
m44_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="158-158"];
m44_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupBarCount.HasValue", span="160-160"];
m44_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupTimeSpan.HasValue", span="164-164"];
m44_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="166-166"];
m44_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return Enumerable.Empty<HistoryRequest>();", span="171-171"];
m44_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="158-158"];
m44_243 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m44_83 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m44_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="481-481"];
m44_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="return History(requests, TimeZone).Memoize();", span="483-483"];
m44_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="481-481"];
m44_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="432-432"];
m44_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="434-434"];
m44_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="435-435"];
m44_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="434-434"];
m44_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="432-432"];
m44_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="562-562"];
m44_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var sentMessage = false", span="564-564"];
m44_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var reqs = requests.ToList()", span="565-565"];
m44_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="!sentMessage", span="576-576"];
m44_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label=reqs, span="566-566"];
m44_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc > UtcTime", span="569-569"];
m44_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc = UtcTime", span="571-571"];
m44_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="572-572"];
m44_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="574-574"];
m44_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="sentMessage = true", span="578-578"];
m44_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Debug(''Request for future history modified to end now.'')", span="579-579"];
m44_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="562-562"];
m44_215 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m44_67 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m44_44 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m44_216 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m44_51 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m44_217 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m44_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupBarCount = barCount", span="99-99"];
m44_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1702-1702"];
m44_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", span="84-84"];
m44_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="96-96"];
m44_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = null", span="98-98"];
m44_137 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m44_219 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="640-640"];
m44_119 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m44_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="551-551"];
m44_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="553-553"];
m44_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="558-558"];
m44_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="559-559"];
m44_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="556-556"];
m44_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="551-551"];
m44_117 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m44_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="418-418"];
m44_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="420-420"];
m44_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="418-418"];
m44_153 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m44_135 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m44_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", span="134-134"];
m44_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount)", span="112-112"];
m44_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="110-110"];
m44_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="208-208"];
m44_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="211-211"];
m44_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="208-208"];
m44_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
m44_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
m44_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="448-448"];
m44_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="450-450"];
m44_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="448-448"];
m44_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="354-354"];
m44_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="symbol == QuantConnect.Symbol.Empty", span="357-357"];
m44_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="358-358"];
m44_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="365-365"];
m44_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="368-368"];
m44_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="369-369"];
m44_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="357-357"];
m44_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="360-360"];
m44_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="361-361"];
m44_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="364-364"];
m44_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="362-362"];
m44_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="354-354"];
m44_84 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m44_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="195-195"];
m44_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="197-197"];
m44_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="195-195"];
m44_21 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="99-99"];
m44_214 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m44_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", span="84-84"];
m44_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="649-649"];
m44_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="652-652"];
m44_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="649-649"];
m44_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="456-456"];
m44_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="458-458"];
m44_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="459-459"];
m44_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="462-462"];
m44_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="463-463"];
m44_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="461-461"];
m44_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="456-456"];
m44_20 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="QCAlgorithm.History.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="99-99"];
m44_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
m44_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="144-144"];
m44_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
m44_85 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m44_70 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m44_288 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m44_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="182-182"];
m44_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="184-184"];
m44_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="182-182"];
m44_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="302-302"];
m44_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="symbol == QuantConnect.Symbol.Empty", span="304-304"];
m44_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="305-305"];
m44_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="306-306"];
m44_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="308-308"];
m44_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="304-304"];
m44_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="309-309"];
m44_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="311-311"];
m44_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="302-302"];
m44_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="398-398"];
m44_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="400-400"];
m44_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="401-401"];
m44_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="403-403"];
m44_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="398-398"];
m44_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="288-288"];
m44_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="291-291"];
m44_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="288-288"];
m44_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="492-492"];
m44_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="494-494"];
m44_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="500-500"];
m44_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="502-502"];
m44_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="507-507"];
m44_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, dataType)", span="513-513"];
m44_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="522-535"];
m44_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="496-496"];
m44_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="503-503"];
m44_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="509-509"];
m44_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="518-518"];
m44_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="519-519"];
m44_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = typeof(BaseData)", span="506-506"];
m44_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="516-516"];
m44_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="537-537"];
m44_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="539-539"];
m44_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="541-541"];
m44_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="544-544"];
m44_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="492-492"];
m44_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="617-617"];
m44_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="619-628"];
m44_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="617-617"];
m44_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m44_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="64-64"];
m44_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m44_71 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m44_185 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427"];
m44_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="631-631"];
m44_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? security.Resolution", span="633-633"];
m44_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="636-636"];
m44_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null,\r\n                TickType = subscription.TickType\r\n            }", span="638-644"];
m44_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="646-646"];
m44_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="631-631"];
m44_296 [file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m44_297 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m44_298 [file="QCAlgorithm.History.cs", label=int, span=""];
m44_299 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m44_300 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m44_301 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m44_302 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m44_303 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m44_304 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m44_305 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m44_306 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m44_307 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m44_308 [file="QCAlgorithm.History.cs", label=int, span=""];
m44_309 [file="QCAlgorithm.History.cs", label=security, span=""];
m44_310 [file="QCAlgorithm.History.cs", label=start, span=""];
m44_311 [file="QCAlgorithm.History.cs", label=end, span=""];
m45_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="737-737"];
m45_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="return Download(address, dict, userName, password);", span="762-762"];
m45_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var dict = new Dictionary<string, string>()", span="739-739"];
m45_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="headers != null", span="741-741"];
m45_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label=headers, span="749-749"];
m45_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var value = (string)headers.GetItem(pyKey).AsManagedObject(typeof(string))", span="752-752"];
m45_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="var key = (string)pyKey.AsManagedObject(typeof(string))", span="751-751"];
m45_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="PyDict.IsDictType(headers)", span="747-747"];
m45_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException($''QCAlgorithm.Fetch(): Invalid argument. {headers.Repr()} is not a dict'');", span="758-758"];
m45_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="dict.Add(key, value)", span="753-753"];
m45_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="743-743"];
m45_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="737-737"];
m45_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="127-127"];
m45_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="128-128"];
m45_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="124-124"];
m45_379 [cluster="Unk.IsDictType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsDictType", span=""];
m45_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="168-168"];
m45_91 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="168-168"];
m45_92 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="168-168"];
m45_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420"];
m45_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="422-422"];
m45_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420"];
m45_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m45_437 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m45_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428"];
m45_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="430-430"];
m45_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="431-431"];
m45_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428"];
m45_184 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m45_254 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m45_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="471-471"];
m45_162 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m45_67 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="141-141"];
m45_121 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m45_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488"];
m45_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="494-494"];
m45_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="491-491"];
m45_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="493-493"];
m45_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="495-495"];
m45_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="490-490"];
m45_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="492-492"];
m45_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488"];
m45_381 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m45_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288"];
m45_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="290-290"];
m45_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288"];
m45_382 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m45_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="90-90"];
m45_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="93-94"];
m45_34 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="SlippageModel = slippageModel", span="397-397"];
m45_3 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="100-100"];
m45_380 [cluster="Unk.GetItem", file="QCAlgorithm.Python.cs", label="Entry Unk.GetItem", span=""];
m45_24 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="SymbolProperties = symbolProperties", span="387-387"];
m45_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583"];
m45_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", prediction=1, span="600-600"];
m45_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n                \r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="588-598"];
m45_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="585-585"];
m45_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="586-586"];
m45_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="586-586"];
m45_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583"];
m45_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="181-181"];
m45_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179"];
m45_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193"];
m45_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193"];
m45_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267"];
m45_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="195-195"];
m45_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="208-208"];
m45_415 [cluster="Unk.Count", file="QCAlgorithm.Python.cs", label="Entry Unk.Count", span=""];
m45_439 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m45_41 [cluster="Unk.Select", file="QCAlgorithm.Python.cs", label="Entry Unk.Select", span=""];
m45_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612"];
m45_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, tickers, Time - span, Time, resolution);", span="614-614"];
m45_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612"];
m45_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="935-935"];
m45_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="153-153"];
m45_77 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="153-153"];
m45_78 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="153-153"];
m45_40 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Python.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m45_401 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m45_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="126-126"];
m45_70 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="141-141"];
m45_71 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="141-141"];
m45_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="152-152"];
m45_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150"];
m45_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="153-153"];
m45_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150"];
m45_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m45_79 [cluster="Unk.selector", file="QCAlgorithm.Python.cs", label="Entry Unk.selector", span=""];
m45_80 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="153-153"];
m45_81 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="153-153"];
m45_82 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="153-153"];
m45_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="167-167"];
m45_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="168-168"];
m45_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="165-165"];
m45_87 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="168-168"];
m45_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538"];
m45_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, start, end, resolution));", prediction=1, span="543-543"];
m45_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="540-540"];
m45_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="541-541"];
m45_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="541-541"];
m45_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538"];
m45_438 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m45_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m45_161 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m45_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326"];
m45_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="328-328"];
m45_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326"];
m45_399 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m45_364 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m45_400 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m45_69 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="141-141"];
m45_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="41-41"];
m45_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", color=green, community=0, file="QCAlgorithm.Python.cs", label="PandasConverter = new PandasConverter()", prediction=3, span="43-43"];
m45_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="41-41"];
m45_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m45_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="return AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m);", span="56-56"];
m45_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54"];
m45_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m45_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="return AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage);", span="71-71"];
m45_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m45_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="845-845"];
m45_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84"];
m45_58 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="128-128"];
m45_57 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="fine(f).Select(x => (Symbol)x)", span="128-128"];
m45_59 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="128-128"];
m45_263 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="570-570"];
m45_264 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="x != null", prediction=4, span="570-570"];
m45_265 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="570-570"];
m45_292 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="600-600"];
m45_293 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="x != null", prediction=5, span="600-600"];
m45_294 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="600-600"];
m45_248 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var security = Securities[x]", span="562-562"];
m45_249 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="563-564"];
m45_261 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="564-564"];
m45_252 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="567-567"];
m45_274 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var security = Securities[x]", span="590-590"];
m45_275 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="591-592"];
m45_290 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="592-592"];
m45_279 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="596-596"];
m45_280 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="597-597"];
m45_427 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="GetIndicatorBaseType(x.GetType())", span="829-829"];
m45_247 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="560-568"];
m45_273 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="588-598"];
m45_37 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="Holdings = new SecurityHolding(this)", span="400-400"];
m45_50 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="145-145"];
m45_56 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="86-86"];
m45_66 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="600-600"];
m45_125 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="277-278"];
m45_164 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="394-394"];
m45_170 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="408-408"];
m45_176 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="422-422"];
m45_250 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="config == null", span="565-565"];
m45_257 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="563-563"];
m45_260 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="564-564"];
m45_262 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="564-564"];
m45_253 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="560-568"];
m45_278 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Resolution? res = resolution ?? security.Resolution", span="595-595"];
m45_276 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="config == null", span="593-593"];
m45_286 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="591-591"];
m45_289 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="592-592"];
m45_291 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="592-592"];
m45_281 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="588-598"];
m45_317 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Type.BaseType == requestedType.BaseType", span="632-632"];
m45_423 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="829-829"];
m45_426 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="829-829"];
m45_428 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="829-829"];
m45_417 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="821-827"];
m45_38 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="357-357"];
m45_51 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="584-584"];
m45_88 [cluster="QuantConnect.Securities.AdjustedPriceVariationModel.AdjustedPriceVariationModel()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.AdjustedPriceVariationModel.AdjustedPriceVariationModel()", span="22-22"];
m45_313 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="631-631"];
m45_316 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="632-632"];
m45_128 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="278-278"];
m45_39 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="QCAlgorithm.Python.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m45_420 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="824-824"];
m45_421 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return (dynamic)x.AsManagedObject(type);", span="825-825"];
m45_52 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="QCAlgorithm.Python.cs", label="_localTimeKeeper = localTimeKeeper", span="586-586"];
m45_68 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="353-353"];
m45_89 [cluster="QuantConnect.Securities.EquityPriceVariationModel.EquityPriceVariationModel()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.EquityPriceVariationModel.EquityPriceVariationModel()", span="25-25"];
m45_124 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="277-278"];
m45_126 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="277-278"];
m45_127 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="278-278"];
m45_166 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="394-394"];
m45_165 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="394-394"];
m45_172 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="408-408"];
m45_171 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="408-408"];
m45_178 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="422-422"];
m45_177 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="422-422"];
m45_251 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="565-565"];
m45_259 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="563-563"];
m45_258 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="563-563"];
m45_277 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="593-593"];
m45_288 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="591-591"];
m45_287 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="591-591"];
m45_319 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="635-635"];
m45_318 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="632-632"];
m45_425 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="829-829"];
m45_424 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="829-829"];
m45_422 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="821-827"];
m45_418 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x == null", span="823-823"];
m45_42 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", span="39-39"];
m45_53 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="QCAlgorithm.Python.cs", label="Exchange.SetLocalDateTimeFrontier(localTimeKeeper.LocalTime)", span="587-587"];
m45_315 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="631-631"];
m45_314 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="s.Resolution", span="631-631"];
m45_129 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="278-278"];
m45_321 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="635-635"];
m45_320 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x.Type.Name", span="635-635"];
m45_419 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="return null;", span="823-823"];
m45_44 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="SubscriptionsBag.Add(config)", span="438-438"];
m45_43 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="407-407"];
m45_55 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="584-584"];
m45_54 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="QCAlgorithm.Python.cs", label="_localTimeKeeper.TimeUpdated += (sender, args) =>\r\n            {\r\n                //Update the Exchange/Timer:\r\n                Exchange.SetLocalDateTimeFrontier(args.Time);\r\n            }", span="589-593"];
m45_61 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Python.cs", label="data == null", span="603-603"];
m45_60 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="600-600"];
m45_244 [cluster="Unk.History", file="QCAlgorithm.Python.cs", label="Entry Unk.History", span=""];
m45_101 [cluster="System.ArgumentException.ArgumentException(string, string)", file="QCAlgorithm.Python.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m45_102 [cluster="Unk.Equals", file="QCAlgorithm.Python.cs", label="Entry Unk.Equals", span=""];
m45_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700"];
m45_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="702-702"];
m45_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700"];
m45_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="140-140"];
m45_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138"];
m45_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138"];
m45_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="141-141"];
m45_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378"];
m45_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="380-380"];
m45_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378"];
m45_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352"];
m45_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="354-354"];
m45_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352"];
m45_23 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="QuoteCurrency = quoteCurrency", span="386-386"];
m45_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626"];
m45_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(request).Memoize());", prediction=1, span="640-640"];
m45_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="639-639"];
m45_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var security = Securities[symbol]", span="628-628"];
m45_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requestedType = CreateType(type)", span="630-630"];
m45_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                .FirstOrDefault(s => s.Type.BaseType == requestedType.BaseType)", span="631-632"];
m45_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="config == null", span="633-633"];
m45_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="636-636"];
m45_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="635-635"];
m45_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626"];
m45_309 [cluster="ArgumentException.cstr", file="QCAlgorithm.Python.cs", label="Entry ArgumentException.cstr", span=""];
m45_33 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="FeeModel = feeModel", span="396-396"];
m45_246 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="99-99"];
m45_441 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m45_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313"];
m45_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="315-315"];
m45_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313"];
m45_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="96-96"];
m45_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="return security;", span="97-97"];
m45_19 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m45_21 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m45_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="107-107"];
m45_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="coarse != null", span="108-108"];
m45_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="110-110"];
m45_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="111-111"];
m45_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="var type = (Type)pycoarse.GetPythonType().AsManagedObject(typeof(Type))", span="114-114"];
m45_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse((dynamic)pycoarse.AsManagedObject(type))", span="115-115"];
m45_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105"];
m45_35 [cluster="Unk.GetPythonType", file="QCAlgorithm.Python.cs", label="Entry Unk.GetPythonType", span=""];
m45_36 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Python.cs", label="Entry Unk.AsManagedObject", span=""];
m45_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84"];
m45_20 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m45_22 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m45_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105"];
m45_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365"];
m45_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="367-367"];
m45_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365"];
m45_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="86-86"];
m45_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="89-89"];
m45_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="1027-1027"];
m45_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m45_283 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.Python.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m45_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="432-432"];
m45_212 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Python.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m45_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1017-1017"];
m45_163 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m45_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="592-592"];
m45_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="770-770"];
m45_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="772-772"];
m45_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="!PyList.IsListType(pyObject)", span="775-775"];
m45_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="tmp.Append(pyObject)", span="778-778"];
m45_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label=pyObject, span="783-783"];
m45_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var tmp = new PyList()", span="777-777"];
m45_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="785-785"];
m45_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="return symbols.Count == 0 ? null : symbols;", span="794-794"];
m45_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="var symbols = new List<Symbol>()", span="782-782"];
m45_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="pyObject = tmp", span="779-779"];
m45_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="symbols.Add(symbol)", span="792-792"];
m45_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="787-787"];
m45_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="770-770"];
m45_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506"];
m45_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, periods, resolution));", prediction=1, span="511-511"];
m45_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="508-508"];
m45_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="509-509"];
m45_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="509-509"];
m45_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506"];
m45_312 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m45_122 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Python.cs", label="Entry FuncUniverse.cstr", span=""];
m45_310 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m45_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179"];
m45_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="803-803"];
m45_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="return GetIndicatorBaseType(type.BaseType);", span="809-809"];
m45_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="type.BaseType == typeof(object)", span="805-805"];
m45_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="return type;", span="807-807"];
m45_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="803-803"];
m45_416 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Python.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m45_360 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m45_397 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m45_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338"];
m45_443 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m45_329 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Python.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m45_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="418-418"];
m45_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m45_203 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m45_255 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Python.cs", label="Entry Unk.FirstOrDefault", span=""];
m45_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="271-271"];
m45_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="269-269"];
m45_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="277-278"];
m45_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="270-270"];
m45_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="273-273"];
m45_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="275-275"];
m45_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="272-272"];
m45_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267"];
m45_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300"];
m45_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="302-302"];
m45_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300"];
m45_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", span="1856-1856"];
m45_398 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m45_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="448-448"];
m45_396 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m45_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m45_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="847-847"];
m45_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="849-849"];
m45_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="852-861"];
m45_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="850-850"];
m45_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="851-851"];
m45_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="845-845"];
m45_222 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m45_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681"];
m45_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark(pyBenchmark)", span="688-688"];
m45_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="691-691"];
m45_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="685-685"];
m45_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="pyBenchmark != null", span="686-686"];
m45_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="689-689"];
m45_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="683-683"];
m45_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681"];
m45_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="581-581"];
m45_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522"];
m45_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(symbols, span, resolution));", prediction=1, span="527-527"];
m45_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="524-524"];
m45_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="525-525"];
m45_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="525-525"];
m45_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522"];
m45_347 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m45_284 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m45_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709"];
m45_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(securityInitializer1)", span="714-714"];
m45_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(securityInitializer2)", span="721-721"];
m45_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="725-725"];
m45_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="711-711"];
m45_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="securityInitializer1 != null", span="712-712"];
m45_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="715-715"];
m45_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="718-718"];
m45_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="securityInitializer2 != null", span="719-719"];
m45_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="722-722"];
m45_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709"];
m45_440 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m45_362 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m45_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339"];
m45_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="341-341"];
m45_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339"];
m45_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="816-816"];
m45_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="829-829"];
m45_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="820-827"];
m45_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="types.Count() > 1", span="831-831"];
m45_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="818-818"];
m45_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="return array;", span="836-836"];
m45_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="833-833"];
m45_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="816-816"];
m45_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="QuantConnect.Securities.Security", span=""];
m45_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="224-224"];
m45_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="222-222"];
m45_45 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="407-407"];
m45_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="456-456"];
m45_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352"];
m45_285 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.Python.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m45_436 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m45_120 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m45_414 [cluster="Unk.Distinct", file="QCAlgorithm.Python.cs", label="Entry Unk.Distinct", span=""];
m45_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468"];
m45_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="470-470"];
m45_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="474-474"];
m45_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="471-471"];
m45_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="473-473"];
m45_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="475-475"];
m45_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="472-472"];
m45_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468"];
m45_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653"];
m45_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="657-657"];
m45_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var end = Time.RoundDown((resolution ?? Securities[symbol].Resolution).ToTimeSpan())", span="658-658"];
m45_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, symbol, start, end, resolution);", span="659-659"];
m45_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="resolution == Resolution.Tick", span="655-655"];
m45_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="655-655"];
m45_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653"];
m45_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406"];
m45_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="408-408"];
m45_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406"];
m45_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671"];
m45_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return History(type, symbol, Time - span, Time, resolution);", span="673-673"];
m45_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671"];
m45_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="601-601"];
m45_442 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m45_341 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m45_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252"];
m45_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="254-254"];
m45_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252"];
m45_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437"];
m45_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="439-439"];
m45_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="440-440"];
m45_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437"];
m45_378 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237"];
m45_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="239-239"];
m45_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237"];
m45_245 [cluster="Unk.Memoize", file="QCAlgorithm.Python.cs", label="Entry Unk.Memoize", span=""];
m45_256 [cluster="Unk.CreateHistoryRequest", file="QCAlgorithm.Python.cs", label="Entry Unk.CreateHistoryRequest", span=""];
m45_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452"];
m45_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var resolution = GetSubscription(symbol).Resolution", span="454-454"];
m45_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="455-455"];
m45_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452"];
m45_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392"];
m45_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="394-394"];
m45_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392"];
m45_308 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.Python.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m45_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555"];
m45_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", color=green, community=0, file="QCAlgorithm.Python.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", prediction=1, span="570-570"];
m45_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="560-568"];
m45_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="557-557"];
m45_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="558-558"];
m45_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="558-558"];
m45_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555"];
m45_444 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m45_454 [file="QCAlgorithm.Python.cs", label=PyObject, span=""];
m45_455 [file="QCAlgorithm.Python.cs", label="System.DateTime", span=""];
m45_456 [file="QCAlgorithm.Python.cs", label="System.DateTime", span=""];
m45_457 [file="QCAlgorithm.Python.cs", label="QuantConnect.Resolution?", span=""];
m45_458 [file="QCAlgorithm.Python.cs", label=PyObject, span=""];
m45_459 [file="QCAlgorithm.Python.cs", label="QuantConnect.Resolution?", span=""];
m45_460 [file="QCAlgorithm.Python.cs", label=int, span=""];
m45_451 [file="QCAlgorithm.Python.cs", label="QuantConnect.SecurityType", span=""];
m45_452 [file="QCAlgorithm.Python.cs", label=string, span=""];
m45_453 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m45_461 [file="QCAlgorithm.Python.cs", label=requestedType, span=""];
m45_445 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m45_446 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m45_447 [file="QCAlgorithm.Python.cs", label=fine, span=""];
m45_448 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m45_449 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m45_450 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m46_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="64-64"];
m46_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59"];
m46_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59"];
m46_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="54-54"];
m46_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Run()", span="54-54"];
m47_22 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="QCAlgorithmFramework.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m47_24 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", span="122-122"];
m47_31 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", span="122-122"];
m47_5 [cluster="QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", span="80-80"];
m47_6 [cluster="QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", span="80-80"];
m47_11 [cluster="QuantConnect.Brokerages.Brokerage.Disconnect()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.Disconnect()", span="97-97"];
m47_12 [cluster="QuantConnect.Brokerages.Brokerage.Disconnect()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.Disconnect()", span="97-97"];
m47_13 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="103-103"];
m47_20 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="103-103"];
m47_40 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="160-160"];
m47_47 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="160-160"];
m47_48 [cluster="QuantConnect.Brokerages.Brokerage.GetOpenOrders()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.GetOpenOrders()", span="180-180"];
m47_49 [cluster="QuantConnect.Brokerages.Brokerage.GetOpenOrders()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.GetOpenOrders()", span="180-180"];
m47_52 [cluster="QuantConnect.Brokerages.Brokerage.GetCashBalance()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.GetCashBalance()", span="192-192"];
m47_53 [cluster="QuantConnect.Brokerages.Brokerage.GetCashBalance()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.GetCashBalance()", span="192-192"];
m47_9 [cluster="QuantConnect.Brokerages.Brokerage.Connect()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.Connect()", span="92-92"];
m47_10 [cluster="QuantConnect.Brokerages.Brokerage.Connect()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.Connect()", span="92-92"];
m47_0 [cluster="QuantConnect.Brokerages.Brokerage.Brokerage(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.Brokerage(string)", span="63-63"];
m47_2 [cluster="QuantConnect.Brokerages.Brokerage.Brokerage(string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.Brokerage(string)", span="63-63"];
m47_21 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="98-98"];
m47_50 [cluster="QuantConnect.Brokerages.Brokerage.GetAccountHoldings()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.GetAccountHoldings()", span="186-186"];
m47_51 [cluster="QuantConnect.Brokerages.Brokerage.GetAccountHoldings()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.GetAccountHoldings()", span="186-186"];
m47_3 [cluster="QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", span="73-73"];
m47_4 [cluster="QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", span="73-73"];
m47_32 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="141-141"];
m47_39 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="141-141"];
m47_7 [cluster="QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", span="87-87"];
m47_8 [cluster="QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", span="87-87"];
m47_54 [file="QCAlgorithmFramework.cs", label="QuantConnect.Brokerages.Brokerage", span=""];
m49_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="704-704"];
m49_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="704-704"];
m49_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="704-704"];
m49_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="33-33"];
m49_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m49_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m49_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m49_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m49_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m49_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m49_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m49_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m49_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="713-713"];
m49_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="715-715"];
m49_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="716-716"];
m49_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="717-717"];
m49_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="713-713"];
m49_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m49_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m49_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m49_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m49_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m49_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m49_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m49_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m49_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m49_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m49_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m49_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m49_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m49_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m49_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m49_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m49_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m49_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m49_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m49_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m49_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m49_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m49_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m49_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m49_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m49_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.01%''},\r\n                {''Compounding Annual Return'', ''255.643%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.016''},\r\n                {''Net Profit'', ''1.400%''},\r\n                {''Sharpe Ratio'', ''1.179''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.48''},\r\n                {''Alpha'', ''-1.178''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.812''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.236''},\r\n                {''Tracking Error'', ''0.177''},\r\n                {''Treynor Ratio'', ''0.767''},\r\n                {''Total Fees'', ''$2040.34''}\r\n            }", span="594-615"];
m49_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m49_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m49_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m49_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m49_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m49_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m49_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m49_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m50_8 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m50_9 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="Holdings = new ForexHolding(this)", span="85-85"];
m50_11 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="DecomposeCurrencyPair(symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="89-89"];
m50_10 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="88-88"];
m50_12 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="90-90"];
m50_13 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="68-68"];
m50_7 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m50_14 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="currencyPair == null || currencyPair.Length != 6", span="110-110"];
m50_15 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="throw new ArgumentException(''Currency pairs must be exactly 6 characters: '' + currencyPair);", span="112-112"];
m50_16 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="baseCurrency = currencyPair.Substring(0, 3)", span="114-114"];
m50_17 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="quoteCurrency = currencyPair.Substring(3)", span="115-115"];
m50_18 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Signal.cs", label="Exit QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108"];
m50_21 [cluster="string.Substring(int)", file="Signal.cs", label="Entry string.Substring(int)", span="0-0"];
m50_0 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m50_5 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Signal.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m50_6 [cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", file="Signal.cs", label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", span="27-27"];
m50_19 [cluster="System.ArgumentException.ArgumentException(string)", file="Signal.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m50_20 [cluster="string.Substring(int, int)", file="Signal.cs", label="Entry string.Substring(int, int)", span="0-0"];
m50_22 [file="Signal.cs", label="QuantConnect.Securities.Forex.Forex", span=""];
m53_12 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58"];
m53_14 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58"];
m53_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="39-39"];
m53_5 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="39-39"];
m53_11 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol, decimal)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol, decimal)", span="52-52"];
m53_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SimplePortfolioConstructionModel.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m53_15 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m53_8 [cluster="lambda expression", file="SimplePortfolioConstructionModel.cs", label="Entry lambda expression", span="48-49"];
m53_10 [cluster="lambda expression", file="SimplePortfolioConstructionModel.cs", label="Exit lambda expression", span="48-49"];
m53_16 [file="SimplePortfolioConstructionModel.cs", label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", span=""];
m53_17 [file="SimplePortfolioConstructionModel.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m53_18 [file="SimplePortfolioConstructionModel.cs", label=percent, span=""];
m54_34 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="78-78"];
m54_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m54_148 [cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0"];
m54_152 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="300-300"];
m54_153 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="brokerage.Message += (sender, message) =>\r\n            {\r\n                // based on message type dispatch to result handler\r\n                switch (message.Type)\r\n                {\r\n                    case BrokerageMessageType.Information:\r\n                        results.DebugMessage(''Brokerage Info: '' + message.Message);\r\n                        break;\r\n                    case BrokerageMessageType.Warning:\r\n                        results.ErrorMessage(''Brokerage Warning: '' + message.Message);\r\n                        break;\r\n                    case BrokerageMessageType.Error:\r\n                        results.ErrorMessage(''Brokerage Error: '' + message.Message);\r\n                        _algorithm.RunTimeError = new Exception(message.Message);\r\n                        break;\r\n                }\r\n            }", span="302-318"];
m54_154 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return true;", span="319-319"];
m54_155 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="300-300"];
m54_103 [cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="52-52"];
m54_19 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_changes.RemovedSecurities", span="54-54"];
m54_14 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="101-101"];
m54_5 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddUniverse(''my-custom-universe'', dt => dt.Day % 7 == 0 ? new List<string> { ''IBM'' } : Enumerable.Empty<string>())", span="42-42"];
m54_35 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", span=""];
m54_36 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_algorithm = algorithm", span="115-115"];
m54_38 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var liveJob = job as LiveNodePacket", span="119-119"];
m54_46 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var initializeComplete = Isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(10), () =>\r\n                {\r\n                    try\r\n                    {                \r\n                        //Set the live trading level asset/ram allocation limits. \r\n                        //Protects algorithm from linux killing the job by excess memory:\r\n                        switch (job.ServerType)\r\n                        {\r\n                            case ServerType.Server1024:\r\n                                algorithm.SetAssetLimits(100, 20, 10);\r\n                                break;\r\n\r\n                            case ServerType.Server2048:\r\n                                algorithm.SetAssetLimits(400, 50, 30);\r\n                                break;\r\n\r\n                            default: //512\r\n                                algorithm.SetAssetLimits(50, 25, 15);\r\n                                break;\r\n                        }\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.Message);\r\n                    }\r\n                })", span="138-169"];
m54_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Engine.ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="188-188"];
m54_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="brokerage = _factory.CreateBrokerage(liveJob, algorithm)", span="191-191"];
m54_56 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="SetupHandler.UpdateTransactionModels(algorithm, algorithm.BrokerageModel)", span="194-194"];
m54_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.SetCash(cash.Symbol, cash.Quantity, cash.ConversionRate)", span="215-215"];
m54_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="233-233"];
m54_74 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="234-234"];
m54_80 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Min(x => x.Value.Resolution))", span="248-248"];
m54_83 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="252-252"];
m54_85 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol, minResolution.Value, true, 1.0m, false)", span="256-256"];
m54_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, (int)holding.Quantity)", span="258-258"];
m54_87 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Securities[holding.Symbol].SetMarketPrice(DateTime.Now, new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="259-269"];
m54_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="280-280"];
m54_93 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="283-283"];
m54_37 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="brokerage = default(IBrokerage)", span="116-116"];
m54_39 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="liveJob == null", span="120-120"];
m54_42 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="127-127"];
m54_50 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_factory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="179-179"];
m54_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Error resolving brokerage factory for '' + liveJob.Brokerage + ''. '' + err.Message)", span="183-183"];
m54_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Unable to locate factory for brokerage: '' + liveJob.Brokerage)", span="184-184"];
m54_40 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="122-122"];
m54_41 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="123-123"];
m54_43 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''A brokerage must be specified'')", span="129-129"];
m54_45 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="135-135"];
m54_44 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="130-130"];
m54_47 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="!initializeComplete", span="171-171"];
m54_48 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Initialization timed out.'')", span="173-173"];
m54_49 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="174-174"];
m54_51 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="181-181"];
m54_57 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="brokerage.Connect()", span="199-199"];
m54_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var cashBalance = brokerage.GetCashBalance()", span="211-211"];
m54_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var openOrders = brokerage.GetOpenOrders()", span="228-228"];
m54_79 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var holdings = brokerage.GetAccountHoldings()", span="247-247"];
m54_58 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="201-201"];
m54_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Error(err)", span="203-203"];
m54_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Error connecting to brokerage: '' + err.Message)", span="204-204"];
m54_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="205-205"];
m54_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=cashBalance, span="212-212"];
m54_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Quantity)", span="214-214"];
m54_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="218-218"];
m54_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Error(err)", span="220-220"];
m54_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="221-221"];
m54_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="222-222"];
m54_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=openOrders, span="229-229"];
m54_72 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol + '' - '' + order.Quantity)", span="232-232"];
m54_75 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="237-237"];
m54_76 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Error(err)", span="239-239"];
m54_77 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="240-240"];
m54_78 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="241-241"];
m54_81 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=holdings, span="249-249"];
m54_82 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="251-251"];
m54_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="272-272"];
m54_84 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol)", span="254-254"];
m54_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log.Error(err)", span="274-274"];
m54_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="275-275"];
m54_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return false;", span="276-276"];
m54_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="StartingDate = DateTime.Now", span="284-284"];
m54_95 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="286-286"];
m54_97 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return Errors.Count == 0;", span="291-291"];
m54_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(err.Message)", span="288-288"];
m54_98 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="113-113"];
m54_136 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="422-422"];
m54_100 [cluster="string.IsNullOrWhiteSpace(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m54_11 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="loader.TryLoadDebugInformation = !Config.GetBool(''local'')", span="99-99"];
m54_23 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_changes.AddedSecurities", span="64-64"];
m54_24 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="!security.Invested", span="66-66"];
m54_26 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="SetHoldings(security.Symbol, 1)", span="69-69"];
m54_22 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Liquidate(security.Symbol)", span="59-59"];
m54_25 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log(Time + '' Buy '' + security.Symbol.Value)", span="68-68"];
m54_32 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_changes = changes", span="80-80"];
m54_27 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="49-49"];
m54_31 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="78-78"];
m54_33 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log(Time + '' '' + changes)", span="81-81"];
m54_124 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="job.ServerType", span="144-144"];
m54_126 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.SetAssetLimits(100, 20, 10)", span="147-147"];
m54_128 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.SetAssetLimits(400, 50, 30)", span="151-151"];
m54_129 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.SetAssetLimits(50, 25, 15)", span="155-155"];
m54_130 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.SetLiveMode(true)", span="160-160"];
m54_131 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Initialize()", span="163-163"];
m54_146 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="algorithm.Securities.Min(x => x.Value.Resolution)", span="248-248"];
m54_139 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="179-179"];
m54_123 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="138-169"];
m54_138 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="179-179"];
m54_143 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=order, span="234-234"];
m54_142 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="234-234"];
m54_125 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="ServerType.Server1024", span="146-146"];
m54_127 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="ServerType.Server2048", span="150-150"];
m54_132 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=Exception, span="165-165"];
m54_134 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="138-169"];
m54_133 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="AddInitializationError(err.Message)", span="167-167"];
m54_140 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="179-179"];
m54_144 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="234-234"];
m54_145 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="248-248"];
m54_147 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="248-248"];
m54_149 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="248-248"];
m54_150 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="x.Value.Resolution", span="248-248"];
m54_151 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="248-248"];
m54_159 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="results.DebugMessage(''Brokerage Info: '' + message.Message)", span="308-308"];
m54_161 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="results.ErrorMessage(''Brokerage Warning: '' + message.Message)", span="311-311"];
m54_163 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="results.ErrorMessage(''Brokerage Error: '' + message.Message)", span="314-314"];
m54_157 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="message.Type", span="305-305"];
m54_164 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_algorithm.RunTimeError = new Exception(message.Message)", span="315-315"];
m54_156 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry lambda expression", span="302-318"];
m54_158 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="BrokerageMessageType.Information", span="307-307"];
m54_160 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="BrokerageMessageType.Warning", span="310-310"];
m54_162 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="BrokerageMessageType.Error", span="313-313"];
m54_165 [cluster="lambda expression", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit lambda expression", span="302-318"];
m54_12 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="100-100"];
m54_13 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="!complete", span="101-101"];
m54_115 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="69-69"];
m54_104 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m54_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1690-1690"];
m54_166 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="99-99"];
m54_167 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="118-118"];
m54_113 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="401-401"];
m54_118 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="362-362"];
m54_21 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Log(Time + '' Liquidate '' + security.Symbol.Value)", span="58-58"];
m54_175 [cluster="System.IDisposable.Dispose()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m54_20 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="security.Invested", span="56-56"];
m54_110 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75"];
m54_171 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="335-335"];
m54_172 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_factory != null", span="337-337"];
m54_173 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="_factory.Dispose()", span="339-339"];
m54_174 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="335-335"];
m54_16 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", span="80-80"];
m54_17 [cluster="Loader.cstr", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry Loader.cstr", span=""];
m54_18 [cluster="System.TimeSpan.FromSeconds(double)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m54_102 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="156-156"];
m54_7 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", span="80-80"];
m54_116 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m54_0 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", span="33-33"];
m54_1 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="SetStartDate(2013, 10, 1)", span="35-35"];
m54_2 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="SetEndDate(2013, 10, 31)", prediction=10, span="36-36"];
m54_3 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="SetCash(100000)", prediction=10, span="37-37"];
m54_4 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="UniverseSettings.Resolution = Resolution.Hour", span="39-39"];
m54_111 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="385-385"];
m54_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="121-121"];
m54_112 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="63-63"];
m54_6 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", span="33-33"];
m54_121 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="403-403"];
m54_99 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="326-326"];
m54_168 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="328-328"];
m54_169 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="326-326"];
m54_8 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="string error", span="82-82"];
m54_10 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="var loader = new Loader(TimeSpan.FromSeconds(10), names =>\r\n            {\r\n                // if there's only one use that guy\r\n                if (names.Count == 1)\r\n                {\r\n                    return names.Single();\r\n                }\r\n\r\n                // if there's more than one then check configuration for which one we should use\r\n                var algorithmName = Config.Get(''algorithm-type-name'');\r\n                return names.Single(x => x.Contains(algorithmName));\r\n            })", span="86-97"];
m54_15 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="return algorithm;", span="103-103"];
m54_29 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="85-85"];
m54_9 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="IAlgorithm algorithm", span="83-83"];
m54_108 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="101-101"];
m54_106 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="48-48"];
m54_105 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="197-197"];
m54_122 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85"];
m54_141 [cluster="System.Type.MatchesTypeName(string)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.Type.MatchesTypeName(string)", span="333-333"];
m54_135 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="437-437"];
m54_170 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m54_114 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m54_119 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="367-367"];
m54_101 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m54_120 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="92-92"];
m54_107 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
m54_137 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="218-218"];
m54_176 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m54_177 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=algorithmName, span=""];
m54_178 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m54_179 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m54_180 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=liveJob, span=""];
m54_181 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label=order, span=""];
m54_182 [file="WeeklyUniverseSelectionRegressionAlgorithm.cs", label="QuantConnect.Lean.Engine.Results.IResultHandler", span=""];
n538 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n222  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n328  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n538 -> n336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n539 -> n315  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n540 -> n318  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n541 -> n322  [color=darkseagreen4, key=1, label=split, style=dashed];
n542 -> n495  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n9 -> n315  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n9 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n9 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
n9 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n91  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n124  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n133  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n135  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n139  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n163  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n170  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n172  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n174  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n180  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n185  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n187  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n189  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n191  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n198  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n210  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n228  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n9 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n12 -> n57  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n236  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n53  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n66  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n233  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n235  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n236  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n23 -> n184  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
n24 -> n186  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
n25 -> n188  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
n26 -> n190  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
n27 -> n169  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n28 -> n171  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n29 -> n173  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
n30 -> n70  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
n31 -> n310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label=config, style=dashed];
n32 -> n41  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n43 -> n46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n69  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n71  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n75  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n76  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n79  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n83  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n88  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n95  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n123  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n124  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n131  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n134  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n145  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n158  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n169  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n170  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n171  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n172  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n174  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n180  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n181  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n182  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n191  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n197  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n198  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n47 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n60 -> n234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n60 -> n236  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n73 -> n317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n98 -> n101  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
n98 -> n112  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
n138 -> n321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n71  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n160  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n170  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n172  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n174  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n185  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n187  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n189  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n191  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n160 -> n163  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
n16 -> n96  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
n18 -> n120  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
n19 -> n90  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n19 -> n180  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n241 -> n479  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
n252 -> n335  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n336  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n348  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n380  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n384  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n252 -> n387  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n388  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n390  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n392  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n252 -> n396  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n400  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n405  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n406  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n411  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n51 -> n54  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n65  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n67  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n68  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n96  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n120  [color=darkseagreen4, key=1, label=time, style=dashed];
n72 -> n318  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n76 -> n78  [color=darkseagreen4, key=1, label=security, style=dashed];
n79 -> n81  [color=darkseagreen4, key=1, label=update, style=dashed];
n83 -> n85  [color=darkseagreen4, key=1, label=update, style=dashed];
n131 -> n133  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n134 -> n136  [color=darkseagreen4, key=1, label=split, style=dashed];
n134 -> n137  [color=darkseagreen4, key=1, label=split, style=dashed];
n134 -> n322  [color=darkseagreen4, key=1, label=split, style=dashed];
n134 -> n139  [color=darkseagreen4, key=1, label=split, style=dashed];
n145 -> n148  [color=darkseagreen4, key=1, label=update, style=dashed];
n145 -> n149  [color=darkseagreen4, key=1, label=update, style=dashed];
n158 -> n160  [color=darkseagreen4, key=1, label=update, style=dashed];
n158 -> n161  [color=darkseagreen4, key=1, label=update, style=dashed];
n158 -> n162  [color=darkseagreen4, key=1, label=update, style=dashed];
n182 -> n324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n62 -> n64  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
n80 -> n82  [color=darkseagreen4, key=1, label=cash, style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label=security, style=dashed];
n84 -> n87  [color=darkseagreen4, key=1, label=security, style=dashed];
n273 -> n513  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n273 -> n514  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n148 -> n150  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n147 -> n150  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n147 -> n152  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n290 -> n535  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n161 -> n163  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n297 -> n485  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n297 -> n486  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n325 -> n325  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
n327 -> n329  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n332 -> n377  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n332 -> n393  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n333 -> n359  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
n334 -> n359  [color=darkseagreen4, key=1, label=history, style=dashed];
n338 -> n343  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n346  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n352  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n354  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n356  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n387  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n338 -> n389  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n344 -> n442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n348 -> n348  [color=darkseagreen4, key=1, label=security, style=dashed];
n363 -> n370  [color=darkseagreen4, key=1, label=security, style=dashed];
n371 -> n385  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n392 -> n399  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n392 -> n404  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n392 -> n412  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n359 -> n362  [color=darkseagreen4, key=1, label=slice, style=dashed];
n337 -> n397  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n337 -> n400  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n414 -> n464  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n414 -> n467  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n346 -> n348  [color=darkseagreen4, key=1, label=request, style=dashed];
n346 -> n349  [color=darkseagreen4, key=1, label=request, style=dashed];
n352 -> n448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n353 -> n451  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n353 -> n454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n354 -> n457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n356 -> n358  [color=darkseagreen4, key=1, label=request, style=dashed];
n340 -> n381  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n340 -> n408  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n342 -> n404  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
n345 -> n445  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n345 -> n349  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n364 -> n369  [color=darkseagreen4, key=1, label=data, style=dashed];
n361 -> n370  [color=darkseagreen4, key=1, label=paired, style=dashed];
n365 -> n368  [color=darkseagreen4, key=1, label=list, style=dashed];
n365 -> n369  [color=darkseagreen4, key=1, label=list, style=dashed];
n365 -> n370  [color=darkseagreen4, key=1, label=list, style=dashed];
n366 -> n368  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n386 -> n397  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n386 -> n400  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n378 -> n393  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n382 -> n408  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n399 -> n460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n398 -> n402  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
n439 -> n439  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
n464 -> n471  [color=darkseagreen4, key=1, label=security, style=dashed];
n464 -> n472  [color=darkseagreen4, key=1, label=security, style=dashed];
n468 -> n470  [color=darkseagreen4, key=1, label=history, style=dashed];
n470 -> n472  [color=darkseagreen4, key=1, label=slice, style=dashed];
n477 -> n479  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
n483 -> n485  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n483 -> n495  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n483 -> n486  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n483 -> n487  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n483 -> n488  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n485 -> n494  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n497 -> n514  [color=darkseagreen4, key=1, label=i, style=dashed];
n497 -> n515  [color=darkseagreen4, key=1, label=i, style=dashed];
n499 -> n504  [color=darkseagreen4, key=1, label=security, style=dashed];
n499 -> n506  [color=darkseagreen4, key=1, label=security, style=dashed];
n499 -> n508  [color=darkseagreen4, key=1, label=security, style=dashed];
n515 -> n515  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_147 -> m0_152  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m0_147 -> m0_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m0_147 -> m0_157  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m0_147 -> m0_161  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m0_149 -> m0_153  [color=darkseagreen4, key=1, label=pyRequests, style=dashed];
m0_153 -> m0_155  [color=darkseagreen4, key=1, label=pyRequest, style=dashed];
m0_261 -> m0_266  [color=darkseagreen4, key=1, label="out T", style=dashed];
m0_262 -> m0_265  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_264 -> m0_266  [color=darkseagreen4, key=1, label="out T", style=dashed];
m0_103 -> m0_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_0 -> m0_8  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m0_5 -> m0_10  [color=darkseagreen4, key=1, label=baseClass, style=dashed];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label=moduleName, style=dashed];
m0_9 -> m0_11  [color=darkseagreen4, key=1, label=attr, style=dashed];
m0_176 -> m0_178  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_113 -> m0_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_113 -> m0_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_186 -> m0_188  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m0_256 -> m0_258  [color=darkseagreen4, key=1, label=code, style=dashed];
m0_273 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_34  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_38  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_42  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_50  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_54  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_58  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_62  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_66  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_70  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_74  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_78  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_82  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_87  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_91  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_95  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_105  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_110  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_115  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_116  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_117  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_128  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_155  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_161  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_173  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_178  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_183  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_188  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_197  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_201  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_205  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_209  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_213  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_217  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_221  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_225  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_229  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_233  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_237  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_241  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_245  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_249  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_253  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m0_273 -> m0_270  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m1_64 -> m1_66  [color=darkseagreen4, key=1, label=algorithmPath, style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m1_0 -> m1_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=logFile, style=dashed];
m1_3 -> m1_37  [color=darkseagreen4, key=1, label=logFile, style=dashed];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=passedFile, style=dashed];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=passedFile, style=dashed];
m1_24 -> m1_66  [color=darkseagreen4, key=1, label=engine, style=dashed];
m1_25 -> m1_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=stat, style=dashed];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=stat, style=dashed];
m1_72 -> m1_66  [color=darkseagreen4, key=1, label=engine, style=dashed];
m4_171 -> m4_171  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m4_31 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_31 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_31 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_31 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_37 -> m4_39  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m4_90 -> m4_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_91 -> m4_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_97  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_93 -> m4_93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_96 -> m4_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_97  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_96 -> m4_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_99 -> m4_138  [color=darkseagreen4, key=1, label=fills, style=dashed];
m4_99 -> m4_144  [color=darkseagreen4, key=1, label=fills, style=dashed];
m4_101 -> m4_137  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_104 -> m4_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_104 -> m4_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_132 -> m4_144  [color=darkseagreen4, key=1, label=fills, style=dashed];
m4_145 -> m4_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_94  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_94 -> m4_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_97  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_94 -> m4_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_138 -> m4_140  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_138 -> m4_143  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_144 -> m4_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_53 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_53 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_53 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_53 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_61 -> m4_63  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m4_181 -> m4_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m4_184 -> m4_186  [color=darkseagreen4, key=1, label=fills, style=dashed];
m4_185 -> m4_187  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m4_186 -> m4_188  [color=darkseagreen4, key=1, label=fill, style=dashed];
m4_70 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_70 -> m4_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_70 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_19 -> m4_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_19 -> m4_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_200 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_81  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_94  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_97  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_104  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_114  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_145  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_178  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m4_200 -> m4_188  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m6_9 -> m6_114  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_9 -> m6_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_9 -> m6_71  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label=selectSymbolsResult, style=dashed];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_40 -> m6_43  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_40 -> m6_121  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_40 -> m6_45  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_40 -> m6_46  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_40 -> m6_47  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_51 -> m6_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_51 -> m6_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_53 -> m6_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_53 -> m6_58  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_53 -> m6_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_14 -> m6_26  [color=darkseagreen4, key=1, label=fineCollection, style=dashed];
m6_24 -> m6_26  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m6_31 -> m6_41  [color=darkseagreen4, key=1, label=selections, style=dashed];
m6_31 -> m6_48  [color=darkseagreen4, key=1, label=selections, style=dashed];
m6_32 -> m6_64  [color=darkseagreen4, key=1, label=additions, style=dashed];
m6_32 -> m6_65  [color=darkseagreen4, key=1, label=additions, style=dashed];
m6_48 -> m6_50  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_33 -> m6_38  [color=darkseagreen4, key=1, label=removals, style=dashed];
m6_33 -> m6_43  [color=darkseagreen4, key=1, label=removals, style=dashed];
m6_33 -> m6_46  [color=darkseagreen4, key=1, label=removals, style=dashed];
m6_69 -> m6_71  [color=darkseagreen4, key=1, label=securityChanges, style=dashed];
m6_69 -> m6_72  [color=darkseagreen4, key=1, label=securityChanges, style=dashed];
m6_34 -> m6_38  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m6_34 -> m6_46  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m6_34 -> m6_53  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m6_34 -> m6_68  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m6_35 -> m6_117  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_35 -> m6_37  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_35 -> m6_38  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_35 -> m6_39  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_36 -> m6_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_44 -> m6_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_50 -> m6_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_50 -> m6_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_52 -> m6_61  [color=darkseagreen4, key=1, label=addedSubscription, style=dashed];
m6_55 -> m6_57  [color=darkseagreen4, key=1, label=reason, style=dashed];
m6_60 -> m6_61  [color=darkseagreen4, key=1, label=addedSubscription, style=dashed];
m6_95 -> m6_124  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_95 -> m6_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m6_95 -> m6_127  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_95 -> m6_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_125 -> m6_128  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m6_136 -> m6_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_136 -> m6_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m6_137 -> m6_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m6_138 -> m6_114  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_139 -> m6_117  [color=darkseagreen4, key=1, label=member, style=dashed];
m6_140 -> m6_121  [color=darkseagreen4, key=1, label=member, style=dashed];
m9_76 -> m9_78  [color=darkseagreen4, key=1, label=lastUpdate, style=dashed];
m9_179 -> m9_183  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_180 -> m9_182  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_25 -> m9_187  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_25 -> m9_190  [color=darkseagreen4, key=1, label="System.Func<T, decimal>", style=dashed];
m9_25 -> m9_191  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_185 -> m9_191  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_188 -> m9_190  [color=darkseagreen4, key=1, label=typedOrder, style=dashed];
m9_82 -> m9_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m9_82 -> m9_85  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m9_82 -> m9_89  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m9_87 -> m9_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_87 -> m9_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_158 -> m9_160  [color=darkseagreen4, key=1, label=counts, style=dashed];
m9_158 -> m9_161  [color=darkseagreen4, key=1, label=counts, style=dashed];
m9_10 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_10 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_10 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_10 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_10 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_10 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderField", style=dashed];
m9_14 -> m9_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_14 -> m9_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_16 -> m9_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_16 -> m9_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_19 -> m9_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_19 -> m9_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_21 -> m9_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_21 -> m9_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_165 -> m9_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_137 -> m9_139  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m9_137 -> m9_141  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m9_137 -> m9_142  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m9_140 -> m9_142  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m9_140 -> m9_144  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m9_110 -> m9_114  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m9_125 -> m9_127  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m9_125 -> m9_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m9_125 -> m9_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m9_128 -> m9_130  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m9_128 -> m9_132  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m9_152 -> m9_154  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m9_195 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_79  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_90  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_114  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_117  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_120  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_159  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_160  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_166  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m9_195 -> m9_175  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderTicket", style=dashed];
m12_3 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m12_6 -> m12_6  [color=darkseagreen4, key=1, label=entry, style=dashed];
m12_7 -> m12_10  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m12_19 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m13_33 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_37  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m13_26 -> m13_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_14 -> m13_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m13_15 -> m13_17  [color=darkseagreen4, key=1, label=error, style=dashed];
m13_15 -> m13_18  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m13_13 -> m13_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m13_13 -> m13_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m13_41 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_41 -> m13_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_52  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_41 -> m13_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_42 -> m13_69  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m13_67 -> m13_69  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m13_32 -> m13_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_90 -> m13_92  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
m13_91 -> m13_94  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
m13_107 -> m13_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_107 -> m13_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_108 -> m13_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m13_108 -> m13_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m17_0 -> m17_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m17_0 -> m17_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m17_19 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m17_54 -> m17_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_20 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m17_21 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m17_22 -> m17_54  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m17_23 -> m17_54  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m17_24 -> m17_54  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m17_25 -> m17_54  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m17_26 -> m17_54  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m17_27 -> m17_54  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m17_28 -> m17_54  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m17_29 -> m17_54  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m17_30 -> m17_54  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m17_31 -> m17_54  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m17_32 -> m17_54  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m17_33 -> m17_54  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m17_34 -> m17_54  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m17_35 -> m17_54  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m17_36 -> m17_54  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m17_37 -> m17_54  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m17_38 -> m17_54  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m17_39 -> m17_54  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m17_40 -> m17_54  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m17_41 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m17_42 -> m17_54  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m17_43 -> m17_54  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m17_44 -> m17_54  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m17_45 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m17_46 -> m17_54  [color=darkseagreen4, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m17_47 -> m17_54  [color=darkseagreen4, key=1, label=basicTemplateIntrinioEconomicData, style=dashed];
m17_48 -> m17_54  [color=darkseagreen4, key=1, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, style=dashed];
m17_49 -> m17_54  [color=darkseagreen4, key=1, label=standardDeviationExecutionModelRegressionAlgorithmStatistics, style=dashed];
m17_50 -> m17_54  [color=darkseagreen4, key=1, label=cancelOpenOrdersRegressionAlgorithmStatistics, style=dashed];
m17_51 -> m17_54  [color=darkseagreen4, key=1, label=scheduledUniverseSelectionModelRegressionAlgorithmStatistics, style=dashed];
m17_52 -> m17_54  [color=darkseagreen4, key=1, label=compositeAlphaModelFrameworkAlgorithmStatistics, style=dashed];
m18_23 -> m18_25  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m18_28 -> m18_31  [color=darkseagreen4, key=1, label=newFactorFileInstance, style=dashed];
m18_28 -> m18_37  [color=darkseagreen4, key=1, label=newFactorFileInstance, style=dashed];
m18_24 -> m18_41  [color=darkseagreen4, key=1, label=tolerance, style=dashed];
m18_24 -> m18_42  [color=darkseagreen4, key=1, label=tolerance, style=dashed];
m18_27 -> m18_31  [color=darkseagreen4, key=1, label=originalFactorFileInstance, style=dashed];
m18_27 -> m18_36  [color=darkseagreen4, key=1, label=originalFactorFileInstance, style=dashed];
m18_30 -> m18_33  [color=darkseagreen4, key=1, label=latestDate, style=dashed];
m18_36 -> m18_38  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_36 -> m18_40  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_36 -> m18_41  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_36 -> m18_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_37 -> m18_39  [color=darkseagreen4, key=1, label=actual, style=dashed];
m18_37 -> m18_41  [color=darkseagreen4, key=1, label=actual, style=dashed];
m18_37 -> m18_42  [color=darkseagreen4, key=1, label=actual, style=dashed];
m18_32 -> m18_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_32 -> m18_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_55 -> m18_16  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.FactorFileGeneratorTests", style=dashed];
m21_56 -> m21_59  [color=darkseagreen4, key=1, label=entry, style=dashed];
m21_56 -> m21_60  [color=darkseagreen4, key=1, label=entry, style=dashed];
m21_52 -> m21_60  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_52 -> m21_63  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_54 -> m21_59  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m21_58 -> m21_60  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_36 -> m21_38  [color=darkseagreen4, key=1, label=entry, style=dashed];
m21_31 -> m21_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, byte[]>", style=dashed];
m21_34 -> m21_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_34 -> m21_42  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_34 -> m21_44  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_34 -> m21_45  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_33 -> m21_42  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_41 -> m21_43  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m21_71 -> m21_86  [color=darkseagreen4, key=1, label=bool, style=dashed];
m21_71 -> m21_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_73 -> m21_82  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_81 -> m21_83  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m21_75 -> m21_90  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m21_76 -> m21_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_76 -> m21_82  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_76 -> m21_84  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_76 -> m21_85  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_98 -> m21_100  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_98 -> m21_105  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_101 -> m21_105  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_104 -> m21_106  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m21_5 -> m21_7  [color=darkseagreen4, key=1, label=entry, style=dashed];
m21_0 -> m21_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m21_3 -> m21_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_3 -> m21_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_3 -> m21_13  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_3 -> m21_14  [color=darkseagreen4, key=1, label=stream, style=dashed];
m21_2 -> m21_11  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_10 -> m21_12  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m21_125 -> m21_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_125 -> m21_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_133 -> m21_136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m21_133 -> m21_137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m21_215 -> m21_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_216 -> m21_222  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m21_217 -> m21_221  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m21_218 -> m21_220  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m21_205 -> m21_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_206 -> m21_210  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m21_207 -> m21_209  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m21_108 -> m21_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m21_109 -> m21_115  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m21_109 -> m21_117  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m21_111 -> m21_113  [color=darkseagreen4, key=1, label=file, style=dashed];
m21_110 -> m21_117  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m21_170 -> m21_172  [color=darkseagreen4, key=1, label=entry, style=dashed];
m21_169 -> m21_172  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m21_147 -> m21_149  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_147 -> m21_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_180 -> m21_192  [color=darkseagreen4, key=1, label=files, style=dashed];
m21_180 -> m21_195  [color=darkseagreen4, key=1, label=files, style=dashed];
m21_190 -> m21_194  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m21_189 -> m21_194  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m36_0 -> m36_14  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m36_0 -> m36_26  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m36_35 -> m36_38  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_35 -> m36_41  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_35 -> m36_43  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_47 -> m36_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m36_47 -> m36_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m36_47 -> m36_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m37_39 -> m37_41  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m37_39 -> m37_42  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m37_27 -> m37_29  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_69 -> m37_73  [color=darkseagreen4, key=1, label=quandlSpy, style=dashed];
m44_120 -> m44_123  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_120 -> m44_130  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_120 -> m44_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_125 -> m44_132  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_126 -> m44_130  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m44_129 -> m44_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_45 -> m44_256  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m44_45 -> m44_258  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m44_244 -> m44_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_244 -> m44_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_62 -> m44_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m44_90 -> m44_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_91 -> m44_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_77 -> m44_79  [color=darkseagreen4, key=1, label=res, style=dashed];
m44_73 -> m44_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_74 -> m44_79  [color=darkseagreen4, key=1, label=config, style=dashed];
m44_94 -> m44_98  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_95 -> m44_98  [color=darkseagreen4, key=1, label=config, style=dashed];
m44_254 -> m44_260  [color=darkseagreen4, key=1, label=request, style=dashed];
m44_251 -> m44_260  [color=darkseagreen4, key=1, label=requests, style=dashed];
m44_251 -> m44_261  [color=darkseagreen4, key=1, label=requests, style=dashed];
m44_273 -> m44_275  [color=darkseagreen4, key=1, label=start, style=dashed];
m44_273 -> m44_278  [color=darkseagreen4, key=1, label=start, style=dashed];
m44_275 -> m44_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_271 -> m44_275  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_271 -> m44_278  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_274 -> m44_278  [color=darkseagreen4, key=1, label=end, style=dashed];
m44_289 -> m44_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_289 -> m44_289  [color=darkseagreen4, key=1, label=sub, style=dashed];
m44_63 -> m44_79  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_64 -> m44_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_65 -> m44_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_55 -> m44_174  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m44_230 -> m44_237  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m44_232 -> m44_235  [color=darkseagreen4, key=1, label=request, style=dashed];
m44_213 -> m44_228  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m44_106 -> m44_148  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_106 -> m44_150  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_144 -> m44_148  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m44_147 -> m44_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_179 -> m44_183  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_192 -> m44_199  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m44_206 -> m44_208  [color=darkseagreen4, key=1, label=history, style=dashed];
m44_43 -> m44_275  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_43 -> m44_278  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_265 -> m44_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_265 -> m44_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_296 -> m44_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_170  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_177  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_239  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_296 -> m44_278  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m44_297 -> m44_79  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_299 -> m44_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m44_300 -> m44_98  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m44_301 -> m44_98  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_305 -> m44_256  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m44_306 -> m44_258  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m44_307 -> m44_275  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_307 -> m44_278  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m44_309 -> m44_278  [color=darkseagreen4, key=1, label=security, style=dashed];
m44_310 -> m44_278  [color=darkseagreen4, key=1, label=start, style=dashed];
m44_311 -> m44_278  [color=darkseagreen4, key=1, label=end, style=dashed];
m45_366 -> m45_376  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_366 -> m45_368  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_366 -> m45_370  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_366 -> m45_371  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_366 -> m45_375  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_367 -> m45_376  [color=darkseagreen4, key=1, label=dict, style=dashed];
m45_367 -> m45_374  [color=darkseagreen4, key=1, label=dict, style=dashed];
m45_372 -> m45_374  [color=darkseagreen4, key=1, label=key, style=dashed];
m45_47 -> m45_57  [color=darkseagreen4, key=1, label=fine, style=dashed];
m45_48 -> m45_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_174 -> m45_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_179 -> m45_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_67 -> m45_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_204 -> m45_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_206 -> m45_209  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m45_208 -> m45_210  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m45_15 -> m45_17  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_266 -> m45_290  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_266 -> m45_280  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m45_271 -> m45_292  [color=green, key=1, label="lambda expression", style=dashed];
m45_270 -> m45_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_94 -> m45_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_94 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_96 -> m45_118  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m45_96 -> m45_125  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m45_96 -> m45_128  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m45_77 -> m45_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_46 -> m45_48  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_46 -> m45_51  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_73 -> m45_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_72 -> m45_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_74 -> m45_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_80 -> m45_82  [color=darkseagreen4, key=1, label="QuantConnect.DataNormalizationMode", style=dashed];
m45_84 -> m45_88  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_230 -> m45_234  [color=green, key=1, label="System.DateTime", style=dashed];
m45_231 -> m45_234  [color=green, key=1, label=symbols, style=dashed];
m45_10 -> m45_434  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_57 -> m45_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_248 -> m45_252  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_249 -> m45_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_249 -> m45_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_249 -> m45_252  [color=darkseagreen4, key=1, label=config, style=dashed];
m45_274 -> m45_280  [color=darkseagreen4, key=1, label=security, style=dashed];
m45_275 -> m45_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_275 -> m45_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_275 -> m45_280  [color=darkseagreen4, key=1, label=config, style=dashed];
m45_125 -> m45_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_278 -> m45_280  [color=darkseagreen4, key=1, label=res, style=dashed];
m45_417 -> m45_421  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_38 -> m45_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_51 -> m45_53  [color=darkseagreen4, key=1, label="QuantConnect.LocalTimeKeeper", style=dashed];
m45_88 -> m45_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_54 -> m45_58  [color=darkseagreen4, key=1, label="QuantConnect.TimeUpdatedEventArgs", style=dashed];
m45_60 -> m45_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m45_62 -> m45_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_64 -> m45_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_298 -> m45_304  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_300 -> m45_317  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m45_300 -> m45_304  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m45_301 -> m45_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_301 -> m45_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_303 -> m45_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_16 -> m45_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m45_16 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_16 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchange", style=dashed];
m45_16 -> m45_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Interfaces.ISecurityDataFilter", style=dashed];
m45_16 -> m45_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IPriceVariationModel", style=dashed];
m45_16 -> m45_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityMarginModel", style=dashed];
m45_16 -> m45_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Fills.IFillModel", style=dashed];
m45_16 -> m45_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISettlementModel", style=dashed];
m45_16 -> m45_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IVolatilityModel", style=dashed];
m45_26 -> m45_28  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_26 -> m45_38  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_25 -> m45_31  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_220 -> m45_385  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_220 -> m45_387  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_220 -> m45_390  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_391 -> m45_393  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m45_389 -> m45_394  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m45_389 -> m45_393  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m45_388 -> m45_390  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_214 -> m45_218  [color=green, key=1, label=int, style=dashed];
m45_215 -> m45_218  [color=green, key=1, label=symbols, style=dashed];
m45_402 -> m45_405  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_402 -> m45_404  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_118 -> m45_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m45_116 -> m45_118  [color=darkseagreen4, key=1, label=config, style=dashed];
m45_117 -> m45_125  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_431 -> m45_434  [color=darkseagreen4, key=1, label=an, style=dashed];
m45_333 -> m45_339  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_335 -> m45_337  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m45_223 -> m45_227  [color=green, key=1, label="System.TimeSpan", style=dashed];
m45_224 -> m45_227  [color=green, key=1, label=symbols, style=dashed];
m45_349 -> m45_358  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_350 -> m45_352  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m45_354 -> m45_356  [color=darkseagreen4, key=1, label=securityInitializer2, style=dashed];
m45_409 -> m45_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_409 -> m45_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_408 -> m45_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_408 -> m45_412  [color=darkseagreen4, key=1, label=array, style=dashed];
m45_103 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_44  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_81  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_86  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_97  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_103 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m45_194 -> m45_199  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_196 -> m45_199  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m45_198 -> m45_200  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m45_322 -> m45_327  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_325 -> m45_327  [color=darkseagreen4, key=1, label=start, style=dashed];
m45_168 -> m45_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_185 -> m45_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_189 -> m45_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_159 -> m45_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_237 -> m45_261  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_237 -> m45_252  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_242 -> m45_263  [color=green, key=1, label="lambda expression", style=dashed];
m45_241 -> m45_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_444 -> m45_218  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_227  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_234  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_242  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_271  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_306  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_135  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_168  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_187  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_191  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_199  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_252  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_280  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_345  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_356  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_376  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_405  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_444 -> m45_427  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m45_454 -> m45_261  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_455 -> m45_252  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_456 -> m45_252  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_457 -> m45_252  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m45_458 -> m45_290  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m45_459 -> m45_280  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m45_451 -> m45_125  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m45_451 -> m45_128  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m45_452 -> m45_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_452 -> m45_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_453 -> m45_125  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_461 -> m45_317  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m45_445 -> m45_38  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_446 -> m45_51  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m45_447 -> m45_57  [color=darkseagreen4, key=1, label=fine, style=dashed];
m45_448 -> m45_67  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_449 -> m45_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m45_450 -> m45_88  [color=darkseagreen4, key=1, label=selector, style=dashed];
m49_0 -> m49_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m49_0 -> m49_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m50_8 -> m50_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m50_7 -> m50_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_16 -> m50_18  [color=darkseagreen4, key=1, label="out string", style=dashed];
m54_152 -> m54_159  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m54_152 -> m54_161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m54_152 -> m54_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m54_153 -> m54_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_153 -> m54_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_153 -> m54_161  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_153 -> m54_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_19 -> m54_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m54_19 -> m54_22  [color=darkseagreen4, key=1, label=security, style=dashed];
m54_35 -> m54_124  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m54_35 -> m54_126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_128  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_129  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_131  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_54  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m54_35 -> m54_56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_74  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_92  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_35 -> m54_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_35 -> m54_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m54_38 -> m54_42  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m54_38 -> m54_139  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m54_38 -> m54_52  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m54_38 -> m54_53  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m54_46 -> m54_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_55 -> m54_57  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m54_55 -> m54_98  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m54_74 -> m54_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_80 -> m54_85  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m54_50 -> m54_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_79 -> m54_81  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m54_63 -> m54_65  [color=darkseagreen4, key=1, label=cash, style=dashed];
m54_71 -> m54_74  [color=darkseagreen4, key=1, label=order, style=dashed];
m54_71 -> m54_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m54_81 -> m54_83  [color=darkseagreen4, key=1, label=holding, style=dashed];
m54_81 -> m54_84  [color=darkseagreen4, key=1, label=holding, style=dashed];
m54_81 -> m54_85  [color=darkseagreen4, key=1, label=holding, style=dashed];
m54_81 -> m54_86  [color=darkseagreen4, key=1, label=holding, style=dashed];
m54_23 -> m54_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m54_26 -> m54_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_22 -> m54_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m54_22 -> m54_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m54_31 -> m54_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m54_146 -> m54_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_150 -> m54_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>", style=dashed];
m54_156 -> m54_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_156 -> m54_161  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_156 -> m54_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m54_10 -> m54_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m54_10 -> m54_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m54_10 -> m54_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m54_176 -> m54_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_176 -> m54_173  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m54_178 -> m54_124  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m54_179 -> m54_126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_179 -> m54_128  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_179 -> m54_129  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_179 -> m54_130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_179 -> m54_131  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_179 -> m54_146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m54_180 -> m54_139  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m54_181 -> m54_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m54_182 -> m54_159  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m54_182 -> m54_161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m54_182 -> m54_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
}
