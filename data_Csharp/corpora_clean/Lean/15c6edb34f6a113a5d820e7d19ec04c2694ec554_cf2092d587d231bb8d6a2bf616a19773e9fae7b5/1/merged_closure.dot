digraph  {
m0_48 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="BaseWebsocketsBrokerage.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m0_98 [cluster="System.TimeSpan.FromHours(double)", file="BaseWebsocketsBrokerage.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_93 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_96 [cluster="QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(QuantConnect.SecurityType)", span="80-80"];
m0_53 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="62-62"];
m0_117 [cluster="System.Collections.Generic.List<T>.Clear()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m0_7 [cluster="System.Collections.Generic.List<T>.List()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_55 [cluster="lambda expression", file="BaseWebsocketsBrokerage.cs", label="Entry lambda expression", span="211-224"];
m0_57 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_algorithm.OnEndOfDay(symbol)", prediction=0, span="216-216"];
m0_58 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()))", prediction=0, span="217-217"];
m0_60 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", prediction=0, span="221-221"];
m0_61 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", prediction=0, span="222-222"];
m0_56 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_algorithm.OnEndOfDay()", prediction=0, span="215-215"];
m0_59 [cluster="lambda expression", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label=Exception, prediction=5, span="219-219"];
m0_62 [cluster="lambda expression", file="BaseWebsocketsBrokerage.cs", label="Exit lambda expression", span="211-224"];
m0_108 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="322-322"];
m0_110 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="i < _events.Count", span="324-324"];
m0_111 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="_events[i].Reset()", span="326-326"];
m0_109 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="var i = 0", span="324-324"];
m0_112 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="i++", span="324-324"];
m0_113 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="322-322"];
m0_36 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="104-104"];
m0_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="184-184"];
m0_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities.Values", prediction=0, span="187-187"];
m0_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="endOfDayEventTime.HasValue", prediction=0, span="206-206"];
m0_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="AddEvent(new RealTimeEvent(endOfDayEventTime.Value, () =>\r\n                    {\r\n                        try\r\n                        {\r\n                            _algorithm.OnEndOfDay();\r\n                            _algorithm.OnEndOfDay(symbol);\r\n                            Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()));\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                            Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                        }\r\n                    }, true))", prediction=0, span="211-224"];
m0_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="DateTime? endOfDayEventTime = null", prediction=0, span="189-189"];
m0_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="!security.IsDynamicallyLoadedData", prediction=0, span="191-191"];
m0_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today[security.Type].Status == ''open''", prediction=0, span="194-194"];
m0_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="endOfDayEventTime = _today[security.Type].Open.End.Subtract(_endOfDayDelta)", prediction=0, span="196-196"];
m0_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="endOfDayEventTime = DateTime.Now.Date + security.Exchange.MarketClose.Subtract(_endOfDayDelta)", prediction=0, span="202-202"];
m0_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="var symbol = security.Symbol", prediction=0, span="210-210"];
m0_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Setup EOD Event for {0}'', endOfDayEventTime.Value.ToString(''u'')))", prediction=0, span="208-208"];
m0_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="184-184"];
m0_95 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_122 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="358-358"];
m0_123 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="BaseWebsocketsBrokerage.cs", label="_exitTriggered = true", span="360-360"];
m0_124 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="358-358"];
m0_23 [cluster="System.Convert.ToInt32(double)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m0_22 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="BaseWebsocketsBrokerage.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="300-300"];
m0_50 [cluster="System.DateTime.ToString(string)", file="BaseWebsocketsBrokerage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_64 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="256-256"];
m0_20 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="160-160"];
m0_27 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="ClearEvents()", prediction=0, span="165-165"];
m0_28 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="RefreshMarketHoursToday()", prediction=0, span="168-168"];
m0_29 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="SetupEndOfDayEvent()", prediction=0, span="171-171"];
m0_30 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label=Exception, prediction=19, span="173-173"];
m0_31 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents(): '' + err.Message)", prediction=20, span="175-175"];
m0_32 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="160-160"];
m0_26 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="301-301"];
m0_100 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="i < _events.Count", span="303-303"];
m0_101 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="_events[i].Scan(_time)", span="305-305"];
m0_99 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="var i = 0", span="303-303"];
m0_102 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="i++", span="303-303"];
m0_103 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="301-301"];
m0_54 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="313-313"];
m0_105 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="BaseWebsocketsBrokerage.cs", label="_events.Add(newEvent)", span="315-315"];
m0_106 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="313-313"];
m0_104 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="77-77"];
m0_49 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="BaseWebsocketsBrokerage.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m0_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m0_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_isActive = true", prediction=21, span="126-126"];
m0_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_time = DateTime.Now", prediction=22, span="127-127"];
m0_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="SetupEvents(DateTime.Now.Date)", prediction=0, span="130-130"];
m0_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="!_exitTriggered", prediction=0, span="133-133"];
m0_17 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="ScanEvents()", prediction=0, span="143-143"];
m0_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="var nextSecond = DateTime.Now.RoundUp(TimeSpan.FromSeconds(1))", prediction=26, span="136-136"];
m0_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_isActive = false", prediction=27, span="146-146"];
m0_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Thread.Sleep(Convert.ToInt32((nextSecond - DateTime.Now).TotalMilliseconds))", prediction=28, span="137-137"];
m0_16 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="SetTime(DateTime.Now)", prediction=0, span="140-140"];
m0_19 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m0_51 [cluster="string.Format(string, object)", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_114 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="107-107"];
m0_24 [cluster="System.Threading.Thread.Sleep(int)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_33 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="333-333"];
m0_115 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="BaseWebsocketsBrokerage.cs", label="_events.Clear()", span="335-335"];
m0_116 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="333-333"];
m0_94 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m0_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m0_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_algorithm = algorithm", prediction=30, span="109-109"];
m0_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_events = new List<RealTimeEvent>()", prediction=31, span="110-110"];
m0_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_feed = feed", prediction=32, span="112-112"];
m0_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today = new Dictionary<SecurityType, MarketToday>()", prediction=33, span="111-111"];
m0_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_results = results", prediction=34, span="113-113"];
m0_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m0_92 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m0_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_97 [cluster="string.Format(string, object, object, object)", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_107 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_65 [cluster="System.DateTime.ToShortDateString()", file="BaseWebsocketsBrokerage.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m0_25 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="342-342"];
m0_118 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="_time.Date != time.Date", span="345-345"];
m0_119 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="SetupEvents(time)", span="348-348"];
m0_120 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="_time = time", span="352-352"];
m0_121 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="342-342"];
m0_63 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="251-251"];
m0_66 [cluster="string.Format(string, object, object)", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_52 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="122-122"];
m0_21 [cluster="System.TimeSpan.FromSeconds(double)", file="BaseWebsocketsBrokerage.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_34 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="233-233"];
m0_68 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today.Clear()", prediction=0, span="235-235"];
m0_69 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_feed.Subscriptions", prediction=0, span="238-238"];
m0_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = TimeSpan.FromHours(0)", span="263-263"];
m0_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Extended market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].PreMarket.Start,\r\n                                    _today[SecurityType.Equity].PostMarket.End))", span="269-273"];
m0_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].Open.Start, _today[SecurityType.Equity].Open.End))", span="279-282"];
m0_90 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="Log.Trace(\r\n                            string.Format(\r\n                                ''LiveTradingRealTimeHandler.SetupEvents(Forex): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                sub.Symbol, _today[SecurityType.Forex].Open.Start, _today[SecurityType.Forex].Open.End))", span="289-292"];
m0_70 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="var security = _algorithm.Securities[sub.Symbol]", prediction=0, span="240-240"];
m0_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = TimeSpan.FromHours(0)", span="262-262"];
m0_80 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="sub.ExtendedMarketHours", span="265-265"];
m0_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].PreMarket.Start.TimeOfDay", span="267-267"];
m0_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].PostMarket.End.TimeOfDay", span="268-268"];
m0_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].Open.Start.TimeOfDay", span="277-277"];
m0_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].Open.End.TimeOfDay", span="278-278"];
m0_88 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Forex].Open.Start.TimeOfDay", span="287-287"];
m0_89 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Forex].Open.End.TimeOfDay", span="288-288"];
m0_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="!_today.ContainsKey(security.Type)", prediction=0, span="243-243"];
m0_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today.Add(security.Type, new MarketToday())", prediction=0, span="246-246"];
m0_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today[security.Type] = Engine.Api.MarketToday(security.Type)", prediction=40, span="248-248"];
m0_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="Log.Trace(\r\n                        string.Format(\r\n                            ''LiveTradingRealTimeHandler.SetupEvents(): Daily Market Hours Setup for Security Type: {0} Start: {1} Stop: {2}'',\r\n                            security.Type, _today[security.Type].Open.Start, _today[security.Type].Open.End))", prediction=0, span="249-252"];
m0_75 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="security.Type", prediction=0, span="256-256"];
m0_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="SecurityType.Equity", prediction=43, span="258-258"];
m0_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="SecurityType.Forex", span="286-286"];
m0_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="BaseWebsocketsBrokerage.cs", label="_today[SecurityType.Equity].Status != ''open''", prediction=0, span="260-260"];
m0_91 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="233-233"];
m0_67 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m0_125 [file="BaseWebsocketsBrokerage.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m0_126 [file="BaseWebsocketsBrokerage.cs", label=symbol, span=""];
m1_2 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="86-86"];
m1_3 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="ProjectId = projectId", span="89-89"];
m1_4 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="Message = message", span="90-90"];
m1_5 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="CompileId = compileId", span="91-91"];
m1_6 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="AlgorithmId = algorithmId", span="92-92"];
m1_7 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="86-86"];
m1_0 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket()", span="79-79"];
m1_1 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket()", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Packets.DebugPacket.DebugPacket()", span="79-79"];
m1_8 [file="DefaultBrokerageModel.cs", label="QuantConnect.Packets.DebugPacket", span=""];
m2_8 [cluster="Unk.IsFrozen", file="GDAXBrokerage.cs", label="Entry Unk.IsFrozen", span=""];
m2_7 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="GDAXBrokerage.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="42-42"];
m2_10 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", color=green, community=0, file="GDAXBrokerage.cs", label="return serviceProvider.GetService(typeof(SVsStatusbar)) as IVsStatusbar;", prediction=45, span="44-44"];
m2_11 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="GDAXBrokerage.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="42-42"];
m2_9 [cluster="Unk.SetText", file="GDAXBrokerage.cs", label="Entry Unk.SetText", span=""];
m2_0 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="31-31"];
m2_1 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="GDAXBrokerage.cs", label="int frozen", prediction=46, span="33-33"];
m2_2 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="GDAXBrokerage.cs", label="var statusBar = GetStatusBar(serviceProvider)", prediction=47, span="34-34"];
m2_3 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="GDAXBrokerage.cs", label="statusBar.IsFrozen(out frozen)", prediction=48, span="35-35"];
m2_5 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="GDAXBrokerage.cs", label="statusBar.SetText(msg)", prediction=47, span="38-38"];
m2_4 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="GDAXBrokerage.cs", label="frozen == 0", prediction=50, span="36-36"];
m2_6 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="GDAXBrokerage.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="31-31"];
m2_12 [cluster="System.IServiceProvider.GetService(System.Type)", file="GDAXBrokerage.cs", label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0"];
m3_30 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="38-38"];
m3_33 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="200-200"];
m3_15 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="30-30"];
m3_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_38 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", span="55-55"];
m3_21 [cluster="Unk.AreEqual", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.AreEqual", span=""];
m3_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m3_17 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="66-66"];
m3_31 [cluster="Unk.IsTrue", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.IsTrue", span=""];
m3_13 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_32 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m3_18 [cluster="System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_0 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", span="27-27"];
m3_1 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var sma = new SimpleMovingAverage(4)", prediction=51, span="29-29"];
m3_2 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var data = new[] {1m, 10m, 100m, 1000m, 10000m, 1234m, 56789m}", prediction=52, span="30-30"];
m3_8 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="sma.Update(new IndicatorDataPoint(DateTime.Now.AddSeconds(i), datum))", prediction=51, span="37-37"];
m3_9 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="Assert.AreEqual(Enumerable.Reverse(seen).Take(sma.Period).Average(), sma.Current.Value)", prediction=51, span="38-38"];
m3_3 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var seen = new List<decimal>()", prediction=51, span="32-32"];
m3_5 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="i < data.Length", prediction=52, span="33-33"];
m3_6 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var datum = data[i]", prediction=51, span="35-35"];
m3_4 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="int i = 0", prediction=51, span="33-33"];
m3_7 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="seen.Add(datum)", prediction=51, span="36-36"];
m3_10 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="i++", prediction=51, span="33-33"];
m3_11 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", span="27-27"];
m3_34 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", span="59-59"];
m3_35 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var sma = new SimpleMovingAverage(14)", prediction=61, span="61-61"];
m3_36 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="TestHelper.TestIndicator(sma, ''SMA14'', 1e-2)", prediction=62, span="62-62"];
m3_37 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", span="59-59"];
m3_22 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", span="43-43"];
m3_23 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var sma = new SimpleMovingAverage(3)", prediction=63, span="45-45"];
m3_24 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="TestHelper.GetDataStream(4)", prediction=64, span="47-47"];
m3_25 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="sma.Update(data)", prediction=63, span="49-49"];
m3_26 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="Assert.IsTrue(sma.IsReady)", prediction=63, span="51-51"];
m3_27 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="sma.Reset()", prediction=63, span="53-53"];
m3_28 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="TestHelper.AssertIndicatorIsInDefaultState(sma)", prediction=63, span="55-55"];
m3_29 [cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", span="43-43"];
m3_12 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="38-38"];
m3_16 [cluster="System.DateTime.AddSeconds(double)", file="GDAXBrokerage.Messaging.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m3_20 [cluster="System.Collections.Generic.IEnumerable<decimal>.Average()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<decimal>.Average()", span="0-0"];
m8_0 [cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="GDAXFill.cs", label="Entry QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29"];
m8_1 [cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="GDAXFill.cs", label="algorithm.Liquidate()", prediction=69, span="31-31"];
m8_2 [cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="GDAXFill.cs", label="return new CommandResultPacket(this, true);", prediction=70, span="32-32"];
m8_3 [cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="GDAXFill.cs", label="Exit QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29"];
m8_4 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="GDAXFill.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="515-515"];
m8_5 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="GDAXFill.cs", label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38"];
m8_6 [file="GDAXFill.cs", label="QuantConnect.Commands.LiquidateCommand", span=""];
m9_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m9_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="24-24"];
m9_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", color=green, community=0, file="GDAXTestHelpers.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Forex, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", prediction=71, span="26-27"];
m9_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="24-24"];
m9_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m9_21 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="38-38"];
m9_22 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=green, community=0, file="GDAXTestHelpers.cs", label="BindingFlags flags = BindingFlags.NonPublic | BindingFlags.Instance", prediction=72, span="40-40"];
m9_23 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=green, community=0, file="GDAXTestHelpers.cs", label="System.Globalization.CultureInfo culture = null", prediction=73, span="41-41"];
m9_24 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=green, community=0, file="GDAXTestHelpers.cs", label="MessageEventArgs args = (MessageEventArgs)Activator.CreateInstance(typeof(MessageEventArgs), flags, null, new object[]\r\n            {\r\n                Opcode.Text,\r\n                System.Text.Encoding.UTF8.GetBytes(json)\r\n            }, culture)", prediction=74, span="42-46"];
m9_25 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=green, community=0, file="GDAXTestHelpers.cs", label="return args;", prediction=75, span="48-48"];
m9_26 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="38-38"];
m9_27 [cluster="System.Text.Encoding.GetBytes(string)", file="GDAXTestHelpers.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m9_4 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m9_28 [cluster="System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="GDAXTestHelpers.cs", label="Entry System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m9_7 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m9_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="30-30"];
m9_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", color=green, community=0, file="GDAXTestHelpers.cs", label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", prediction=76, span="32-32"];
m9_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", color=green, community=0, file="GDAXTestHelpers.cs", label="unit.CachedOrderIDs.TryAdd(1, order)", prediction=76, span="33-33"];
m9_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", color=green, community=0, file="GDAXTestHelpers.cs", label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", prediction=76, span="34-34"];
m9_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="30-30"];
m9_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m9_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="18-18"];
m9_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", color=green, community=0, file="GDAXTestHelpers.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(), new Cash(CashBook.AccountCurrency, 1000, price), \r\n                new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", prediction=79, span="20-21"];
m9_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="18-18"];
m9_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m9_18 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m9_11 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m9_17 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m11_392 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Market.cs", label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="797-797"];
m11_393 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Market.cs", label="var md5 = MD5.Create()", span="799-799"];
m11_394 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Market.cs", label="return md5.ComputeHash(stream);", span="801-801"];
m11_395 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Market.cs", label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="797-797"];
m11_51 [cluster="System.Text.Encoding.GetByteCount(string)", file="Market.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m11_37 [cluster="System.Text.Encoding.GetBytes(string)", file="Market.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m11_8 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="Market.cs", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
m11_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Market.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="27-27"];
m11_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="Market.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", prediction=80, span="27-27"];
m11_2 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Alpha>)", file="Market.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Alpha>)", span="31-31"];
m11_5 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Market.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m11_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Alpha>)", file="Market.cs", label="return Enumerable.Empty<IPortfolioTarget>();", span="33-33"];
m11_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Alpha>)", file="Market.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Alpha>)", span="31-31"];
m11_6 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Market.cs", label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="44-44"];
m11_42 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Market.cs", label="Entry QuantConnect.Extensions.ToSHA256(string)", span="112-112"];
m11_45 [cluster="QuantConnect.Extensions.ToSHA256(string)", color=green, community=0, file="Market.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", prediction=81, span="116-116"];
m11_43 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Market.cs", label="var crypt = new SHA256Managed()", span="114-114"];
m11_44 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Market.cs", label="var hash = new StringBuilder()", span="115-115"];
m11_46 [cluster="QuantConnect.Extensions.ToSHA256(string)", color=green, community=0, file="Market.cs", label=crypto, prediction=82, span="117-117"];
m11_47 [cluster="QuantConnect.Extensions.ToSHA256(string)", color=green, community=0, file="Market.cs", label="hash.Append(theByte.ToString(''x2''))", prediction=83, span="119-119"];
m11_48 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Market.cs", label="return hash.ToString();", span="121-121"];
m11_49 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Market.cs", label="Exit QuantConnect.Extensions.ToSHA256(string)", span="112-112"];
m11_52 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="Market.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m11_27 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="Entry QuantConnect.Extensions.ToMD5(string)", span="96-96"];
m11_30 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="101-101"];
m11_32 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="builder.Append(t.ToString(''x2''))", span="102-102"];
m11_28 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="var builder = new StringBuilder()", span="98-98"];
m11_29 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="var md5Hash = MD5.Create()", span="99-99"];
m11_31 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label=data, span="102-102"];
m11_33 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="return builder.ToString();", span="104-104"];
m11_34 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Market.cs", label="Exit QuantConnect.Extensions.ToMD5(string)", span="96-96"];
m11_40 [cluster="System.Text.StringBuilder.Append(string)", file="Market.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_50 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="Market.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m11_41 [cluster="System.Text.StringBuilder.ToString()", file="Market.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_39 [cluster="byte.ToString(string)", file="Market.cs", label="Entry byte.ToString(string)", span="0-0"];
m11_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="Market.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m11_36 [cluster="System.Security.Cryptography.MD5.Create()", file="Market.cs", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
m11_396 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", file="Market.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0"];
m11_35 [cluster="System.Text.StringBuilder.StringBuilder()", file="Market.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_7 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="Market.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m13_32 [cluster="Unk.ExecuteOnProject", file="WebSocketWrapper.cs", label="Entry Unk.ExecuteOnProject", span=""];
m13_39 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="WebSocketWrapper.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m13_18 [cluster="System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", file="WebSocketWrapper.cs", label="Entry System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", span="0-0"];
m13_91 [cluster="System.Collections.Generic.List<T>.List()", file="WebSocketWrapper.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_38 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="WebSocketWrapper.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m13_29 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", span="117-117"];
m13_30 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", color=green, community=0, file="WebSocketWrapper.cs", label="ExecuteOnProject(sender, (selectedProjectName, files) =>\r\n            {\r\n                string message = string.Format(CultureInfo.CurrentCulture, ''Send for backtesting to project {0}, files: {1}'', selectedProjectName, string.Join('' '', files));\r\n                string title = ''SendToBacktesting'';\r\n\r\n                // Show a message box to prove we were here\r\n                VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST);\r\n            })", prediction=84, span="119-132"];
m13_31 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", span="117-117"];
m13_74 [cluster="Unk.ShowModal", file="WebSocketWrapper.cs", label="Entry Unk.ShowModal", span=""];
m13_77 [cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.AssociateProjectWith(string, System.Collections.Generic.List<string>)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.AssociateProjectWith(string, System.Collections.Generic.List<string>)", span="99-99"];
m13_79 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="159-159"];
m13_33 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="119-132"];
m13_34 [cluster="lambda expression", color=green, community=0, file="WebSocketWrapper.cs", label="string message = string.Format(CultureInfo.CurrentCulture, ''Send for backtesting to project {0}, files: {1}'', selectedProjectName, string.Join('' '', files))", prediction=85, span="121-121"];
m13_35 [cluster="lambda expression", color=green, community=0, file="WebSocketWrapper.cs", label="string title = ''SendToBacktesting''", prediction=86, span="122-122"];
m13_36 [cluster="lambda expression", file="WebSocketWrapper.cs", label="VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST)", span="125-131"];
m13_47 [cluster="lambda expression", file="WebSocketWrapper.cs", label="VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST)", span="143-149"];
m13_37 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="119-132"];
m13_45 [cluster="lambda expression", file="WebSocketWrapper.cs", label="string message = string.Format(CultureInfo.CurrentCulture, ''Save to project {0}, files {1}'', selectedProjectName, string.Join('' '', files))", span="139-139"];
m13_44 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="137-150"];
m13_46 [cluster="lambda expression", file="WebSocketWrapper.cs", label="string title = ''SaveToQuantConnect''", span="140-140"];
m13_48 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="137-150"];
m13_80 [cluster="lambda expression", file="WebSocketWrapper.cs", label="p.Name", span="159-159"];
m13_81 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="159-159"];
m13_73 [cluster="ProjectNameDialog.cstr", file="WebSocketWrapper.cs", label="Entry ProjectNameDialog.cstr", span=""];
m13_76 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", span="45-45"];
m13_13 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", span="81-81"];
m13_22 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="var menuCommandID = new CommandID(CommandSet, SaveToQuantConnectCommandId)", prediction=87, span="83-83"];
m13_23 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="OleMenuCommand oleMenuItem = new OleMenuCommand(new EventHandler(SaveToQuantConnectCallback), menuCommandID)", prediction=88, span="84-84"];
m13_24 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="commandService.AddCommand(oleMenuItem)", prediction=89, span="85-85"];
m13_25 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", span="81-81"];
m13_67 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="46-46"];
m13_71 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="178-178"];
m13_84 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="object[] selectedItems = (object[]) dte2.ToolWindows.SolutionExplorer.SelectedItems", span="183-183"];
m13_83 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="List<string> selectedFiles = new List<string>()", span="182-182"];
m13_85 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label=selectedItems, span="184-184"];
m13_82 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="var myCommand = sender as OleMenuCommand", span="180-180"];
m13_88 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="selectedFiles.Add(item.Name)", span="189-189"];
m13_89 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="return selectedFiles;", span="192-192"];
m13_86 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="selectedUIHierarchyItem.Object is EnvDTE.ProjectItem", span="186-186"];
m13_87 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="EnvDTE.ProjectItem item = selectedUIHierarchyItem.Object as EnvDTE.ProjectItem", span="188-188"];
m13_90 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="178-178"];
m13_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WebSocketWrapper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_72 [cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectNameForFiles(System.Collections.Generic.List<string>)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectNameForFiles(System.Collections.Generic.List<string>)", span="84-84"];
m13_70 [cluster="Unk.ToList", file="WebSocketWrapper.cs", label="Entry Unk.ToList", span=""];
m13_78 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="WebSocketWrapper.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m13_11 [cluster="System.IServiceProvider.GetService(System.Type)", file="WebSocketWrapper.cs", label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0"];
m13_92 [cluster="Unk.Add", file="WebSocketWrapper.cs", label="Entry Unk.Add", span=""];
m13_12 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", span="74-74"];
m13_14 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="var menuCommandID = new CommandID(CommandSet, SendForBacktestingCommandId)", prediction=90, span="76-76"];
m13_15 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="OleMenuCommand oleMenuItem = new OleMenuCommand(new EventHandler(SendForBacktestingCallback), menuCommandID)", prediction=91, span="77-77"];
m13_16 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="WebSocketWrapper.cs", label="commandService.AddCommand(oleMenuItem)", prediction=92, span="78-78"];
m13_17 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", span="74-74"];
m13_66 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="36-36"];
m13_75 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", span="40-40"];
m13_0 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="55-55"];
m13_1 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="package == null", prediction=93, span="57-57"];
m13_2 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="throw new ArgumentNullException(''package'');", prediction=94, span="59-59"];
m13_3 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="this.package = package", prediction=95, span="63-63"];
m13_4 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="this.dte2 = ServiceProvider.GetService(typeof(SDTE)) as DTE2", prediction=96, span="64-64"];
m13_5 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="OleMenuCommandService commandService = this.ServiceProvider.GetService(typeof(IMenuCommandService)) as OleMenuCommandService", prediction=97, span="66-66"];
m13_6 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="commandService != null", prediction=98, span="67-67"];
m13_7 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="RegisterSendForBacktesting(commandService)", prediction=97, span="69-69"];
m13_8 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="RegisterSaveToQuantConnect(commandService)", prediction=97, span="70-70"];
m13_9 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="55-55"];
m13_40 [cluster="Unk.ShowMessageBox", file="WebSocketWrapper.cs", label="Entry Unk.ShowMessageBox", span=""];
m13_41 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="135-135"];
m13_42 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="WebSocketWrapper.cs", label="ExecuteOnProject(sender, (selectedProjectName, files) =>\r\n            {\r\n                string message = string.Format(CultureInfo.CurrentCulture, ''Save to project {0}, files {1}'', selectedProjectName, string.Join('' '', files));\r\n                string title = ''SaveToQuantConnect'';\r\n\r\n                // Show a message box to prove we were here\r\n                VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST);\r\n            })", span="137-150"];
m13_43 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="135-135"];
m13_65 [cluster="QuantConnect.VisualStudioPlugin.LogInCommand.DoLogIn(System.IServiceProvider)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.LogInCommand.DoLogIn(System.IServiceProvider)", span="30-30"];
m13_26 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", span="112-112"];
m13_27 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", color=green, community=0, file="WebSocketWrapper.cs", label="Instance = new SolutionExplorerMenuCommand(package)", prediction=101, span="114-114"];
m13_28 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", span="112-112"];
m13_68 [cluster="QuantConnect.Api.Api.ListProjects()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Api.Api.ListProjects()", span="120-120"];
m13_21 [cluster="Unk.AddCommand", file="WebSocketWrapper.cs", label="Entry Unk.AddCommand", span=""];
m13_69 [cluster="Unk.Select", file="WebSocketWrapper.cs", label="Entry Unk.Select", span=""];
m13_20 [cluster="EventHandler.cstr", file="WebSocketWrapper.cs", label="Entry EventHandler.cstr", span=""];
m13_19 [cluster="OleMenuCommand.cstr", file="WebSocketWrapper.cs", label="Entry OleMenuCommand.cstr", span=""];
m13_49 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", span="153-153"];
m13_50 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="LogInCommand.DoLogIn(this.ServiceProvider)", span="155-155"];
m13_54 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="List<string> files = GetSelectedFiles(sender)", span="161-161"];
m13_55 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var suggestedProjectName = _projectFinder.ProjectNameForFiles(files)", span="162-162"];
m13_62 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="_projectFinder.AssociateProjectWith(selectedProjectName, files)", span="171-171"];
m13_51 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="157-157"];
m13_53 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var projectNames = projects.Select(p => p.Name).ToList()", span="159-159"];
m13_63 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="onProject.Invoke(selectedProjectName, files)", span="173-173"];
m13_56 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var projectNameDialog = new ProjectNameDialog(projectNames, suggestedProjectName)", span="163-163"];
m13_61 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var selectedProjectName = projectNameDialog.GetSelectedProjectName()", span="170-170"];
m13_52 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="var projects = api.ListProjects().Projects", span="158-158"];
m13_60 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="projectNameDialog.ProjectNameProvided()", span="168-168"];
m13_57 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="projectNameDialog.HasMinimizeButton = false", span="164-164"];
m13_58 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="projectNameDialog.HasMaximizeButton = false", span="165-165"];
m13_59 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="projectNameDialog.ShowModal()", span="166-166"];
m13_64 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="WebSocketWrapper.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", span="153-153"];
m13_93 [file="WebSocketWrapper.cs", label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", span=""];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_109 -> m0_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_112 -> m0_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_37 -> m0_39  [color=green, key=1, label=security, style=dashed];
m0_37 -> m0_40  [color=green, key=1, label=security, style=dashed];
m0_46 -> m0_60  [color=green, key=1, label=err, style=dashed];
m0_46 -> m0_61  [color=green, key=1, label=err, style=dashed];
m0_38 -> m0_43  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_38 -> m0_44  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_38 -> m0_46  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_41 -> m0_44  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_41 -> m0_46  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_42 -> m0_44  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_42 -> m0_46  [color=green, key=1, label=endOfDayEventTime, style=dashed];
m0_45 -> m0_57  [color=green, key=1, label=symbol, style=dashed];
m0_45 -> m0_58  [color=green, key=1, label=symbol, style=dashed];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_99 -> m0_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_102 -> m0_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_25 -> m0_119  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_69 -> m0_80  [color=green, key=1, label=sub, style=dashed];
m0_69 -> m0_83  [color=green, key=1, label=sub, style=dashed];
m0_69 -> m0_86  [color=green, key=1, label=sub, style=dashed];
m0_69 -> m0_90  [color=green, key=1, label=sub, style=dashed];
m0_70 -> m0_72  [color=green, key=1, label=security, style=dashed];
m0_70 -> m0_74  [color=green, key=1, label=security, style=dashed];
m0_70 -> m0_75  [color=green, key=1, label=security, style=dashed];
m0_125 -> m0_12  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_13  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_16  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_17  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_27  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_28  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_29  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_37  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_40  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_46  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_57  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_58  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_56  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_68  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_69  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_71  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_72  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_74  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_77  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_125 -> m0_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m0_126 -> m0_57  [color=green, key=1, label=symbol, style=dashed];
m0_126 -> m0_58  [color=green, key=1, label=symbol, style=dashed];
m2_0 -> m2_5  [color=green, key=1, label=string, style=dashed];
m2_2 -> m2_5  [color=green, key=1, label=statusBar, style=dashed];
m3_1 -> m3_8  [color=green, key=1, label=sma, style=dashed];
m3_1 -> m3_9  [color=green, key=1, label=sma, style=dashed];
m3_2 -> m3_5  [color=green, key=1, label=data, style=dashed];
m3_3 -> m3_9  [color=green, key=1, label=seen, style=dashed];
m3_3 -> m3_7  [color=green, key=1, label=seen, style=dashed];
m3_6 -> m3_8  [color=green, key=1, label=datum, style=dashed];
m3_4 -> m3_8  [color=green, key=1, label=i, style=dashed];
m3_4 -> m3_10  [color=green, key=1, label=i, style=dashed];
m3_10 -> m3_10  [color=green, key=1, label=i, style=dashed];
m3_23 -> m3_25  [color=green, key=1, label=sma, style=dashed];
m3_23 -> m3_26  [color=green, key=1, label=sma, style=dashed];
m3_23 -> m3_27  [color=green, key=1, label=sma, style=dashed];
m3_23 -> m3_28  [color=green, key=1, label=sma, style=dashed];
m8_6 -> m8_2  [color=green, key=1, label="QuantConnect.Commands.LiquidateCommand", style=dashed];
m9_12 -> m9_14  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_12 -> m9_15  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_13 -> m9_15  [color=green, key=1, label=order, style=dashed];
m11_392 -> m11_394  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_0 -> m11_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m11_1 -> m11_5  [color=green, key=1, label=oItem, style=dashed];
m11_4 -> m11_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_44 -> m11_47  [color=green, key=1, label=hash, style=dashed];
m11_44 -> m11_48  [color=darkseagreen4, key=1, label=hash, style=dashed];
m11_28 -> m11_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_28 -> m11_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m13_30 -> m13_33  [color=green, key=1, label="lambda expression", style=dashed];
m13_34 -> m13_36  [color=green, key=1, label=message, style=dashed];
m13_45 -> m13_47  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_13 -> m13_24  [color=green, key=1, label=OleMenuCommandService, style=dashed];
m13_83 -> m13_88  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m13_83 -> m13_89  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m13_12 -> m13_16  [color=green, key=1, label=OleMenuCommandService, style=dashed];
m13_5 -> m13_7  [color=green, key=1, label=commandService, style=dashed];
m13_5 -> m13_8  [color=green, key=1, label=commandService, style=dashed];
m13_42 -> m13_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_49 -> m13_63  [color=darkseagreen4, key=1, label="System.Action<string, System.Collections.Generic.List<string>>", style=dashed];
m13_54 -> m13_62  [color=darkseagreen4, key=1, label=files, style=dashed];
m13_54 -> m13_63  [color=darkseagreen4, key=1, label=files, style=dashed];
m13_53 -> m13_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_61 -> m13_63  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m13_58 -> m13_60  [color=darkseagreen4, key=1, label=projectNameDialog, style=dashed];
m13_93 -> m13_7  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m13_93 -> m13_8  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m13_93 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m13_93 -> m13_47  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m13_93 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m13_93 -> m13_62  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
}
