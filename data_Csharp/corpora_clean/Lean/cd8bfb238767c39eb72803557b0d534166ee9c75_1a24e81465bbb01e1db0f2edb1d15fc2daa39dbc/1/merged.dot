digraph  {
n0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="36-36", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
n1 [label="var configuration = request.Configuration", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
n2 [label="var sourceFactory = (BaseData) Activator.CreateInstance(request.Configuration.Type)", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
n3 [label="return (\r\n                from date in request.TradableDays\r\n                let source = sourceFactory.GetSource(configuration, date, false)\r\n                let factory = SubscriptionDataSourceReader.ForSource(source, configuration, date, false)\r\n                let coarseFundamentalForDate = factory.Read(source)\r\n                select new BaseDataCollection(date.AddDays(1), configuration.Symbol, coarseFundamentalForDate)\r\n                ).GetEnumerator();", span="41-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", color=red, community=0];
n5 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)"];
n4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="36-36", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
n6 [label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="157-157", cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n7 [label="Entry Unk.ForSource", span="", cluster="Unk.ForSource"];
n8 [label="Entry Unk.Read", span="", cluster="Unk.Read"];
n9 [label="Entry BaseDataCollection.cstr", span="", cluster="BaseDataCollection.cstr"];
n10 [label="Entry Unk.AddDays", span="", cluster="Unk.AddDays"];
n11 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator"];
d1 [label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="40-40", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.BaseDataCollectionSubscripionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0];
d20 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory", span=""];
d0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.BaseDataCollectionSubscripionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.BaseDataCollectionSubscripionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)"];
d2 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.BaseDataCollectionSubscripionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.BaseDataCollectionSubscripionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)"];
d4 [label="request.TradableDays", span="40-40", cluster="lambda expression", color=green, community=0];
d3 [label="Entry lambda expression", span="40-40", cluster="lambda expression"];
d5 [label="Exit lambda expression", span="40-40", cluster="lambda expression"];
d8 [label="var tradableDays = _tradableDaysProvider(request)", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", color=green, community=0];
d7 [label="var configuration = request.Configuration", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
d9 [label="var sourceFactory = (BaseData) Activator.CreateInstance(request.Configuration.Type)", span="52-52", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)"];
d12 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
d10 [label="return (\r\n                from date in tradableDays\r\n                let source = sourceFactory.GetSource(configuration, date, false)\r\n                let factory = SubscriptionDataSourceReader.ForSource(source, configuration, date, false)\r\n                let coarseFundamentalForDate = factory.Read(source)\r\n                select new BaseDataCollection(date.AddDays(1), configuration.Symbol, coarseFundamentalForDate)\r\n                ).GetEnumerator();", span="54-60", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", color=green, community=0];
m2_14 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, bool)", span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, bool)", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_11 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="70-70", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_12 [label="return new SubscriptionDataReader(request.Configuration, \r\n                request.StartTimeLocal, \r\n                request.EndTimeLocal, \r\n                _resultHandler, \r\n                _mapFileResolver,\r\n                _factorFileProvider, \r\n                _tradableDaysProvider(request), \r\n                _isLiveMode, \r\n                _includeAuxiliaryData\r\n                );", span="72-81", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_13 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="70-70", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_1 [label="_resultHandler = resultHandler", span="57-57", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_2 [label="_mapFileResolver = mapFileResolver", span="58-58", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_3 [label="_factorFileProvider = factorFileProvider", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_4 [label="_isLiveMode = isLiveMode", span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_5 [label="_includeAuxiliaryData = includeAuxiliaryData", span="61-61", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_6 [label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="62-62", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_7 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory.SubscriptionDataReaderSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, bool, bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_8 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_9 [label="request.TradableDays", span="62-62", cluster="lambda expression", color=green, community=0, file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_10 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
m2_16 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory", span="", file="SubscriptionDataReaderSubscriptionEnumeratorFactory.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
n0 -> n3  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
n0 -> d8  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
n0 -> d7  [key=0, style=solid];
n0 -> d9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=red, label=configuration];
n2 -> n3  [key=0, style=solid, color=red];
n2 -> n5  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n6  [key=2, style=dotted, color=red];
n3 -> n7  [key=2, style=dotted, color=red];
n3 -> n8  [key=2, style=dotted, color=red];
n3 -> n9  [key=2, style=dotted, color=red];
n3 -> n10  [key=2, style=dotted, color=red];
n3 -> n11  [key=2, style=dotted, color=red];
n3 -> n3  [key=1, style=dashed, color=red, label=date];
n4 -> n0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d4  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
d20 -> d1  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory"];
d20 -> d8  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscripionEnumeratorFactory"];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d0  [key=0, style=bold, color=blue];
d4 -> d5  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d5 -> d3  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid, color=green];
d8 -> d12  [key=2, style=dotted, color=green];
d8 -> d10  [key=1, style=dashed, color=green, label=tradableDays];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d10  [key=1, style=dashed, color=green, label=configuration];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> n5  [key=2, style=dotted];
d10 -> d10  [key=1, style=dashed, color=green, label=date];
d10 -> n4  [key=0, style=solid, color=green];
d10 -> n6  [key=2, style=dotted, color=green];
d10 -> n7  [key=2, style=dotted, color=green];
d10 -> n8  [key=2, style=dotted, color=green];
d10 -> n9  [key=2, style=dotted, color=green];
d10 -> n10  [key=2, style=dotted, color=green];
d10 -> n11  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_12 -> m2_14  [key=2, style=dotted, color=green];
m2_12 -> d12  [key=2, style=dotted, color=green];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_2  [key=1, style=dashed, color=green, label="QuantConnect.Data.Auxiliary.MapFileResolver"];
m2_0 -> m2_3  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IFactorFileProvider"];
m2_0 -> m2_4  [key=1, style=dashed, color=green, label=bool];
m2_0 -> m2_5  [key=1, style=dashed, color=green, label=bool];
m2_0 -> m2_6  [key=1, style=dashed, color=green, label="System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_9  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_16 -> m2_1  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_2  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_3  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_4  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_5  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_6  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
m2_16 -> m2_12  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.SubscriptionDataReaderSubscriptionEnumeratorFactory"];
}
