digraph  {
n0 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Entry QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23"];
n1 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="var std = new MeanAbsoluteDeviation(3)", span="26-26"];
n2 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="var reference = DateTime.MinValue", span="27-27"];
n14 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", span="32-32"];
n3 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="std.Update(reference.AddDays(1), 1m)", span="29-29"];
n4 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Assert.AreEqual(0m, std.Current.Value)", span="30-30"];
n5 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="std.Update(reference.AddDays(2), -1m)", span="32-32"];
n6 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Assert.AreEqual(1m, std.Current.Value)", span="33-33"];
n7 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="std.Update(reference.AddDays(3), 1m)", span="35-35"];
n8 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Assert.AreEqual(0.888888888888889m, Decimal.Round(std.Current.Value, 15))", span="36-36"];
n9 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="std.Update(reference.AddDays(4), -2m)", span="38-38"];
n10 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Assert.AreEqual(1.111111111111111m, Decimal.Round(std.Current.Value, 15))", span="39-39"];
n11 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="std.Update(reference.AddDays(5), 3m)", span="41-41"];
n12 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Assert.AreEqual(1.777777777777778m, Decimal.Round(std.Current.Value, 15))", span="42-42"];
n15 [cluster="System.DateTime.AddDays(double)", label="Entry System.DateTime.AddDays(double)", span="0-0"];
n16 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
n17 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n18 [cluster="decimal.Round(decimal, int)", label="Entry decimal.Round(decimal, int)", span="0-0"];
n13 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", label="Exit QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23"];
d62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", color=green, community=0, label="1: return true;", span="165-165"];
d61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="163-163"];
d63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="163-163"];
m0_6 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type)", file="Brokerage.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type)", span="0-0"];
m0_8 [cluster="System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="Brokerage.cs", label="Entry System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m0_7 [cluster="System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, string)", file="Brokerage.cs", label="Entry System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, string)", span="0-0"];
m0_0 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="Entry QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", span="31-31"];
m0_1 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="var parameter = Expression.Parameter(type)", span="33-33"];
m0_2 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="var property = Expression.PropertyOrField(parameter, propertyOrField)", span="34-34"];
m0_3 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="var lambda = Expression.Lambda(property, parameter)", span="35-35"];
m0_4 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="return lambda;", span="36-36"];
m0_5 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", file="Brokerage.cs", label="Exit QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", span="31-31"];
m0_9 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector<T, TProperty>(string)", file="Brokerage.cs", label="Entry QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector<T, TProperty>(string)", span="46-46"];
m0_10 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector<T, TProperty>(string)", file="Brokerage.cs", label="return (Expression<Func<T, TProperty>>) MakePropertyOrFieldSelector(typeof (T), propertyOrField);", span="48-48"];
m0_11 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector<T, TProperty>(string)", file="Brokerage.cs", label="Exit QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector<T, TProperty>(string)", span="46-46"];
m1_57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
m1_91 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Order queued", span="257-257"];
m1_92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="258-258"];
m1_93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", span="260-260"];
m1_94 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.CancelOrder(order)", span="262-262"];
m1_95 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="265-265"];
m1_96 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="270-270"];
m1_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
m1_88 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="390-390"];
m1_115 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
m1_51 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_112 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="335-335"];
m1_17 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="73-80"];
m1_19 [cluster="lambda expression", color=red, community=0, file="BrokerageTransactionHandler.cs", label="0: Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta))", span="79-79"];
m1_14 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(fill)", span="69-69"];
m1_18 [cluster="lambda expression", color=red, community=0, file="BrokerageTransactionHandler.cs", label="0: decimal delta = _algorithm.Portfolio.Cash - account.CashBalance", span="78-78"];
m1_13 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="67-70"];
m1_15 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="67-70"];
m1_20 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="73-80"];
m1_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m1_23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
m1_24 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_exitTriggered", span="111-111"];
m1_25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Order order", span="115-115"];
m1_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="166-166"];
m1_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orderQueue.TryDequeue(out order)", span="116-116"];
m1_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = false", span="118-118"];
m1_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = true", span="123-123"];
m1_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Direction == OrderDirection.Hold", span="126-126"];
m1_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="128-128"];
m1_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orders.TryAdd(order.Id, order)", span="131-131"];
m1_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="133-133"];
m1_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Status", span="139-139"];
m1_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleNewOrder(order)", span="142-142"];
m1_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleUpdatedOrder(order)", span="146-146"];
m1_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleCancelledOrder(order)", span="150-150"];
m1_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="159-159"];
m1_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Thread.Sleep(1)", span="119-119"];
m1_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.New", span="141-141"];
m1_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Update", span="145-145"];
m1_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Canceled", span="149-149"];
m1_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.None", span="154-154"];
m1_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Invalid", span="155-155"];
m1_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.PartiallyFilled", span="156-156"];
m1_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Filled", span="157-157"];
m1_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Submitted", span="158-158"];
m1_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="ProcessSynchronousEvents()", span="163-163"];
m1_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="IsActive = false", span="167-167"];
m1_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
m1_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
m1_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="_exitTriggered = true", span="183-183"];
m1_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
m1_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m1_56 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220"];
m1_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Order queued", span="222-222"];
m1_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="223-223"];
m1_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", span="225-225"];
m1_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.UpdateOrder(order)", span="226-226"];
m1_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="229-229"];
m1_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="234-234"];
m1_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220"];
m1_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
m1_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
m1_72 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
m1_90 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m1_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
m1_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryAdd(order.Id, order)", span="193-193"];
m1_64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!GetSufficientCapitalForOrder(order)", span="195-195"];
m1_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_brokerage.PlaceOrder(order)", span="201-201"];
m1_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Submitted", span="203-203"];
m1_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="207-207"];
m1_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="212-212"];
m1_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return;", span="197-197"];
m1_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
m1_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467"];
m1_52 [cluster="System.Threading.Thread.Sleep(int)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_114 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m1_21 [cluster="string.Format(string, object, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238"];
m1_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="241-241"];
m1_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="244-244"];
m1_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="245-245"];
m1_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return true;", span="248-248"];
m1_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return false;", span="246-246"];
m1_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238"];
m1_89 [cluster="string.Format(string, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_98 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
m1_22 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m1_16 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274"];
m1_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="277-277"];
m1_101 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="280-280"];
m1_103 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Status = fill.Status", span="285-285"];
m1_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="293-293"];
m1_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="295-295"];
m1_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status != OrderStatus.None", span="299-299"];
m1_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="302-302"];
m1_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.OnOrderEvent(fill)", span="306-306"];
m1_100 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order == null", span="278-278"];
m1_102 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="return;", span="281-281"];
m1_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="308-308"];
m1_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="310-310"];
m1_111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274"];
m1_81 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74"];
m1_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m1_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="brokerage == null", span="61-61"];
m1_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage = brokerage", span="66-66"];
m1_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=red, community=0, file="BrokerageTransactionHandler.cs", label="0: _brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                //_algorithm.Portfolio.SetCash(account.CashBalance);\r\n\r\n                // how close are we?\r\n                decimal delta = _algorithm.Portfolio.Cash - account.CashBalance;\r\n                Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta));\r\n            }", span="73-80"];
m1_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_algorithm = algorithm", span="84-84"];
m1_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orders = algorithm.Transactions.Orders", span="87-87"];
m1_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", span="88-88"];
m1_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderQueue = algorithm.Transactions.OrderQueue", span="89-89"];
m1_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentNullException(''brokerage'');", span="63-63"];
m1_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="67-70"];
m1_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="IsActive = true", span="82-82"];
m1_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m1_116 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m1_117 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_100 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62"];
m2_15 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="security.Holdings.AddNewSale(saleValue)", span="58-58"];
m2_16 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var order = new MarketOrder(security.Symbol, fill.FillQuantity, security.Time, type: security.Type) {Price = fill.FillPrice}", span="61-61"];
m2_17 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var feeThisOrder = Math.Abs(security.TransactionModel.GetOrderFee(security, order))", span="62-62"];
m2_55 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings > 0", span="156-156"];
m2_63 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="ForexPortfolioModel.cs", label="2: Log.Error(''ForexPortfolioManager.ProcessFill(orderEvent): '' + err.Message)", span="179-179"];
m2_71 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security = new Equity.Equity(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="336-336"];
m2_37 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings == 0", span="116-116"];
m2_38 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="averageHoldingsPrice = fill.FillPrice", span="119-119"];
m2_39 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings = fill.FillQuantity", span="120-120"];
m2_108 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="415-415"];
m2_106 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="400-400"];
m2_107 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="414-414"];
m2_110 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="418-418"];
m2_111 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="defaultQuoteCurrency = symbol.Value.Substring(3)", span="418-418"];
m2_112 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType, defaultQuoteCurrency)", span="419-419"];
m2_113 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="421-421"];
m2_114 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="422-422"];
m2_116 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="return CreateSecurity(type, securityPortfolioManager, subscriptionManager, exchangeHours, marketHoursDbEntry.DataTimeZone, symbolProperties, securityInitializer, symbol, resolution,\r\n                fillDataForward, leverage, extendedMarketHours, isInternalFeed, isCustomData, addToSymbolCache);", span="426-427"];
m2_109 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="417-417"];
m2_115 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="type = typeof(QuoteBar)", span="424-424"];
m2_117 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="400-400"];
m2_74 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SecurityType.Forex", span="343-343"];
m2_118 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153"];
m2_95 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="93-93"];
m2_76 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrency, out quoteCurrency)", span="347-347"];
m2_75 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="string baseCurrency, quoteCurrency", span="346-346"];
m2_5 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var quoteCash = portfolio.CashBook[quoteCurrency]", span="39-39"];
m2_6 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var closedPosition = false", span="42-42"];
m2_7 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var isLong = security.Holdings.IsLong", span="43-43"];
m2_8 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var isShort = security.Holdings.IsShort", span="44-44"];
m2_9 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="47-47"];
m2_73 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security = new Option.Option(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="340-340"];
m2_66 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SymbolCache.Set(symbol.Value, symbol)", span="326-326"];
m2_98 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="75-75"];
m2_102 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m2_0 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="26-26"];
m2_1 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="string baseCurrency", span="30-30"];
m2_2 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="string quoteCurrency", span="31-31"];
m2_3 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="Forex.DecomposeCurrencyPair(security.Symbol, out baseCurrency, out quoteCurrency)", span="32-32"];
m2_69 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="config.SecurityType", span="333-333"];
m2_70 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SecurityType.Equity", span="335-335"];
m2_10 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var quantityHoldings = (decimal)security.Holdings.Quantity", span="48-48"];
m2_36 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="portfolio.AddTransactionRecord(security.Time, lastTradeProfit - 2 * feeThisOrder)", span="110-110"];
m2_101 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m2_104 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", span="27-27"];
m2_11 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", span="49-49"];
m2_72 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SecurityType.Option", span="339-339"];
m2_51 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label=isShort, span="148-148"];
m2_47 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings < 0", span="136-136"];
m2_4 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var baseCash = portfolio.CashBook[baseCurrency]", span="37-37"];
m2_12 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var lastTradeProfit = 0m", span="51-51"];
m2_99 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="211-211"];
m2_21 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quoteCash.Quantity -= fill.FillQuantity*fill.FillPrice", span="67-67"];
m2_22 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="isLong && fill.Direction == OrderDirection.Sell", span="70-70"];
m2_23 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings >= fill.AbsoluteFillQuantity", span="73-73"];
m2_25 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", span="81-81"];
m2_26 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="closedPosition = true", span="83-83"];
m2_27 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="isShort && fill.Direction == OrderDirection.Buy", span="85-85"];
m2_48 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="averageHoldingsPrice = fill.FillPrice", span="139-139"];
m2_49 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings == 0", span="141-141"];
m2_50 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="averageHoldingsPrice = 0", span="143-143"];
m2_52 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="fill.Direction", span="151-151"];
m2_53 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="OrderDirection.Buy", span="153-153"];
m2_54 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings += fill.FillQuantity", span="155-155"];
m2_14 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="var saleValue = saleValueInQuoteCurrency*quoteCash.ConversionRate", span="57-57"];
m2_59 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="OrderDirection.Sell", span="167-167"];
m2_61 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings += fill.FillQuantity", span="172-172"];
m2_60 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="171-171"];
m2_62 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label=Exception, span="177-177"];
m2_29 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * fill.AbsoluteFillQuantity", span="91-91"];
m2_30 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="96-96"];
m2_31 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="closedPosition = true", span="98-98"];
m2_103 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="290-290"];
m2_119 [cluster="string.Substring(int)", file="ForexPortfolioModel.cs", label="Entry string.Substring(int)", span="0-0"];
m2_32 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label=closedPosition, span="102-102"];
m2_97 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
m2_77 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="!securityPortfolioManager.CashBook.ContainsKey(baseCurrency)", span="349-349"];
m2_18 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="security.Holdings.AddNewFee(feeThisOrder)", span="63-63"];
m2_19 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= feeThisOrder", span="64-64"];
m2_20 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="baseCash.Quantity += fill.FillQuantity", span="66-66"];
m2_40 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label=isLong, span="122-122"];
m2_41 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="fill.Direction", span="125-125"];
m2_42 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="OrderDirection.Buy", span="127-127"];
m2_43 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="129-129"];
m2_45 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="OrderDirection.Sell", span="134-134"];
m2_44 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings += fill.FillQuantity", span="131-131"];
m2_46 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="ForexPortfolioModel.cs", label="quantityHoldings += fill.FillQuantity", span="135-135"];
m2_64 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m2_56 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m2_57 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="ForexPortfolioModel.cs", label="return _securityManager.GetEnumerator();", span="230-230"];
m2_58 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m2_13 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="ForexPortfolioModel.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m2_24 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="ForexPortfolioModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m2_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ForexPortfolioModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m2_34 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="ForexPortfolioModel.cs", label="((IDictionary<Symbol, Security>)_securityManager).CopyTo(array, number)", span="135-135"];
m2_35 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m2_33 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m2_65 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label=addToSymbolCache, span="326-326"];
m2_105 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="526-526"];
m2_67 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var config = subscriptionManager.Add(factoryType, symbol, resolution, dataTimeZone, exchangeHours.TimeZone, isCustomData, fillDataForward,\r\n                extendedMarketHours, isInternalFeed, isFilteredSubscription)", span="329-330"];
m2_78 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="securityPortfolioManager.CashBook.Add(baseCurrency, 0, 0)", span="352-352"];
m2_120 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m2_94 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m2_79 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="354-354"];
m2_80 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="357-357"];
m2_81 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security = new Forex.Forex(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="359-359"];
m2_83 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="var quoteCurrency = symbolProperties.QuoteCurrency", span="365-365"];
m2_84 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="367-367"];
m2_85 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="370-370"];
m2_86 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security = new Cfd.Cfd(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="372-372"];
m2_88 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security = new Security(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="378-378"];
m2_89 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="securityInitializer.Initialize(security)", span="383-383"];
m2_90 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="leverage > 0", span="387-387"];
m2_91 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="security.SetLeverage(leverage)", span="389-389"];
m2_68 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="348-348"];
m2_82 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SecurityType.Cfd", span="363-363"];
m2_87 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="SecurityType.Base", span="377-377"];
m2_92 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="return security;", span="392-392"];
m2_93 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m2_96 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m2_121 [file="ForexPortfolioModel.cs", label="QuantConnect.Securities.SecurityManager", span=""];
m3_0 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m3_1 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m4_5 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="156-156"];
m4_6 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Symbol = symbol", span="158-158"];
m4_7 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="UnderlyingSymbol = underlyingSymbol", span="159-159"];
m4_8 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="156-156"];
m4_18 [cluster="string.Format(string, params object[])", file="InteractiveBrokersBrokerage.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_13 [cluster="QuantConnect.Data.Market.OptionContract.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.OptionContract.ToString()", span="177-177"];
m4_14 [cluster="QuantConnect.Data.Market.OptionContract.ToString()", file="InteractiveBrokersBrokerage.cs", label="return string.Format(''{0}{1}{2}{3:00000000}'', Symbol.ID.Symbol, Expiry.ToString(DateFormat.EightCharacter), Right.ToString()[0], Strike*1000m);", span="179-179"];
m4_15 [cluster="QuantConnect.Data.Market.OptionContract.ToString()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Data.Market.OptionContract.ToString()", span="177-177"];
m4_4 [cluster="QuantConnect.Data.Market.FirstOrderGreeks.FirstOrderGreeks()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.FirstOrderGreeks.FirstOrderGreeks()", span="89-89"];
m4_17 [cluster="System.Enum.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Enum.ToString()", span="0-0"];
m4_16 [cluster="System.DateTime.ToString(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_12 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m4_3 [cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", span="45-45"];
m4_9 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", span="166-166"];
m4_10 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="InteractiveBrokersBrokerage.cs", label="_optionPriceModelResult = new Lazy<OptionPriceModelResult>(optionPriceModelEvaluator)", span="168-168"];
m4_11 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", span="166-166"];
m4_0 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="29-29"];
m4_1 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="new OptionPriceModelResult(0m, new FirstOrderGreeks())", span="29-29"];
m4_2 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="29-29"];
m4_19 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Data.Market.OptionContract", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n14  [key=2, style=dotted];
n1 -> n3  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n4  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n6  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n7  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n8  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n10  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n11  [color=darkseagreen4, key=1, label=std, style=dashed];
n1 -> n12  [color=darkseagreen4, key=1, label=std, style=dashed];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [color=darkseagreen4, key=1, label=reference, style=dashed];
n2 -> n7  [color=darkseagreen4, key=1, label=reference, style=dashed];
n2 -> n9  [color=darkseagreen4, key=1, label=reference, style=dashed];
n2 -> n11  [color=darkseagreen4, key=1, label=reference, style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n15  [key=2, style=dotted];
n3 -> n16  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n17  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n15  [key=2, style=dotted];
n5 -> n16  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n17  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n15  [key=2, style=dotted];
n7 -> n16  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n18  [key=2, style=dotted];
n8 -> n17  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n9 -> n16  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n18  [key=2, style=dotted];
n10 -> n17  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n15  [key=2, style=dotted];
n11 -> n16  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n18  [key=2, style=dotted];
n12 -> n17  [key=2, style=dotted];
n13 -> n0  [color=blue, key=0, style=bold];
d62 -> d63  [color=green, key=0, style=solid];
d61 -> d62  [color=green, key=0, style=solid];
d63 -> d61  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_3  [color=darkorchid, key=3, label="method methodReturn System.Linq.Expressions.LambdaExpression MakePropertyOrFieldSelector", style=bold];
m0_0 -> m0_9  [color=darkorchid, key=3, label="Parameter variable string propertyOrField", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_0  [color=darkorchid, key=3, label="method methodReturn System.Linq.Expressions.Expression<System.Func<T, TProperty>> MakePropertyOrFieldSelector", style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_0  [key=2, style=dotted];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m1_57 -> m1_91  [key=0, style=solid];
m1_57 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_57 -> m1_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_91 -> m1_92  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_96  [key=0, style=solid];
m1_92 -> m1_80  [key=2, style=dotted];
m1_92 -> m1_92  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_97  [key=0, style=solid];
m1_94 -> m1_98  [key=2, style=dotted];
m1_95 -> m1_97  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_53  [key=2, style=dotted];
m1_97 -> m1_57  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [color=red, key=0, style=solid];
m1_17 -> m1_19  [color=red, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_19 -> m1_20  [color=red, key=0, style=solid];
m1_19 -> m1_21  [color=red, key=2, style=dotted];
m1_19 -> m1_22  [color=red, key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_18 -> m1_19  [color=red, key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_20 -> m1_17  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_48  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_22  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_29  [key=0, style=solid];
m1_26 -> m1_51  [key=2, style=dotted];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_33  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_40  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_26 -> m1_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_34  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_53  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_24  [key=0, style=solid];
m1_32 -> m1_54  [key=2, style=dotted];
m1_33 -> m1_24  [key=0, style=solid];
m1_33 -> m1_53  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [key=0, style=solid];
m1_34 -> m1_39  [key=0, style=solid];
m1_34 -> m1_41  [key=0, style=solid];
m1_36 -> m1_47  [key=0, style=solid];
m1_36 -> m1_55  [key=2, style=dotted];
m1_38 -> m1_47  [key=0, style=solid];
m1_38 -> m1_56  [key=2, style=dotted];
m1_40 -> m1_47  [key=0, style=solid];
m1_40 -> m1_57  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_53  [key=2, style=dotted];
m1_28 -> m1_24  [key=0, style=solid];
m1_28 -> m1_52  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_47 -> m1_24  [key=0, style=solid];
m1_47 -> m1_58  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_23  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_60  [color=blue, key=0, style=bold];
m1_56 -> m1_73  [key=0, style=solid];
m1_56 -> m1_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_56 -> m1_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_78  [key=0, style=solid];
m1_74 -> m1_80  [key=2, style=dotted];
m1_74 -> m1_74  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_79  [key=0, style=solid];
m1_76 -> m1_81  [key=2, style=dotted];
m1_77 -> m1_79  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_53  [key=2, style=dotted];
m1_79 -> m1_56  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_58  [color=blue, key=0, style=bold];
m1_55 -> m1_63  [key=0, style=solid];
m1_55 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_55 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_55 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_55 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_55 -> m1_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_69  [key=0, style=solid];
m1_63 -> m1_54  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_64 -> m1_71  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_66 -> m1_72  [key=2, style=dotted];
m1_67 -> m1_70  [key=0, style=solid];
m1_68 -> m1_70  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_53  [key=2, style=dotted];
m1_65 -> m1_70  [key=0, style=solid];
m1_70 -> m1_55  [color=blue, key=0, style=bold];
m1_71 -> m1_82  [key=0, style=solid];
m1_71 -> m1_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_71 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_71 -> m1_55  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_71 -> m1_85  [color=darkorchid, key=3, label="method methodReturn bool GetSufficientCapitalForOrder", style=bold];
m1_71 -> m1_86  [color=darkorchid, key=3, label="method methodReturn bool GetSufficientCapitalForOrder", style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_86  [key=0, style=solid];
m1_82 -> m1_88  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_89  [key=2, style=dotted];
m1_84 -> m1_90  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_85 -> m1_87  [key=0, style=solid];
m1_87 -> m1_71  [color=blue, key=0, style=bold];
m1_16 -> m1_99  [key=0, style=solid];
m1_16 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_103  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_105  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_16 -> m1_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_112  [key=2, style=dotted];
m1_99 -> m1_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_53  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_113  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_111  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_114  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_111  [key=0, style=solid];
m1_108 -> m1_115  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_103  [key=0, style=solid];
m1_102 -> m1_111  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_90  [key=2, style=dotted];
m1_111 -> m1_16  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_0 -> m1_5  [color=red, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_19  [color=red, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_18  [color=red, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_5 -> m1_19  [color=red, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_2 -> m1_11  [key=0, style=solid];
m1_2 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_116 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_5  [color=red, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_18  [color=red, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_116 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_117 -> m1_19  [color=red, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_68  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_69  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_70  [key=2, style=dotted];
m2_17 -> m2_71  [key=2, style=dotted];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=feeThisOrder, style=dashed];
m2_17 -> m2_36  [color=darkseagreen4, key=1, label=feeThisOrder, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [key=0, style=solid];
m2_63 -> m2_64  [color=green, key=0, style=solid];
m2_63 -> m2_76  [color=green, key=2, style=dotted];
m2_71 -> m2_89  [key=0, style=solid];
m2_71 -> m2_96  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_40  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_38 -> m2_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m2_38 -> m2_64  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_39 -> m2_62  [key=0, style=solid];
m2_39 -> m2_64  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_116  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_110  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_106 -> m2_112  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m2_106 -> m2_113  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m2_106 -> m2_114  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_106 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_118  [key=2, style=dotted];
m2_107 -> m2_116  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_119  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_120  [key=2, style=dotted];
m2_112 -> m2_116  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_116  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_64  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_112  [color=darkseagreen4, key=1, label=defaultQuoteCurrency, style=dashed];
m2_115 -> m2_116  [key=0, style=solid];
m2_117 -> m2_106  [color=blue, key=0, style=bold];
m2_74 -> m2_75  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_98  [key=2, style=dotted];
m2_76 -> m2_78  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m2_76 -> m2_79  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_76 -> m2_80  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_76 -> m2_81  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_5 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_5 -> m2_14  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m2_5 -> m2_21  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m2_5 -> m2_33  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_6  [color=darkorchid, key=3, label="Local variable bool closedPosition", style=bold];
m2_6 -> m2_32  [color=darkseagreen4, key=1, label=closedPosition, style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_11  [key=2, style=dotted];
m2_7 -> m2_12  [key=2, style=dotted];
m2_7 -> m2_40  [color=darkseagreen4, key=1, label=isLong, style=dashed];
m2_7 -> m2_22  [color=darkseagreen4, key=1, label=isLong, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_13  [key=2, style=dotted];
m2_8 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_51  [color=darkseagreen4, key=1, label=isShort, style=dashed];
m2_8 -> m2_27  [color=darkseagreen4, key=1, label=isShort, style=dashed];
m2_9 -> m2_5  [color=blue, key=0, style=bold];
m2_9 -> m2_64  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_24  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_25  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_29  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_30  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_43  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_9 -> m2_60  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_73 -> m2_89  [key=0, style=solid];
m2_73 -> m2_97  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_94  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_0 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_0 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_0 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_41  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_0 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_66  [key=2, style=dotted];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_72  [key=0, style=solid];
m2_69 -> m2_74  [key=0, style=solid];
m2_69 -> m2_82  [key=0, style=solid];
m2_69 -> m2_87  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_10 -> m2_64  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_44  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_23  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_25  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_37  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_43  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_10 -> m2_54  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_75  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_28  [color=darkseagreen4, key=1, label=absoluteHoldingsQuantity, style=dashed];
m2_11 -> m2_30  [color=darkseagreen4, key=1, label=absoluteHoldingsQuantity, style=dashed];
m2_72 -> m2_73  [key=0, style=solid];
m2_51 -> m2_62  [key=0, style=solid];
m2_51 -> m2_64  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_20  [color=darkseagreen4, key=1, label=baseCash, style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_12 -> m2_12  [color=darkorchid, key=3, label="Local variable decimal lastTradeProfit", style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_27  [key=0, style=solid];
m2_23 -> m2_21  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_26 -> m2_32  [key=0, style=solid];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_32  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_62  [key=0, style=solid];
m2_48 -> m2_64  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=2, style=dotted];
m2_49 -> m2_62  [key=0, style=solid];
m2_49 -> m2_64  [key=0, style=solid];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_50 -> m2_62  [key=0, style=solid];
m2_50 -> m2_64  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_59  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=2, style=dotted];
m2_54 -> m2_52  [color=blue, key=0, style=bold];
m2_54 -> m2_61  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_54 -> m2_60  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_54  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_14 -> m2_59  [key=0, style=solid];
m2_14 -> m2_61  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label=handler, style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [key=2, style=dotted];
m2_61 -> m2_64  [key=0, style=solid];
m2_61 -> m2_61  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=0, style=solid];
m2_60 -> m2_64  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_60 -> m2_60  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_62 -> m2_14  [color=blue, key=0, style=bold];
m2_62 -> m2_63  [color=green, key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_31 -> m2_29  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_37  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [key=0, style=solid];
m2_77 -> m2_99  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_72  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_40 -> m2_51  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_45  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_45  [key=0, style=solid];
m2_42 -> m2_47  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_13  [key=2, style=dotted];
m2_43 -> m2_14  [key=2, style=dotted];
m2_43 -> m2_64  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_43 -> m2_43  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_44 -> m2_46  [key=0, style=solid];
m2_44 -> m2_62  [key=0, style=solid];
m2_44 -> m2_64  [key=0, style=solid];
m2_44 -> m2_44  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_46 -> m2_40  [color=blue, key=0, style=bold];
m2_46 -> m2_64  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_46 -> m2_49  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_46 -> m2_46  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m2_46 -> m2_47  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_77  [key=2, style=dotted];
m2_64 -> m2_78  [key=2, style=dotted];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_64 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_64 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolProperties", style=dashed];
m2_64 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m2_64 -> m2_89  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m2_64 -> m2_90  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_64 -> m2_91  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_56 -> m2_62  [key=0, style=solid];
m2_56 -> m2_64  [key=0, style=solid];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_62  [key=0, style=solid];
m2_57 -> m2_64  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_55  [key=2, style=dotted];
m2_58 -> m2_62  [key=0, style=solid];
m2_58 -> m2_64  [key=0, style=solid];
m2_58 -> m2_60  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m2_58 -> m2_56  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_67  [key=2, style=dotted];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_73  [key=2, style=dotted];
m2_34 -> m2_36  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_74  [key=2, style=dotted];
m2_35 -> m2_33  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_33 -> m2_36  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_33 -> m2_33  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m2_65 -> m2_0  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_95  [key=2, style=dotted];
m2_67 -> m2_69  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_67 -> m2_71  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_67 -> m2_73  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_67 -> m2_81  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_67 -> m2_86  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_67 -> m2_88  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_100  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=0, style=solid];
m2_79 -> m2_99  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_100  [key=2, style=dotted];
m2_81 -> m2_89  [key=0, style=solid];
m2_81 -> m2_101  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_83 -> m2_86  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=0, style=solid];
m2_84 -> m2_99  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_100  [key=2, style=dotted];
m2_86 -> m2_89  [key=0, style=solid];
m2_86 -> m2_102  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_103  [key=2, style=dotted];
m2_88 -> m2_91  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_104  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_105  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_64  [color=blue, key=0, style=bold];
m2_96 -> m2_96  [color=darkorchid, key=3, label="Local variable bool closedPosition", style=bold];
m2_121 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m2_121 -> m2_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_5  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_14 -> m4_17  [key=2, style=dotted];
m4_14 -> m4_18  [key=2, style=dotted];
m4_15 -> m4_13  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=2, style=dotted];
m4_11 -> m4_9  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_19 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m4_19 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m4_19 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m4_19 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
}
