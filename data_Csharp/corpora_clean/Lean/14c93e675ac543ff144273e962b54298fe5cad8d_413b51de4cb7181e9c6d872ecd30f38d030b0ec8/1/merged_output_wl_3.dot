digraph  {
m1_60 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="1044-1044"];
m1_61 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="1044-1044"];
m1_62 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="1044-1044"];
m1_59 [cluster="Unk.ToArray", file="SubscriptionDataReader.cs", label="Entry Unk.ToArray", span=""];
m1_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m1_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="28-28"];
m1_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="31-31"];
m1_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="parameters.Algorithm == ''BasicTemplateIntrinioEconomicData''", span="39-39"];
m1_10 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="49-49"];
m1_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''forward-console-messages'', ''false'')", span="29-29"];
m1_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="34-34"];
m1_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="35-35"];
m1_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="36-36"];
m1_8 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="var intrinioCredentials = new Dictionary<string, string>\r\n                {\r\n                    {''intrinio-username'', ''121078c02c20a09aa5d9c541087e7fa4''},\r\n                    {''intrinio-password'', ''65be35238b14de4cd0afc0edf364efc3'' }\r\n                }", span="41-45"];
m1_9 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="QuantConnect.Configuration.Config.Set(''parameters'', JsonConvert.SerializeObject(intrinioCredentials))", span="46-46"];
m1_11 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m1_57 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m1_65 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Algorithm = algorithm", span="1056-1056"];
m1_66 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Statistics = statistics", span="1057-1057"];
m1_67 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Language = language", span="1058-1058"];
m1_68 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="1054-1054"];
m1_64 [cluster="Unk.SetName", file="SubscriptionDataReader.cs", label="Entry Unk.SetName", span=""];
m1_15 [cluster="Unk.Set", file="SubscriptionDataReader.cs", label="Entry Unk.Set", span=""];
m1_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m1_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75"];
m1_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m1_54 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CancelOpenOrdersRegressionAlgorithm'', cancelOpenOrdersRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CompositeAlphaModelFrameworkAlgorithm'', compositeAlphaModelFrameworkAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ScheduledUniverseSelectionModelRegressionAlgorithm'', scheduledUniverseSelectionModelRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''PairsTradingAlphaModelFrameworkAlgorithm'', pairsTradingAlphaModelFrameworkAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="960-1044"];
m1_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''3''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''245.773%''},\r\n                {''Drawdown'', ''2.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''1.599%''},\r\n                {''Sharpe Ratio'', ''4.164''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''73.258''},\r\n                {''Annual Standard Deviation'', ''0.196''},\r\n                {''Annual Variance'', ''0.038''},\r\n                {''Information Ratio'', ''4.109''},\r\n                {''Tracking Error'', ''0.196''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$9.27''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$167506.2210''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$26987.1134''},\r\n                {''Mean Population Estimated Insight Value'', ''$272.5971''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''},\r\n            }", span="100-134"];
m1_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m1_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m1_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m1_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m1_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m1_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m1_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m1_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m1_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m1_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m1_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387"];
m1_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m1_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''1.40%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''40.200%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.398%''},\r\n                {''Sharpe Ratio'', ''3.081''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.033''},\r\n                {''Beta'', ''19.088''},\r\n                {''Annual Standard Deviation'', ''0.096''},\r\n                {''Annual Variance'', ''0.009''},\r\n                {''Information Ratio'', ''2.905''},\r\n                {''Tracking Error'', ''0.096''},\r\n                {''Treynor Ratio'', ''0.016''},\r\n                {''Total Fees'', ''$2.00''},\r\n            }", span="412-433"];
m1_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m1_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m1_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m1_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SubscriptionDataReader.cs", label="0: var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m1_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m1_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m1_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m1_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m1_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m1_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m1_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m1_45 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.17%''},\r\n                {''Compounding Annual Return'', ''-99.993%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-2.577%''},\r\n                {''Sharpe Ratio'', ''-15.89''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-5.559''},\r\n                {''Beta'', ''333.506''},\r\n                {''Annual Standard Deviation'', ''0.205''},\r\n                {''Annual Variance'', ''0.042''},\r\n                {''Information Ratio'', ''-15.972''},\r\n                {''Tracking Error'', ''0.204''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$96.51''}\r\n            }", span="688-709"];
m1_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="711-732"];
m1_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="734-755"];
m1_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="757-791"];
m1_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$867862.6489''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$139822.3157''},\r\n                {''Mean Population Estimated Insight Value'', ''$46607.4386''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="793-827"];
m1_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var cancelOpenOrdersRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.339%''},\r\n                {''Sharpe Ratio'', ''-11.206''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-8.422''},\r\n                {''Beta'', ''610.348''},\r\n                {''Annual Standard Deviation'', ''0.375''},\r\n                {''Annual Variance'', ''0.141''},\r\n                {''Information Ratio'', ''-11.243''},\r\n                {''Tracking Error'', ''0.375''},\r\n                {''Treynor Ratio'', ''-0.007''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="829-850"];
m1_51 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var scheduledUniverseSelectionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''17''},\r\n                {''Average Win'', ''0.26%''},\r\n                {''Average Loss'', ''-0.11%''},\r\n                {''Compounding Annual Return'', ''26.961%''},\r\n                {''Drawdown'', ''0.700%''},\r\n                {''Expectancy'', ''1.895''},\r\n                {''Net Profit'', ''2.115%''},\r\n                {''Sharpe Ratio'', ''4.218''},\r\n                {''Loss Rate'', ''12%''},\r\n                {''Win Rate'', ''88%''},\r\n                {''Profit-Loss Ratio'', ''2.31''},\r\n                {''Alpha'', ''0.327''},\r\n                {''Beta'', ''-9.439''},\r\n                {''Annual Standard Deviation'', ''0.043''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''3.864''},\r\n                {''Tracking Error'', ''0.043''},\r\n                {''Treynor Ratio'', ''-0.019''},\r\n                {''Total Fees'', ''$0.00''},\r\n                {''Total Insights Generated'', ''54''},\r\n                {''Total Insights Closed'', ''48''},\r\n                {''Total Insights Analysis Completed'', ''46''},\r\n                {''Long Insight Count'', ''54''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''43.4783%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''65.5952%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="852-886"];
m1_52 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var compositeAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''288''},\r\n                {''Average Win'', ''0.07%''},\r\n                {''Average Loss'', ''-0.05%''},\r\n                {''Compounding Annual Return'', ''-95.659%''},\r\n                {''Drawdown'', ''4.100%''},\r\n                {''Expectancy'', ''-0.467''},\r\n                {''Net Profit'', ''-3.932%''},\r\n                {''Sharpe Ratio'', ''-23.357''},\r\n                {''Loss Rate'', ''79%''},\r\n                {''Win Rate'', ''21%''},\r\n                {''Profit-Loss Ratio'', ''1.51''},\r\n                {''Alpha'', ''-1.167''},\r\n                {''Beta'', ''-76.443''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''-23.448''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.026''},\r\n                {''Total Fees'', ''$1899.95''},\r\n                {''Total Insights Generated'', ''289''},\r\n                {''Total Insights Closed'', ''0''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''146''},\r\n                {''Short Insight Count'', ''143''},\r\n                {''Long/Short Ratio'', ''102.10%''},\r\n                {''Estimated Monthly Alpha Value'', ''$0''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$0''},\r\n                {''Mean Population Estimated Insight Value'', ''$0''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="888-922"];
m1_53 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="var pairsTradingAlphaModelFrameworkAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''2.18%''},\r\n                {''Average Loss'', ''-1.38%''},\r\n                {''Compounding Annual Return'', ''75.646%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0.290''},\r\n                {''Net Profit'', ''0.723%''},\r\n                {''Sharpe Ratio'', ''7.017''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''1.58''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''33.003''},\r\n                {''Annual Standard Deviation'', ''0.052''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0.052''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$70.58''},\r\n                {''Total Insights Generated'', ''4''},\r\n                {''Total Insights Closed'', ''4''},\r\n                {''Total Insights Analysis Completed'', ''4''},\r\n                {''Long Insight Count'', ''2''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$-1201.722''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$-193.6107''},\r\n                {''Mean Population Estimated Insight Value'', ''$-48.40268''},\r\n                {''Mean Population Direction'', ''50%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''3.8827%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="924-958"];
m1_55 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m1_56 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44"];
m1_63 [cluster="TestCaseData.cstr", file="SubscriptionDataReader.cs", label="Entry TestCaseData.cstr", span=""];
m1_58 [cluster="Unk.Select", file="SubscriptionDataReader.cs", label="Entry Unk.Select", span=""];
m1_14 [cluster="Unk.SerializeObject", file="SubscriptionDataReader.cs", label="Entry Unk.SerializeObject", span=""];
m1_12 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m1_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_69 [file="SubscriptionDataReader.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m2_12 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="110-110"];
m2_13 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Symbol = original.Symbol", span="112-112"];
m2_14 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Time = new DateTime(original.Time.Ticks)", span="113-113"];
m2_15 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="BidPrice = original.BidPrice", span="114-114"];
m2_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskPrice = original.AskPrice", span="115-115"];
m2_17 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exchange = original.Exchange", span="116-116"];
m2_18 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="SaleCondition = original.SaleCondition", span="117-117"];
m2_19 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Quantity = original.Quantity", span="118-118"];
m2_20 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Suspicious = original.Suspicious", span="119-119"];
m2_21 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="110-110"];
m2_51 [cluster="string.Split(params char[])", file="Tick.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_66 [cluster="System.Convert.ToInt32(string)", file="Tick.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m2_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="150-150"];
m2_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="152-152"];
m2_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Time = time", span="153-153"];
m2_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="154-154"];
m2_36 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Value = last", span="155-155"];
m2_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="157-157"];
m2_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="158-158"];
m2_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="156-156"];
m2_40 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="150-150"];
m2_22 [cluster="System.DateTime.DateTime(long)", file="Tick.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m2_54 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", span="184-184"];
m2_55 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="var csv = line.Split(',')", span="186-186"];
m2_57 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Symbol = symbol", span="188-188"];
m2_58 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Time = baseDate.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="189-189"];
m2_56 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="187-187"];
m2_59 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Value = csv[1].ToDecimal()/10000m", span="190-190"];
m2_61 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Quantity = Convert.ToInt32(csv[2])", span="192-192"];
m2_62 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3].Trim()", span="193-193"];
m2_63 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="194-194"];
m2_64 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Suspicious = Convert.ToInt32(csv[5]) == 1", span="195-195"];
m2_60 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="191-191"];
m2_65 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", span="184-184"];
m2_102 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="274-274"];
m2_103 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var dataType = TickType.Trade", span="276-276"];
m2_104 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="278-278"];
m2_107 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="config.SecurityType == SecurityType.Forex", span="285-285"];
m2_110 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var symbol = string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol", span="290-290"];
m2_111 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var source = Constants.DataFolder + config.SecurityType.ToString().ToLower()", span="291-291"];
m2_112 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="source += @''/'' + config.Resolution.ToString().ToLower() + @''/'' + symbol.ToLower() + @''/''", span="292-292"];
m2_113 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="source += date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="293-293"];
m2_105 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="281-281"];
m2_106 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var dateFormat = ''yyyyMMdd''", span="284-284"];
m2_108 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="dataType = TickType.Quote", span="287-287"];
m2_109 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="dateFormat = ''yyMMdd''", span="288-288"];
m2_114 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="294-294"];
m2_115 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="274-274"];
m2_67 [cluster="System.DateTime.AddMilliseconds(double)", file="Tick.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m2_96 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m2_97 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="256-256"];
m2_98 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="258-258"];
m2_100 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick(config, line, date);", span="264-264"];
m2_99 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick();", span="261-261"];
m2_101 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="256-256"];
m2_23 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="130-130"];
m2_24 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="132-132"];
m2_25 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Time = time", span="133-133"];
m2_26 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="134-134"];
m2_27 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Value = bid + (ask - bid) / 2", span="135-135"];
m2_29 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="137-137"];
m2_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="138-138"];
m2_28 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="136-136"];
m2_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="130-130"];
m2_120 [cluster="System.DateTime.ToString(string)", file="Tick.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m2_121 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="305-305"];
m2_122 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Value = lastTrade", span="307-307"];
m2_123 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bidPrice", span="308-308"];
m2_124 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = askPrice", span="309-309"];
m2_125 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Quantity = Convert.ToInt32(volume)", span="310-310"];
m2_126 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="305-305"];
m2_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="205-205"];
m2_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.Split(',')", span="209-209"];
m2_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="config.SecurityType", span="212-212"];
m2_74 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="215-215"];
m2_75 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="216-216"];
m2_76 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / 10000m)", span="217-217"];
m2_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="230-230"];
m2_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Quantity = Convert.ToInt32(csv[2])", span="220-220"];
m2_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv.Length > 3", span="221-221"];
m2_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3]", span="223-223"];
m2_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="224-224"];
m2_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = (csv[5] == ''1'')", span="225-225"];
m2_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="232-232"];
m2_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice = csv[1].ToDecimal()", span="233-233"];
m2_89 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice = csv[2].ToDecimal()", span="234-234"];
m2_73 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Equity", span="214-214"];
m2_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Forex", span="229-229"];
m2_77 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=red, community=0, file="Tick.cs", label="0: DataType = MarketDataType.Tick", span="218-218"];
m2_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="219-219"];
m2_91 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label=Exception, span="239-239"];
m2_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Quote", span="231-231"];
m2_90 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="235-235"];
m2_92 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Log.Error(''Error Generating Tick: '' + err.Message)", span="241-241"];
m2_93 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="205-205"];
m2_95 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="162-162"];
m2_119 [cluster="string.ToLower()", file="Tick.cs", label="Entry string.ToLower()", span="0-0"];
m2_52 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Tick.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m2_116 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m2_118 [cluster="System.Enum.ToString()", file="Tick.cs", label="Entry System.Enum.ToString()", span="0-0"];
m2_68 [cluster="string.ToDecimal()", file="Tick.cs", label="Entry string.ToDecimal()", span="161-161"];
m2_127 [cluster="System.Convert.ToInt32(decimal)", file="Tick.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m2_94 [cluster="System.Convert.ToInt64(string)", file="Tick.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m2_69 [cluster="string.Trim()", file="Tick.cs", label="Entry string.Trim()", span="0-0"];
m2_117 [cluster="string.IsNullOrEmpty(string)", file="Tick.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_41 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string)", span="166-166"];
m2_42 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="var csv = line.Split(',')", span="168-168"];
m2_44 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Symbol = symbol", span="170-170"];
m2_43 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="169-169"];
m2_45 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="171-171"];
m2_48 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="174-174"];
m2_49 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="175-175"];
m2_46 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="172-172"];
m2_47 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="TickType = TickType.Quote", span="173-173"];
m2_50 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string)", span="166-166"];
m2_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="93-93"];
m2_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Value = 0", span="95-95"];
m2_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Time = new DateTime()", span="96-96"];
m2_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="DataType = MarketDataType.Tick", span="97-97"];
m2_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Symbol = ''''", span="98-98"];
m2_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="TickType = TickType.Trade", span="99-99"];
m2_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Quantity = 0", span="100-100"];
m2_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exchange = ''''", span="101-101"];
m2_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="SaleCondition = ''''", span="102-102"];
m2_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Suspicious = false", span="103-103"];
m2_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="93-93"];
m2_11 [cluster="System.DateTime.DateTime()", file="Tick.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m2_128 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="318-318"];
m2_129 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="return new Tick(this);", span="320-320"];
m2_130 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="318-318"];
m2_53 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="Tick.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m2_131 [file="Tick.cs", label="QuantConnect.Data.Market.Tick", span=""];
m3_175 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385"];
m3_176 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="TradeBar.cs", label="MarketSimulation != null", span="388-388"];
m3_177 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="TradeBar.cs", label="MarketSimulation.SimulateMarketConditions(this, Algorithm)", span="389-389"];
m3_178 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="385-385"];
m3_153 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m3_168 [cluster="Unk.All", file="TradeBar.cs", label="Entry Unk.All", span=""];
m3_152 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m3_191 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m3_52 [cluster="QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.ParseForex<T>(QuantConnect.Data.SubscriptionDataConfig, string)", span="242-242"];
m3_48 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Log.Error(''DataModels: TradeBar(): Error Initializing - '' + config.SecurityType + '' - '' + err.Message + '' - '' + line)", span="187-187"];
m3_190 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="268-268"];
m3_156 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
m3_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label=_needsScanLock, span="193-193"];
m3_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: var orderId = order.Id.ToString()", span="203-203"];
m3_157 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
m3_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="208-208"];
m3_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: OnOrderEvent(canceled)", span="209-209"];
m3_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="211-211"];
m3_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
m3_84 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m3_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
m3_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=_needsScanLock, span="224-224"];
m3_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="!_needsScan", span="227-227"];
m3_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="return;", span="229-229"];
m3_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var stillNeedsScan = false", span="232-232"];
m3_90 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.OrderBy(x => x.Key)", span="235-235"];
m3_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var order = kvp.Value", span="237-237"];
m3_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order == null", span="238-238"];
m3_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="240-240"];
m3_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.TryRemove(kvp.Key, out order)", span="241-241"];
m3_25 [cluster="lambda expression", file="TradeBar.cs", label="x.Symbol", span="107-107"];
m3_198 [cluster="QuantConnect.Orders.Order.Clone()", file="TradeBar.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m3_169 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="235-235"];
m3_172 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="367-367"];
m3_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="111-111"];
m3_174 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="367-367"];
m3_173 [cluster="lambda expression", file="TradeBar.cs", label="x.Status.IsClosed()", span="367-367"];
m3_26 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="135-135"];
m3_170 [cluster="lambda expression", file="TradeBar.cs", label="x.Key", span="235-235"];
m3_171 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="235-235"];
m3_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: !order.BrokerId.Contains(orderId)", span="204-204"];
m3_148 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
m3_27 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Time = time", span="137-137"];
m3_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Symbol = symbol", span="138-138"];
m3_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Value = close", span="139-139"];
m3_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="High = high", span="141-141"];
m3_34 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Volume = volume", span="144-144"];
m3_35 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="145-145"];
m3_36 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="135-135"];
m3_41 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return new TradeBar();", span="169-169"];
m3_42 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="config.SecurityType", span="174-174"];
m3_37 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="159-159"];
m3_38 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="line == null", span="162-162"];
m3_39 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return null;", span="164-164"];
m3_33 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Close = close", span="143-143"];
m3_40 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label=isLiveMode, span="167-167"];
m3_43 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="SecurityType.Equity", span="177-177"];
m3_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Low = low", span="142-142"];
m3_44 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="return ParseEquity<TradeBar>(config, line, date);", span="178-178"];
m3_45 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TradeBar.cs", label="SecurityType.Forex", span="181-181"];
m3_5 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Open = 0", span="98-98"];
m3_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="High = 0", span="99-99"];
m3_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Low = 0", span="100-100"];
m3_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Close = 0", span="101-101"];
m3_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m3_151 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m3_130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.OptionExercise", span="331-331"];
m3_179 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
m3_51 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m3_55 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label=_needsScanLock, span="160-160"];
m3_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Order pending", span="162-162"];
m3_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="!_pending.TryGetValue(order.Id, out pending)", span="163-163"];
m3_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_needsScan = true", span="169-169"];
m3_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="SetPendingOrder(order)", span="170-170"];
m3_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var orderId = order.Id.ToString()", span="173-173"];
m3_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="!order.BrokerId.Contains(orderId)", span="174-174"];
m3_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId.Add(orderId)", span="174-174"];
m3_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="int orderFee = 0", span="177-177"];
m3_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="178-178"];
m3_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnOrderEvent(updated)", span="179-179"];
m3_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="181-181"];
m3_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="166-166"];
m3_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="156-156"];
m3_69 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="189-189"];
m3_46 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m3_49 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435"];
m3_50 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status.IsClosed()", span="245-245"];
m3_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.TryRemove(order.Id, out order)", span="248-248"];
m3_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="253-253"];
m3_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="stillNeedsScan = true", span="255-255"];
m3_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=green, community=0, file="TradeBar.cs", label="0: var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="259-259"];
m3_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Security security", span="261-261"];
m3_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="262-262"];
m3_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="264-264"];
m3_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="266-266"];
m3_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.TryRemove(order.Id, out order)", span="267-267"];
m3_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="272-272"];
m3_129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="328-328"];
m3_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="111-111"];
m3_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Time = new DateTime(original.Time.Ticks)", span="113-113"];
m3_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Symbol = original.Symbol", span="114-114"];
m3_167 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
m3_138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=fills, span="352-352"];
m3_143 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fills.All(x => x.Status.IsClosed())", span="367-367"];
m3_107 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="303-303"];
m3_110 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var dateFormat = ''yyyyMMdd''", span="311-311"];
m3_112 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="config.SecurityType == SecurityType.Forex", span="313-313"];
m3_114 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="dateFormat = ''yyMMdd''", span="316-316"];
m3_135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="340-341"];
m3_137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="348-349"];
m3_140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OnOrderEvent(fill)", span="358-358"];
m3_142 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OnOptionPositionAssigned(fill)", span="363-363"];
m3_144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.TryRemove(order.Id, out order)", span="369-369"];
m3_146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_needsScan = stillNeedsScan", span="378-378"];
m3_111 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var dataType = TickType.Trade", span="312-312"];
m3_117 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var symbolPath = (string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol).ToLower()", span="321-321"];
m3_119 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="config.Resolution == Resolution.Hour || config.Resolution == Resolution.Daily", span="324-324"];
m3_121 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="symbolPath = string.Empty", span="328-328"];
m3_123 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="332-332"];
m3_125 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="TradeBar.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m3_127 [cluster="string.ToLower()", file="TradeBar.cs", label="Entry string.ToLower()", span="0-0"];
m3_132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="333-333"];
m3_136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status = OrderStatus.Invalid", span="347-347"];
m3_139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="355-355"];
m3_141 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Type == OrderType.OptionExercise", span="361-361"];
m3_145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="stillNeedsScan = true", span="373-373"];
m3_116 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var resolutionPath = config.Resolution.ToString().ToLower()", span="320-320"];
m3_131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
m3_106 [cluster="System.Convert.ToInt32(decimal)", file="TradeBar.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m3_108 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label=isLiveMode, span="306-306"];
m3_115 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var securityTypePath = config.SecurityType.ToString().ToLower()", span="319-319"];
m3_109 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="308-308"];
m3_113 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="dataType = TickType.Quote", span="315-315"];
m3_134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Log.Error(err)", span="339-339"];
m3_118 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var filename = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="322-322"];
m3_120 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="filename = symbolPath + ''.zip''", span="327-327"];
m3_122 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="var source = Path.Combine(Constants.DataFolder, securityTypePath, resolutionPath, symbolPath, filename)", span="331-331"];
m3_124 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="303-303"];
m3_126 [cluster="System.Enum.ToString()", file="TradeBar.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_128 [cluster="string.IsNullOrEmpty(string)", file="TradeBar.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=Exception, span="337-337"];
m3_147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="222-222"];
m3_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Period = original.Period", span="121-121"];
m3_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: return false;", span="199-199"];
m3_155 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="387-387"];
m3_22 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Volume = original.Volume", span="120-120"];
m3_166 [cluster="decimal.SmartRounding()", file="TradeBar.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m3_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: Order pending", span="195-195"];
m3_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Volume = 0", span="102-102"];
m3_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Period = TimeSpan.FromMinutes(1)", span="103-103"];
m3_11 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="92-92"];
m3_12 [cluster="System.DateTime.DateTime()", file="TradeBar.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m3_180 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397"];
m3_181 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0.0m, 0.0m, Algorithm.UtcTime, ''Simulated option assignment'')", span="399-399"];
m3_186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="portfolioModel.ProcessFill(Algorithm.Portfolio, option, fill)", span="407-407"];
m3_187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="OnOptionPositionAssigned(fill)", span="410-410"];
m3_182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="var order = (OptionExerciseOrder)Order.CreateOrder(request)", span="400-400"];
m3_184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="402-402"];
m3_185 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label=fills, span="404-404"];
m3_183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="401-401"];
m3_188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="397-397"];
m3_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="DataType = MarketDataType.TradeBar", span="97-97"];
m3_0 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="92-92"];
m3_1 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Symbol = ''''", span="94-94"];
m3_2 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Time = new DateTime()", span="95-95"];
m3_3 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="TradeBar.cs", label="Value = 0", span="96-96"];
m3_54 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="TradeBar.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="405-405"];
m3_165 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m3_163 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TradeBar.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Value = original.Close", span="115-115"];
m3_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="TradeBar.cs", label="Open = open", span="140-140"];
m3_150 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="TradeBar.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m3_162 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m3_21 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Close = original.Close", span="119-119"];
m3_158 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
m3_189 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="TradeBar.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m3_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="0: order.BrokerId.Add(order.Id.ToString())", span="204-204"];
m3_74 [cluster="System.Convert.ToDecimal(string)", color=green, community=0, file="TradeBar.cs", label="0: Entry System.Convert.ToDecimal(string)", span="0-0"];
m3_79 [cluster="System.Convert.ToInt64(string)", color=green, community=0, file="TradeBar.cs", label="0: Entry System.Convert.ToInt64(string)", span="0-0"];
m3_71 [cluster="T.cstr", file="TradeBar.cs", label="Entry T.cstr", span=""];
m3_159 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
m3_164 [cluster="string.Format(string, object, object, object)", file="TradeBar.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m3_196 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_pending[order.Id] = order.Clone()", span="438-438"];
m3_197 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="435-435"];
m3_149 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m3_161 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
m3_154 [cluster="string.Format(string, object, object)", file="TradeBar.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_160 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="TradeBar.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
m3_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Open = original.Open", span="116-116"];
m3_19 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="High = original.High", span="117-117"];
m3_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="TradeBar.cs", label="Low = original.Low", span="118-118"];
m3_199 [file="TradeBar.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_61 -> m1_64  [key=2, style=dotted];
m1_62 -> m1_60  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_12  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_15  [key=2, style=dotted];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_57 -> m1_65  [key=0, style=solid];
m1_57 -> m1_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m1_57 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_57  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_13  [key=2, style=dotted];
m1_18 -> m1_54  [color=darkseagreen4, key=1, label=emptyStatistics, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_13  [key=2, style=dotted];
m1_19 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_54 -> m1_57  [key=2, style=dotted];
m1_54 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_13  [key=2, style=dotted];
m1_20 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_13  [key=2, style=dotted];
m1_21 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_13  [key=2, style=dotted];
m1_22 -> m1_54  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_13  [key=2, style=dotted];
m1_23 -> m1_54  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_13  [key=2, style=dotted];
m1_24 -> m1_54  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_13  [key=2, style=dotted];
m1_25 -> m1_54  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_13  [key=2, style=dotted];
m1_26 -> m1_54  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_13  [key=2, style=dotted];
m1_27 -> m1_54  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_13  [key=2, style=dotted];
m1_28 -> m1_54  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_13  [key=2, style=dotted];
m1_29 -> m1_54  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_13  [key=2, style=dotted];
m1_30 -> m1_54  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_54  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_13  [key=2, style=dotted];
m1_32 -> m1_54  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_13  [key=2, style=dotted];
m1_33 -> m1_54  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_13  [key=2, style=dotted];
m1_34 -> m1_54  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_13  [key=2, style=dotted];
m1_35 -> m1_54  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m1_36 -> m1_37  [color=red, key=0, style=solid];
m1_36 -> m1_13  [key=2, style=dotted];
m1_36 -> m1_54  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m1_37 -> m1_38  [color=red, key=0, style=solid];
m1_37 -> m1_13  [color=red, key=2, style=dotted];
m1_37 -> m1_54  [color=red, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_13  [key=2, style=dotted];
m1_38 -> m1_54  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_13  [key=2, style=dotted];
m1_39 -> m1_54  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_13  [key=2, style=dotted];
m1_40 -> m1_54  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_13  [key=2, style=dotted];
m1_41 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_13  [key=2, style=dotted];
m1_42 -> m1_54  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_13  [key=2, style=dotted];
m1_43 -> m1_54  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_13  [key=2, style=dotted];
m1_44 -> m1_54  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_13  [key=2, style=dotted];
m1_45 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_13  [key=2, style=dotted];
m1_46 -> m1_54  [color=darkseagreen4, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_13  [key=2, style=dotted];
m1_47 -> m1_54  [color=darkseagreen4, key=1, label=basicTemplateIntrinioEconomicData, style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_13  [key=2, style=dotted];
m1_48 -> m1_54  [color=darkseagreen4, key=1, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, style=dashed];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_13  [key=2, style=dotted];
m1_49 -> m1_54  [color=darkseagreen4, key=1, label=standardDeviationExecutionModelRegressionAlgorithmStatistics, style=dashed];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_13  [key=2, style=dotted];
m1_50 -> m1_54  [color=darkseagreen4, key=1, label=cancelOpenOrdersRegressionAlgorithmStatistics, style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_13  [key=2, style=dotted];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=scheduledUniverseSelectionModelRegressionAlgorithmStatistics, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_13  [key=2, style=dotted];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=compositeAlphaModelFrameworkAlgorithmStatistics, style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_13  [key=2, style=dotted];
m1_55 -> m1_17  [color=blue, key=0, style=bold];
m1_69 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m1_69 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m1_69 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_12 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_22  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_12  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_32 -> m2_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_32 -> m2_38  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_32 -> m2_39  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_40 -> m2_32  [color=blue, key=0, style=bold];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_54 -> m2_58  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_51  [key=2, style=dotted];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_55 -> m2_59  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_55 -> m2_61  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_55 -> m2_62  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_55 -> m2_63  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_55 -> m2_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_66  [key=2, style=dotted];
m2_58 -> m2_67  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_68  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_66  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_69  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_65 -> m2_54  [color=blue, key=0, style=bold];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_102 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_102 -> m2_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_102 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_102 -> m2_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_102 -> m2_113  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_113  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_106  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_117  [key=2, style=dotted];
m2_110 -> m2_112  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_118  [key=2, style=dotted];
m2_111 -> m2_119  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_118  [key=2, style=dotted];
m2_112 -> m2_119  [key=2, style=dotted];
m2_112 -> m2_112  [color=darkseagreen4, key=1, label=source, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_120  [key=2, style=dotted];
m2_113 -> m2_118  [key=2, style=dotted];
m2_113 -> m2_119  [key=2, style=dotted];
m2_113 -> m2_113  [color=darkseagreen4, key=1, label=source, style=dashed];
m2_105 -> m2_115  [key=0, style=solid];
m2_105 -> m2_116  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_113  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m2_106 -> m2_106  [color=darkorchid, key=3, label="Local variable string dateFormat", style=bold];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_113  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_113  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=2, style=dotted];
m2_115 -> m2_102  [color=blue, key=0, style=bold];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_70  [key=2, style=dotted];
m2_99 -> m2_101  [key=0, style=solid];
m2_99 -> m2_0  [key=2, style=dotted];
m2_101 -> m2_97  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_23 -> m2_27  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_23 -> m2_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_23 -> m2_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_31 -> m2_23  [color=blue, key=0, style=bold];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_123  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_121 -> m2_124  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_121 -> m2_125  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [key=2, style=dotted];
m2_126 -> m2_121  [color=blue, key=0, style=bold];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_70 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_70 -> m2_75  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_70 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_70 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_51  [key=2, style=dotted];
m2_71 -> m2_75  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_76  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_79  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_80  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_81  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_82  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_83  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_87  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_88  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_71 -> m2_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_84  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_94  [key=2, style=dotted];
m2_75 -> m2_67  [key=2, style=dotted];
m2_76 -> m2_77  [color=red, key=0, style=solid];
m2_76 -> m2_68  [key=2, style=dotted];
m2_76 -> m2_95  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_66  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_91  [key=0, style=solid];
m2_80 -> m2_93  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_91  [key=0, style=solid];
m2_83 -> m2_93  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_52  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_68  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_68  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_77 -> m2_78  [color=red, key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_96  [key=2, style=dotted];
m2_93 -> m2_70  [color=blue, key=0, style=bold];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_51  [key=2, style=dotted];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_42 -> m2_48  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_42 -> m2_49  [color=darkseagreen4, key=1, label=csv, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_52  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_53  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_53  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_50 -> m2_41  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_0  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_12  [key=2, style=dotted];
m2_130 -> m2_128  [color=blue, key=0, style=bold];
m2_131 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_77  [color=red, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_87  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_90  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_123  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m2_131 -> m2_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m3_175 -> m3_176  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_178  [key=0, style=solid];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_179  [key=2, style=dotted];
m3_178 -> m3_175  [color=blue, key=0, style=bold];
m3_52 -> m3_80  [key=0, style=solid];
m3_52 -> m3_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_52 -> m3_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_52 -> m3_37  [color=darkorchid, key=3, label="Parameter variable string line", style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_53  [key=2, style=dotted];
m3_72 -> m3_73  [color=green, key=0, style=solid];
m3_76 -> m3_77  [color=green, key=0, style=solid];
m3_76 -> m3_48  [color=green, key=2, style=dotted];
m3_80 -> m3_81  [color=green, key=0, style=solid];
m3_80 -> m3_71  [key=2, style=dotted];
m3_80 -> m3_54  [key=2, style=dotted];
m3_80 -> m3_83  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_84  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_85  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_86  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_87  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_88  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_89  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_91  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_92  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_93  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_80 -> m3_51  [color=green, key=2, style=dotted];
m3_81 -> m3_82  [color=green, key=0, style=solid];
m3_81 -> m3_72  [key=2, style=dotted];
m3_81 -> m3_83  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_84  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_85  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_86  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_87  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_88  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_90  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_91  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_92  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_81 -> m3_52  [color=green, key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_88  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_73  [key=2, style=dotted];
m3_83 -> m3_70  [color=blue, key=0, style=bold];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_74  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_74  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_74  [key=2, style=dotted];
m3_87 -> m3_93  [key=0, style=solid];
m3_87 -> m3_74  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_73  [key=2, style=dotted];
m3_88 -> m3_147  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_78  [key=2, style=dotted];
m3_89 -> m3_146  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_78  [key=2, style=dotted];
m3_90 -> m3_146  [key=0, style=solid];
m3_90 -> m3_21  [key=2, style=dotted];
m3_90 -> m3_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_78  [key=2, style=dotted];
m3_91 -> m3_99  [color=green, key=1, label=order, style=dashed];
m3_91 -> m3_91  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_91 -> m3_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_97  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_132  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_91 -> m3_144  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_78  [key=2, style=dotted];
m3_92 -> m3_95  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_93  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_93 -> m3_148  [key=2, style=dotted];
m3_94 -> m3_52  [color=blue, key=0, style=bold];
m3_94 -> m3_99  [color=green, key=1, label=order, style=dashed];
m3_94 -> m3_84  [key=2, style=dotted];
m3_94 -> m3_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_97  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_94  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_94 -> m3_90  [key=0, style=solid];
m3_94 -> m3_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_132  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_94 -> m3_144  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_172 -> m3_173  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_14  [color=blue, key=0, style=bold];
m3_174 -> m3_172  [color=blue, key=0, style=bold];
m3_173 -> m3_149  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_26 -> m3_24  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_26 -> m3_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_31  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_32  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_33  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_34  [color=darkseagreen4, key=1, label=long, style=dashed];
m3_26 -> m3_35  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_170  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m3_171 -> m3_169  [color=blue, key=0, style=bold];
m3_77 -> m3_78  [color=green, key=0, style=solid];
m3_77 -> m3_79  [color=green, key=0, style=solid];
m3_77 -> m3_49  [color=green, key=2, style=dotted];
m3_53 -> m3_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_60  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_31 -> m3_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_41  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_13  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_47  [key=2, style=dotted];
m3_36 -> m3_26  [color=blue, key=0, style=bold];
m3_41 -> m3_51  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_50  [key=0, style=solid];
m3_41 -> m3_0  [key=2, style=dotted];
m3_42 -> m3_52  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_45  [key=0, style=solid];
m3_37 -> m3_48  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m3_37 -> m3_40  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_37 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_37 -> m3_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_37 -> m3_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_37 -> m3_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_37 -> m3_51  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m3_37 -> m3_52  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m3_38 -> m3_49  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_40  [key=0, style=solid];
m3_39 -> m3_50  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_44  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=0, style=solid];
m3_43 -> m3_45  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_32 -> m3_46  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_50  [key=0, style=solid];
m3_44 -> m3_51  [key=2, style=dotted];
m3_45 -> m3_31  [color=blue, key=0, style=bold];
m3_45 -> m3_46  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_4  [key=2, style=dotted];
m3_8 -> m3_5  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_13 -> m3_9  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_51 -> m3_55  [key=0, style=solid];
m3_51 -> m3_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_51 -> m3_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_51 -> m3_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_51 -> m3_37  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_71  [key=2, style=dotted];
m3_55 -> m3_54  [key=2, style=dotted];
m3_55 -> m3_58  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_59  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_60  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_61  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_62  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_63  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_64  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_65  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_66  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_67  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_68  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_55 -> m3_69  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_72  [key=2, style=dotted];
m3_56 -> m3_58  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_59  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_60  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_61  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_62  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_63  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_67  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_56 -> m3_68  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_63  [key=0, style=solid];
m3_57 -> m3_59  [key=0, style=solid];
m3_57 -> m3_69  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_74  [key=2, style=dotted];
m3_59 -> m3_75  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_74  [key=2, style=dotted];
m3_60 -> m3_75  [key=2, style=dotted];
m3_60 -> m3_47  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_74  [key=2, style=dotted];
m3_61 -> m3_75  [key=2, style=dotted];
m3_61 -> m3_48  [key=2, style=dotted];
m3_61 -> m3_63  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m3_62 -> m3_68  [key=0, style=solid];
m3_62 -> m3_74  [key=2, style=dotted];
m3_62 -> m3_75  [key=2, style=dotted];
m3_62 -> m3_49  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_76  [key=2, style=dotted];
m3_63 -> m3_77  [key=2, style=dotted];
m3_63 -> m3_50  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_78  [key=2, style=dotted];
m3_64 -> m3_75  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_78  [key=2, style=dotted];
m3_65 -> m3_75  [key=2, style=dotted];
m3_65 -> m3_51  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_78  [key=2, style=dotted];
m3_66 -> m3_75  [key=2, style=dotted];
m3_66 -> m3_52  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_78  [key=2, style=dotted];
m3_67 -> m3_75  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_73  [key=2, style=dotted];
m3_58 -> m3_68  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_79  [key=2, style=dotted];
m3_68 -> m3_53  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_51  [color=blue, key=0, style=bold];
m3_70 -> m3_74  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_70 -> m3_76  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_70 -> m3_77  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_70 -> m3_78  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_70 -> m3_80  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_70 -> m3_71  [key=0, style=solid];
m3_46 -> m3_50  [key=0, style=solid];
m3_46 -> m3_52  [key=2, style=dotted];
m3_46 -> m3_19  [color=darkorchid, key=3, label="method methodReturn decimal GetAskPrice", style=bold];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_0  [key=2, style=dotted];
m3_49 -> m3_54  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_196  [key=0, style=solid];
m3_50 -> m3_37  [color=blue, key=0, style=bold];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_97  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_98  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_99  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_100  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_101  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_102  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_103  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_95 -> m3_149  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_98  [key=0, style=solid];
m3_96 -> m3_99  [color=green, key=1, label=order, style=dashed];
m3_96 -> m3_84  [key=2, style=dotted];
m3_96 -> m3_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_90  [key=0, style=solid];
m3_96 -> m3_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_132  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_96 -> m3_144  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_99  [color=green, key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_100  [key=0, style=solid];
m3_98 -> m3_90  [key=0, style=solid];
m3_98 -> m3_146  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m3_99 -> m3_100  [color=green, key=0, style=solid];
m3_99 -> m3_51  [color=green, key=2, style=dotted];
m3_99 -> m3_138  [color=green, key=1, label=fills, style=dashed];
m3_99 -> m3_143  [color=green, key=1, label=fills, style=dashed];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_105  [key=0, style=solid];
m3_101 -> m3_150  [key=2, style=dotted];
m3_101 -> m3_116  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_119  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_121  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_123  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_125  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_127  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_129  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_131  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_101 -> m3_137  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_106  [key=2, style=dotted];
m3_102 -> m3_148  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_51  [key=2, style=dotted];
m3_103 -> m3_52  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_84  [key=2, style=dotted];
m3_104 -> m3_90  [key=0, style=solid];
m3_104 -> m3_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_125  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_132  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_104 -> m3_144  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_105 -> m3_95  [color=blue, key=0, style=bold];
m3_105 -> m3_90  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_151  [key=2, style=dotted];
m3_129 -> m3_138  [key=0, style=solid];
m3_129 -> m3_133  [key=0, style=solid];
m3_129 -> m3_161  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_14 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_25  [key=2, style=dotted];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_143  [key=0, style=solid];
m3_138 -> m3_140  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_138 -> m3_142  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [key=0, style=solid];
m3_143 -> m3_168  [key=2, style=dotted];
m3_143 -> m3_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_115  [key=0, style=solid];
m3_107 -> m3_152  [key=2, style=dotted];
m3_107 -> m3_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_107 -> m3_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_107 -> m3_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_107 -> m3_118  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_107 -> m3_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_110 -> m3_84  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_118  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m3_110 -> m3_110  [color=darkorchid, key=3, label="Local variable string dateFormat", style=bold];
m3_112 -> m3_51  [key=2, style=dotted];
m3_112 -> m3_52  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_115  [key=0, style=solid];
m3_114 -> m3_90  [key=0, style=solid];
m3_114 -> m3_154  [key=2, style=dotted];
m3_114 -> m3_155  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_118  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m3_135 -> m3_138  [key=0, style=solid];
m3_135 -> m3_164  [key=2, style=dotted];
m3_135 -> m3_155  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_165  [key=2, style=dotted];
m3_137 -> m3_166  [key=2, style=dotted];
m3_137 -> m3_154  [key=2, style=dotted];
m3_137 -> m3_155  [key=2, style=dotted];
m3_140 -> m3_52  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_142 -> m3_138  [key=0, style=solid];
m3_142 -> m3_167  [key=2, style=dotted];
m3_144 -> m3_84  [key=2, style=dotted];
m3_144 -> m3_90  [key=0, style=solid];
m3_144 -> m3_144  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_146 -> m3_147  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_118  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_120  [key=0, style=solid];
m3_117 -> m3_122  [key=0, style=solid];
m3_117 -> m3_124  [key=0, style=solid];
m3_117 -> m3_126  [key=0, style=solid];
m3_117 -> m3_128  [key=0, style=solid];
m3_117 -> m3_130  [key=0, style=solid];
m3_117 -> m3_127  [key=2, style=dotted];
m3_119 -> m3_138  [key=0, style=solid];
m3_119 -> m3_133  [key=0, style=solid];
m3_119 -> m3_156  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_122  [key=0, style=solid];
m3_121 -> m3_138  [key=0, style=solid];
m3_121 -> m3_133  [key=0, style=solid];
m3_121 -> m3_157  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_123 -> m3_138  [key=0, style=solid];
m3_123 -> m3_133  [key=0, style=solid];
m3_123 -> m3_158  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=2, style=dotted];
m3_125 -> m3_138  [key=0, style=solid];
m3_125 -> m3_133  [key=0, style=solid];
m3_125 -> m3_159  [key=2, style=dotted];
m3_127 -> m3_138  [key=0, style=solid];
m3_127 -> m3_133  [key=0, style=solid];
m3_127 -> m3_160  [key=2, style=dotted];
m3_132 -> m3_138  [key=0, style=solid];
m3_132 -> m3_143  [color=darkseagreen4, key=1, label=fills, style=dashed];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_162  [key=2, style=dotted];
m3_132 -> m3_163  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_141  [key=0, style=solid];
m3_141 -> m3_138  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_145 -> m3_90  [key=0, style=solid];
m3_145 -> m3_146  [color=darkseagreen4, key=1, label=stillNeedsScan, style=dashed];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_119  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_121  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_123  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_125  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_127  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_129  [color=darkseagreen4, key=1, label=model, style=dashed];
m3_116 -> m3_126  [key=2, style=dotted];
m3_116 -> m3_122  [color=darkseagreen4, key=1, label=resolutionPath, style=dashed];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_131 -> m3_104  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_106 -> m3_107  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=0, style=solid];
m3_115 -> m3_136  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_126  [key=2, style=dotted];
m3_115 -> m3_127  [key=2, style=dotted];
m3_115 -> m3_122  [color=darkseagreen4, key=1, label=securityTypePath, style=dashed];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_124  [key=0, style=solid];
m3_109 -> m3_125  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_153  [key=2, style=dotted];
m3_113 -> m3_118  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_153  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_129  [key=2, style=dotted];
m3_118 -> m3_126  [key=2, style=dotted];
m3_118 -> m3_127  [key=2, style=dotted];
m3_118 -> m3_122  [color=darkseagreen4, key=1, label=filename, style=dashed];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [color=darkseagreen4, key=1, label=filename, style=dashed];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_130  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_107  [color=blue, key=0, style=bold];
m3_126 -> m3_127  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_147 -> m3_85  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_75 -> m3_83  [color=green, key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_73 -> m3_74  [color=green, key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation", style=dashed];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_0  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_4  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_186  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m3_180 -> m3_183  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m3_180 -> m3_184  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_189  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_191  [key=2, style=dotted];
m3_187 -> m3_185  [key=0, style=solid];
m3_187 -> m3_167  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_190  [key=2, style=dotted];
m3_184 -> m3_186  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m3_184 -> m3_185  [key=0, style=solid];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_187  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_185 -> m3_188  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_185  [color=darkseagreen4, key=1, label=fills, style=dashed];
m3_183 -> m3_162  [key=2, style=dotted];
m3_188 -> m3_180  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_46  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_78 -> m3_79  [color=green, key=0, style=solid];
m3_78 -> m3_48  [color=green, key=2, style=dotted];
m3_78 -> m3_50  [color=green, key=2, style=dotted];
m3_74 -> m3_75  [color=green, key=0, style=solid];
m3_74 -> m3_76  [color=green, key=0, style=solid];
m3_74 -> m3_84  [color=green, key=2, style=dotted];
m3_79 -> m3_80  [color=green, key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_46  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_198  [key=2, style=dotted];
m3_197 -> m3_47  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_22  [key=2, style=dotted];
m3_19 -> m3_23  [key=2, style=dotted];
m3_19 -> m3_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [key=0, style=solid];
m3_199 -> m3_74  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_80  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_81  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_99  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_57  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_94  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_97  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_104  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_114  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_146  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m3_199 -> m3_196  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
}
