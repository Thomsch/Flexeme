digraph  {
n19 [label="QuantConnect.Logging.ConsoleLogHandler", span=""];
n0 [label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="27-27", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()"];
n1 [label="_console = Console.Out", span="31-31", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()"];
n2 [label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="27-27", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()"];
n3 [label="Entry QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="38-38", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n4 [label="var original = Console.ForegroundColor", span="40-40", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n6 [label="_console.WriteLine(DateTime.Now.ToString(DateFormat) + '' ERROR:: '' + text)", span="42-42", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n5 [label="Console.ForegroundColor = ConsoleColor.Red", span="41-41", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n7 [label="Console.ForegroundColor = original", span="43-43", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n9 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n10 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)"];
n8 [label="Exit QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="38-38", cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)"];
n11 [label="Entry QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="50-50", cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)"];
n12 [label="_console.WriteLine(DateTime.Now.ToString(DateFormat) + '' DEBUGGING :: '' + text)", span="52-52", cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)"];
n13 [label="Exit QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="50-50", cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)"];
n14 [label="Entry QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="59-59", cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)"];
n15 [label="_console.WriteLine(DateTime.Now.ToString(DateFormat) + '' Trace:: '' + text)", span="61-61", cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)"];
n16 [label="Exit QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="59-59", cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)"];
n17 [label="Entry QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="68-68", cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()"];
n18 [label="Exit QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="68-68", cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()"];
m0_26 [label="raw.Status == ''rejected''", span="87-87", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_51 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="Program.cs"];
m0_69 [label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="Program.cs"];
m0_87 [label="Entry Unk.All", span="", cluster="Unk.All", file="Program.cs"];
m0_133 [label="Entry Unk.ConvertOrderStatus", span="", cluster="Unk.ConvertOrderStatus", file="Program.cs"];
m0_135 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Program.cs"];
m0_61 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Program.cs"];
m0_25 [label="return true;", span="84-84", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_167 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="Program.cs"];
m0_85 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Program.cs"];
m0_130 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="Program.cs"];
m0_169 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="434-434", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="Program.cs"];
m0_138 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="Program.cs"];
m0_88 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="Program.cs"];
m0_89 [label=a, span="158-158", cluster="lambda expression", file="Program.cs"];
m0_90 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="Program.cs"];
m0_139 [label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="224-224", cluster="lambda expression", file="Program.cs"];
m0_140 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="Program.cs"];
m0_70 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_71 [label="throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="134-134", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_72 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_48 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="Program.cs"];
m0_16 [label="GetAuthenticationToken(req)", span="70-70", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_57 [label="Entry Unk.GetAuthenticationToken", span="", cluster="Unk.GetAuthenticationToken", file="Program.cs"];
m0_97 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="175-175", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_98 [label="var list = new List<Order>()", span="177-177", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_99 [label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="179-179", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_120 [label="list.Add(order)", span="217-217", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_121 [label=list, span="220-220", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_126 [label="return list;", span="232-232", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_100 [label="GetAuthenticationToken(req)", span="180-180", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_101 [label="var response = RestClient.Execute(req)", span="181-181", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_102 [label="response.StatusCode != HttpStatusCode.OK", span="183-183", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_103 [label="throw new Exception($''GDAXBrokerage.GetOpenOrders: request failed: [{(int) response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="185-185", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_104 [label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="188-188", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_113 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                        ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="206-207", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_105 [label=orders, span="189-189", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_106 [label="Order order", span="191-191", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_107 [label="item.Type == ''market''", span="192-192", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_108 [label="order = new MarketOrder { Price = item.Price }", span="194-194", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_109 [label="item.Type == ''limit''", span="196-196", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_110 [label="order = new LimitOrder { LimitPrice = item.Price }", span="198-198", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_111 [label="item.Type == ''stop''", span="200-200", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_112 [label="order = new StopMarketOrder { StopPrice = item.Price }", span="202-202", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_114 [label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="211-211", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_115 [label="order.BrokerId = new List<string> { item.Id }", span="212-212", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_116 [label="order.Symbol = ConvertProductId(item.ProductId)", span="213-213", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_118 [label="order.Status = ConvertOrderStatus(item)", span="215-215", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_119 [label="order.Price = item.Price", span="216-216", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_117 [label="order.Time = DateTime.UtcNow", span="214-214", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_122 [label="item.Status.IsOpen()", span="222-222", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_123 [label="var cached = CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="224-224", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_125 [label="CachedOrderIDs[cached.First().Key] = item", span="227-227", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_124 [label="cached.Any()", span="225-225", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_127 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="175-175", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="Program.cs"];
m0_54 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="Program.cs"];
m0_0 [label="Entry QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", span="26-26", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_1 [label="args.Length != 2", span="29-29", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_4 [label="Environment.Exit(1)", span="33-33", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_5 [label="var dataDirectory = Config.Get(''data-directory'', ''../../../Data'')", span="39-39", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_6 [label="int divisor = int.Parse(Config.Get(''bitfinex-divisor'', ''100''))", span="40-40", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs", color=green, community=0];
m0_7 [label="string market = Market.Bitfinex", span="43-43", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs", color=green, community=0];
m0_8 [label="var downloader = new QuandlBitfinexDownloader(args[1], divisor)", span="44-44", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs", color=green, community=0];
m0_11 [label="var writer = new LeanDataWriter(Resolution.Daily, symbol, dataDirectory, TickType.Quote)", span="51-51", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_13 [label=Exception, span="55-55", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_22 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Program.cs"];
m0_28 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid, Message = errorMessage })", span="90-90", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_33 [label="CachedOrderIDs.ContainsKey(order.Id)", span="98-98", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_34 [label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="100-100", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_35 [label="order.BrokerId.Add(brokerId)", span="104-104", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_36 [label="CachedOrderIDs.TryAdd(order.Id, order)", span="105-105", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_37 [label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="109-109", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_38 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="112-112", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_39 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''Order completed successfully orderid:'' + order.Id))", span="113-113", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_42 [label="var message = $''Order failed, Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="119-119", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_43 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="120-120", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_2 [label="Console.WriteLine(''Usage: Downloader FROMDATE APIKEY'')", span="31-31", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", color=red, community=0, file="Program.cs"];
m0_3 [label="Console.WriteLine(''FROMDATE = yyyymmdd'')", span="32-32", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_15 [label="Exit QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", span="26-26", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_17 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)", file="Program.cs"];
m0_10 [label="var data = downloader.Get(symbol, Resolution.Daily, DateTime.ParseExact(args[0], ''yyyyMMdd'', CultureInfo.CurrentCulture), DateTime.UtcNow)", span="48-48", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_14 [label="Log.Error(err)", span="57-57", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_9 [label="var symbol = Symbol.Create(''BTCUSD'', SecurityType.Forex, market)", span="47-47", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_12 [label="writer.Write(data)", span="52-52", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.Program.Main(string[])", file="Program.cs"];
m0_18 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Program.cs"];
m0_19 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="Program.cs"];
m0_21 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Program.cs"];
m0_23 [label="Entry QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="50-50", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="Program.cs"];
m0_29 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, (int)response.StatusCode, errorMessage))", span="91-91", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_20 [label="Entry QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, int)", span="36-36", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, int)", file="Program.cs"];
m0_27 [label="var errorMessage = ''Reject reason: '' + raw.RejectReason", span="89-89", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_32 [label="var brokerId = raw.Id", span="97-97", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_24 [label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48", cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="Program.cs"];
m0_30 [label="UnlockStream()", span="93-93", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_31 [label="return true;", span="94-94", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_40 [label="UnlockStream()", span="115-115", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_41 [label="return true;", span="116-116", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_44 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, -1, message))", span="121-121", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_45 [label="UnlockStream()", span="123-123", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_46 [label="return true;", span="124-124", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_47 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="40-40", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_49 [label="Entry RestRequest.cstr", span="", cluster="RestRequest.cstr", file="Program.cs"];
m0_50 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="Program.cs"];
m0_65 [label="Entry BrokerageMessageEvent.cstr", span="", cluster="BrokerageMessageEvent.cstr", file="Program.cs"];
m0_95 [label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()", span="219-219", cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()", file="Program.cs"];
m0_128 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="Program.cs"];
m0_168 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Program.cs"];
m0_68 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Program.cs"];
m0_56 [label="Entry Unk.AddJsonBody", span="", cluster="Unk.AddJsonBody", file="Program.cs"];
m0_59 [label="Entry Unk.>", span="", cluster="Unk.>", file="Program.cs"];
m0_53 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="Program.cs"];
m0_74 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="142-142", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_75 [label="var success = new List<bool>()", span="144-144", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_76 [label="order.BrokerId", span="146-146", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_82 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Canceled })", span="154-154", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_80 [label="success.Add(response.StatusCode == HttpStatusCode.OK)", span="151-151", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_83 [label="return success.All(a => a);", span="158-158", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_77 [label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="148-148", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_78 [label="GetAuthenticationToken(req)", span="149-149", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_79 [label="var response = RestClient.Execute(req)", span="150-150", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_81 [label="response.StatusCode == HttpStatusCode.OK", span="152-152", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_84 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="142-142", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Program.cs"];
m0_96 [label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45", cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="Program.cs"];
m0_129 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="Program.cs"];
m0_67 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="Program.cs"];
m0_142 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="Program.cs"];
m0_143 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="240-240", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="Program.cs"];
m0_144 [label="return new List<Holding>();", span="247-247", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="Program.cs"];
m0_145 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="240-240", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="Program.cs"];
m0_52 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="Program.cs"];
m0_63 [label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170", cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Program.cs"];
m0_91 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="164-164", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="Program.cs"];
m0_92 [label="base.Disconnect()", span="166-166", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="Program.cs"];
m0_93 [label="WebSocket.Close()", span="168-168", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="Program.cs"];
m0_94 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="164-164", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="Program.cs"];
m0_136 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Program.cs"];
m0_166 [label="Entry Unk.GetConversionRate", span="", cluster="Unk.GetConversionRate", file="Program.cs"];
m0_170 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="298-298", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_171 [label="var gdaxOrderProperties = order.Properties as GDAXOrderProperties", span="300-300", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_172 [label="order.Type == OrderType.Limit && gdaxOrderProperties?.PostOnly == true", span="301-301", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_175 [label="order.BrokerId", span="308-308", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_173 [label="return 0m;", span="303-303", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_174 [label="var totalFee = 0m", span="306-306", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_182 [label="totalFee += (decimal)fill.fill_fees", span="321-321", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_183 [label="return totalFee;", span="324-324", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_176 [label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="310-310", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_177 [label="GetAuthenticationToken(req)", span="311-311", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_178 [label="var response = RestClient.Execute(req)", span="312-312", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_179 [label="response.StatusCode != HttpStatusCode.OK", span="314-314", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_180 [label="throw new Exception($''GDAXBrokerage.GetFee: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="316-316", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_181 [label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="319-319", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_184 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="298-298", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="Program.cs"];
m0_58 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="Program.cs"];
m0_131 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="Program.cs"];
m0_66 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Program.cs"];
m0_64 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="107-107", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="Program.cs"];
m0_62 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="Program.cs"];
m0_146 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="254-254", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_147 [label="var list = new List<Cash>()", span="256-256", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_148 [label="var request = new RestRequest(''/accounts'', Method.GET)", span="258-258", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_156 [label="list.Add(new Cash(item.Currency, item.Balance, 1))", span="273-273", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_159 [label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, rate))", span="278-278", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_161 [label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="284-284", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_162 [label="return list;", span="289-289", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_149 [label="GetAuthenticationToken(request)", span="259-259", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_150 [label="var response = RestClient.Execute(request)", span="260-260", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_151 [label="response.StatusCode != HttpStatusCode.OK", span="262-262", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_152 [label="throw new Exception($''GDAXBrokerage.GetCashBalance: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="264-264", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_153 [label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="267-267", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_154 [label="item.Balance > 0", span="269-269", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_155 [label="item.Currency == ''USD''", span="271-271", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_157 [label="new[] {''GBP'', ''EUR''}.Contains(item.Currency)", span="275-275", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_158 [label="var rate = GetConversionRate(item.Currency)", span="277-277", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_160 [label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="282-282", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_163 [label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="254-254", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="Program.cs"];
m0_86 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Program.cs"];
m0_55 [label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127", cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="Program.cs"];
m0_165 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Program.cs"];
m0_134 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="Program.cs"];
m0_137 [label="Entry Unk.First", span="", cluster="Unk.First", file="Program.cs"];
m0_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Program.cs"];
m0_73 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="Program.cs"];
m0_164 [label="Entry Cash.cstr", span="", cluster="Cash.cstr", file="Program.cs"];
m0_60 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Program.cs"];
m0_132 [label="Entry Unk.ConvertProductId", span="", cluster="Unk.ConvertProductId", file="Program.cs"];
m0_185 [label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span="", file="Program.cs"];
m0_186 [label=item, span="", file="Program.cs"];
m1_22 [label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="120-120", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_32 [label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="152-152", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_152 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QuandlBitfinexDownloader.cs"];
m1_159 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="QuandlBitfinexDownloader.cs"];
m1_167 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="QuandlBitfinexDownloader.cs"];
m1_142 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Lean.Engine.Server.ILeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QuandlBitfinexDownloader.cs"];
m1_28 [label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", span="133-141", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_185 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QuandlBitfinexDownloader.cs"];
m1_227 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="QuandlBitfinexDownloader.cs"];
m1_5 [label="resolution != Resolution.Daily", span="54-54", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_6 [label="throw new ArgumentException(''Only daily data is currently supported.'');", span="56-56", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", color=green, community=0, file="QuandlBitfinexDownloader.cs"];
m1_7 [label="string collapse = ''daily''", span="59-59", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", color=green, community=0, file="QuandlBitfinexDownloader.cs"];
m1_8 [label="var url = ''https://www.quandl.com/api/v3/datasets/BCHARTS/BITFINEXUSD.csv?order=asc&collapse='' + collapse + ''&api_key='' + _apiKey + ''&start_date=''\r\n                + startUtc.ToString(''yyyy-MM-dd'')", span="61-62", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_71 [label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManager, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="242-262", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_108 [label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="343-343", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_136 [label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_13 [label=header, span="72-72", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_14 [label="header = false", span="74-74", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_18 [label="System.Diagnostics.Debug.WriteLine(line[0])", span="94-94", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_21 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="QuandlBitfinexDownloader.cs"];
m1_24 [label="Entry System.Net.WebClient.DownloadString(string)", span="0-0", cluster="System.Net.WebClient.DownloadString(string)", file="QuandlBitfinexDownloader.cs"];
m1_30 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="QuandlBitfinexDownloader.cs"];
m1_31 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="QuandlBitfinexDownloader.cs"];
m1_39 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="163-163", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_44 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="171-171", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_53 [label="job is LiveNodePacket", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_57 [label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="195-195", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_60 [label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="200-200", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_69 [label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="234-234", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_76 [label="HandleAlgorithmError(job, algorithm.RunTimeError)", span="274-274", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_78 [label="HandleAlgorithmError(job, err)", span="280-280", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_109 [label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="344-347", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_110 [label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="349-349", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_9 [label="var cl = new WebClient()", span="63-63", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_70 [label="var isolator = new Isolator()", span="239-239", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_72 [label="!complete", span="264-264", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_107 [label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="342-342", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_133 [label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="392-392", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_135 [label="Log.Error(err, ''Error running algorithm'')", span="396-396", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_12 [label="data.Split('\n')", span="69-69", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_15 [label="string[] line = item.Split(',')", span="78-78", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_17 [label="var bar = new TradeBar\r\n                        {\r\n                            Time = DateTime.Parse(line[0]),\r\n                            Open = _useDivisor ? decimal.Parse(line[1]) / divisor : decimal.Parse(line[1]),\r\n                            High = _useDivisor ? decimal.Parse(line[2]) / divisor : decimal.Parse(line[2]),\r\n                            Low = _useDivisor ? decimal.Parse(line[3]) / divisor : decimal.Parse(line[3]),\r\n                            Close = _useDivisor ? decimal.Parse(line[4]) / divisor : decimal.Parse(line[4]),\r\n                            Value = _useDivisor ? decimal.Parse(line[7]) / divisor : decimal.Parse(line[7]),\r\n                            Volume = (long)(_useDivisor ? Math.Round(decimal.Parse(line[5]), 0) * divisor : Math.Round(decimal.Parse(line[5]), 0)),\r\n                            Symbol = symbol,\r\n                            DataType = MarketDataType.TradeBar,\r\n                            Period = new TimeSpan(24,0,0),\r\n                        }", span="81-93", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs", color=red, community=0];
m1_19 [label="yield return bar;", span="95-95", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_23 [label="Entry System.Net.WebClient.WebClient()", span="0-0", cluster="System.Net.WebClient.WebClient()", file="QuandlBitfinexDownloader.cs"];
m1_29 [label="Entry decimal.Parse(string)", span="0-0", cluster="decimal.Parse(string)", file="QuandlBitfinexDownloader.cs"];
m1_33 [label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader", span="", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_35 [label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="159-159", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_51 [label="algorithm != null && algorithm.HistoryProvider != null", span="182-182", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_52 [label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="184-184", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_58 [label="algorithm.SetLocked()", span="196-196", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_59 [label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="199-199", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_61 [label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="203-218", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_75 [label="algorithm.RunTimeError != null", span="272-272", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_79 [label="var trades = algorithm.TradeBuilder.ClosedTrades", span="285-285", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_95 [label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="316-316", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_96 [label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="317-317", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_98 [label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="320-321", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_99 [label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="324-326", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_100 [label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_101 [label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_102 [label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="331-331", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_104 [label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_20 [label="Exit QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="51-51", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="QuandlBitfinexDownloader.cs"];
m1_54 [label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_127 [label="brokerage != null", span="382-382", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_129 [label="brokerage.Disconnect()", span="385-385", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_25 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="QuandlBitfinexDownloader.cs"];
m1_27 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="QuandlBitfinexDownloader.cs"];
m1_55 [label=initializeComplete, span="189-189", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_36 [label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="160-160", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_38 [label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="162-162", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_40 [label=Exception, span="166-166", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_45 [label="Log.Trace(''JOB HANDLERS: '')", span="176-176", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_42 [label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="169-169", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_43 [label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="170-170", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_56 [label="var startTime = DateTime.Now", span="192-192", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_68 [label="threadRealTime.Start()", span="231-231", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_77 [label=Exception, span="277-277", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_81 [label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="287-287", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_82 [label="var holdings = new Dictionary<string, Holding>()", span="288-288", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_83 [label="var banner = new Dictionary<string, string>()", span="289-289", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_84 [label="var statisticsResults = new StatisticsResults()", span="290-290", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_111 [label=Exception, span="351-351", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_113 [label="_algorithmHandlers.Transactions.Exit()", span="357-357", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_10 [label="var data = cl.DownloadString(url)", span="66-66", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_121 [label="threadFeed != null && threadFeed.IsAlive", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_122 [label="threadFeed.Abort()", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_46 [label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="177-177", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_47 [label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="178-178", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_48 [label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="179-179", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_49 [label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="180-180", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_50 [label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="181-181", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_62 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="221-221", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_63 [label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="224-224", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_64 [label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="225-225", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_65 [label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="226-226", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_73 [label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="266-266", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_74 [label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="267-268", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_80 [label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="286-286", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_87 [label="SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="295-295", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_114 [label="_algorithmHandlers.DataFeed.Exit()", span="358-358", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_115 [label="_algorithmHandlers.RealTime.Exit()", span="359-359", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_118 [label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="367-371", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_130 [label="_algorithmHandlers.Setup != null", span="387-387", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_132 [label="_algorithmHandlers.Setup.Dispose()", span="390-390", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_92 [label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey) &&\r\n                                charts.ContainsKey(benchmarkKey) &&\r\n                                charts[benchmarkKey].Series.ContainsKey(benchmarkKey)", span="307-311", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_106 [label="Log.Error(err, ''Error generating statistics packet'')", span="338-338", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_134 [label=Exception, span="394-394", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_11 [label="bool header = true", span="68-68", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_16 [label="line.Count() == 8", span="79-79", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="QuandlBitfinexDownloader.cs"];
m1_125 [label="threadResults != null && threadResults.IsAlive", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_126 [label="threadResults.Abort()", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_34 [label="initializeComplete = false", span="157-157", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_94 [label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="315-315", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_97 [label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="318-318", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_93 [label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="314-314", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_103 [label="banner.Add(''Return'', netReturn.ToString(''P''))", span="332-332", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_105 [label=Exception, span="336-336", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_128 [label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="384-384", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_37 [label="Log.Error(''Engine.Run(): '' + errorMessage)", span="161-161", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_41 [label="Log.Error(err)", span="168-168", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_67 [label="threadTransactions.Start()", span="230-230", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_85 [label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="292-292", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_112 [label="Log.Error(err, ''Error sending analysis results'')", span="353-353", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_123 [label="threadTransactions != null && threadTransactions.IsAlive", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_124 [label="threadTransactions.Abort()", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_66 [label="threadFeed.Start()", span="229-229", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_86 [label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="293-293", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_88 [label="string strategyEquityKey = ''Strategy Equity''", span="301-301", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_117 [label="var ts = Stopwatch.StartNew()", span="366-366", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_120 [label="Log.Trace(''Waiting for threads to exit...'')", span="374-374", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_119 [label="Thread.Sleep(100)", span="373-373", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_131 [label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="389-389", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_89 [label="string equityKey = ''Equity''", span="302-302", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_90 [label="string dailyPerformanceKey = ''Daily Performance''", span="303-303", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_91 [label="string benchmarkKey = ''Benchmark''", span="304-304", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_116 [label="_algorithmHandlers.Results.Exit()", span="363-363", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="QuandlBitfinexDownloader.cs"];
m1_168 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()", file="QuandlBitfinexDownloader.cs"];
m1_172 [label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_234 [label="_algorithmHandlers.DataFeed != null", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_235 [label="_algorithmHandlers.DataFeed.Exit()", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_236 [label="_algorithmHandlers.Results != null", span="420-420", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_239 [label="_algorithmHandlers.Results.LogMessage(message)", span="424-424", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_240 [label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="425-425", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_241 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="426-426", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_233 [label="Log.Error(err, ''Breaking out of parent try catch:'')", span="418-418", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_237 [label="var message = ''Runtime Error: '' + err", span="422-422", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_238 [label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="423-423", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_242 [label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="QuandlBitfinexDownloader.cs"];
m1_4 [label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="QuandlBitfinexDownloader.cs"];
m1_165 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="QuandlBitfinexDownloader.cs"];
m1_164 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QuandlBitfinexDownloader.cs"];
m1_204 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="QuandlBitfinexDownloader.cs"];
m1_260 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="QuandlBitfinexDownloader.cs"];
m1_181 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QuandlBitfinexDownloader.cs"];
m1_139 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="QuandlBitfinexDownloader.cs"];
m1_188 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="QuandlBitfinexDownloader.cs"];
m1_187 [label="Entry long.ToString(string)", span="0-0", cluster="long.ToString(string)", file="QuandlBitfinexDownloader.cs"];
m1_157 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_180 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="QuandlBitfinexDownloader.cs"];
m1_266 [label="Entry lambda expression", span="449-449", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_219 [label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManager, isolator.CancellationToken)", span="250-250", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_223 [label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="257-257", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_218 [label="Entry lambda expression", span="242-262", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_220 [label=Exception, span="252-252", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_225 [label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="261-261", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_222 [label="algorithm.RunTimeError = err", span="256-256", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_224 [label="return;", span="258-258", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_200 [label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="136-136", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_206 [label="algorithm.BrokerageMessageHandler.Handle(message)", span="205-205", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_207 [label="algorithm.OnBrokerageMessage(message)", span="208-208", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_210 [label="algorithm.OnBrokerageDisconnect()", span="212-212", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_212 [label="algorithm.OnBrokerageReconnect()", span="215-215", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_199 [label="Entry lambda expression", span="133-141", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_201 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="138-139", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_226 [label="Exit lambda expression", span="242-262", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_221 [label="Log.Error(err)", span="255-255", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_202 [label="Exit lambda expression", span="133-141", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_208 [label="message.Type", span="209-209", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_205 [label="Entry lambda expression", span="203-218", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_209 [label="BrokerageMessageType.Disconnect", span="211-211", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_213 [label="Exit lambda expression", span="203-218", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_211 [label="BrokerageMessageType.Reconnect", span="214-214", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_229 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_231 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_230 [label="x.Status.IsFill()", span="317-317", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_267 [label="x.Status.IsFill()", span="449-449", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_268 [label="Exit lambda expression", span="449-449", cluster="lambda expression", file="QuandlBitfinexDownloader.cs"];
m1_148 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="QuandlBitfinexDownloader.cs"];
m1_169 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="QuandlBitfinexDownloader.cs"];
m1_197 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="QuandlBitfinexDownloader.cs"];
m1_248 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="QuandlBitfinexDownloader.cs"];
m1_160 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="QuandlBitfinexDownloader.cs"];
m1_0 [label="Entry QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", span="37-37", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_1 [label="_apiKey = apiKey", span="39-39", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_2 [label="_useDivisor = useDivisor", span="40-40", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", file="QuandlBitfinexDownloader.cs", color=red, community=0];
m1_3 [label="Exit QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", span="37-37", cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader.QuandlBitfinexDownloader(string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_217 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="QuandlBitfinexDownloader.cs"];
m1_158 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_243 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="QuandlBitfinexDownloader.cs"];
m1_176 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="QuandlBitfinexDownloader.cs"];
m1_189 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="QuandlBitfinexDownloader.cs"];
m1_215 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QuandlBitfinexDownloader.cs"];
m1_144 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QuandlBitfinexDownloader.cs"];
m1_190 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="QuandlBitfinexDownloader.cs"];
m1_178 [label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_256 [label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="459-464", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_255 [label=orders, span="457-457", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_257 [label="writer.WriteLine(line)", span="465-465", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_250 [label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="449-449", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_251 [label="var path = Path.GetDirectoryName(csvFileName)", span="451-451", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_254 [label="var writer = new StreamWriter(csvFileName)", span="455-455", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_252 [label="path != null && !Directory.Exists(path)", span="452-452", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_253 [label="Directory.CreateDirectory(path)", span="453-453", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_258 [label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="QuandlBitfinexDownloader.cs"];
m1_137 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="QuandlBitfinexDownloader.cs"];
m1_163 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="QuandlBitfinexDownloader.cs"];
m1_161 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="QuandlBitfinexDownloader.cs"];
m1_171 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="QuandlBitfinexDownloader.cs"];
m1_198 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="QuandlBitfinexDownloader.cs"];
m1_162 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QuandlBitfinexDownloader.cs"];
m1_156 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="QuandlBitfinexDownloader.cs"];
m1_263 [label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(string)", file="QuandlBitfinexDownloader.cs"];
m1_145 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="QuandlBitfinexDownloader.cs"];
m1_261 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)", file="QuandlBitfinexDownloader.cs"];
m1_194 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="QuandlBitfinexDownloader.cs"];
m1_146 [label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="QuandlBitfinexDownloader.cs"];
m1_244 [label="historyProvider.IsNullOrEmpty()", span="435-435", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="QuandlBitfinexDownloader.cs"];
m1_246 [label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="439-439", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="QuandlBitfinexDownloader.cs"];
m1_245 [label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="437-437", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="QuandlBitfinexDownloader.cs"];
m1_247 [label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="QuandlBitfinexDownloader.cs"];
m1_232 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="QuandlBitfinexDownloader.cs"];
m1_228 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QuandlBitfinexDownloader.cs"];
m1_166 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="QuandlBitfinexDownloader.cs"];
m1_175 [label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55", cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="QuandlBitfinexDownloader.cs"];
m1_173 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="QuandlBitfinexDownloader.cs"];
m1_151 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="QuandlBitfinexDownloader.cs"];
m1_182 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="QuandlBitfinexDownloader.cs"];
m1_170 [label="Entry System.TimeSpan.ToString(string)", span="0-0", cluster="System.TimeSpan.ToString(string)", file="QuandlBitfinexDownloader.cs"];
m1_184 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="QuandlBitfinexDownloader.cs"];
m1_249 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="QuandlBitfinexDownloader.cs"];
m1_147 [label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="42-42", cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="QuandlBitfinexDownloader.cs"];
m1_138 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="QuandlBitfinexDownloader.cs"];
m1_179 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QuandlBitfinexDownloader.cs"];
m1_216 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="QuandlBitfinexDownloader.cs"];
m1_153 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="QuandlBitfinexDownloader.cs"];
m1_154 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QuandlBitfinexDownloader.cs"];
m1_259 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65", cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QuandlBitfinexDownloader.cs"];
m1_143 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="QuandlBitfinexDownloader.cs"];
m1_150 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="QuandlBitfinexDownloader.cs"];
m1_262 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="QuandlBitfinexDownloader.cs"];
m1_149 [label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45", cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="QuandlBitfinexDownloader.cs"];
m1_140 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="QuandlBitfinexDownloader.cs"];
m1_191 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="QuandlBitfinexDownloader.cs"];
m1_196 [label="Entry System.Threading.Thread.Abort()", span="0-0", cluster="System.Threading.Thread.Abort()", file="QuandlBitfinexDownloader.cs"];
m1_186 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="QuandlBitfinexDownloader.cs"];
m1_195 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="QuandlBitfinexDownloader.cs"];
m1_265 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="QuandlBitfinexDownloader.cs"];
m1_192 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="QuandlBitfinexDownloader.cs"];
m1_174 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QuandlBitfinexDownloader.cs"];
m1_214 [label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27", cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QuandlBitfinexDownloader.cs"];
m1_183 [label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40", cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="QuandlBitfinexDownloader.cs"];
m1_141 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="QuandlBitfinexDownloader.cs"];
m1_203 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="QuandlBitfinexDownloader.cs"];
m1_177 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="QuandlBitfinexDownloader.cs"];
m1_193 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="QuandlBitfinexDownloader.cs"];
m1_155 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="QuandlBitfinexDownloader.cs"];
m1_269 [label="QuantConnect.Lean.Engine.Engine", span="", file="QuandlBitfinexDownloader.cs"];
m1_270 [label=algorithm, span="", file="QuandlBitfinexDownloader.cs"];
m1_271 [label="QuantConnect.Packets.AlgorithmNodePacket", span="", file="QuandlBitfinexDownloader.cs"];
m1_272 [label=algorithmManager, span="", file="QuandlBitfinexDownloader.cs"];
m1_273 [label=isolator, span="", file="QuandlBitfinexDownloader.cs"];
n19 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Logging.ConsoleLogHandler"];
n19 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Logging.ConsoleLogHandler"];
n19 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Logging.ConsoleLogHandler"];
n19 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Logging.ConsoleLogHandler"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=1, style=dashed, color=darkseagreen4, label=original];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n6 -> n10  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n3  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n9  [key=2, style=dotted];
n12 -> n10  [key=2, style=dotted];
n13 -> n11  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n15 -> n10  [key=2, style=dotted];
n16 -> n14  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n17 -> n17  [key=3, color=green, style=bold, label="Field variable string Oanda"];
n18 -> n17  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_32  [key=0, style=solid];
m0_25 -> m0_47  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_88  [key=0, style=bold, color=blue];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_141  [key=2, style=dotted];
m0_139 -> m0_142  [key=2, style=dotted];
m0_139 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m0_140 -> m0_138  [key=0, style=bold, color=blue];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=2, style=dotted];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_57  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_85  [key=2, style=dotted];
m0_98 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_98 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_98 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_49  [key=2, style=dotted];
m0_99 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_120 -> m0_105  [key=0, style=solid];
m0_120 -> m0_86  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_126  [key=0, style=solid];
m0_121 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_121 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_121 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_126 -> m0_127  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_57  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_58  [key=2, style=dotted];
m0_101 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_101 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_101 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=0, style=solid];
m0_103 -> m0_127  [key=0, style=solid];
m0_103 -> m0_128  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_59  [key=2, style=dotted];
m0_113 -> m0_105  [key=0, style=solid];
m0_113 -> m0_65  [key=2, style=dotted];
m0_113 -> m0_63  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_121  [key=0, style=solid];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_105 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_106 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [key=0, style=solid];
m0_108 -> m0_114  [key=0, style=solid];
m0_108 -> m0_129  [key=2, style=dotted];
m0_108 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_108 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_108 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_108 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_108 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_108 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [key=0, style=solid];
m0_110 -> m0_114  [key=0, style=solid];
m0_110 -> m0_130  [key=2, style=dotted];
m0_110 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_110 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [key=0, style=solid];
m0_112 -> m0_131  [key=2, style=dotted];
m0_112 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_112 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_112 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_112 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_112 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_112 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=order];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_85  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_132  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_133  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_121  [key=0, style=solid];
m0_122 -> m0_134  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_135  [key=2, style=dotted];
m0_123 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_123 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=cached];
m0_125 -> m0_121  [key=0, style=solid];
m0_125 -> m0_137  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_121  [key=0, style=solid];
m0_124 -> m0_136  [key=2, style=dotted];
m0_127 -> m0_97  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_8  [key=1, style=dashed, color=green, label="string[]"];
m0_0 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_0 -> m0_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool PlaceOrder"];
m0_0 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_48  [key=2, style=dotted];
m0_1 -> m0_5  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_51  [key=2, style=dotted];
m0_4 -> m0_17  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_52  [key=2, style=dotted];
m0_5 -> m0_53  [key=2, style=dotted];
m0_5 -> m0_18  [key=2, style=dotted];
m0_5 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=dataDirectory];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_54  [key=2, style=dotted];
m0_6 -> m0_8  [key=1, style=dashed, color=green, label=divisor];
m0_6 -> m0_18  [key=2, style=dotted, color=green];
m0_6 -> m0_19  [key=2, style=dotted, color=green];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_9  [key=1, style=dashed, color=green, label=market];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_55  [key=2, style=dotted];
m0_8 -> m0_20  [key=2, style=dotted, color=green];
m0_8 -> m0_10  [key=1, style=dashed, color=green, label=downloader];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=orderProperties];
m0_11 -> m0_24  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_60  [key=2, style=dotted];
m0_22 -> m0_61  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_60  [key=2, style=dotted];
m0_28 -> m0_61  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_33 -> m0_66  [key=2, style=dotted];
m0_34 -> m0_37  [key=0, style=solid];
m0_34 -> m0_67  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_67  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_68  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_69  [key=2, style=dotted];
m0_37 -> m0_68  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_60  [key=2, style=dotted];
m0_38 -> m0_61  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_62  [key=2, style=dotted];
m0_39 -> m0_63  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_60  [key=2, style=dotted];
m0_43 -> m0_61  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> m0_49  [key=2, style=dotted, color=red];
m0_2 -> m0_15  [key=1, style=dashed, color=red, label=req];
m0_2 -> m0_16  [key=1, style=dashed, color=red, label=req];
m0_2 -> m0_17  [key=1, style=dashed, color=red, label=req];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_50  [key=2, style=dotted];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=payload];
m0_3 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_56  [key=2, style=dotted];
m0_15 -> m0_0  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_58  [key=2, style=dotted];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_17 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_17 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_17 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_17 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_22  [key=2, style=dotted];
m0_10 -> m0_23  [key=2, style=dotted];
m0_10 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_26  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=0, style=solid];
m0_12 -> m0_25  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_42  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_59  [key=2, style=dotted];
m0_19 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=raw];
m0_19 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=raw];
m0_19 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=raw];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_62  [key=2, style=dotted];
m0_23 -> m0_63  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_65  [key=2, style=dotted];
m0_29 -> m0_63  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
m0_32 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_64  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_64  [key=2, style=dotted];
m0_31 -> m0_47  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_64  [key=2, style=dotted];
m0_41 -> m0_47  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_62  [key=2, style=dotted];
m0_44 -> m0_63  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_64  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_0  [key=0, style=bold, color=blue];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_74 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_85  [key=2, style=dotted];
m0_75 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=success];
m0_75 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=success];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_83  [key=0, style=solid];
m0_82 -> m0_76  [key=0, style=solid];
m0_82 -> m0_60  [key=2, style=dotted];
m0_82 -> m0_61  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_86  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_87  [key=2, style=dotted];
m0_83 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_49  [key=2, style=dotted];
m0_77 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_57  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_58  [key=2, style=dotted];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_76  [key=0, style=solid];
m0_84 -> m0_74  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_85  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_96  [key=2, style=dotted];
m0_94 -> m0_91  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_170 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_170 -> m0_173  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetFee"];
m0_170 -> m0_174  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal GetFee"];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_183  [key=0, style=solid];
m0_173 -> m0_184  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_174 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_174 -> m0_173  [key=3, color=darkorchid, style=bold, label="Local variable decimal totalFee"];
m0_182 -> m0_175  [key=0, style=solid];
m0_182 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_182 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=totalFee];
m0_183 -> m0_184  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_49  [key=2, style=dotted];
m0_176 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=req];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_57  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_58  [key=2, style=dotted];
m0_178 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_178 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_181  [key=0, style=solid];
m0_180 -> m0_184  [key=0, style=solid];
m0_180 -> m0_128  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_59  [key=2, style=dotted];
m0_184 -> m0_170  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_85  [key=2, style=dotted];
m0_147 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_147 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_147 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_147 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_49  [key=2, style=dotted];
m0_148 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=request];
m0_156 -> m0_153  [key=0, style=solid];
m0_156 -> m0_164  [key=2, style=dotted];
m0_156 -> m0_86  [key=2, style=dotted];
m0_159 -> m0_153  [key=0, style=solid];
m0_159 -> m0_164  [key=2, style=dotted];
m0_159 -> m0_167  [key=2, style=dotted];
m0_159 -> m0_86  [key=2, style=dotted];
m0_161 -> m0_153  [key=0, style=solid];
m0_161 -> m0_164  [key=2, style=dotted];
m0_161 -> m0_167  [key=2, style=dotted];
m0_161 -> m0_86  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_57  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_58  [key=2, style=dotted];
m0_150 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_150 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=response];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [key=0, style=solid];
m0_152 -> m0_163  [key=0, style=solid];
m0_152 -> m0_128  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_162  [key=0, style=solid];
m0_153 -> m0_59  [key=2, style=dotted];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_153 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=item];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_153  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_157  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_160  [key=0, style=solid];
m0_157 -> m0_165  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_166  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_168  [key=2, style=dotted];
m0_160 -> m0_169  [key=2, style=dotted];
m0_163 -> m0_146  [key=0, style=bold, color=blue];
m0_185 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_185 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m0_186 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_144  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_152  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_149  [key=2, style=dotted];
m1_28 -> m1_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_7  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.AlgorithmManager"];
m1_5 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_5 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_20  [key=0, style=solid];
m1_6 -> m1_21  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_71  [key=1, style=dashed, color=green, label=algorithmManager];
m1_7 -> m1_219  [key=1, style=dashed, color=green, label=algorithmManager];
m1_7 -> m1_223  [key=1, style=dashed, color=green, label=algorithmManager];
m1_7 -> m1_108  [key=1, style=dashed, color=green, label=algorithmManager];
m1_7 -> m1_7  [key=3, color=darkorchid, style=bold, label="Local variable string collapse"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_22  [key=2, style=dotted];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=url];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_169  [key=2, style=dotted];
m1_71 -> m1_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_109  [key=0, style=solid];
m1_136 -> m1_5  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_137  [key=2, style=dotted];
m1_13 -> m1_15  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_138  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=solid];
m1_18 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_141  [key=2, style=dotted];
m1_18 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_18 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_143  [key=2, style=dotted];
m1_21 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=factory];
m1_21 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_21 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_146  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m1_24 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m1_24 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_150  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_151  [key=2, style=dotted];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m1_31 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_45  [key=0, style=solid];
m1_39 -> m1_156  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_156  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_160  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_163  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_166  [key=2, style=dotted];
m1_69 -> m1_167  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_79  [key=0, style=solid];
m1_76 -> m1_172  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_172  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_186  [key=2, style=dotted];
m1_109 -> m1_187  [key=2, style=dotted];
m1_109 -> m1_188  [key=2, style=dotted];
m1_109 -> m1_167  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_113  [key=0, style=solid];
m1_110 -> m1_189  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m1_9 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m1_9 -> m1_23  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
m1_70 -> m1_168  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_75  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=totalSeconds];
m1_133 -> m1_136  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_158  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_157  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_20  [key=0, style=solid];
m1_12 -> m1_25  [key=2, style=dotted];
m1_12 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_139  [key=2, style=dotted];
m1_15 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
m1_15 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
m1_15 -> m1_25  [key=2, style=dotted];
m1_15 -> m1_17  [key=1, style=dashed, color=red, label=line];
m1_15 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=line];
m1_17 -> m1_18  [key=0, style=solid, color=red];
m1_17 -> m1_27  [key=2, style=dotted, color=red];
m1_17 -> m1_28  [key=2, style=dotted, color=red];
m1_17 -> m1_29  [key=2, style=dotted, color=red];
m1_17 -> m1_30  [key=2, style=dotted, color=red];
m1_17 -> m1_31  [key=2, style=dotted, color=red];
m1_17 -> m1_19  [key=1, style=dashed, color=red, label=bar];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_142  [key=2, style=dotted];
m1_19 -> m1_12  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_145  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=0, style=solid];
m1_33 -> m1_45  [key=0, style=solid];
m1_33 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader"];
m1_33 -> m1_2  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader"];
m1_33 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader"];
m1_33 -> m1_17  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloader"];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_153  [key=2, style=dotted];
m1_51 -> m1_53  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_159  [key=2, style=dotted];
m1_52 -> m1_158  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_161  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_162  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m1_61 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m1_61 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_77  [key=0, style=solid];
m1_75 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=trades];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_180  [key=2, style=dotted];
m1_95 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=profitLoss];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_181  [key=2, style=dotted];
m1_96 -> m1_182  [key=2, style=dotted];
m1_96 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=totalTransactions];
m1_98 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_183  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=netReturn];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_184  [key=2, style=dotted];
m1_100 -> m1_185  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_184  [key=2, style=dotted];
m1_101 -> m1_185  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_184  [key=2, style=dotted];
m1_102 -> m1_185  [key=2, style=dotted];
m1_104 -> m1_107  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_184  [key=2, style=dotted];
m1_104 -> m1_185  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_4  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_147  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_159  [key=2, style=dotted];
m1_54 -> m1_158  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_130  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_197  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_148  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_116  [key=0, style=solid];
m1_36 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m1_36 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_153  [key=2, style=dotted];
m1_36 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_155  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_158  [key=2, style=dotted];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=runtimeMessage];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_155  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=startTime];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_140  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_81 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=orders];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_173  [key=2, style=dotted];
m1_82 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_174  [key=2, style=dotted];
m1_83 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_83 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_83 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_83 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_83 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_174  [key=2, style=dotted];
m1_83 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=banner];
m1_84 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_175  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_190  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m1_10 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m1_10 -> m1_24  [key=2, style=dotted];
m1_10 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_123  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_196  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_159  [key=2, style=dotted];
m1_46 -> m1_158  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_159  [key=2, style=dotted];
m1_47 -> m1_158  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_159  [key=2, style=dotted];
m1_48 -> m1_158  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_159  [key=2, style=dotted];
m1_49 -> m1_158  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_159  [key=2, style=dotted];
m1_50 -> m1_158  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_164  [key=2, style=dotted];
m1_63 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m1_63 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_165  [key=2, style=dotted];
m1_63 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_165  [key=2, style=dotted];
m1_64 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m1_64 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m1_64 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
m1_65 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=threadRealTime];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_165  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_170  [key=2, style=dotted];
m1_73 -> m1_154  [key=2, style=dotted];
m1_74 -> m1_79  [key=0, style=solid];
m1_74 -> m1_171  [key=2, style=dotted];
m1_74 -> m1_170  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_173  [key=2, style=dotted];
m1_80 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=charts];
m1_80 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=charts];
m1_80 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=charts];
m1_80 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=charts];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_178  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_191  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_192  [key=2, style=dotted];
m1_118 -> m1_121  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_130 -> m1_133  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_198  [key=2, style=dotted];
m1_92 -> m1_107  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_105  [key=0, style=solid];
m1_92 -> m1_179  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_157  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=header];
m1_11 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable bool header"];
m1_16 -> m1_17  [key=0, style=solid, color=red];
m1_16 -> m1_140  [key=2, style=dotted];
m1_16 -> m1_12  [key=0, style=solid];
m1_16 -> m1_26  [key=2, style=dotted];
m1_125 -> m1_127  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_196  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=performance];
m1_97 -> m1_98  [key=0, style=solid];
m1_93 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=equity];
m1_93 -> m1_94  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_184  [key=2, style=dotted];
m1_103 -> m1_185  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_158  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_154  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_157  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_140  [key=2, style=dotted];
m1_85 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=csvTransactionsFileName];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_176  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_157  [key=2, style=dotted];
m1_123 -> m1_125  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_196  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_140  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_86 -> m1_177  [key=2, style=dotted];
m1_88 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m1_88 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m1_88 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
m1_88 -> m1_89  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_194  [key=2, style=dotted];
m1_120 -> m1_118  [key=0, style=solid];
m1_120 -> m1_158  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_195  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_158  [key=2, style=dotted];
m1_89 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
m1_89 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
m1_90 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=benchmarkKey];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_193  [key=2, style=dotted];
m1_172 -> m1_233  [key=0, style=solid];
m1_172 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m1_172 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m1_172 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_236  [key=0, style=solid];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_191  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_242  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_243  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_155  [key=2, style=dotted];
m1_241 -> m1_156  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_157  [key=2, style=dotted];
m1_237 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_237 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_237 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=message];
m1_237 -> m1_238  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_158  [key=2, style=dotted];
m1_242 -> m1_172  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_19  [key=0, style=bold, color=crimson];
m1_4 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_4 -> m1_17  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_266 -> m1_267  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_225  [key=0, style=solid];
m1_219 -> m1_227  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_228  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_158  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_202  [key=0, style=solid];
m1_200 -> m1_203  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_214  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_215  [key=2, style=dotted];
m1_210 -> m1_213  [key=0, style=solid];
m1_210 -> m1_216  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_217  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_204  [key=2, style=dotted];
m1_201 -> m1_164  [key=2, style=dotted];
m1_226 -> m1_218  [key=0, style=bold, color=blue];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_157  [key=2, style=dotted];
m1_202 -> m1_199  [key=0, style=bold, color=blue];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_211  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m1_205 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m1_209 -> m1_210  [key=0, style=solid];
m1_213 -> m1_205  [key=0, style=bold, color=blue];
m1_211 -> m1_212  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_231 -> m1_229  [key=0, style=bold, color=blue];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_232  [key=2, style=dotted];
m1_267 -> m1_232  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_268 -> m1_266  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=red, label=bool];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_2 -> m1_3  [key=0, style=solid, color=red];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_178 -> m1_250  [key=0, style=solid];
m1_178 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_178 -> m1_254  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_256 -> m1_188  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> n9  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_258  [key=0, style=solid];
m1_257 -> m1_255  [key=0, style=solid];
m1_257 -> m1_265  [key=2, style=dotted];
m1_250 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=orders];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_259  [key=2, style=dotted];
m1_250 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_260  [key=2, style=dotted];
m1_251 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=path];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_254 -> m1_263  [key=2, style=dotted];
m1_252 -> m1_254  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_261  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_262  [key=2, style=dotted];
m1_258 -> m1_178  [key=0, style=bold, color=blue];
m1_146 -> m1_244  [key=0, style=solid];
m1_146 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_246  [key=0, style=solid];
m1_244 -> m1_248  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_249  [key=2, style=dotted];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_176  [key=2, style=dotted];
m1_247 -> m1_146  [key=0, style=bold, color=blue];
m1_269 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_269 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
m1_270 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_270 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m1_271 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m1_272 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m1_272 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m1_273 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
}
