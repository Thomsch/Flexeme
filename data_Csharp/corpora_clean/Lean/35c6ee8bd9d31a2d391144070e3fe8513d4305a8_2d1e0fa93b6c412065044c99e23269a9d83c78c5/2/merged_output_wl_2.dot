digraph  {
n10 [label="QuantConnect.FixedSizedQueue<T>", span=""];
n0 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", label="Entry QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", span="46-46"];
n1 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", label="Limit = limit", span="49-49"];
n2 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", label="Exit QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", span="46-46"];
n3 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", label="Entry QuantConnect.FixedSizedQueue<T>.Enqueue(T)", span="55-55"];
n4 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", label="Count >= Limit", span="57-57"];
n6 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", label="base.Enqueue(item)", span="61-61"];
n5 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", label="Dequeue()", span="59-59"];
n8 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
n7 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", label="Exit QuantConnect.FixedSizedQueue<T>.Enqueue(T)", span="55-55"];
n9 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
d10 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, label="0: var closingToday = date.Date + security.Exchange.MarketClose.Add(TimeSpan.FromMinutes(-10))", span="119-119"];
d6 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", span="106-106"];
d8 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", label="_algorithm.Securities.Values", span="113-113"];
d9 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=0, label="0: Log.Debug(''BacktestingRealTimeHandler.SetupEvents(): Adding End of Day: '' + security.Exchange.MarketClose.Add(TimeSpan.FromMinutes(-10)))", span="116-116"];
d11 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", color=green, community=1, label="0: AddEvent(new RealTimeEvent( closingToday, () =>\r\n                {\r\n                    try\r\n                    {\r\n                        _algorithm.OnEndOfDay();\r\n                        _algorithm.OnEndOfDay(security.Symbol);\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                        Log.Error(''BacktestingRealTimeHandler.SetupEvents(): EOD: '' + err.Message);\r\n                    }\r\n                }))", span="121-133"];
d14 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d15 [cluster="System.TimeSpan.Add(System.TimeSpan)", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
d16 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="148-148"];
d63 [label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", span=""];
d17 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="62-62"];
d18 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="151-151"];
d23 [cluster="lambda expression", color=green, community=0, label="0: Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="130-130"];
d24 [cluster="lambda expression", color=green, community=0, label="1: Log.Error(''BacktestingRealTimeHandler.SetupEvents(): EOD: '' + err.Message)", span="131-131"];
d21 [cluster="lambda expression", color=green, community=0, label="1: _algorithm.OnEndOfDay(security.Symbol)", span="126-126"];
d64 [label=security, span=""];
d20 [cluster="lambda expression", color=green, community=0, label="0: _algorithm.OnEndOfDay()", span="125-125"];
d22 [cluster="lambda expression", color=green, community=0, label="0: Exception", span="128-128"];
d25 [cluster="lambda expression", label="Exit lambda expression", span="121-133"];
d27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="256-256"];
d28 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
d29 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="85-85"];
d19 [cluster="lambda expression", label="Entry lambda expression", span="121-133"];
d26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="251-251"];
d55 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", color=green, community=0, label="3: ScanEvents()", span="198-198"];
d54 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="_time.Date != time.Date", span="194-194"];
d56 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="SetupEvents(time.Date)", span="201-201"];
d36 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", span="159-159"];
d12 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", span="106-106"];
d7 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetupEvents(System.DateTime)", label="ClearEvents()", span="109-109"];
d1 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", label="_algorithm = algorithm", span="94-94"];
d2 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", label="_events = new List<RealTimeEvent>()", span="95-95"];
d3 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", label="_job = job", span="96-96"];
d31 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", label="_isActive = false", span="143-143"];
d33 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", label="_events.Add(newEvent)", span="153-153"];
d38 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="i < _events.Count", span="161-161"];
d39 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="_events[i].Scan(_time)", span="163-163"];
d43 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", label="_events.Clear()", span="172-172"];
d48 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="i < _events.Count", span="180-180"];
d49 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="_events[i].Reset()", span="182-182"];
d57 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="_time = time", span="205-205"];
d58 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="ScanEvents()", span="209-209"];
d61 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", label="_exitTriggered = true", span="217-217"];
d34 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="151-151"];
d53 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="191-191"];
d41 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", span="159-159"];
d37 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="var i = 0", span="161-161"];
d13 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", span="170-170"];
d0 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91"];
d5 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d4 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91"];
d30 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="141-141"];
d32 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="141-141"];
d35 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d40 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanEvents()", label="i++", span="161-161"];
d42 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="77-77"];
d44 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ClearEvents()", span="170-170"];
d45 [cluster="System.Collections.Generic.List<T>.Clear()", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
d47 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="var i = 0", span="180-180"];
d50 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="i++", span="180-180"];
d51 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", span="178-178"];
d52 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="107-107"];
d59 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="191-191"];
d60 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="215-215"];
d62 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="215-215"];
d46 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ResetEvents()", span="178-178"];
m0_141 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="35-35"];
m0_272 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="171-171"];
m0_177 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m0_236 [cluster="QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TestLiveTradingDataFeed.TestLiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", span="36-36"];
m0_156 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="95-95"];
m0_139 [cluster="Unk.Error", file="Engine.cs", label="Entry Unk.Error", span=""];
m0_176 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_197 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", span="484-484"];
m0_198 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: _local", span="487-487"];
m0_199 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="1: return;", span="487-487"];
m0_200 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: !_exitTriggered", span="489-489"];
m0_201 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: AlgorithmManager.AlgorithmId != '''' && AlgorithmManager.QuitState == false", span="491-491"];
m0_202 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: var state = Api.GetAlgorithmStatus(AlgorithmManager.AlgorithmId)", span="496-496"];
m0_207 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: Log.Debug(''StateCheck.Ping.Run(): Opted to not ping: '' + AlgorithmManager.AlgorithmId + '' '' + AlgorithmManager.QuitState)", span="509-509"];
m0_203 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: AlgorithmManager.SetStatus(state.Status)", span="497-497"];
m0_204 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: ResultHandler.SetChartSubscription(state.ChartSubscription)", span="499-499"];
m0_205 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: Log.Debug(''StateCheck.Ping.Run(): Algorithm Status: '' + state.Status + '' Subscription: '' + state.ChartSubscription)", span="500-500"];
m0_206 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="0: Log.Debug(''StateCheck.Run(): Error in state check.'')", span="504-504"];
m0_208 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", color=red, community=0, file="Engine.cs", label="1: Thread.Sleep(1000)", span="511-511"];
m0_209 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Run()", span="484-484"];
m0_163 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="172-172"];
m0_291 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", span="81-81"];
m0_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="63-63"];
m0_149 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m0_133 [cluster="System.DateTime.ToShortTimeString()", file="Engine.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m0_157 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Engine.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m0_161 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="388-388"];
m0_140 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="33-33"];
m0_167 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="104-104"];
m0_138 [cluster="CompositionContainer.GetExportedValueByTypeName<T>(string)", file="Engine.cs", label="Entry CompositionContainer.GetExportedValueByTypeName<T>(string)", span="330-330"];
m0_189 [cluster="System.Console.ReadKey()", file="Engine.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m0_196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="127-127"];
m0_190 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="324-342"];
m0_191 [cluster="lambda expression", file="Engine.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="332-332"];
m0_192 [cluster="lambda expression", file="Engine.cs", label=Exception, span="334-334"];
m0_194 [cluster="lambda expression", file="Engine.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="340-340"];
m0_193 [cluster="lambda expression", file="Engine.cs", label="Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace)", span="337-337"];
m0_195 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="324-342"];
m0_153 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="616-616"];
m0_256 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rh = default(IResultHandler)", span="618-618"];
m0_258 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return new ConsoleResultHandler(job);", span="619-619"];
m0_259 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.ResultEndpoint", span="621-621"];
m0_262 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new ConsoleResultHandler((BacktestNodePacket)job)", span="626-626"];
m0_265 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="632-632"];
m0_268 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="638-638"];
m0_257 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label=IsLocal, span="619-619"];
m0_260 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.Console", span="624-624"];
m0_263 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.Backtesting", span="630-630"];
m0_266 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.LiveTrading", span="636-636"];
m0_261 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="625-625"];
m0_264 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="631-631"];
m0_267 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="637-637"];
m0_269 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rh;", span="641-641"];
m0_270 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="616-616"];
m0_180 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95"];
m0_181 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="185-185"];
m0_182 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m0_235 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket)", span="22-22"];
m0_255 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m0_162 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="314-314"];
m0_166 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="568-568"];
m0_237 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rth = default(IRealTimeHandler)", span="570-570"];
m0_238 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.RealTimeEndpoint", span="571-571"];
m0_241 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="576-576"];
m0_244 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", color=red, community=0, file="Engine.cs", label="1: rth = new LiveTradingRealTimeHandler(algorithm, feed, results, brokerage, job)", span="582-582"];
m0_239 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.Backtesting", span="574-574"];
m0_242 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.LiveTrading", span="580-580"];
m0_240 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="575-575"];
m0_243 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="581-581"];
m0_245 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rth;", span="585-585"];
m0_246 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="568-568"];
m0_164 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="532-532"];
m0_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var df = default(IDataFeed)", span="534-534"];
m0_217 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.DataEndpoint", span="535-535"];
m0_219 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="540-540"];
m0_222 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="546-546"];
m0_225 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new PaperTradingDataFeed(algorithm, (LiveNodePacket)job)", span="552-552"];
m0_228 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var feed = new TestLiveTradingDataFeed(algorithm, (LiveNodePacket)job)", span="557-557"];
m0_218 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Backtesting", span="539-539"];
m0_221 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.FileSystem", span="545-545"];
m0_224 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.LiveTrading", span="551-551"];
m0_227 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Test", span="556-556"];
m0_220 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="541-541"];
m0_223 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="547-547"];
m0_226 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="553-553"];
m0_229 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = feed", span="558-558"];
m0_230 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Test Datafeed at '' + feed.FastForward + ''x'')", span="559-559"];
m0_231 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return df;", span="562-562"];
m0_232 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="532-532"];
m0_248 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="93-93"];
m0_273 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="157-157"];
m0_158 [cluster="System.Exception.Exception(string)", file="Engine.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_155 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="86-86"];
m0_129 [cluster="System.DateTime.ToString(string)", file="Engine.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_233 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="50-50"];
m0_169 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Engine.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m0_150 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="41-41"];
m0_143 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m0_144 [cluster="System.Threading.Thread.Start()", file="Engine.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m0_165 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="597-597"];
m0_249 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ITransactionHandler th", span="599-599"];
m0_250 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.TransactionEndpoint", span="600-600"];
m0_251 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="604-604"];
m0_252 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="605-605"];
m0_253 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return th;", span="608-608"];
m0_254 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="597-597"];
m0_148 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58"];
m0_178 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", file="Engine.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
m0_137 [cluster="CompositionContainer.cstr", file="Engine.cs", label="Entry CompositionContainer.cstr", span=""];
m0_136 [cluster="Unk.Add", file="Engine.cs", label="Entry Unk.Add", span=""];
m0_131 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Engine.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m0_147 [cluster="QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="47-47"];
m0_271 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="130-130"];
m0_188 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Exit()", span="518-518"];
m0_214 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Exit()", color=red, community=0, file="Engine.cs", label="3: _exitTriggered = true", span="520-520"];
m0_215 [cluster="QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Exit()", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.StateCheck.Ping.Exit()", span="518-518"];
m0_142 [cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35"];
m0_247 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="90-90"];
m0_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="115-115"];
m0_135 [cluster="DirectoryCatalog.cstr", file="Engine.cs", label="Entry DirectoryCatalog.cstr", span=""];
m0_187 [cluster="System.Threading.Thread.Abort()", file="Engine.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m0_152 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="650-650"];
m0_274 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="var sh = default(ISetupHandler)", span="652-652"];
m0_277 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=setupMethod, span="655-655"];
m0_275 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=IsLocal, span="653-653"];
m0_276 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return new ConsoleSetupHandler();", span="653-653"];
m0_278 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Console", span="658-658"];
m0_281 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Backtesting", span="663-663"];
m0_284 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.PaperTrading", span="667-667"];
m0_279 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new ConsoleSetupHandler()", span="659-659"];
m0_280 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="660-660"];
m0_282 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BacktestingSetupHandler()", span="664-664"];
m0_283 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="665-665"];
m0_285 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new PaperTradingSetupHandler()", span="668-668"];
m0_286 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected PaperTrading Algorithm Setup Handler.'')", span="669-669"];
m0_287 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return sh;", span="672-672"];
m0_288 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="650-650"];
m0_179 [cluster="double.ToString(string)", file="Engine.cs", label="Entry double.ToString(string)", span="0-0"];
m0_213 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="148-148"];
m0_290 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m0_186 [cluster="System.Threading.Thread.Sleep(int)", file="Engine.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="425-425"];
m0_128 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m0_184 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="101-101"];
m0_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m0_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithmPath = ''''", span="184-184"];
m0_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmNodePacket job = null", span="185-185"];
m0_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var timer = Stopwatch.StartNew()", span="186-186"];
m0_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithm = default(IAlgorithm)", span="187-187"];
m0_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="timer.Restart()", span="255-255"];
m0_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') completed analysis in '' + timer.Elapsed.TotalSeconds.ToString(''F2'') + '' seconds'')", span="411-411"];
m0_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="timer.Stop()", span="420-420"];
m0_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="_version = DateTime.ParseExact(Config.Get(''version'', DateTime.Now.ToString(DateFormat.UI)), DateFormat.UI, CultureInfo.InvariantCulture)", span="188-188"];
m0_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="191-191"];
m0_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + _version)", span="192-192"];
m0_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="193-193"];
m0_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="194-194"];
m0_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var catalog = new AggregateCatalog()", span="197-197"];
m0_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="catalog.Catalogs.Add(new DirectoryCatalog(@''../../Extensions''))", span="198-198"];
m0_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var container = new CompositionContainer(catalog)", span="199-199"];
m0_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify = container.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="203-203"];
m0_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Queue = container.GetExportedValueByTypeName<IQueueHandler>(Config.Get(''queue-handler''))", span="204-204"];
m0_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api = container.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="205-205"];
m0_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=CompositionException, span="207-207"];
m0_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.Initialize()", span="212-212"];
m0_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="208-208"];
m0_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.Initialize()", span="213-213"];
m0_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Queue.Initialize(_liveMode)", span="214-214"];
m0_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="217-217"];
m0_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Start()", span="218-218"];
m0_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="467-467"];
m0_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Abort()", span="467-467"];
m0_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.ResetManager()", span="225-225"];
m0_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var initializeComplete = false", span="228-228"];
m0_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadFeed = null", span="229-229"];
m0_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadTransactions = null", span="230-230"];
m0_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed != null && threadFeed.IsAlive", span="435-435"];
m0_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Abort()", span="435-435"];
m0_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadResults = null", span="231-231"];
m0_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="436-436"];
m0_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Abort()", span="436-436"];
m0_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadRealTime = null", span="232-232"];
m0_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = Queue.NextJob(out algorithmPath)", span="237-237"];
m0_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!IsLocal && (job.Version < Version || job.Redelivered)", span="239-239"];
m0_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Queue.AcknowledgeJob(job)", span="243-243"];
m0_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="244-244"];
m0_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="245-245"];
m0_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job == null", span="248-248"];
m0_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="252-252"];
m0_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="258-258"];
m0_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler = GetResultHandler(job)", span="261-261"];
m0_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="268-268"];
m0_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="271-271"];
m0_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="287-287"];
m0_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="294-294"];
m0_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="300-300"];
m0_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="301-301"];
m0_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="302-302"];
m0_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="308-308"];
m0_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, () =>\r\n                            {\r\n                                try\r\n                                {\r\n                                    //Run Algorithm Job:\r\n                                    // -> Using this Data Feed, \r\n                                    // -> Send Orders to this TransactionHandler, \r\n                                    // -> Send Results to ResultHandler.\r\n                                    AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                                }\r\n                                catch (Exception err)\r\n                                {\r\n                                    //Debugging at this level is difficult, stack trace needed.\r\n                                    Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace);\r\n                                }\r\n\r\n                                Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                            }, MaximumRamAllocation)", span="324-342"];
m0_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="367-367"];
m0_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="412-412"];
m0_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = null", span="246-246"];
m0_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="262-262"];
m0_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Start()", span="263-263"];
m0_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults != null && threadResults.IsAlive", span="437-437"];
m0_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Abort()", span="437-437"];
m0_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="274-274"];
m0_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="278-278"];
m0_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLiveMode(LiveMode)", span="295-295"];
m0_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLocked()", span="296-296"];
m0_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="299-299"];
m0_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="380-380"];
m0_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var profitLoss =\r\n                                        new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="399-400"];
m0_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=initializeComplete, span="291-291"];
m0_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = false", span="276-276"];
m0_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="283-283"];
m0_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="279-279"];
m0_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(errorMessage);", span="280-280"];
m0_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="285-285"];
m0_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="286-286"];
m0_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.Exit()", span="427-427"];
m0_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="305-305"];
m0_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed = new Thread(DataFeed.Run, 0) {Name = ''DataFeed Thread''}", span="311-311"];
m0_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions = new Thread(TransactionHandler.Run, 0) {Name = ''Transaction Thread''}", span="312-312"];
m0_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Start()", span="316-316"];
m0_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime = new Thread(RealTimeHandler.Run, 0) {Name = ''RealTime Thread''}", span="313-313"];
m0_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Start()", span="317-317"];
m0_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime.Start()", span="318-318"];
m0_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!complete", span="344-344"];
m0_71 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="346-346"];
m0_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.RunTimeError != null", span="351-351"];
m0_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="347-347"];
m0_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw AlgorithmManager.RunTimeError;", span="353-353"];
m0_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="356-356"];
m0_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="379-379"];
m0_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="359-359"];
m0_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed != null", span="360-360"];
m0_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="360-360"];
m0_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler != null", span="361-361"];
m0_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var message = ''Runtime Error: '' + err.Message", span="363-363"];
m0_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="364-364"];
m0_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.LogMessage(message)", span="365-365"];
m0_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="366-366"];
m0_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="393-395"];
m0_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="397-397"];
m0_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="398-398"];
m0_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var holdings = new Dictionary<string, Holding>()", span="381-381"];
m0_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statistics = new Dictionary<string, string>()", span="382-382"];
m0_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var banner = new Dictionary<string, string>()", span="383-383"];
m0_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string strategyEquityKey = ''Strategy Equity''", span="388-388"];
m0_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string equityKey = ''Equity''", span="389-389"];
m0_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="390-390"];
m0_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="405-405"];
m0_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                        SetupHandler.StartingCapital, 252)", span="401-402"];
m0_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="407-407"];
m0_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="414-414"];
m0_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="416-416"];
m0_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler.Exit()", span="421-421"];
m0_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="422-422"];
m0_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler.Exit()", span="423-423"];
m0_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var ts = Stopwatch.StartNew()", span="430-430"];
m0_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="431-431"];
m0_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.Sleep(100)", span="433-433"];
m0_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="433-433"];
m0_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="438-438"];
m0_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="440-440"];
m0_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!IsLocal", span="458-458"];
m0_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="442-442"];
m0_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="StateCheck.Ping.Exit()", span="461-461"];
m0_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Console.ReadKey()", span="464-464"];
m0_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m0_212 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", span="200-200"];
m0_154 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m0_175 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_146 [cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41"];
m0_210 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="50-50"];
m0_160 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="309-309"];
m0_168 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m0_134 [cluster="AggregateCatalog.cstr", file="Engine.cs", label="Entry AggregateCatalog.cstr", span=""];
m0_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="438-438"];
m0_234 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="126-126"];
m0_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m0_132 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="128-128"];
m0_173 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
m0_289 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="62-62"];
m0_170 [cluster="System.TimeSpan.ToString(string)", file="Engine.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m0_130 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Engine.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m0_151 [cluster="System.Diagnostics.Stopwatch.Restart()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.Restart()", span="0-0"];
m0_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="218-218"];
m0_159 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m0_292 [file="Engine.cs", label=job, span=""];
m0_293 [file="Engine.cs", label=algorithm, span=""];
m1_75 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_6 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var closedPosition = false", span="48-48"];
m1_29 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="102-102"];
m1_32 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="LiveTradingRealTimeHandler.cs", label="0: lastTradeProfit *= quoteCash.ConversionRate", span="111-111"];
m1_30 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="closedPosition = true", span="104-104"];
m1_33 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.Holdings.AddNewProfit(lastTradeProfit)", span="114-114"];
m1_36 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings == 0", span="122-122"];
m1_35 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="LiveTradingRealTimeHandler.cs", label="0: portfolio.AddTransactionRecord(security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), lastTradeProfit - 2 * feeThisOrder)", span="116-116"];
m1_34 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="115-115"];
m1_31 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label=closedPosition, span="108-108"];
m1_37 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="averageHoldingsPrice = fill.FillPrice", span="125-125"];
m1_16 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var feeThisOrder = fill.OrderFee", span="67-67"];
m1_72 [cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="335-335"];
m1_18 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="portfolio.CashBook[CashBook.AccountCurrency].AddAmount(-feeThisOrder)", span="69-69"];
m1_21 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="LiveTradingRealTimeHandler.cs", label="0: isLong && fill.Direction == OrderDirection.Sell", span="76-76"];
m1_19 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, baseCurrency, fill.FillQuantity)", span="72-72"];
m1_22 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings >= fill.AbsoluteFillQuantity", span="79-79"];
m1_25 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="closedPosition = true", span="89-89"];
m1_24 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", span="87-87"];
m1_20 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, quoteCurrency, -fill.FillQuantity * fill.FillPrice)", span="73-73"];
m1_23 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * fill.AbsoluteFillQuantity", span="82-82"];
m1_26 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="isShort && fill.Direction == OrderDirection.Buy", span="91-91"];
m1_69 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100"];
m1_27 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="absoluteHoldingsQuantity >= fill.FillQuantity", span="94-94"];
m1_74 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="665-665"];
m1_71 [cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="317-317"];
m1_65 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="98-98"];
m1_7 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var isLong = security.Holdings.IsLong", span="49-49"];
m1_8 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var isShort = security.Holdings.IsShort", span="50-50"];
m1_9 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="53-53"];
m1_10 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var quantityHoldings = (decimal)security.Holdings.Quantity", span="54-54"];
m1_11 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", span="55-55"];
m1_12 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var lastTradeProfit = 0m", span="57-57"];
m1_14 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var saleValue = saleValueInQuoteCurrency*quoteCash.ConversionRate", span="63-63"];
m1_13 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="var saleValueInQuoteCurrency = fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity)", span="62-62"];
m1_15 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.Holdings.AddNewSale(saleValue)", span="64-64"];
m1_17 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.Holdings.AddNewFee(feeThisOrder)", span="68-68"];
m1_39 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label=isLong, span="128-128"];
m1_40 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="fill.Direction", span="131-131"];
m1_42 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="135-135"];
m1_45 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings += fill.FillQuantity", span="141-141"];
m1_41 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="OrderDirection.Buy", span="133-133"];
m1_43 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings += fill.FillQuantity", span="137-137"];
m1_46 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: quantityHoldings < 0", span="142-142"];
m1_44 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="OrderDirection.Sell", span="140-140"];
m1_47 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="averageHoldingsPrice = fill.FillPrice", span="145-145"];
m1_68 [cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="308-308"];
m1_38 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings = fill.FillQuantity", span="126-126"];
m1_48 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings == 0", span="147-147"];
m1_73 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449"];
m1_66 [cluster="System.Convert.ToDecimal(int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Convert.ToDecimal(int)", span="0-0"];
m1_76 [cluster="System.Convert.ToInt32(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m1_0 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56"];
m1_1 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="_liveMode = liveMode", span="58-58"];
m1_3 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="_count = 0", span="60-60"];
m1_4 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="_resetTime = DateTime.Now", span="61-61"];
m1_5 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56"];
m1_28 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m1_51 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="3: fill.Direction", span="157-157"];
m1_53 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: quantityHoldings += fill.FillQuantity", span="161-161"];
m1_55 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: averageHoldingsPrice = fill.FillPrice", span="165-165"];
m1_59 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + fill.FillQuantity)", span="177-177"];
m1_60 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: quantityHoldings += fill.FillQuantity", span="178-178"];
m1_63 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="security.Holdings.SetHoldings(averageHoldingsPrice, Convert.ToInt32(quantityHoldings))", span="189-189"];
m1_2 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="LiveTradingRealTimeHandler.cs", label="Messages = new ConcurrentQueue<Notification>()", span="59-59"];
m1_50 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: isShort", span="154-154"];
m1_49 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Notifications.NotificationManager", span=""];
m1_61 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label=Exception, span="183-183"];
m1_52 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="OrderDirection.Buy", span="159-159"];
m1_58 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="OrderDirection.Sell", span="173-173"];
m1_54 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="quantityHoldings > 0", span="162-162"];
m1_56 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: quantityHoldings == 0", span="167-167"];
m1_57 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="averageHoldingsPrice = 0", span="169-169"];
m1_62 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=red, community=0, file="LiveTradingRealTimeHandler.cs", label="0: Log.Error(err)", span="185-185"];
m1_64 [cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Securities.Forex.ForexPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="32-32"];
m1_70 [cluster="QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="32-32"];
m1_77 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m1_67 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="326-326"];
m2_6 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="RealTimeEvent.cs", label=_triggered, span="70-70"];
m2_8 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", color=red, community=0, file="RealTimeEvent.cs", label="0: time.TimeOfDay > _triggerTime", span="76-76"];
m2_7 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="RealTimeEvent.cs", label="return;", span="72-72"];
m2_9 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", color=green, community=0, file="RealTimeEvent.cs", label="0: time > _triggerTime", span="85-85"];
m2_10 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="RealTimeEvent.cs", label="_triggered = true", span="87-87"];
m2_11 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", color=green, community=0, file="RealTimeEvent.cs", label="0: _logging", span="91-91"];
m2_12 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", color=green, community=0, file="RealTimeEvent.cs", label="3: Log.Trace(''RealTimeEvent.Scan(): Eventhandler Called: '' + time.ToString(''u''))", span="93-93"];
m2_13 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="RealTimeEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="68-68"];
m2_15 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="RealTimeEvent.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="85-85"];
m2_0 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="RealTimeEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="62-62"];
m2_1 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="RealTimeEvent.cs", label="_triggered = false", span="64-64"];
m2_2 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="RealTimeEvent.cs", label="_triggerTime = triggerTime", span="65-65"];
m2_3 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="RealTimeEvent.cs", label="_callback = callback", span="66-66"];
m2_4 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", color=green, community=0, file="RealTimeEvent.cs", label="2: _logging = logging", span="67-67"];
m2_16 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="RealTimeEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="95-95"];
m2_17 [cluster="System.DateTime.ToString(string)", file="RealTimeEvent.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m2_18 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="RealTimeEvent.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="128-128"];
m2_5 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="RealTimeEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="62-62"];
m2_14 [cluster="System.Action.Invoke()", file="RealTimeEvent.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_19 [file="RealTimeEvent.cs", label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", span=""];
m4_133 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m4_32 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", span="146-146"];
m4_28 [cluster="Unk.Execute", file="SubscriptionStreamReader.cs", label="Entry Unk.Execute", span=""];
m4_186 [cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0"];
m4_42 [cluster="QuantConnect.Lean.Engine.IStreamReader.Dispose()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.IStreamReader.Dispose()", span="178-178"];
m4_0 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="71-71"];
m4_2 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SubscriptionStreamReader.cs", label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="74-74"];
m4_3 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SubscriptionStreamReader.cs", label="MaxOrders = int.MaxValue", span="75-75"];
m4_4 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="71-71"];
m4_5 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(string, QuantConnect.DataFeedEndpoint)", file="SubscriptionStreamReader.cs", label="_dataFeed = datafeed", span="96-96"];
m4_1 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="SubscriptionStreamReader.cs", label="Errors = new List<string>()", span="73-73"];
m4_6 [cluster="System.TimeSpan.FromDays(double)", file="SubscriptionStreamReader.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m4_146 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="SubscriptionStreamReader.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_34 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="var liveJob = algorithmNodePacket as LiveNodePacket", span="117-117"];
m4_35 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="liveJob == null", span="118-118"];
m4_36 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="120-120"];
m4_172 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m4_38 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="127-127"];
m4_39 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="return brokerage;", span="129-129"];
m4_175 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="483-483"];
m4_131 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="290-290"];
m4_124 [cluster="string.IsNullOrWhiteSpace(string)", file="SubscriptionStreamReader.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m4_187 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Entry lambda expression", span="294-294"];
m4_21 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="var response = _client.Execute(_request)", span="131-131"];
m4_22 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="line = response.Content", span="132-132"];
m4_24 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="Log.Error(''SubscriptionStreamReader.ReadLine(): '' + err.Message)", span="136-136"];
m4_20 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="DataFeedEndpoint.LiveTrading", span="128-128"];
m4_23 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label=Exception, span="134-134"];
m4_30 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", span="146-146"];
m4_25 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="return line;", span="140-140"];
m4_29 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="85-85"];
m4_31 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", color=green, community=0, file="SubscriptionStreamReader.cs", label="1: _sr.Close()", span="148-148"];
m4_45 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="124-124"];
m4_44 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.SubscriptionStreamReader", span=""];
m4_46 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="124-124"];
m4_158 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="185-185"];
m4_159 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.SetDefaultMarkets(_factory.DefaultMarkets.ToDictionary())", span="187-187"];
m4_160 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.SetParameters(job.Parameters)", span="189-189"];
m4_161 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.SetLiveMode(true)", span="191-191"];
m4_162 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.SetDateTime(DateTime.UtcNow)", span="193-193"];
m4_163 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="195-195"];
m4_164 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.Initialize()", span="197-197"];
m4_166 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.Portfolio.CashBook", span="201-201"];
m4_184 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="algorithm.Securities.Min(x => x.Value.Resolution)", span="294-294"];
m4_165 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="liveJob.Brokerage != ''PaperBrokerage''", span="198-198"];
m4_153 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="args.Type == BrokerageMessageType.Error", span="165-165"];
m4_154 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="167-167"];
m4_157 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Entry lambda expression", span="180-211"];
m4_181 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label=order, span="278-278"];
m4_180 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Entry lambda expression", span="278-278"];
m4_152 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Entry lambda expression", span="163-169"];
m4_155 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="163-169"];
m4_168 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label=Exception, span="207-207"];
m4_170 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="180-211"];
m4_167 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="kvp.Value.SetAmount(0)", span="203-203"];
m4_169 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="AddInitializationError(err.Message)", span="209-209"];
m4_182 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="278-278"];
m4_183 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Entry lambda expression", span="294-294"];
m4_185 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="294-294"];
m4_188 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="x.Value.Resolution", span="294-294"];
m4_189 [cluster="lambda expression", file="SubscriptionStreamReader.cs", label="Exit lambda expression", span="294-294"];
m4_138 [cluster="QuantConnect.Symbol.ToString()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Symbol.ToString()", span="183-183"];
m4_141 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="64-64"];
m4_26 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", span="117-117"];
m4_142 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m4_145 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_48 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="142-142"];
m4_49 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="_algorithm = algorithm", span="144-144"];
m4_50 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var liveJob = job as LiveNodePacket", span="147-147"];
m4_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="resultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="175-175"];
m4_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var controls = job.Controls", span="178-178"];
m4_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n                        //Set our default markets\r\n                        algorithm.SetDefaultMarkets(_factory.DefaultMarkets.ToDictionary());\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.Message);\r\n                    }\r\n                })", span="180-211"];
m4_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="resultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="220-220"];
m4_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="brokerage.Message += brokerageOnMessage", span="222-222"];
m4_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.UpdateModels(algorithm.BrokerageModel)", span="225-225"];
m4_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="226-226"];
m4_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.PostInitialize()", span="227-227"];
m4_72 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="brokerage.Connect()", span="233-233"];
m4_77 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="!brokerage.IsConnected", span="243-243"];
m4_81 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var cashBalance = brokerage.GetCashBalance()", span="254-254"];
m4_84 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="258-258"];
m4_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var openOrders = brokerage.GetOpenOrders()", span="272-272"];
m4_93 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="277-277"];
m4_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="278-278"];
m4_100 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var holdings = brokerage.GetAccountHoldings()", span="292-292"];
m4_102 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Min(x => x.Value.Resolution))", span="294-294"];
m4_108 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="310-310"];
m4_110 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="314-314"];
m4_111 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, (int) holding.Quantity)", span="316-316"];
m4_112 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="317-327"];
m4_117 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="338-338"];
m4_51 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, file="SubscriptionStreamReader.cs", label="0: liveJob == null", span="148-148"];
m4_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="155-155"];
m4_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="150-150"];
m4_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="151-151"];
m4_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''A brokerage must be specified'')", span="157-157"];
m4_57 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="163-169"];
m4_56 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="158-158"];
m4_58 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="173-173"];
m4_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var isolator = new Isolator()", span="179-179"];
m4_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="!initializeComplete", span="213-213"];
m4_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Initialization timed out.'')", span="215-215"];
m4_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="216-216"];
m4_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="229-229"];
m4_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=Exception, span="235-235"];
m4_74 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Error(err)", span="237-237"];
m4_75 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="238-239"];
m4_76 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="240-240"];
m4_78 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Unable to connect to brokerage.'')", span="246-246"];
m4_80 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="250-250"];
m4_79 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="247-247"];
m4_82 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=cashBalance, span="255-255"];
m4_83 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="257-257"];
m4_85 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=Exception, span="261-261"];
m4_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="268-268"];
m4_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Error(err)", span="263-263"];
m4_87 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="264-264"];
m4_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="265-265"];
m4_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=openOrders, span="273-273"];
m4_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.ToString() + '' - '' + order.Quantity)", span="276-276"];
m4_95 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=Exception, span="281-281"];
m4_99 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="288-288"];
m4_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Error(err)", span="283-283"];
m4_97 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="284-284"];
m4_98 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="285-285"];
m4_101 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="var supportedSecurityTypes = new HashSet<SecurityType> {SecurityType.Equity, SecurityType.Forex}", span="293-293"];
m4_103 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=holdings, span="295-295"];
m4_105 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="!supportedSecurityTypes.Contains(holding.Type)", span="300-300"];
m4_107 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="303-304"];
m4_104 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="297-297"];
m4_113 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=Exception, span="330-330"];
m4_106 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="302-302"];
m4_109 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.ToString())", span="312-312"];
m4_114 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Log.Error(err)", span="332-332"];
m4_115 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="333-333"];
m4_116 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return false;", span="334-334"];
m4_118 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="StartingDate = DateTime.Now", span="339-339"];
m4_119 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label=Exception, span="341-341"];
m4_121 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="return Errors.Count == 0;", span="353-353"];
m4_120 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="AddInitializationError(err.Message)", span="343-343"];
m4_122 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="142-142"];
m4_151 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="450-450"];
m4_8 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="string error", span="86-86"];
m4_129 [cluster="QuantConnect.Interfaces.IAlgorithm.UpdateModels(QuantConnect.Brokerages.IBrokerageModel)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.UpdateModels(QuantConnect.Brokerages.IBrokerageModel)", span="32-32"];
m4_136 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="478-478"];
m4_127 [cluster="QuantConnect.Isolator.Isolator()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m4_139 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="304-304"];
m4_148 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="456-456"];
m4_19 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="line = _sr.ReadLine()", span="125-125"];
m4_9 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="IAlgorithm algorithm", span="87-87"];
m4_33 [cluster="System.IO.StreamReader.Close()", file="SubscriptionStreamReader.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m4_37 [cluster="System.IO.TextReader.Dispose()", file="SubscriptionStreamReader.cs", label="Entry System.IO.TextReader.Dispose()", span="0-0"];
m4_40 [cluster="QuantConnect.Lean.Engine.IStreamReader.Close()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.IStreamReader.Close()", span="175-175"];
m4_18 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SubscriptionStreamReader.cs", label="DataFeedEndpoint.Backtesting", span="124-124"];
m4_174 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="304-304"];
m4_193 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="369-369"];
m4_194 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SubscriptionStreamReader.cs", label="_factory != null", span="371-371"];
m4_195 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SubscriptionStreamReader.cs", label="_factory.Dispose()", span="373-373"];
m4_196 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="369-369"];
m4_197 [cluster="System.IDisposable.Dispose()", file="SubscriptionStreamReader.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_14 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="return algorithm;", span="106-106"];
m4_16 [cluster="Loader.cstr", file="SubscriptionStreamReader.cs", label="Entry Loader.cstr", span=""];
m4_15 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="84-84"];
m4_17 [cluster="System.TimeSpan.FromSeconds(double)", file="SubscriptionStreamReader.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_128 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="141-141"];
m4_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m4_43 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="60-60"];
m4_143 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SubscriptionStreamReader.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m4_10 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="var loader = new Loader(language, TimeSpan.FromSeconds(15), names =>\r\n            {\r\n                // if there's only one use that guy\r\n                if (names.Count == 1)\r\n                {\r\n                    return names.Single();\r\n                }\r\n\r\n                // if there's more than one then check configuration for which one we should use\r\n                var algorithmName = Config.Get(''algorithm-type-name'');\r\n                return names.Single(x => x.Contains(''.'' + algorithmName));\r\n            })", span="90-101"];
m4_11 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="103-103"];
m4_12 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="!complete", span="104-104"];
m4_13 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="SubscriptionStreamReader.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="104-104"];
m4_41 [cluster="QuantConnect.Lean.Engine.IStreamReader.Close()", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.IStreamReader.Close()", span="175-175"];
m4_144 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m4_179 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="113-113"];
m4_171 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.AccountType)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.AccountType)", span="319-319"];
m4_137 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="58-58"];
m4_147 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m4_130 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="313-313"];
m4_7 [cluster="System.IO.StreamReader.StreamReader(string)", file="SubscriptionStreamReader.cs", label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m4_134 [cluster="string.Format(string, object)", file="SubscriptionStreamReader.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_176 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="421-421"];
m4_123 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="360-360"];
m4_190 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SubscriptionStreamReader.cs", label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="362-362"];
m4_191 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="SubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="360-360"];
m4_132 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="96-96"];
m4_126 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="214-214"];
m4_47 [cluster="System.Type.MatchesTypeName(string)", file="SubscriptionStreamReader.cs", label="Entry System.Type.MatchesTypeName(string)", span="476-476"];
m4_192 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_140 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="SubscriptionStreamReader.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m4_177 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="63-63"];
m4_149 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m4_156 [cluster="string.Format(string, object, object)", file="SubscriptionStreamReader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_125 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m4_150 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m4_173 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDefaultMarkets(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>)", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDefaultMarkets(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>)", span="310-310"];
m4_178 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="284-284"];
m4_135 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="SubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="70-70"];
m4_198 [file="SubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m4_199 [file="SubscriptionStreamReader.cs", label=algorithmName, span=""];
m4_200 [file="SubscriptionStreamReader.cs", label=liveJob, span=""];
m4_201 [file="SubscriptionStreamReader.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m4_202 [file="SubscriptionStreamReader.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m4_203 [file="SubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m4_204 [file="SubscriptionStreamReader.cs", label=liveJob, span=""];
m4_205 [file="SubscriptionStreamReader.cs", label=order, span=""];
n10 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
n10 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
n10 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
n10 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [color=darkseagreen4, key=1, label=T, style=dashed];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n5 -> n4  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n7 -> n3  [color=blue, key=0, style=bold];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d14  [color=green, key=2, style=dotted];
d10 -> d15  [color=green, key=2, style=dotted];
d6 -> d10  [color=green, key=1, label="System.DateTime", style=dashed];
d6 -> d7  [key=0, style=solid];
d8 -> d10  [color=green, key=1, label=security, style=dashed];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d11  [color=green, key=1, label=security, style=dashed];
d8 -> d21  [color=green, key=1, label=security, style=dashed];
d8 -> d12  [key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d14  [color=green, key=2, style=dotted];
d9 -> d15  [color=green, key=2, style=dotted];
d9 -> d16  [color=green, key=2, style=dotted];
d11 -> d8  [color=green, key=0, style=solid];
d11 -> d17  [color=green, key=2, style=dotted];
d11 -> d18  [color=green, key=2, style=dotted];
d11 -> d23  [color=green, key=1, label=err, style=dashed];
d11 -> d24  [color=green, key=1, label=err, style=dashed];
d63 -> d11  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d21  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d20  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d55  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d63 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
d18 -> d33  [key=0, style=solid];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d28  [color=green, key=2, style=dotted];
d24 -> d25  [color=green, key=0, style=solid];
d24 -> d29  [color=green, key=2, style=dotted];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> d25  [color=green, key=0, style=solid];
d21 -> d27  [color=green, key=2, style=dotted];
d64 -> d21  [color=green, key=1, label=security, style=dashed];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d26  [color=green, key=2, style=dotted];
d22 -> d23  [color=green, key=0, style=solid];
d25 -> d19  [color=blue, key=0, style=bold];
d19 -> d20  [color=green, key=0, style=solid];
d55 -> d56  [color=green, key=0, style=solid];
d55 -> d36  [color=green, key=2, style=dotted];
d54 -> d55  [color=green, key=0, style=solid];
d54 -> d57  [key=0, style=solid];
d56 -> d6  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d12 -> d6  [color=blue, key=0, style=bold];
d7 -> d8  [key=0, style=solid];
d7 -> d13  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d2 -> d5  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d35  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d41  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d39 -> d42  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d45  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d51  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d52  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d58 -> d36  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d34 -> d18  [color=blue, key=0, style=bold];
d53 -> d54  [key=0, style=solid];
d53 -> d56  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d53 -> d57  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d41 -> d36  [color=blue, key=0, style=bold];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [color=darkseagreen4, key=1, label=i, style=dashed];
d37 -> d37  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d37 -> d40  [color=darkseagreen4, key=1, label=i, style=dashed];
d13 -> d43  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d4 -> d0  [color=blue, key=0, style=bold];
d30 -> d31  [key=0, style=solid];
d32 -> d30  [color=blue, key=0, style=bold];
d40 -> d38  [key=0, style=solid];
d40 -> d40  [color=darkseagreen4, key=1, label=i, style=dashed];
d44 -> d13  [color=blue, key=0, style=bold];
d47 -> d48  [key=0, style=solid];
d47 -> d49  [color=darkseagreen4, key=1, label=i, style=dashed];
d47 -> d37  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d47 -> d50  [color=darkseagreen4, key=1, label=i, style=dashed];
d50 -> d48  [key=0, style=solid];
d50 -> d50  [color=darkseagreen4, key=1, label=i, style=dashed];
d51 -> d46  [color=blue, key=0, style=bold];
d59 -> d53  [color=blue, key=0, style=bold];
d60 -> d61  [key=0, style=solid];
d62 -> d60  [color=blue, key=0, style=bold];
d46 -> d47  [key=0, style=solid];
m0_197 -> m0_198  [color=red, key=0, style=solid];
m0_198 -> m0_199  [color=red, key=0, style=solid];
m0_198 -> m0_200  [color=red, key=0, style=solid];
m0_199 -> m0_209  [color=red, key=0, style=solid];
m0_200 -> m0_201  [color=red, key=0, style=solid];
m0_200 -> m0_209  [color=red, key=0, style=solid];
m0_201 -> m0_202  [color=red, key=0, style=solid];
m0_201 -> m0_207  [color=red, key=0, style=solid];
m0_202 -> m0_203  [color=red, key=0, style=solid];
m0_202 -> m0_210  [color=red, key=2, style=dotted];
m0_202 -> m0_204  [color=red, key=1, label=state, style=dashed];
m0_202 -> m0_205  [color=red, key=1, label=state, style=dashed];
m0_207 -> m0_208  [color=red, key=0, style=solid];
m0_207 -> m0_213  [color=red, key=2, style=dotted];
m0_203 -> m0_204  [color=red, key=0, style=solid];
m0_203 -> m0_211  [color=red, key=2, style=dotted];
m0_204 -> m0_205  [color=red, key=0, style=solid];
m0_204 -> m0_212  [color=red, key=2, style=dotted];
m0_205 -> m0_206  [color=red, key=0, style=solid];
m0_205 -> m0_208  [color=red, key=0, style=solid];
m0_205 -> m0_213  [color=red, key=2, style=dotted];
m0_206 -> m0_208  [color=red, key=0, style=solid];
m0_206 -> m0_213  [color=red, key=2, style=dotted];
m0_208 -> m0_199  [color=red, key=0, style=solid];
m0_208 -> m0_186  [color=red, key=2, style=dotted];
m0_209 -> m0_197  [color=blue, key=0, style=bold];
m0_149 -> m0_165  [color=darkorchid, key=3, label="Field variable QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler TransactionHandler", style=bold];
m0_161 -> m0_161  [color=darkorchid, key=3, label="Local variable string strategyEquityKey", style=bold];
m0_190 -> m0_191  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_194  [key=0, style=solid];
m0_191 -> m0_196  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_132  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> d29  [key=2, style=dotted];
m0_195 -> m0_190  [color=blue, key=0, style=bold];
m0_153 -> m0_256  [key=0, style=solid];
m0_153 -> m0_258  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_153 -> m0_259  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_153 -> m0_262  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_153 -> m0_265  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_153 -> m0_268  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_153 -> m0_2  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.Results.IResultHandler rh", style=bold];
m0_258 -> m0_270  [key=0, style=solid];
m0_258 -> m0_271  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_263  [key=0, style=solid];
m0_259 -> m0_266  [key=0, style=solid];
m0_262 -> m0_269  [key=0, style=solid];
m0_262 -> m0_271  [key=2, style=dotted];
m0_265 -> m0_269  [key=0, style=solid];
m0_265 -> m0_272  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_273  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_259  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_132  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_132  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_132  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_270 -> m0_153  [color=blue, key=0, style=bold];
m0_166 -> m0_237  [key=0, style=solid];
m0_166 -> m0_238  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_166 -> m0_241  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_166 -> m0_244  [color=red, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_166 -> m0_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m0_166 -> m0_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m0_166 -> m0_2  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.RealTime.IRealTimeHandler rth", style=bold];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_242  [key=0, style=solid];
m0_241 -> m0_245  [key=0, style=solid];
m0_241 -> m0_247  [key=2, style=dotted];
m0_244 -> m0_245  [color=red, key=0, style=solid];
m0_244 -> m0_248  [color=red, key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_132  [key=2, style=dotted];
m0_243 -> m0_244  [color=red, key=0, style=solid];
m0_243 -> m0_132  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_246 -> m0_166  [color=blue, key=0, style=bold];
m0_164 -> m0_216  [key=0, style=solid];
m0_164 -> m0_217  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_164 -> m0_219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_164 -> m0_222  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_164 -> m0_225  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_164 -> m0_228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_164 -> m0_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m0_164 -> m0_2  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.DataFeeds.IDataFeed df", style=bold];
m0_216 -> m0_228  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.DataFeeds.IDataFeed df", style=bold];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_221  [key=0, style=solid];
m0_217 -> m0_224  [key=0, style=solid];
m0_217 -> m0_227  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_233  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_234  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_235  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_236  [key=2, style=dotted];
m0_228 -> m0_230  [color=darkseagreen4, key=1, label=feed, style=dashed];
m0_218 -> m0_219  [key=0, style=solid];
m0_221 -> m0_222  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_220 -> m0_231  [key=0, style=solid];
m0_220 -> m0_132  [key=2, style=dotted];
m0_223 -> m0_231  [key=0, style=solid];
m0_223 -> m0_132  [key=2, style=dotted];
m0_226 -> m0_231  [key=0, style=solid];
m0_226 -> m0_132  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_231  [color=darkseagreen4, key=1, label=df, style=dashed];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_132  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_164  [color=blue, key=0, style=bold];
m0_248 -> m0_148  [color=darkorchid, key=3, label="Property variable QuantConnect.Interfaces.IBrokerage Brokerage", style=bold];
m0_165 -> m0_249  [key=0, style=solid];
m0_165 -> m0_250  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m0_165 -> m0_251  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m0_165 -> m0_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m0_165 -> m0_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m0_165 -> m0_2  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_255  [key=2, style=dotted];
m0_251 -> m0_253  [color=darkseagreen4, key=1, label=th, style=dashed];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_132  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_254 -> m0_165  [color=blue, key=0, style=bold];
m0_188 -> m0_214  [color=red, key=0, style=solid];
m0_214 -> m0_215  [color=red, key=0, style=solid];
m0_215 -> m0_188  [color=blue, key=0, style=bold];
m0_152 -> m0_274  [key=0, style=solid];
m0_152 -> m0_277  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.Setup.ISetupHandler sh", style=bold];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_281  [key=0, style=solid];
m0_277 -> m0_284  [key=0, style=solid];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_277  [key=0, style=solid];
m0_276 -> m0_288  [key=0, style=solid];
m0_276 -> m0_289  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_289  [key=2, style=dotted];
m0_280 -> m0_287  [key=0, style=solid];
m0_280 -> m0_132  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_290  [key=2, style=dotted];
m0_283 -> m0_287  [key=0, style=solid];
m0_283 -> m0_132  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_291  [key=2, style=dotted];
m0_285 -> m0_287  [color=darkseagreen4, key=1, label=sh, style=dashed];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_132  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_152  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_1  [color=darkorchid, key=3, label="Local variable string algorithmPath", style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_128  [key=2, style=dotted];
m0_3 -> m0_37  [color=darkseagreen4, key=1, label=timer, style=dashed];
m0_3 -> m0_100  [color=darkseagreen4, key=1, label=timer, style=dashed];
m0_3 -> m0_104  [color=darkseagreen4, key=1, label=timer, style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_2  [color=darkorchid, key=3, label="Local variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_151  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_179  [key=2, style=dotted];
m0_100 -> m0_180  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_182  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_129  [key=2, style=dotted];
m0_5 -> m0_130  [key=2, style=dotted];
m0_5 -> m0_131  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_132  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_133  [key=2, style=dotted];
m0_8 -> m0_132  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_132  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_134  [key=2, style=dotted];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label=catalog, style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_135  [key=2, style=dotted];
m0_11 -> m0_136  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_137  [key=2, style=dotted];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_130  [key=2, style=dotted];
m0_13 -> m0_138  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_130  [key=2, style=dotted];
m0_14 -> m0_138  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=0, style=solid];
m0_15 -> m0_130  [key=2, style=dotted];
m0_15 -> m0_138  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_140  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_139  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_141  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_142  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_143  [key=2, style=dotted];
m0_21 -> m0_125  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m0_21 -> m0_126  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_144  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_187  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_145  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_24  [color=darkorchid, key=3, label="Local variable bool initializeComplete", style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_113  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m0_25 -> m0_114  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m0_25 -> m0_2  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadFeed", style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_115  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m0_26 -> m0_116  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m0_26 -> m0_2  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadTransactions", style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_115  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_187  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_2  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadResults", style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_187  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_2  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadRealTime", style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_146  [key=2, style=dotted];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_42  [color=darkseagreen4, key=1, label=algorithmPath, style=dashed];
m0_29 -> m0_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_191  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_29 -> m0_101  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_35  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_147  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_148  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_149  [key=2, style=dotted];
m0_35 -> m0_28  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_150  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_152  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_153  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_155  [key=2, style=dotted];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_46  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_54  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_60  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_69  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_191  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_86  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_96  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_42 -> m0_101  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_156  [key=2, style=dotted];
m0_43 -> m0_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_148  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_160  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_164  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_165  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_166  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_168  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_169  [key=2, style=dotted];
m0_69 -> m0_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_148  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=0, style=solid];
m0_101 -> m0_181  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_191  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_34 -> m0_101  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_154  [key=2, style=dotted];
m0_40 -> m0_117  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m0_40 -> m0_118  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_144  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_187  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_49  [key=0, style=solid];
m0_44 -> m0_53  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_157  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_161  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_162  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_163  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_174  [key=2, style=dotted];
m0_86 -> m0_101  [color=darkseagreen4, key=1, label=orders, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_177  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_108  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_157  [key=2, style=dotted];
m0_47 -> m0_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m0_48 -> m0_53  [key=0, style=solid];
m0_48 -> m0_158  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_159  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_185  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_167  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_154  [key=2, style=dotted];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m0_63 -> m0_113  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m0_63 -> m0_114  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_154  [key=2, style=dotted];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m0_64 -> m0_115  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m0_64 -> m0_116  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_144  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_154  [key=2, style=dotted];
m0_65 -> m0_68  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_144  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_144  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_73  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_170  [key=2, style=dotted];
m0_71 -> d29  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=0, style=solid];
m0_73 -> m0_85  [key=0, style=solid];
m0_72 -> m0_85  [key=0, style=solid];
m0_72 -> m0_158  [key=2, style=dotted];
m0_72 -> m0_170  [key=2, style=dotted];
m0_74 -> m0_85  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_174  [key=2, style=dotted];
m0_85 -> m0_93  [color=darkseagreen4, key=1, label=charts, style=dashed];
m0_85 -> m0_94  [color=darkseagreen4, key=1, label=charts, style=dashed];
m0_85 -> m0_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> d29  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_172  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_85  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [color=darkseagreen4, key=1, label=message, style=dashed];
m0_80 -> m0_83  [color=darkseagreen4, key=1, label=message, style=dashed];
m0_80 -> m0_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_132  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_173  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_159  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_98  [key=0, style=solid];
m0_93 -> m0_100  [key=0, style=solid];
m0_93 -> m0_176  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=equity, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=performance, style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_175  [key=2, style=dotted];
m0_87 -> m0_101  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_175  [key=2, style=dotted];
m0_88 -> m0_101  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_175  [key=2, style=dotted];
m0_89 -> m0_101  [color=darkseagreen4, key=1, label=banner, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m0_90 -> m0_94  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m0_90 -> m0_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m0_91 -> m0_94  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m0_91 -> m0_91  [color=darkorchid, key=3, label="Local variable string equityKey", style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m0_92 -> m0_92  [color=darkorchid, key=3, label="Local variable string dailyPerformanceKey", style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_100  [key=0, style=solid];
m0_97 -> m0_178  [key=2, style=dotted];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> d29  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> d29  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_183  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_172  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_184  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_128  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_186  [key=2, style=dotted];
m0_112 -> m0_110  [key=0, style=solid];
m0_112 -> m0_132  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_122  [key=0, style=solid];
m0_119 -> m0_132  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_122 -> m0_22  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> d29  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_188  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_189  [key=2, style=dotted];
m0_127 -> m0_0  [color=blue, key=0, style=bold];
m0_292 -> m0_191  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_293 -> m0_191  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_31  [color=darkseagreen4, key=1, label=closedPosition, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_29 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_32 -> m1_33  [color=green, key=0, style=solid];
m1_32 -> m1_7  [color=green, key=2, style=dotted];
m1_32 -> m1_36  [color=green, key=1, label=allow, style=dashed];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_30 -> m1_32  [color=green, key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_36  [key=0, style=solid];
m1_33 -> m1_71  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_35 -> m1_36  [color=green, key=0, style=solid];
m1_35 -> m1_28  [color=green, key=2, style=dotted];
m1_35 -> m1_73  [key=2, style=dotted];
m1_35 -> m1_74  [key=2, style=dotted];
m1_34 -> m1_35  [color=green, key=0, style=solid];
m1_34 -> m1_38  [key=2, style=dotted];
m1_34 -> m1_72  [key=2, style=dotted];
m1_31 -> m1_37  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_36  [key=0, style=solid];
m1_37 -> m1_29  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_63  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=feeThisOrder, style=dashed];
m1_16 -> m1_35  [color=darkseagreen4, key=1, label=feeThisOrder, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_18 -> m1_69  [key=2, style=dotted];
m1_21 -> m1_22  [color=green, key=0, style=solid];
m1_21 -> m1_7  [color=green, key=2, style=dotted];
m1_21 -> m1_25  [color=green, key=1, label=allow, style=dashed];
m1_21 -> m1_26  [key=0, style=solid];
m1_19 -> m1_21  [color=green, key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_70  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_28  [key=2, style=dotted];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_20 -> m1_26  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_70  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_26 -> m1_18  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_31  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_21  [color=darkseagreen4, key=1, label=isLong, style=dashed];
m1_7 -> m1_39  [color=darkseagreen4, key=1, label=isLong, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_8 -> m1_26  [color=darkseagreen4, key=1, label=isShort, style=dashed];
m1_8 -> m1_50  [color=red, key=1, label=isShort, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_23  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_24  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_28  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_29  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_42  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_59  [color=red, key=1, label=averageHoldingsPrice, style=dashed];
m1_9 -> m1_63  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=2, style=dotted];
m1_10 -> m1_17  [key=2, style=dotted];
m1_10 -> m1_22  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_24  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_36  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_42  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_43  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_53  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_10 -> m1_63  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_27  [color=darkseagreen4, key=1, label=absoluteHoldingsQuantity, style=dashed];
m1_11 -> m1_29  [color=darkseagreen4, key=1, label=absoluteHoldingsQuantity, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_66  [key=2, style=dotted];
m1_15 -> m1_7  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_67  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_68  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_39 -> m1_50  [color=red, key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_44  [key=0, style=solid];
m1_42 -> m1_7  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [color=darkseagreen4, key=1, label=allow, style=dashed];
m1_42 -> m1_42  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_42 -> m1_63  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m1_45 -> m1_28  [key=2, style=dotted];
m1_45 -> m1_46  [color=red, key=0, style=solid];
m1_45 -> m1_45  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_45 -> m1_48  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_45 -> m1_63  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_41 -> m1_47  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_46  [key=0, style=solid];
m1_43 -> m1_61  [key=0, style=solid];
m1_43 -> m1_63  [key=0, style=solid];
m1_43 -> m1_43  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m1_46 -> m1_47  [color=red, key=0, style=solid];
m1_46 -> m1_48  [color=red, key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_48  [key=2, style=dotted];
m1_47 -> m1_39  [color=blue, key=0, style=bold];
m1_47 -> m1_61  [key=0, style=solid];
m1_47 -> m1_63  [key=0, style=solid];
m1_38 -> m1_61  [key=0, style=solid];
m1_38 -> m1_63  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_61  [key=0, style=solid];
m1_48 -> m1_63  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_0 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m1_0 -> m1_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_45  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_51  [color=red, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_53  [color=red, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_55  [color=red, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_59  [color=red, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_60  [color=red, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_0 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_65  [key=2, style=dotted];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m1_3 -> m1_19  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_3 -> m1_20  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_14  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m1_5 -> m1_32  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_28 -> m1_30  [key=0, style=solid];
m1_28 -> m1_32  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m1_51 -> m1_52  [color=red, key=0, style=solid];
m1_51 -> m1_58  [color=red, key=0, style=solid];
m1_53 -> m1_54  [color=red, key=0, style=solid];
m1_53 -> m1_53  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_53 -> m1_56  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_53 -> m1_59  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_53 -> m1_60  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_55 -> m1_61  [color=red, key=0, style=solid];
m1_55 -> m1_63  [color=red, key=0, style=solid];
m1_55 -> m1_59  [color=red, key=1, label=averageHoldingsPrice, style=dashed];
m1_59 -> m1_60  [color=red, key=0, style=solid];
m1_59 -> m1_59  [color=red, key=1, label=averageHoldingsPrice, style=dashed];
m1_59 -> m1_63  [color=red, key=1, label=averageHoldingsPrice, style=dashed];
m1_60 -> m1_61  [color=red, key=0, style=solid];
m1_60 -> m1_63  [color=red, key=0, style=solid];
m1_60 -> m1_60  [color=red, key=1, label=quantityHoldings, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_76  [key=2, style=dotted];
m1_63 -> m1_77  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_50 -> m1_51  [color=red, key=0, style=solid];
m1_50 -> m1_61  [color=red, key=0, style=solid];
m1_50 -> m1_63  [color=red, key=0, style=solid];
m1_49 -> m1_61  [key=0, style=solid];
m1_49 -> m1_63  [key=0, style=solid];
m1_49 -> m1_21  [color=green, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_32  [color=green, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_35  [color=green, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_40  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_42  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_49 -> m1_45  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationManager", style=dashed];
m1_61 -> m1_62  [color=red, key=0, style=solid];
m1_52 -> m1_53  [color=red, key=0, style=solid];
m1_58 -> m1_59  [color=red, key=0, style=solid];
m1_54 -> m1_55  [color=red, key=0, style=solid];
m1_54 -> m1_56  [color=red, key=0, style=solid];
m1_56 -> m1_57  [color=red, key=0, style=solid];
m1_56 -> m1_61  [color=red, key=0, style=solid];
m1_56 -> m1_63  [color=red, key=0, style=solid];
m1_57 -> m1_61  [key=0, style=solid];
m1_57 -> m1_63  [key=0, style=solid];
m1_57 -> m1_59  [color=red, key=1, label=averageHoldingsPrice, style=dashed];
m1_62 -> m1_63  [color=red, key=0, style=solid];
m1_62 -> m1_75  [color=red, key=2, style=dotted];
m1_64 -> m1_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [color=red, key=0, style=solid];
m2_6 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_8 -> m2_13  [color=red, key=0, style=solid];
m2_7 -> m2_13  [key=0, style=solid];
m2_9 -> m2_10  [color=green, key=0, style=solid];
m2_9 -> m2_13  [color=green, key=0, style=solid];
m2_10 -> m2_11  [color=green, key=0, style=solid];
m2_10 -> m2_13  [key=0, style=solid];
m2_10 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_17  [color=green, key=2, style=dotted];
m2_12 -> m2_18  [color=green, key=2, style=dotted];
m2_13 -> m2_11  [key=0, style=solid];
m2_13 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=2, style=dotted];
m2_13 -> d42  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m2_0 -> m2_4  [color=green, key=1, label=bool, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_19 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_8  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_9  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_4  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_11  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m2_19 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m4_32 -> m4_30  [color=blue, key=0, style=bold];
m4_42 -> m4_34  [color=darkorchid, key=3, label="method methodReturn void Dispose", style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_2 -> m4_5  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> d5  [key=2, style=dotted];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_34 -> m4_45  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_34 -> m4_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_36 -> m4_40  [key=0, style=solid];
m4_36 -> m4_41  [key=2, style=dotted];
m4_172 -> m4_7  [color=darkorchid, key=3, label="Field variable QuantConnect.DataFeedEndpoint _dataFeed", style=bold];
m4_172 -> m4_12  [color=darkorchid, key=3, label="Field variable QuantConnect.DataFeedEndpoint _dataFeed", style=bold];
m4_38 -> m4_14  [color=darkorchid, key=3, label="method methodReturn string ReadLine", style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_43  [key=2, style=dotted];
m4_39 -> m4_38  [color=blue, key=0, style=bold];
m4_39 -> m4_40  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_21 -> m4_28  [key=2, style=dotted];
m4_22 -> m4_25  [key=0, style=solid];
m4_22 -> m4_26  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_28  [key=2, style=dotted];
m4_24 -> m4_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m4_20 -> m4_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_27  [key=2, style=dotted];
m4_23 -> m4_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_25 -> m4_20  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_31 -> m4_29  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_33  [color=green, key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_31  [color=green, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_44 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionStreamReader", style=dashed];
m4_46 -> m4_44  [color=blue, key=0, style=bold];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_171  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_172  [key=2, style=dotted];
m4_159 -> m4_173  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_174  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_175  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_176  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_177  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_178  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_168  [key=0, style=solid];
m4_166 -> m4_170  [key=0, style=solid];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [key=2, style=dotted];
m4_184 -> m4_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_168  [key=0, style=solid];
m4_165 -> m4_170  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_155  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_156  [key=2, style=dotted];
m4_154 -> m4_123  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m4_155 -> m4_152  [color=blue, key=0, style=bold];
m4_168 -> m4_169  [key=0, style=solid];
m4_170 -> m4_157  [color=blue, key=0, style=bold];
m4_167 -> m4_166  [key=0, style=solid];
m4_167 -> m4_179  [key=2, style=dotted];
m4_167 -> m4_167  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_123  [key=2, style=dotted];
m4_182 -> m4_180  [color=blue, key=0, style=bold];
m4_183 -> m4_184  [key=0, style=solid];
m4_185 -> m4_183  [color=blue, key=0, style=bold];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_188  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m4_189 -> m4_187  [color=blue, key=0, style=bold];
m4_26 -> m4_14  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_48 -> m4_59  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_48 -> m4_60  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_48 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_161  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_163  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_166  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_66  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_48 -> m4_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_84  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m4_48 -> m4_100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m4_48 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_112  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_48 -> m4_117  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_51  [color=red, key=0, style=solid];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_50 -> m4_62  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_50 -> m4_165  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_126  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_17  [key=2, style=dotted];
m4_62 -> m4_128  [key=2, style=dotted];
m4_62 -> m4_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_126  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_129  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_130  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_131  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_77  [key=0, style=solid];
m4_72 -> m4_132  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_80  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_135  [key=2, style=dotted];
m4_84 -> m4_82  [key=0, style=solid];
m4_84 -> m4_136  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_137  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_139  [key=2, style=dotted];
m4_94 -> m4_91  [key=0, style=solid];
m4_94 -> m4_140  [key=2, style=dotted];
m4_94 -> m4_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_141  [key=2, style=dotted];
m4_100 -> m4_103  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_143  [key=2, style=dotted];
m4_102 -> m4_110  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_111  [key=0, style=solid];
m4_108 -> m4_147  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_148  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_149  [key=2, style=dotted];
m4_112 -> m4_103  [key=0, style=solid];
m4_112 -> m4_150  [key=2, style=dotted];
m4_112 -> m4_151  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_51 -> m4_52  [color=red, key=0, style=solid];
m4_51 -> m4_54  [color=red, key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_57  [key=0, style=solid];
m4_54 -> m4_124  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_123  [key=2, style=dotted];
m4_53 -> m4_122  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_123  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_153  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m4_57 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m4_57 -> m4_67  [color=darkseagreen4, key=1, label=brokerageOnMessage, style=dashed];
m4_56 -> m4_122  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_125  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_127  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_123  [key=2, style=dotted];
m4_65 -> m4_121  [key=0, style=solid];
m4_65 -> m4_122  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_125  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_133  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_134  [key=2, style=dotted];
m4_75 -> m4_123  [key=2, style=dotted];
m4_76 -> m4_121  [key=0, style=solid];
m4_76 -> m4_122  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_123  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_125  [key=2, style=dotted];
m4_79 -> m4_121  [key=0, style=solid];
m4_79 -> m4_122  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_85  [key=0, style=solid];
m4_82 -> m4_89  [key=0, style=solid];
m4_82 -> m4_84  [color=darkseagreen4, key=1, label=cash, style=dashed];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_125  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_125  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_133  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_123  [key=2, style=dotted];
m4_88 -> m4_121  [key=0, style=solid];
m4_88 -> m4_122  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_95  [key=0, style=solid];
m4_91 -> m4_99  [key=0, style=solid];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_94  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_91 -> m4_181  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_138  [key=2, style=dotted];
m4_92 -> m4_125  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_125  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_133  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_123  [key=2, style=dotted];
m4_98 -> m4_121  [key=0, style=solid];
m4_98 -> m4_122  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_142  [key=2, style=dotted];
m4_101 -> m4_105  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m4_101 -> m4_107  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_113  [key=0, style=solid];
m4_103 -> m4_117  [key=0, style=solid];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_106  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_107  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_108  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_109  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_110  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_111  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_103 -> m4_112  [color=darkseagreen4, key=1, label=holding, style=dashed];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_108  [key=0, style=solid];
m4_105 -> m4_144  [key=2, style=dotted];
m4_107 -> m4_103  [key=0, style=solid];
m4_107 -> m4_146  [key=2, style=dotted];
m4_107 -> m4_123  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_125  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_145  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_138  [key=2, style=dotted];
m4_109 -> m4_125  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_133  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_123  [key=2, style=dotted];
m4_116 -> m4_121  [key=0, style=solid];
m4_116 -> m4_122  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_121  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_123  [key=2, style=dotted];
m4_122 -> m4_48  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_19 -> m4_25  [key=0, style=solid];
m4_19 -> m4_27  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_42  [key=2, style=dotted];
m4_37 -> m4_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_33  [color=blue, key=0, style=bold];
m4_40 -> m4_30  [color=darkorchid, key=3, label="method methodReturn void Close", style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_196  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_197  [key=2, style=dotted];
m4_196 -> m4_193  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_20  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_15  [color=darkorchid, key=3, label="Local variable string line", style=bold];
m4_15 -> m4_7  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_43 -> m4_42  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m4_10 -> m4_16  [key=2, style=dotted];
m4_10 -> m4_17  [key=2, style=dotted];
m4_10 -> m4_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m4_10 -> m4_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m4_10 -> m4_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_18  [key=2, style=dotted];
m4_11 -> m4_13  [color=darkseagreen4, key=1, label=error, style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=0, style=solid];
m4_13 -> m4_10  [color=blue, key=0, style=bold];
m4_13 -> m4_15  [key=0, style=solid];
m4_13 -> m4_19  [key=2, style=dotted];
m4_41 -> m4_40  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m4_7 -> m4_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_123 -> m4_190  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_192  [key=2, style=dotted];
m4_191 -> m4_123  [color=blue, key=0, style=bold];
m4_198 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_158  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_159  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_169  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_190  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_198 -> m4_195  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m4_199 -> m4_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m4_200 -> m4_45  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_201 -> m4_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_161  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_163  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_166  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_201 -> m4_184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_202 -> m4_160  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_203 -> m4_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m4_204 -> m4_165  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_205 -> m4_181  [color=darkseagreen4, key=1, label=order, style=dashed];
}
