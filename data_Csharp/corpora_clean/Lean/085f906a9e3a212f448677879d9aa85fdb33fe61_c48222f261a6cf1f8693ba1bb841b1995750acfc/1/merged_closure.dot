digraph  {
d1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", color=green, community=0, label="_warmupBarCount = null", prediction=0, span="53-53"];
d254 [label="QuantConnect.Algorithm.QCAlgorithm", span=""];
d0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
d2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", color=green, community=0, label="_warmupTimeSpan = timeSpan", prediction=1, span="54-54"];
d3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
d5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", color=green, community=0, label="SetWarmup(timeSpan)", prediction=2, span="63-63"];
d4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
d6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
d8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", color=green, community=0, label="_warmupTimeSpan = null", prediction=3, span="75-75"];
d7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
d9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", color=green, community=0, label="_warmupBarCount = barCount", prediction=4, span="76-76"];
d11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
d10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
d12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", color=green, community=0, label="SetWarmup(barCount)", prediction=2, span="88-88"];
d13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
d15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", color=green, community=0, label="IsWarmingUp = false", prediction=6, span="96-96"];
d14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
d16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
d18 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="_warmupBarCount.HasValue", prediction=2, span="105-105"];
d17 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
d19 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", prediction=2, span="107-107"];
d20 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="_warmupTimeSpan.HasValue", prediction=2, span="109-109"];
d24 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
d25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="540-540"];
d21 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="var end = UtcTime.ConvertFromUtc(TimeZone)", prediction=10, span="111-111"];
d23 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="return Enumerable.Empty<HistoryRequest>();", prediction=11, span="116-116"];
d27 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="521-521"];
d22 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", color=green, community=0, label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end);", prediction=2, span="112-112"];
d26 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="564-564"];
d28 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", color=green, community=0, label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", prediction=2, span="129-129"];
d29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
d31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
d32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
d33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
d35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", color=green, community=0, label="return History(Securities.Keys, periods, resolution).Memoize();", prediction=2, span="142-142"];
d34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
d36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
d37 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
d39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156"];
d42 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="171-171"];
d46 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="187-196"];
d55 [cluster="lambda expression", label="var security = Securities[x]", span="189-189"];
d60 [cluster="lambda expression", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="194-194"];
d61 [cluster="lambda expression", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="195-195"];
d47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="198-198"];
d72 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="213-220"];
d76 [cluster="lambda expression", label="var security = Securities[x]", span="215-215"];
d80 [cluster="lambda expression", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="219-219"];
d73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="222-222"];
d86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236"];
d90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var security = Securities[symbol]", span="249-249"];
d91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250"];
d94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="255-255"];
d95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="258-258"];
d102 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var security = Securities[symbol]", span="274-274"];
d108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="284-284"];
d109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="285-285"];
d119 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var security = Securities[symbol]", span="299-299"];
d125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="309-309"];
d126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(request).Get<T>(symbol).Memoize();", span="310-310"];
d136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="325-325"];
d137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="328-328"];
d143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="344-344"];
d144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="347-347"];
d146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="361-361"];
d150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="376-376"];
d153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="391-391"];
d155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var security = Securities[symbol]", span="399-399"];
d158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="403-403"];
d159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="404-404"];
d163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="return History(new[] {request}).Memoize();", span="414-414"];
d165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="return History(requests, TimeZone).Memoize();", span="424-424"];
d172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="443-443"];
d173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="444-444"];
d178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var request = new HistoryRequest\r\n            {\r\n                StartTimeUtc = startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                EndTimeUtc = endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                DataType = subscriptionDataConfig != null ? subscriptionDataConfig.Type : typeof(TradeBar),\r\n                Resolution = resolution,\r\n                FillForwardResolution = resolution,\r\n                Symbol = security.Symbol,\r\n                ExchangeHours = security.Exchange.Hours\r\n            }", span="456-465"];
d179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var history = History(new List<HistoryRequest> { request })", span="467-467"];
d195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="488-488"];
d196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="489-489"];
d201 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.EndTimeUtc > UtcTime", span="499-499"];
d202 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.EndTimeUtc = UtcTime", span="501-501"];
d207 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Debug(''Request for future history modified to end now.'')", span="509-509"];
d208 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="515-515"];
d213 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="return symbols.Where(x => !x.IsCanonical()).Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof (BaseData));\r\n                var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                // apply overrides\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n                return request;\r\n            });", span="523-534"];
d219 [cluster="lambda expression", label="var security = Securities[x]", span="525-525"];
d221 [cluster="lambda expression", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="527-527"];
d229 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="return symbols.Where(x => !x.IsCanonical()).Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var config = GetMatchingSubscription(security, typeof(BaseData));\r\n                return CreateHistoryRequest(security, config, start, Time.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            });", span="542-549"];
d235 [cluster="lambda expression", label="var security = Securities[x]", span="544-544"];
d237 [cluster="lambda expression", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="546-546"];
d239 [cluster="lambda expression", label="return CreateHistoryRequest(security, config, start, Time.RoundDown(res.Value.ToTimeSpan()), resolution);", span="548-548"];
d243 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="559-564"];
d64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
d68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="552-552"];
d152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
d230 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="540-540"];
d236 [cluster="lambda expression", label="Resolution? res = resolution ?? security.Resolution", span="545-545"];
d214 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="521-521"];
d222 [cluster="lambda expression", label="Resolution? res = resolution ?? security.Resolution", span="530-530"];
d223 [cluster="lambda expression", label="fillForward.HasValue", span="531-531"];
d224 [cluster="lambda expression", label="request.FillForwardResolution = fillForward.Value ? res : null", span="531-531"];
d225 [cluster="lambda expression", label="extendedMarket.HasValue", span="532-532"];
d226 [cluster="lambda expression", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="532-532"];
d154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
d139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
d140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
d89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
d151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
d148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="resolution == Resolution.Tick", span="375-375"];
d38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
d40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
d41 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
d43 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
d44 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
d45 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
d63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="569-569"];
d168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
d49 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d54 [cluster="lambda expression", label="Entry lambda expression", span="187-196"];
d56 [cluster="lambda expression", label="var config = GetMatchingSubscription(security, typeof(T))", span="190-190"];
d59 [cluster="lambda expression", label="Resolution? res = resolution ?? security.Resolution", span="193-193"];
d255 [label="QuantConnect.Resolution?", span=""];
d256 [label=int, span=""];
d65 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="576-576"];
d62 [cluster="lambda expression", label="Exit lambda expression", span="187-196"];
d66 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="682-682"];
d67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="475-475"];
d48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
d50 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d51 [cluster="Unk.History", label="Entry Unk.History", span=""];
d52 [cluster="Unk.>", label="Entry Unk.>", span=""];
d53 [cluster="Unk.Memoize", label="Entry Unk.Memoize", span=""];
d69 [cluster="lambda expression", label="Entry lambda expression", span="198-198"];
d75 [cluster="lambda expression", label="Entry lambda expression", span="213-220"];
d77 [cluster="lambda expression", label="var config = GetMatchingSubscription(security, typeof(T))", span="216-216"];
d257 [label="System.DateTime", span=""];
d258 [label="System.DateTime", span=""];
d259 [label="QuantConnect.Resolution?", span=""];
d78 [cluster="lambda expression", label="config == null", span="217-217"];
d81 [cluster="lambda expression", label="Exit lambda expression", span="213-220"];
d74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
d82 [cluster="lambda expression", label="Entry lambda expression", span="222-222"];
d85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
d87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
d88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
d92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="252-252"];
d93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="253-253"];
d97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1631-1631"];
d96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
d98 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
d99 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
d100 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="resolution == Resolution.Tick", span="273-273"];
d103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var requestedType = typeof(T)", span="276-276"];
d104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var config = GetMatchingSubscription(security, requestedType)", span="277-277"];
d106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="280-280"];
d105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="config == null", span="278-278"];
d110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
d120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var requestedType = typeof(T)", span="301-301"];
d121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var config = GetMatchingSubscription(security, requestedType)", span="302-302"];
d123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="305-305"];
d122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="config == null", span="303-303"];
d128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
d127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
d129 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
d135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="323-323"];
d133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
d138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
d142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="342-342"];
d145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
d147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
d156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="400-400"];
d157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="402-402"];
d161 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390"];
d160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
d162 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="545-545"];
d164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
d166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
d167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="492-492"];
d171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="441-441"];
d186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="481-481"];
d174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var subscriptionDataConfig = GetMatchingSubscription(security, typeof(BaseData))", span="447-447"];
d177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="453-453"];
d175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="450-450"];
d189 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest()", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest()", span="86-86"];
d180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="history.Any() && history.First().Values.Any()", span="469-469"];
d190 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return history.First().Values.First();", span="471-471"];
d194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="486-486"];
d197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="481-481"];
d200 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label=reqs, span="496-496"];
d203 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.StartTimeUtc > request.EndTimeUtc", span="502-502"];
d206 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="sentMessage = true", span="508-508"];
d211 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1606-1606"];
d199 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="var reqs = requests.ToList()", span="495-495"];
d209 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="492-492"];
d212 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
d215 [cluster="lambda expression", label="Entry lambda expression", span="523-523"];
d218 [cluster="lambda expression", label="Entry lambda expression", span="523-534"];
d220 [cluster="lambda expression", label="var config = GetMatchingSubscription(security, typeof (BaseData))", span="526-526"];
d260 [label="System.DateTime", span=""];
d261 [label="System.DateTime", span=""];
d262 [label="QuantConnect.Resolution?", span=""];
d227 [cluster="lambda expression", label="return request;", span="533-533"];
d231 [cluster="lambda expression", label="Entry lambda expression", span="542-542"];
d234 [cluster="lambda expression", label="Entry lambda expression", span="542-549"];
d238 [cluster="lambda expression", label="var config = GetMatchingSubscription(security, typeof(BaseData))", span="547-547"];
d266 [label=int, span=""];
d265 [label="QuantConnect.Resolution?", span=""];
d240 [cluster="lambda expression", label="Exit lambda expression", span="542-549"];
d241 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="resolution = resolution ?? security.Resolution", span="554-554"];
d242 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="557-557"];
d244 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="return request;", span="566-566"];
d246 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="145-145"];
d245 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="552-552"];
d263 [label="bool?", span=""];
d264 [label="bool?", span=""];
d141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="341-341"];
d149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="375-375"];
d248 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="569-569"];
d247 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="return (from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                    where type.IsAssignableFrom(sub.Type)\r\n                    select sub).FirstOrDefault();", span="572-574"];
d183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
d169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="security.Symbol.IsCanonical()", span="435-435"];
d57 [cluster="lambda expression", label="config == null", span="191-191"];
d58 [cluster="lambda expression", label="return null;", span="191-191"];
d193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="483-483"];
d71 [cluster="lambda expression", label="Exit lambda expression", span="198-198"];
d70 [cluster="lambda expression", label="x != null", span="198-198"];
d79 [cluster="lambda expression", label="return null;", span="217-217"];
d84 [cluster="lambda expression", label="Exit lambda expression", span="222-222"];
d83 [cluster="lambda expression", label="x != null", span="222-222"];
d124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="306-306"];
d107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="281-281"];
d101 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="273-273"];
d112 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d113 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d116 [cluster="lambda expression", label="Entry lambda expression", span="280-280"];
d130 [cluster="lambda expression", label="Entry lambda expression", span="305-305"];
d134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", label="var securityType = symbol.ID.SecurityType", span="322-322"];
d198 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="var sentMessage = false", span="494-494"];
d185 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
d176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="var dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="452-452"];
d188 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="247-247"];
d182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return null;", span="474-474"];
d191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d192 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d205 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="!sentMessage", span="506-506"];
d204 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="request.StartTimeUtc = request.EndTimeUtc", span="504-504"];
d210 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d217 [cluster="lambda expression", label="Exit lambda expression", span="523-523"];
d216 [cluster="lambda expression", label="!x.IsCanonical()", span="523-523"];
d228 [cluster="lambda expression", label="Exit lambda expression", span="523-534"];
d233 [cluster="lambda expression", label="Exit lambda expression", span="542-542"];
d232 [cluster="lambda expression", label="!x.IsCanonical()", span="542-542"];
d187 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
d111 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
d249 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d250 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d251 [cluster="lambda expression", label="Entry lambda expression", span="572-572"];
d170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", label="return null;", span="437-437"];
d184 [cluster="QuantConnect.Symbol.IsCanonical()", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
d114 [cluster="ArgumentException.cstr", label="Entry ArgumentException.cstr", span=""];
d115 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
d118 [cluster="lambda expression", label="Exit lambda expression", span="280-280"];
d117 [cluster="lambda expression", label="x.Type.Name", span="280-280"];
d132 [cluster="lambda expression", label="Exit lambda expression", span="305-305"];
d131 [cluster="lambda expression", label="x.Type.Name", span="305-305"];
d253 [cluster="lambda expression", label="Exit lambda expression", span="572-572"];
d252 [cluster="lambda expression", label="s.Resolution", span="572-572"];
m1_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m1_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return AROON(symbol, period, period, resolution, selector);", span="234-234"];
m1_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m1_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1048-1048"];
m1_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = selector ?? (x => x.Value)", span="1051-1051"];
m1_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1054-1054"];
m1_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="1057-1061"];
m1_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1048-1048"];
m1_12 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m1_128 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="67-67"];
m1_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m1_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="455-455"];
m1_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="457-457"];
m1_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var onBalanceVolume = new OnBalanceVolume(name)", span="456-456"];
m1_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return onBalanceVolume;", span="458-458"];
m1_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m1_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m1_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="386-386"];
m1_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rateofchange = new RateOfChange(name, period)", span="387-387"];
m1_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="388-388"];
m1_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rateofchange;", span="389-389"];
m1_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m1_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m1_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="403-403"];
m1_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="404-404"];
m1_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="405-405"];
m1_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rateofchangepercent;", span="406-406"];
m1_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m1_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49"];
m1_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="51-51"];
m1_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, identity, resolution, selector)", span="53-53"];
m1_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var identity = new Identity(name)", span="52-52"];
m1_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return identity;", span="54-54"];
m1_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49"];
m1_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m1_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="842-842"];
m1_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var natr = new NormalizedAverageTrueRange(name, period)", span="843-843"];
m1_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, natr, resolution, selector)", span="844-844"];
m1_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return natr;", span="845-845"];
m1_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m1_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m1_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="633-633"];
m1_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var variance = new Variance(name, period)", span="634-634"];
m1_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, variance, resolution, selector)", span="635-635"];
m1_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return variance;", span="636-636"];
m1_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m1_215 [cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54"];
m1_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m1_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="491-491"];
m1_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="492-492"];
m1_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="493-493"];
m1_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return keltnerChannels;", span="494-494"];
m1_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m1_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m1_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return STO(symbol, period, period, 3, resolution);", span="555-555"];
m1_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m1_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m1_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="776-776"];
m1_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var mad = new MeanAbsoluteDeviation(name, period)", span="777-777"];
m1_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, mad, resolution, selector)", span="778-778"];
m1_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return mad;", span="779-779"];
m1_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m1_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m1_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="826-826"];
m1_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="827-827"];
m1_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, t3, resolution, selector)", span="828-828"];
m1_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return t3;", span="829-829"];
m1_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m1_351 [cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="62-62"];
m1_379 [cluster="QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", span="55-55"];
m1_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m1_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="680-680"];
m1_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, tr, resolution, selector)", span="682-682"];
m1_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var tr = new TrueRange(name)", span="681-681"];
m1_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return tr;", span="683-683"];
m1_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m1_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34"];
m1_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var resolution = GetSubscription(symbol).Resolution", span="36-36"];
m1_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return Identity(symbol, resolution, selector, fieldName);", span="37-37"];
m1_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34"];
m1_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m1_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="300-300"];
m1_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="301-301"];
m1_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rsi, resolution, selector)", span="302-302"];
m1_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rsi;", span="303-303"];
m1_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m1_330 [cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44"];
m1_430 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="121-121"];
m1_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m1_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="509-509"];
m1_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="510-510"];
m1_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="511-511"];
m1_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return donchianChannel;", span="512-512"];
m1_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m1_438 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_473 [cluster="System.Type.MakeGenericType(params System.Type[])", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m1_525 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_493 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39"];
m1_100 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61"];
m1_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m1_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''DEMA'' + period, resolution)", span="712-712"];
m1_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var dema = new DoubleExponentialMovingAverage(name, period)", span="713-713"];
m1_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, dema, resolution, selector)", span="714-714"];
m1_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return dema;", span="715-715"];
m1_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m1_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m1_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="369-369"];
m1_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="370-370"];
m1_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, bb, resolution, selector)", span="371-371"];
m1_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return bb;", span="372-372"];
m1_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m1_393 [cluster="QuantConnect.Indicators.MidPrice.MidPrice(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MidPrice.MidPrice(string, int)", span="35-35"];
m1_491 [cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30"];
m1_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1099-1099"];
m1_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1102-1102"];
m1_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1099-1099"];
m1_267 [cluster="QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", span="48-48"];
m1_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1179-1179"];
m1_476 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="1181-1181"];
m1_477 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="!timeSpan.HasValue || subscription.Resolution.ToTimeSpan() == timeSpan.Value", span="1184-1184"];
m1_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1193-1193"];
m1_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                    );", span="1195-1198"];
m1_483 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new TradeBarConsolidator(timeSpan.Value);", span="1205-1205"];
m1_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new TickConsolidator(timeSpan.Value);", span="1212-1212"];
m1_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new DynamicDataConsolidator(timeSpan.Value);", span="1218-1218"];
m1_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new BaseDataConsolidator(timeSpan.Value);", span="1222-1222"];
m1_478 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1187-1187"];
m1_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1203-1203"];
m1_484 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1210-1210"];
m1_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1216-1216"];
m1_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1188-1188"];
m1_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1179-1179"];
m1_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m1_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="318-318"];
m1_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="319-319"];
m1_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, cci, resolution, selector)", span="320-320"];
m1_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return cci;", span="321-321"];
m1_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m1_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m1_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="421-421"];
m1_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var williamspercentr = new WilliamsPercentR(name, period)", span="422-422"];
m1_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="423-423"];
m1_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return williamspercentr;", span="424-424"];
m1_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m1_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m1_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="124-124"];
m1_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var ema = new ExponentialMovingAverage(name, period)", span="125-125"];
m1_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ema, resolution, selector)", span="126-126"];
m1_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return ema;", span="127-127"];
m1_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m1_490 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m1_114 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m1_503 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1237-1237"];
m1_75 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="((TradeBar)x).High", span="187-187"];
m1_74 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="187-187"];
m1_76 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="187-187"];
m1_89 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="((TradeBar) x).Low", span="216-216"];
m1_88 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="216-216"];
m1_90 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="216-216"];
m1_418 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1024-1024"];
m1_417 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1024-1024"];
m1_419 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1024-1024"];
m1_424 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1037-1037"];
m1_423 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1037-1037"];
m1_425 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1037-1037"];
m1_436 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="1060-1060"];
m1_432 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1051-1051"];
m1_435 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="var value = selector(consolidated)", span="1059-1059"];
m1_431 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1051-1051"];
m1_433 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1051-1051"];
m1_434 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1057-1061"];
m1_437 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1057-1061"];
m1_462 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="indicator.Update(value)", span="1136-1136"];
m1_458 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="(T) x", span="1117-1117"];
m1_461 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="var value = selector(consolidated)", span="1135-1135"];
m1_457 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1117-1117"];
m1_459 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1117-1117"];
m1_460 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1133-1137"];
m1_463 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1133-1137"];
m1_504 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Symbol == symbol", span="1237-1237"];
m1_505 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1237-1237"];
m1_365 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39"];
m1_135 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78"];
m1_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m1_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''AD'', resolution)", span="648-648"];
m1_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ad, resolution, selector)", span="650-650"];
m1_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ad = new AccumulationDistribution(name)", span="649-649"];
m1_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ad;", span="651-651"];
m1_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m1_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m1_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="744-744"];
m1_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var trima = new TriangularMovingAverage(name, period)", span="745-745"];
m1_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, trima, resolution, selector)", span="746-746"];
m1_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return trima;", span="747-747"];
m1_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m1_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m1_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PPO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="991-991"];
m1_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var ppo = new PercentagePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="992-992"];
m1_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ppo, resolution, selector)", span="993-993"];
m1_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return ppo;", span="994-994"];
m1_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m1_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m1_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="540-540"];
m1_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="541-541"];
m1_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, stoch, resolution)", span="542-542"];
m1_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return stoch;", span="543-543"];
m1_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m1_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m1_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="160-160"];
m1_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="161-161"];
m1_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, macd, resolution, selector)", span="162-162"];
m1_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return macd;", span="163-163"];
m1_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m1_142 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m1_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m1_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="438-438"];
m1_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var lwma = new LinearWeightedMovingAverage(name, period)", span="439-439"];
m1_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, lwma, resolution, selector)", span="440-440"];
m1_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return lwma;", span="441-441"];
m1_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m1_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m1_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ULTOSC({0},{1},{2})'', period1, period2, period3), resolution)", span="923-923"];
m1_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ultosc = new UltimateOscillator(name, period1, period2, period3)", span="924-924"];
m1_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ultosc, resolution, selector)", span="925-925"];
m1_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ultosc;", span="926-926"];
m1_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m1_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1035-1035"];
m1_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1037-1037"];
m1_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1035-1035"];
m1_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m1_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="206-206"];
m1_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var min = new Minimum(name, period)", span="207-207"];
m1_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector == null", span="210-210"];
m1_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="212-212"];
m1_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="220-220"];
m1_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return min;", span="221-221"];
m1_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="typeof (TradeBar).IsAssignableFrom(subscription.Type)", span="213-213"];
m1_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = x => ((TradeBar) x).Low", span="216-216"];
m1_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m1_260 [cluster="QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", span="30-30"];
m1_232 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="40-40"];
m1_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1231-1231"];
m1_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="SubscriptionDataConfig subscription", span="1233-1233"];
m1_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1237-1237"];
m1_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1242-1242"];
m1_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label=InvalidOperationException, span="1239-1239"];
m1_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="return subscription;", span="1244-1244"];
m1_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1231-1231"];
m1_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m1_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return DCH(symbol, period, period, resolution, selector);", span="526-526"];
m1_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m1_400 [cluster="QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="34-34"];
m1_316 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48"];
m1_38 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
m1_20 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m1_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''CMO'' + period, resolution)", span="696-696"];
m1_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var cmo = new ChandeMomentumOscillator(name, period)", span="697-697"];
m1_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, cmo, resolution, selector)", span="698-698"];
m1_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return cmo;", span="699-699"];
m1_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m1_60 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66"];
m1_288 [cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38"];
m1_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m1_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="68-68"];
m1_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, identity, ResolveConsolidator(symbol, resolution), selector)", span="70-70"];
m1_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var identity = new Identity(name)", span="69-69"];
m1_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return identity;", span="71-71"];
m1_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m1_372 [cluster="QuantConnect.Indicators.MidPoint.MidPoint(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MidPoint.MidPoint(string, int)", span="33-33"];
m1_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m1_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="472-472"];
m1_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="473-473"];
m1_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="474-474"];
m1_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return averageDirectionalIndex;", span="475-475"];
m1_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m1_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m1_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="583-583"];
m1_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var lsma = new LeastSquaresMovingAverage(name, period)", span="584-584"];
m1_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, lsma, resolution, selector)", span="585-585"];
m1_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return lsma;", span="586-586"];
m1_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m1_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m1_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''KAMA'' + period, resolution)", span="889-889"];
m1_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var kama = new KaufmanAdaptiveMovingAverage(name, period)", span="890-890"];
m1_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, kama, resolution, selector)", span="891-891"];
m1_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return kama;", span="892-892"];
m1_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m1_198 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80"];
m1_87 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m1_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m1_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="728-728"];
m1_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var tema = new TripleExponentialMovingAverage(name, period)", span="729-729"];
m1_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, tema, resolution, selector)", span="730-730"];
m1_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return tema;", span="731-731"];
m1_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m1_309 [cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29"];
m1_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m1_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="617-617"];
m1_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, bop, resolution, selector)", span="619-619"];
m1_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var bop = new BalanceOfPower(name)", span="618-618"];
m1_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return bop;", span="620-620"];
m1_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m1_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m1_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="793-793"];
m1_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="794-794"];
m1_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momersion, resolution, selector)", span="795-795"];
m1_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momersion;", span="796-796"];
m1_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m1_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m1_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''APO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="973-973"];
m1_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var apo = new AbsolutePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="974-974"];
m1_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, apo, resolution, selector)", span="975-975"];
m1_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return apo;", span="976-976"];
m1_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m1_302 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34"];
m1_474 [cluster="System.Activator.CreateInstance(System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_253 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m1_407 [cluster="QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="31-31"];
m1_502 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m1_246 [cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30"];
m1_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m1_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="141-141"];
m1_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var sma = new SimpleMovingAverage(name, period)", span="142-142"];
m1_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, sma, resolution, selector)", span="143-143"];
m1_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return sma;", span="144-144"];
m1_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m1_225 [cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31"];
m1_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m1_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="873-873"];
m1_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="874-874"];
m1_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, adxr, resolution, selector)", span="875-875"];
m1_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return adxr;", span="876-876"];
m1_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m1_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m1_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="248-248"];
m1_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="249-249"];
m1_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, aroon, resolution, selector)", span="250-250"];
m1_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return aroon;", span="251-251"];
m1_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m1_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m1_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''VWAP'' + period, resolution)", span="1008-1008"];
m1_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var vwap = new VolumeWeightedAveragePriceIndicator(name, period)", span="1009-1009"];
m1_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, vwap, resolution, selector)", span="1010-1010"];
m1_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return vwap;", span="1011-1011"];
m1_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m1_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m1_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIDPRICE'' + period, resolution)", span="955-955"];
m1_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var midprice = new MidPrice(name, period)", span="956-956"];
m1_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, midprice, resolution, selector)", span="957-957"];
m1_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return midprice;", span="958-958"];
m1_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m1_501 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_205 [cluster="QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", span="55-55"];
m1_149 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m1_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1071-1071"];
m1_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="1074-1074"];
m1_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1071-1071"];
m1_456 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1254-1254"];
m1_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="!resolution.HasValue", span="1256-1256"];
m1_507 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="resolution = GetSubscription(symbol).Resolution", span="1258-1258"];
m1_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=resolution, span="1261-1261"];
m1_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1285-1285"];
m1_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string res", span="1260-1260"];
m1_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Tick", span="1263-1263"];
m1_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Second", span="1266-1266"];
m1_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Minute", span="1269-1269"];
m1_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Hour", span="1272-1272"];
m1_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Daily", span="1275-1275"];
m1_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=null, span="1278-1278"];
m1_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="1282-1282"];
m1_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_tick''", span="1264-1264"];
m1_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_sec''", span="1267-1267"];
m1_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_min''", span="1270-1270"];
m1_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_hr''", span="1273-1273"];
m1_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_day''", span="1276-1276"];
m1_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = string.Empty", span="1279-1279"];
m1_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1254-1254"];
m1_440 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m1_53 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m1_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m1_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="265-265"];
m1_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momentum = new Momentum(name, period)", span="266-266"];
m1_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="267-267"];
m1_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="268-268"];
m1_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m1_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m1_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="351-351"];
m1_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var std = new StandardDeviation(name, period)", span="352-352"];
m1_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, std, resolution, selector)", span="353-353"];
m1_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return std;", span="354-354"];
m1_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m1_239 [cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43"];
m1_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105"];
m1_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="107-107"];
m1_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var atr = new AverageTrueRange(name, period, type)", span="108-108"];
m1_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, atr, resolution, selector)", span="109-109"];
m1_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return atr;", span="110-110"];
m1_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105"];
m1_414 [cluster="QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", span="48-48"];
m1_184 [cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34"];
m1_156 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m1_107 [cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37"];
m1_29 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_46 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m1_170 [cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59"];
m1_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m1_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIDPOINT'' + period, resolution)", span="905-905"];
m1_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var midpoint = new MidPoint(name, period)", span="906-906"];
m1_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, midpoint, resolution, selector)", span="907-907"];
m1_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return midpoint;", span="908-908"];
m1_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m1_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m1_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="282-282"];
m1_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momentum = new MomentumPercent(name, period)", span="283-283"];
m1_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="284-284"];
m1_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="285-285"];
m1_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m1_500 [cluster="Unk.First", file="QCAlgorithm.Indicators.cs", label="Entry Unk.First", span=""];
m1_475 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="581-581"];
m1_163 [cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37"];
m1_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m1_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="601-601"];
m1_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="602-602"];
m1_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, psar, resolution, selector)", span="603-603"];
m1_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return psar;", span="604-604"];
m1_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m1_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m1_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="177-177"];
m1_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var max = new Maximum(name, period)", span="178-178"];
m1_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector == null", span="181-181"];
m1_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="183-183"];
m1_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="191-191"];
m1_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return max;", span="192-192"];
m1_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="184-184"];
m1_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = x => ((TradeBar)x).High", span="187-187"];
m1_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m1_281 [cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44"];
m1_337 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38"];
m1_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1022-1022"];
m1_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1024-1024"];
m1_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1022-1022"];
m1_274 [cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35"];
m1_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m1_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="809-809"];
m1_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var sum = new Sum(name, period)", span="810-810"];
m1_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, sum, resolution, selector)", span="811-811"];
m1_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return sum;", span="812-812"];
m1_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m1_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m1_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="567-567"];
m1_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var logr = new LogReturn(name, period)", span="568-568"];
m1_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, logr, resolution)", span="569-569"];
m1_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return logr;", span="570-570"];
m1_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m1_492 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30"];
m1_121 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m1_71 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m1_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m1_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="760-760"];
m1_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rocr = new RateOfChangeRatio(name, period)", span="761-761"];
m1_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rocr, resolution, selector)", span="762-762"];
m1_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rocr;", span="763-763"];
m1_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m1_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m1_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ADOSC({0},{1})'', fastPeriod, slowPeriod), resolution)", span="665-665"];
m1_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var adOsc = new AccumulationDistributionOscillator(name, fastPeriod, slowPeriod)", span="666-666"];
m1_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, adOsc, resolution, selector)", span="667-667"];
m1_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return adOsc;", span="668-668"];
m1_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m1_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m1_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="335-335"];
m1_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var mfi = new MoneyFlowIndex(name, period)", span="336-336"];
m1_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, mfi, resolution, selector)", span="337-337"];
m1_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return mfi;", span="338-338"];
m1_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m1_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m1_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="89-89"];
m1_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="90-90"];
m1_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ichimoku, resolution)", span="91-91"];
m1_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return ichimoku;", span="92-92"];
m1_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m1_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m1_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="857-857"];
m1_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ha, resolution, selector)", span="859-859"];
m1_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ha = new HeikinAshi(name)", span="858-858"];
m1_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ha;", span="860-860"];
m1_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m1_386 [cluster="QuantConnect.Indicators.Trix.Trix(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Trix.Trix(string, int)", span="35-35"];
m1_439 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m1_191 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66"];
m1_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m1_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TRIX'' + period, resolution)", span="939-939"];
m1_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var trix = new Trix(name, period)", span="940-940"];
m1_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, trix, resolution, selector)", span="941-941"];
m1_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return trix;", span="942-942"];
m1_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m1_295 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37"];
m1_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1113-1113"];
m1_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="selector = selector ?? (x => (T) x)", span="1117-1117"];
m1_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1120-1120"];
m1_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="!type.IsAssignableFrom(consolidator.OutputType)", span="1124-1124"];
m1_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                    ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                    );", span="1126-1129"];
m1_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="1133-1137"];
m1_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="var type = typeof(T)", span="1123-1123"];
m1_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1113-1113"];
m1_177 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41"];
m1_344 [cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36"];
m1_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1085-1085"];
m1_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1088-1088"];
m1_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1085-1085"];
m1_30 [cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99"];
m1_358 [cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36"];
m1_323 [cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52"];
m1_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1146-1146"];
m1_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="1148-1148"];
m1_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="!resolution.HasValue || subscription.Resolution == resolution.Value", span="1151-1151"];
m1_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var timeSpan = resolution.Value.ToTimeSpan()", span="1158-1158"];
m1_470 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                    );", span="1164-1167"];
m1_471 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return ResolveConsolidator(symbol, timeSpan);", span="1170-1170"];
m1_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1154-1154"];
m1_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1162-1162"];
m1_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1155-1155"];
m1_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1146-1146"];
m1_526 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m1_527 [file="QCAlgorithm.Indicators.cs", label="System.Func<QuantConnect.Data.BaseData, decimal>", span=""];
m1_528 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span=""];
m1_529 [file="QCAlgorithm.Indicators.cs", label="System.Func<QuantConnect.Data.BaseData, T>", span=""];
m1_530 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m1_531 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Symbol", span=""];
d254 -> d5  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d12  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d18  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d19  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d20  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d22  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d30  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d35  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d136  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d163  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d208  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d254 -> d239  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
d25 -> d239  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d27 -> d223  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d27 -> d225  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d37 -> d150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
d46 -> d54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d55 -> d61  [color=darkseagreen4, key=1, label=security, style=dashed];
d47 -> d69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d72 -> d75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d76 -> d80  [color=darkseagreen4, key=1, label=security, style=dashed];
d73 -> d82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d90 -> d95  [color=darkseagreen4, key=1, label=security, style=dashed];
d91 -> d95  [color=darkseagreen4, key=1, label=start, style=dashed];
d102 -> d109  [color=darkseagreen4, key=1, label=security, style=dashed];
d155 -> d159  [color=darkseagreen4, key=1, label=security, style=dashed];
d179 -> d181  [color=darkseagreen4, key=1, label=history, style=dashed];
d213 -> d215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d213 -> d218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d221 -> d227  [color=darkseagreen4, key=1, label=request, style=dashed];
d229 -> d231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d229 -> d234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d235 -> d239  [color=darkseagreen4, key=1, label=security, style=dashed];
d237 -> d239  [color=darkseagreen4, key=1, label=start, style=dashed];
d236 -> d239  [color=darkseagreen4, key=1, label=res, style=dashed];
d140 -> d144  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d89 -> d95  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d44 -> d80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d45 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d56 -> d61  [color=darkseagreen4, key=1, label=config, style=dashed];
d59 -> d61  [color=darkseagreen4, key=1, label=res, style=dashed];
d255 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d77 -> d80  [color=darkseagreen4, key=1, label=config, style=dashed];
d257 -> d80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d258 -> d80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d259 -> d80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d88 -> d126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d88 -> d124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d99 -> d109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d99 -> d107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d103 -> d107  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
d106 -> d116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d120 -> d124  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
d123 -> d130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d133 -> d137  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
d167 -> d208  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
d186 -> d196  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
d200 -> d203  [color=darkseagreen4, key=1, label=request, style=dashed];
d199 -> d208  [color=darkseagreen4, key=1, label=reqs, style=dashed];
d265 -> d239  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
d263 -> d223  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d264 -> d225  [color=darkseagreen4, key=1, label="bool?", style=dashed];
d247 -> d247  [color=darkseagreen4, key=1, label=sub, style=dashed];
d247 -> d251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d198 -> d205  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m1_22 -> m1_427  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_22 -> m1_436  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m1_426 -> m1_432  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_428 -> m1_436  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_178 -> m1_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label=onBalanceVolume, style=dashed];
m1_150 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=rateofchange, style=dashed];
m1_157 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_159 -> m1_161  [color=darkseagreen4, key=1, label=rateofchangepercent, style=dashed];
m1_5 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=identity, style=dashed];
m1_338 -> m1_341  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_340 -> m1_342  [color=darkseagreen4, key=1, label=natr, style=dashed];
m1_247 -> m1_250  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_249 -> m1_251  [color=darkseagreen4, key=1, label=variance, style=dashed];
m1_192 -> m1_195  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=keltnerChannels, style=dashed];
m1_310 -> m1_313  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_312 -> m1_314  [color=darkseagreen4, key=1, label=mad, style=dashed];
m1_331 -> m1_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_333 -> m1_335  [color=darkseagreen4, key=1, label=t3, style=dashed];
m1_268 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_270 -> m1_272  [color=darkseagreen4, key=1, label=tr, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_115 -> m1_118  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_117 -> m1_119  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m1_199 -> m1_202  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_201 -> m1_203  [color=darkseagreen4, key=1, label=donchianChannel, style=dashed];
m1_282 -> m1_285  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_284 -> m1_286  [color=darkseagreen4, key=1, label=dema, style=dashed];
m1_143 -> m1_146  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_145 -> m1_147  [color=darkseagreen4, key=1, label=bb, style=dashed];
m1_21 -> m1_477  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_21 -> m1_480  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_21 -> m1_481  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_21 -> m1_483  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_21 -> m1_485  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_21 -> m1_487  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_21 -> m1_488  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m1_476 -> m1_480  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_476 -> m1_481  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_476 -> m1_482  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_476 -> m1_484  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_476 -> m1_486  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_124 -> m1_126  [color=darkseagreen4, key=1, label=cci, style=dashed];
m1_164 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_166 -> m1_168  [color=darkseagreen4, key=1, label=williamspercentr, style=dashed];
m1_40 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=ema, style=dashed];
m1_434 -> m1_436  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_256 -> m1_258  [color=darkseagreen4, key=1, label=ad, style=dashed];
m1_296 -> m1_299  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_298 -> m1_300  [color=darkseagreen4, key=1, label=trima, style=dashed];
m1_401 -> m1_404  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_403 -> m1_405  [color=darkseagreen4, key=1, label=ppo, style=dashed];
m1_209 -> m1_212  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_211 -> m1_213  [color=darkseagreen4, key=1, label=stoch, style=dashed];
m1_54 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=macd, style=dashed];
m1_171 -> m1_174  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_173 -> m1_175  [color=darkseagreen4, key=1, label=lwma, style=dashed];
m1_373 -> m1_376  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_375 -> m1_377  [color=darkseagreen4, key=1, label=ultosc, style=dashed];
m1_421 -> m1_424  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_77 -> m1_80  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m1_77 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_79 -> m1_84  [color=darkseagreen4, key=1, label=min, style=dashed];
m1_79 -> m1_85  [color=darkseagreen4, key=1, label=min, style=dashed];
m1_83 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_4 -> m1_504  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_4 -> m1_497  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_495 -> m1_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_275 -> m1_278  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_277 -> m1_279  [color=darkseagreen4, key=1, label=cmo, style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=identity, style=dashed];
m1_185 -> m1_188  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_187 -> m1_189  [color=darkseagreen4, key=1, label=averageDirectionalIndex, style=dashed];
m1_226 -> m1_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_228 -> m1_230  [color=darkseagreen4, key=1, label=lsma, style=dashed];
m1_359 -> m1_362  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_361 -> m1_363  [color=darkseagreen4, key=1, label=kama, style=dashed];
m1_289 -> m1_292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_291 -> m1_293  [color=darkseagreen4, key=1, label=tema, style=dashed];
m1_240 -> m1_243  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_242 -> m1_244  [color=darkseagreen4, key=1, label=bop, style=dashed];
m1_317 -> m1_320  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_319 -> m1_321  [color=darkseagreen4, key=1, label=momersion, style=dashed];
m1_394 -> m1_397  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_396 -> m1_398  [color=darkseagreen4, key=1, label=apo, style=dashed];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_49 -> m1_51  [color=darkseagreen4, key=1, label=sma, style=dashed];
m1_352 -> m1_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label=adxr, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m1_408 -> m1_411  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_410 -> m1_412  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m1_387 -> m1_390  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_389 -> m1_391  [color=darkseagreen4, key=1, label=midprice, style=dashed];
m1_11 -> m1_509  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_11 -> m1_523  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_507 -> m1_509  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_101 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_103 -> m1_105  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m1_136 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label=std, style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=atr, style=dashed];
m1_366 -> m1_369  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_368 -> m1_370  [color=darkseagreen4, key=1, label=midpoint, style=dashed];
m1_108 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_110 -> m1_112  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m1_233 -> m1_236  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_235 -> m1_237  [color=darkseagreen4, key=1, label=psar, style=dashed];
m1_61 -> m1_64  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m1_61 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_63 -> m1_68  [color=darkseagreen4, key=1, label=max, style=dashed];
m1_63 -> m1_69  [color=darkseagreen4, key=1, label=max, style=dashed];
m1_67 -> m1_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_415 -> m1_418  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_324 -> m1_327  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_326 -> m1_328  [color=darkseagreen4, key=1, label=sum, style=dashed];
m1_219 -> m1_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_221 -> m1_223  [color=darkseagreen4, key=1, label=logr, style=dashed];
m1_303 -> m1_306  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_305 -> m1_307  [color=darkseagreen4, key=1, label=rocr, style=dashed];
m1_261 -> m1_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_263 -> m1_265  [color=darkseagreen4, key=1, label=adOsc, style=dashed];
m1_129 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label=mfi, style=dashed];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=ichimoku, style=dashed];
m1_345 -> m1_348  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_347 -> m1_349  [color=darkseagreen4, key=1, label=ha, style=dashed];
m1_380 -> m1_383  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_382 -> m1_384  [color=darkseagreen4, key=1, label=trix, style=dashed];
m1_443 -> m1_450  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_443 -> m1_452  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m1_443 -> m1_453  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_443 -> m1_462  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m1_449 -> m1_458  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_451 -> m1_453  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_73 -> m1_465  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m1_73 -> m1_470  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_73 -> m1_471  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_464 -> m1_469  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_464 -> m1_470  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_468 -> m1_471  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m1_526 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_195  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_202  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_236  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_264  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_278  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_306  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_320  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_369  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_376  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_411  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_415  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_427  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_441  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_526 -> m1_471  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m1_528 -> m1_436  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m1_530 -> m1_462  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m1_531 -> m1_504  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
}
