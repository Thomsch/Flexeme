digraph  {
n190 [label="QuantConnect.Python.PandasConverter", span=""];
n191 [label=getVolume, span=""];
n192 [label=toQuoteBar, span=""];
n193 [label=value, span=""];
n194 [label="QuantConnect.Symbol", span=""];
n0 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
n1 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="pandas == null", span="40-40"];
n4 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="_pandas = pandas", span="48-48"];
n2 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Py.GIL()", span="42-42"];
n3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="pandas = Py.Import(''pandas'')", span="44-44"];
n8 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n9 [cluster="Unk.Import", label="Entry Unk.Import", span=""];
n5 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label=PythonException, span="50-50"];
n7 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Exit QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
n6 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", label="Logging.Log.Error($''PandasConverter: Failed to import pandas module: {pythonException}'')", span="52-52"];
n10 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n11 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
n12 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: var symbols = data.SelectMany(x => x.Keys).Distinct().OrderBy(x => x.Value)", span="63-63"];
n21 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: var items = new PyObject[]\r\n                    {\r\n                        dataFrame,\r\n                        GetDataFrame(data.Get<QuoteBar>(symbol)),\r\n                        GetDataFrame(data.Get<TradeBar>(symbol))\r\n                    }", span="85-90"];
n13 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: Symbol underlying = null", span="67-67"];
n25 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
n27 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n36 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: var derivatives = symbols.Where(x => x.HasUnderlying)", span="68-68"];
n19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: symbols", span="78-78"];
n20 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: symbol == underlying", span="80-80"];
n15 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: derivatives.Count() > 0", span="69-69"];
n28 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n42 [cluster="lambda expression", label="Entry lambda expression", span="68-68"];
n16 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: underlying = derivatives.First().Underlying", span="71-71"];
n17 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: Py.GIL()", span="74-74"];
n29 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
n30 [cluster="Unk.First", label="Entry Unk.First", span=""];
n18 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: var dataFrame = _pandas.DataFrame()", span="76-76"];
n31 [cluster="Unk.DataFrame", label="Entry Unk.DataFrame", span=""];
n23 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: return dataFrame;", span="95-95"];
n22 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, label="-1: dataFrame = _pandas.concat(new PyList(items))", span="92-92"];
n32 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
n33 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
n34 [cluster="PyList.cstr", label="Entry PyList.cstr", span=""];
n35 [cluster="Unk.concat", label="Entry Unk.concat", span=""];
n24 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
n37 [cluster="lambda expression", color=red, community=0, label="-1: x.Keys", span="63-63"];
n38 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n40 [cluster="lambda expression", color=red, community=0, label="-1: x.Value", span="63-63"];
n41 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n43 [cluster="lambda expression", color=red, community=0, label="-1: x.HasUnderlying", span="68-68"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="68-68"];
n45 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: data.Count() == 0", span="107-107"];
n48 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: var index = CreateIndex(data.First().Symbol, data.Select(x => x.Time))", span="114-114"];
n50 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''low'', _pandas.Series(data.Select(x => (double)x.Low).ToList(), index))", span="118-118"];
n51 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''open'', _pandas.Series(data.Select(x => (double)x.Open).ToList(), index))", span="119-119"];
n52 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''high'', _pandas.Series(data.Select(x => (double)x.High).ToList(), index))", span="120-120"];
n53 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''close'', _pandas.Series(data.Select(x => (double)x.Close).ToList(), index))", span="121-121"];
n56 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''volume'', _pandas.Series(data.Select(x => getVolume(x)).ToList(), index))", span="126-126"];
n59 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''askopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open; }).ToList(), index))", span="132-132"];
n60 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''bidopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open; }).ToList(), index))", span="133-133"];
n61 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''askhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High; }).ToList(), index))", span="134-134"];
n62 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''bidhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High; }).ToList(), index))", span="135-135"];
n63 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''asklow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low; }).ToList(), index))", span="136-136"];
n64 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''bidlow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low; }).ToList(), index))", span="137-137"];
n65 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''askclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close; }).ToList(), index))", span="138-138"];
n66 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''bidclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close; }).ToList(), index))", span="139-139"];
n67 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''asksize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastAskSize).ToList(), index))", span="140-140"];
n68 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: pyDict.SetItem(''bidsize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastBidSize).ToList(), index))", span="141-141"];
n46 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: return _pandas.DataFrame();", span="109-109"];
n47 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: Py.GIL()", span="112-112"];
n71 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
n49 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="var pyDict = new PyDict()", span="116-116"];
n72 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n73 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n74 [cluster="Unk.CreateIndex", label="Entry Unk.CreateIndex", span=""];
n79 [cluster="lambda expression", label="Entry lambda expression", span="114-114"];
n75 [cluster="PyDict.cstr", label="Entry PyDict.cstr", span=""];
n69 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: return _pandas.DataFrame(pyDict);", span="144-144"];
n76 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n77 [cluster="Unk.Series", label="Entry Unk.Series", span=""];
n78 [cluster="Unk.SetItem", label="Entry Unk.SetItem", span=""];
n82 [cluster="lambda expression", label="Entry lambda expression", span="118-118"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="119-119"];
n88 [cluster="lambda expression", label="Entry lambda expression", span="120-120"];
n54 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: typeof(T) == typeof(TradeBar)", span="123-123"];
n91 [cluster="lambda expression", label="Entry lambda expression", span="121-121"];
n55 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: Func<IBaseDataBar, double> getVolume = x => { var bar = x as TradeBar; return (double)bar.Volume; }", span="125-125"];
n57 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: typeof(T) == typeof(QuoteBar)", span="129-129"];
n95 [cluster="lambda expression", color=red, community=0, label="-1: var bar = x as TradeBar", span="125-125"];
n99 [cluster="lambda expression", color=red, community=0, label="-1: getVolume(x)", span="126-126"];
n98 [cluster="lambda expression", label="Entry lambda expression", span="126-126"];
n58 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0, label="-1: Func<IBaseDataBar, QuoteBar> toQuoteBar = x => x as QuoteBar", span="131-131"];
n103 [cluster="lambda expression", color=red, community=0, label="-1: x as QuoteBar", span="131-131"];
n106 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open;", span="132-132"];
n109 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open;", span="133-133"];
n112 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High;", span="134-134"];
n115 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High;", span="135-135"];
n118 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low;", span="136-136"];
n121 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low;", span="137-137"];
n124 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close;", span="138-138"];
n127 [cluster="lambda expression", color=red, community=0, label="-1: return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close;", span="139-139"];
n130 [cluster="lambda expression", color=red, community=0, label="-1: (double)toQuoteBar(x).LastAskSize", span="140-140"];
n133 [cluster="lambda expression", color=red, community=0, label="-1: (double)toQuoteBar(x).LastBidSize", span="141-141"];
n105 [cluster="lambda expression", label="Entry lambda expression", span="132-132"];
n108 [cluster="lambda expression", label="Entry lambda expression", span="133-133"];
n111 [cluster="lambda expression", label="Entry lambda expression", span="134-134"];
n114 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n117 [cluster="lambda expression", label="Entry lambda expression", span="136-136"];
n120 [cluster="lambda expression", label="Entry lambda expression", span="137-137"];
n123 [cluster="lambda expression", label="Entry lambda expression", span="138-138"];
n126 [cluster="lambda expression", label="Entry lambda expression", span="139-139"];
n129 [cluster="lambda expression", label="Entry lambda expression", span="140-140"];
n132 [cluster="lambda expression", label="Entry lambda expression", span="141-141"];
n70 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104"];
n80 [cluster="lambda expression", color=red, community=0, label="-1: x.Time", span="114-114"];
n81 [cluster="lambda expression", label="Exit lambda expression", span="114-114"];
n83 [cluster="lambda expression", color=red, community=0, label="-1: (double)x.Low", span="118-118"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="118-118"];
n86 [cluster="lambda expression", color=red, community=0, label="-1: (double)x.Open", span="119-119"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="119-119"];
n89 [cluster="lambda expression", color=red, community=0, label="-1: (double)x.High", span="120-120"];
n90 [cluster="lambda expression", label="Exit lambda expression", span="120-120"];
n92 [cluster="lambda expression", color=red, community=0, label="-1: (double)x.Close", span="121-121"];
n93 [cluster="lambda expression", label="Exit lambda expression", span="121-121"];
n94 [cluster="lambda expression", label="Entry lambda expression", span="125-125"];
n96 [cluster="lambda expression", color=red, community=0, label="-1: return (double)bar.Volume;", span="125-125"];
n97 [cluster="lambda expression", label="Exit lambda expression", span="125-125"];
n100 [cluster="lambda expression", label="Exit lambda expression", span="126-126"];
n101 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n102 [cluster="lambda expression", label="Entry lambda expression", span="131-131"];
n104 [cluster="lambda expression", label="Exit lambda expression", span="131-131"];
n107 [cluster="lambda expression", label="Exit lambda expression", span="132-132"];
n110 [cluster="lambda expression", label="Exit lambda expression", span="133-133"];
n113 [cluster="lambda expression", label="Exit lambda expression", span="134-134"];
n116 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n119 [cluster="lambda expression", label="Exit lambda expression", span="136-136"];
n122 [cluster="lambda expression", label="Exit lambda expression", span="137-137"];
n125 [cluster="lambda expression", label="Exit lambda expression", span="138-138"];
n128 [cluster="lambda expression", label="Exit lambda expression", span="139-139"];
n131 [cluster="lambda expression", label="Exit lambda expression", span="140-140"];
n134 [cluster="lambda expression", label="Exit lambda expression", span="141-141"];
n135 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", label="Entry QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
n136 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: var value = (symbol.HasUnderlying ? symbol.Value : symbol.ToString()).ToPython()", span="156-156"];
n137 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: var tuples = time.Select(x => new PyTuple(new PyObject[] { value, x.ToPython() }))", span="157-157"];
n139 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: symbol.SecurityType == SecurityType.Future", span="160-160"];
n140 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() }))", span="162-162"];
n157 [cluster="lambda expression", color=red, community=0, label="-1: new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() })", span="162-162"];
n142 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: symbol.SecurityType == SecurityType.Option", span="166-166"];
n143 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() }))", span="168-168"];
n160 [cluster="lambda expression", color=red, community=0, label="-1: new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() })", span="168-168"];
n147 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
n148 [cluster="Unk.ToPython", label="Entry Unk.ToPython", span=""];
n153 [cluster="lambda expression", color=red, community=0, label="-1: new PyTuple(new PyObject[] { value, x.ToPython() })", span="157-157"];
n138 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: var names = ''symbol,time''", span="158-158"];
n152 [cluster="lambda expression", label="Entry lambda expression", span="157-157"];
n145 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: return _pandas.MultiIndex.from_tuples(tuples.ToArray(), names: names.Split(','));", span="172-172"];
n141 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: names = ''expiry,'' + names", span="163-163"];
n144 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0, label="-1: names = ''expiry,strike,type,'' + names", span="169-169"];
n156 [cluster="lambda expression", label="Entry lambda expression", span="162-162"];
n159 [cluster="lambda expression", label="Entry lambda expression", span="168-168"];
n146 [cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", label="Exit QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154"];
n149 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n150 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n151 [cluster="Unk.from_tuples", label="Entry Unk.from_tuples", span=""];
n154 [cluster="lambda expression", label="Exit lambda expression", span="157-157"];
n155 [cluster="PyTuple.cstr", label="Entry PyTuple.cstr", span=""];
n158 [cluster="lambda expression", label="Exit lambda expression", span="162-162"];
n161 [cluster="lambda expression", label="Exit lambda expression", span="168-168"];
n162 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n163 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Entry QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
n164 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Py.GIL()", span="182-182"];
n166 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0, label="-1: data", span="186-186"];
n170 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0, label="-1: return _pandas.DataFrame(pyDict, columns: data.Keys.Select(x => x.ToLower()).OrderBy(x => x));", span="193-193"];
n165 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="var pyDict = new PyDict()", span="184-184"];
n169 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0, label="-1: pyDict.SetItem(kvp.Key.ToLower(), _pandas.Series(values, index))", span="190-190"];
n167 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0, label="-1: var index = kvp.Value.Select(x => x.EndTime).ToList()", span="188-188"];
n168 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0, label="-1: var values = kvp.Value.Select(x => (double)x.Value).ToList()", span="189-189"];
n174 [cluster="lambda expression", label="Entry lambda expression", span="188-188"];
n177 [cluster="lambda expression", label="Entry lambda expression", span="189-189"];
n172 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n171 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180"];
n173 [cluster="Unk.OrderBy", label="Entry Unk.OrderBy", span=""];
n180 [cluster="lambda expression", label="Entry lambda expression", span="193-193"];
n183 [cluster="lambda expression", label="Entry lambda expression", span="193-193"];
n175 [cluster="lambda expression", color=red, community=0, label="-1: x.EndTime", span="188-188"];
n176 [cluster="lambda expression", label="Exit lambda expression", span="188-188"];
n178 [cluster="lambda expression", color=red, community=0, label="-1: (double)x.Value", span="189-189"];
n179 [cluster="lambda expression", label="Exit lambda expression", span="189-189"];
n181 [cluster="lambda expression", color=red, community=0, label="-1: x.ToLower()", span="193-193"];
n182 [cluster="lambda expression", label="Exit lambda expression", span="193-193"];
n184 [cluster="lambda expression", color=red, community=0, label="-1: x", span="193-193"];
n185 [cluster="lambda expression", label="Exit lambda expression", span="193-193"];
n186 [cluster="QuantConnect.Python.PandasConverter.ToString()", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
n187 [cluster="QuantConnect.Python.PandasConverter.ToString()", color=red, community=0, label="-1: return _pandas == null\r\n                ? ''pandas module was not imported.''\r\n                : _pandas.Repr();", span="203-205"];
n188 [cluster="QuantConnect.Python.PandasConverter.ToString()", label="Exit QuantConnect.Python.PandasConverter.ToString()", span="201-201"];
n189 [cluster="Unk.Repr", label="Entry Unk.Repr", span=""];
d1 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, label="-1: SettlementType = SettlementType.Cash", span="64-64"];
d12 [label="QuantConnect.Securities.Future.Future", span=""];
d0 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
d2 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="ContractFilter = new ExpiryFutureFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="65-65"];
d3 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, label="-1: Holdings = new FutureHolding(this)", span="66-66"];
d4 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="_symbolProperties = symbolProperties", span="67-67"];
d8 [cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29"];
d10 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", color=green, community=0, label="-1: ContractFilter = new ExpiryFutureFilter(minExpiry, maxExpiry)", span="116-116"];
d9 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114"];
d11 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114"];
d6 [cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", label="Entry QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", span="38-38"];
d5 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
d7 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m0_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m0_151 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subscriptionDataConfig = GetSubscriptionDataConfig<T>(symbol, resolution)", span="238-238"];
m0_152 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs", label="-1: var security = GetSecurity(subscriptionDataConfig)", span="239-239"];
m0_153 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=1, file="PandasConverterTests.cs", label="-1: return data.Select(t => TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice);", span="241-246"];
m0_154 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m0_160 [cluster="System.Collections.Generic.List<T>.List()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_162 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m0_102 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m0_117 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="200-200"];
m0_133 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="224-224"];
m0_103 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var converter = new PandasConverter()", span="171-171"];
m0_104 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var symbol = Symbols.LTCUSD", span="172-172"];
m0_109 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dynamic dataFrame = converter.GetDataFrame(rawBars)", span="188-188"];
m0_125 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dataFrame = converter.GetDataFrame(history)", span="212-212"];
m0_105 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var config = GetSubscriptionDataConfig<Quandl>(symbol, Resolution.Daily)", span="174-174"];
m0_112 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="194-194"];
m0_124 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var history = GetHistory(symbol, Resolution.Daily, rawBars)", span="211-211"];
m0_128 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="218-218"];
m0_108 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=1, file="PandasConverterTests.cs", label="-1: var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i =>\r\n                {\r\n                    var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}'';\r\n                    return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);\r\n                })\r\n                .ToArray()", span="178-185"];
m0_110 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="190-190"];
m0_111 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="192-192"];
m0_126 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="214-214"];
m0_127 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="216-216"];
m0_106 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var quandl = new Quandl()", span="175-175"];
m0_107 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: quandl.Reader(config, ''date,open,high,low,close,settle'', DateTime.UtcNow, false)", span="176-176"];
m0_113 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="195-195"];
m0_114 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="197-197"];
m0_118 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="202-202"];
m0_119 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="203-203"];
m0_121 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="205-205"];
m0_129 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="219-219"];
m0_130 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="221-221"];
m0_134 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="226-226"];
m0_135 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="227-227"];
m0_137 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="229-229"];
m0_120 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Value, value)", span="204-204"];
m0_122 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="206-206"];
m0_136 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Value, value)", span="228-228"];
m0_138 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="230-230"];
m0_116 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="200-200"];
m0_123 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="200-200"];
m0_132 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="224-224"];
m0_139 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="224-224"];
m0_115 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="198-198"];
m0_131 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="222-222"];
m0_140 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m0_156 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="241-246"];
m0_61 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="-1: new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m)", span="66-66"];
m0_60 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="66-66"];
m0_62 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="66-66"];
m0_98 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="-1: new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m)", span="121-121"];
m0_97 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="121-121"];
m0_99 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="121-121"];
m0_147 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="-1: return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);", span="183-183"];
m0_145 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="180-184"];
m0_146 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="-1: var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}''", span="182-182"];
m0_148 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="180-184"];
m0_157 [cluster="lambda expression", color=green, community=1, file="PandasConverterTests.cs", label="-1: TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice", span="241-246"];
m0_158 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="241-246"];
m0_56 [cluster="Unk.IsFalse", file="PandasConverterTests.cs", label="Entry Unk.IsFalse", span=""];
m0_101 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m0_166 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m0_159 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m0_11 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m0_100 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m0_17 [cluster="Unk.IsTrue", file="PandasConverterTests.cs", label="Entry Unk.IsTrue", span=""];
m0_150 [cluster="System.DateTime.ToString(string)", file="PandasConverterTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m0_142 [cluster="QuantConnect.Data.Custom.Quandl.Quandl()", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Custom.Quandl.Quandl()", span="62-62"];
m0_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91"];
m0_149 [cluster="System.DateTime.AddDays(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_170 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m0_58 [cluster="Unk.AreEqual", file="PandasConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m0_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_59 [cluster="Unk.GetHistory", file="PandasConverterTests.cs", label="Entry Unk.GetHistory", span=""];
m0_65 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m0_77 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="137-137"];
m0_91 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="159-159"];
m0_66 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var converter = new PandasConverter()", span="116-116"];
m0_67 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var symbol = Symbols.EURUSD", span="117-117"];
m0_69 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dynamic dataFrame = converter.GetDataFrame(rawBars)", span="125-125"];
m0_83 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dataFrame = converter.GetDataFrame(history)", span="147-147"];
m0_68 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=1, file="PandasConverterTests.cs", label="-1: var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m))\r\n                .ToArray()", span="119-122"];
m0_72 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="131-131"];
m0_82 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="146-146"];
m0_86 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="153-153"];
m0_70 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="127-127"];
m0_71 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="129-129"];
m0_84 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="149-149"];
m0_85 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="151-151"];
m0_80 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Close, close)", span="141-141"];
m0_94 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Ask.Close, close)", span="163-163"];
m0_73 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="132-132"];
m0_74 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="134-134"];
m0_78 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="139-139"];
m0_79 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="140-140"];
m0_87 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="154-154"];
m0_88 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="156-156"];
m0_92 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="161-161"];
m0_93 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var close = subDataFrame.loc[index].askclose.AsManagedObject(typeof(decimal))", span="162-162"];
m0_76 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="137-137"];
m0_81 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="137-137"];
m0_90 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="159-159"];
m0_95 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="159-159"];
m0_75 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="135-135"];
m0_89 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="157-157"];
m0_96 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m0_12 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_52 [cluster="System.Linq.Enumerable.Range(int, int)", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m0_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m0_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var converter = new PandasConverter()", span="37-37"];
m0_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var rawBars = Enumerable.Empty<TradeBar>().ToArray()", span="38-38"];
m0_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dynamic dataFrame = converter.GetDataFrame(rawBars)", span="41-41"];
m0_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dataFrame = converter.GetDataFrame(history)", span="50-50"];
m0_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var history = GetHistory(Symbols.SPY, Resolution.Minute, rawBars)", span="49-49"];
m0_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="43-43"];
m0_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="45-45"];
m0_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="52-52"];
m0_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="54-54"];
m0_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m0_169 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m0_15 [cluster="Unk.GIL", file="PandasConverterTests.cs", label="Entry Unk.GIL", span=""];
m0_57 [cluster="Unk.__len__", file="PandasConverterTests.cs", label="Entry Unk.__len__", span=""];
m0_144 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m0_172 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m0_55 [cluster="Unk.GetDataFrame", file="PandasConverterTests.cs", label="Entry Unk.GetDataFrame", span=""];
m0_155 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m0_167 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=1, file="PandasConverterTests.cs", label="-1: return new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="264-268"];
m0_168 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m0_143 [cluster="QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="83-83"];
m0_64 [cluster="System.DateTime.AddMinutes(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m0_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m0_141 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m0_164 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=1, file="PandasConverterTests.cs", label="-1: return new SubscriptionDataConfig(\r\n                typeof(T),\r\n                symbol,\r\n                resolution,\r\n                TimeZones.Utc,\r\n                TimeZones.Utc,\r\n                true,\r\n                true,\r\n                false);", span="251-259"];
m0_165 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m0_171 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m0_16 [cluster="Unk.AsManagedObject", file="PandasConverterTests.cs", label="Entry Unk.AsManagedObject", span=""];
m0_53 [cluster="Unk.Select", file="PandasConverterTests.cs", label="Entry Unk.Select", span=""];
m0_63 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m0_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m0_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var converter = new PandasConverter()", span="61-61"];
m0_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var symbol = Symbols.SPY", span="62-62"];
m0_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dynamic dataFrame = converter.GetDataFrame(rawBars)", span="70-70"];
m0_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: dataFrame = converter.GetDataFrame(history)", span="92-92"];
m0_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=1, file="PandasConverterTests.cs", label="-1: var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m))\r\n                .ToArray()", span="64-67"];
m0_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="76-76"];
m0_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="91-91"];
m0_41 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var subDataFrame = dataFrame.loc[symbol]", span="98-98"];
m0_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="72-72"];
m0_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="74-74"];
m0_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Py.GIL()", span="94-94"];
m0_40 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="96-96"];
m0_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Close, close)", span="86-86"];
m0_49 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(rawBars[i].Close, close)", span="108-108"];
m0_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="77-77"];
m0_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="79-79"];
m0_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="84-84"];
m0_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="85-85"];
m0_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="82-82"];
m0_42 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="99-99"];
m0_43 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="101-101"];
m0_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var index = subDataFrame.index[i]", span="106-106"];
m0_48 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="107-107"];
m0_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="82-82"];
m0_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="82-82"];
m0_45 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: var i = 0", span="104-104"];
m0_50 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i++", span="104-104"];
m0_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="80-80"];
m0_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: i < count", span="104-104"];
m0_44 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs", label="-1: Assert.AreEqual(count, 10)", span="102-102"];
m0_51 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m0_173 [file="PandasConverterTests.cs", label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", span=""];
m0_174 [file="PandasConverterTests.cs", label=symbol, span=""];
m0_175 [file="PandasConverterTests.cs", label=symbol, span=""];
m0_176 [file="PandasConverterTests.cs", label=config, span=""];
m0_177 [file="PandasConverterTests.cs", label=quandl, span=""];
m0_178 [file="PandasConverterTests.cs", label=subscriptionDataConfig, span=""];
m0_179 [file="PandasConverterTests.cs", label=security, span=""];
n190 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n18  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n21  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n22  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n46  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n48  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n50  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n51  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n52  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n53  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n56  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n59  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n60  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n61  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n62  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n63  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n64  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n65  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n66  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n67  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n68  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n69  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n145  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n169  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n170  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n190 -> n187  [color=red, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
n191 -> n99  [color=red, key=1, label=getVolume, style=dashed];
n192 -> n106  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n109  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n112  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n115  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n118  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n121  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n124  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n127  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n130  [color=red, key=1, label=toQuoteBar, style=dashed];
n192 -> n133  [color=red, key=1, label=toQuoteBar, style=dashed];
n193 -> n153  [color=red, key=1, label=value, style=dashed];
n193 -> n157  [color=red, key=1, label=value, style=dashed];
n193 -> n160  [color=red, key=1, label=value, style=dashed];
n194 -> n157  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n194 -> n160  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n21  [color=red, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>", style=dashed];
n11 -> n18  [color=red, key=3, label="method methodReturn PyObject GetDataFrame", style=bold];
n12 -> n13  [color=red, key=0, style=solid];
n12 -> n25  [color=red, key=2, style=dotted];
n12 -> n26  [color=red, key=2, style=dotted];
n12 -> n27  [color=red, key=2, style=dotted];
n12 -> n36  [color=red, key=1, label="lambda expression", style=dashed];
n12 -> n39  [color=red, key=1, label="lambda expression", style=dashed];
n12 -> n14  [color=red, key=1, label=symbols, style=dashed];
n12 -> n19  [color=red, key=1, label=symbols, style=dashed];
n21 -> n22  [color=red, key=0, style=solid];
n21 -> n32  [color=red, key=2, style=dotted];
n21 -> n33  [color=red, key=2, style=dotted];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n20  [color=red, key=1, label=underlying, style=dashed];
n13 -> n13  [color=red, key=3, label="Local variable QuantConnect.Symbol underlying", style=bold];
n36 -> n37  [color=red, key=0, style=solid];
n39 -> n40  [color=red, key=0, style=solid];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n28  [color=red, key=2, style=dotted];
n14 -> n42  [color=red, key=1, label="lambda expression", style=dashed];
n14 -> n16  [color=red, key=1, label=derivatives, style=dashed];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n23  [color=red, key=0, style=solid];
n19 -> n21  [color=red, key=1, label=symbol, style=dashed];
n20 -> n21  [color=red, key=0, style=solid];
n20 -> n19  [color=red, key=0, style=solid];
n15 -> n16  [color=red, key=0, style=solid];
n15 -> n17  [color=red, key=0, style=solid];
n15 -> n29  [color=red, key=2, style=dotted];
n42 -> n43  [color=red, key=0, style=solid];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n30  [color=red, key=2, style=dotted];
n16 -> n20  [color=red, key=1, label=underlying, style=dashed];
n17 -> n18  [color=red, key=0, style=solid];
n17 -> n8  [color=red, key=2, style=dotted];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n31  [color=red, key=2, style=dotted];
n18 -> n21  [color=red, key=1, label=dataFrame, style=dashed];
n18 -> n23  [color=red, key=1, label=dataFrame, style=dashed];
n23 -> n24  [color=red, key=0, style=solid];
n22 -> n19  [color=red, key=0, style=solid];
n22 -> n34  [color=red, key=2, style=dotted];
n22 -> n35  [color=red, key=2, style=dotted];
n22 -> n23  [color=red, key=1, label=dataFrame, style=dashed];
n33 -> n45  [color=red, key=0, style=solid];
n33 -> n48  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n50  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n51  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n52  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n53  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n56  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n59  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n60  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n61  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n62  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n63  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n64  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n65  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n66  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n67  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n33 -> n68  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n24 -> n11  [color=blue, key=0, style=bold];
n37 -> n38  [color=red, key=0, style=solid];
n38 -> n36  [color=blue, key=0, style=bold];
n40 -> n41  [color=red, key=0, style=solid];
n41 -> n39  [color=blue, key=0, style=bold];
n43 -> n44  [color=red, key=0, style=solid];
n44 -> n42  [color=blue, key=0, style=bold];
n45 -> n46  [color=red, key=0, style=solid];
n45 -> n47  [color=red, key=0, style=solid];
n45 -> n71  [color=red, key=2, style=dotted];
n48 -> n49  [color=red, key=0, style=solid];
n48 -> n72  [color=red, key=2, style=dotted];
n48 -> n73  [color=red, key=2, style=dotted];
n48 -> n74  [color=red, key=2, style=dotted];
n48 -> n79  [color=red, key=1, label="lambda expression", style=dashed];
n48 -> n50  [color=red, key=1, label=index, style=dashed];
n48 -> n51  [color=red, key=1, label=index, style=dashed];
n48 -> n52  [color=red, key=1, label=index, style=dashed];
n48 -> n53  [color=red, key=1, label=index, style=dashed];
n48 -> n56  [color=red, key=1, label=index, style=dashed];
n48 -> n59  [color=red, key=1, label=index, style=dashed];
n48 -> n60  [color=red, key=1, label=index, style=dashed];
n48 -> n61  [color=red, key=1, label=index, style=dashed];
n48 -> n62  [color=red, key=1, label=index, style=dashed];
n48 -> n63  [color=red, key=1, label=index, style=dashed];
n48 -> n64  [color=red, key=1, label=index, style=dashed];
n48 -> n65  [color=red, key=1, label=index, style=dashed];
n48 -> n66  [color=red, key=1, label=index, style=dashed];
n48 -> n67  [color=red, key=1, label=index, style=dashed];
n48 -> n68  [color=red, key=1, label=index, style=dashed];
n50 -> n51  [color=red, key=0, style=solid];
n50 -> n73  [color=red, key=2, style=dotted];
n50 -> n76  [color=red, key=2, style=dotted];
n50 -> n77  [color=red, key=2, style=dotted];
n50 -> n78  [color=red, key=2, style=dotted];
n50 -> n82  [color=red, key=1, label="lambda expression", style=dashed];
n51 -> n52  [color=red, key=0, style=solid];
n51 -> n73  [color=red, key=2, style=dotted];
n51 -> n76  [color=red, key=2, style=dotted];
n51 -> n77  [color=red, key=2, style=dotted];
n51 -> n78  [color=red, key=2, style=dotted];
n51 -> n85  [color=red, key=1, label="lambda expression", style=dashed];
n52 -> n53  [color=red, key=0, style=solid];
n52 -> n73  [color=red, key=2, style=dotted];
n52 -> n76  [color=red, key=2, style=dotted];
n52 -> n77  [color=red, key=2, style=dotted];
n52 -> n78  [color=red, key=2, style=dotted];
n52 -> n88  [color=red, key=1, label="lambda expression", style=dashed];
n53 -> n54  [color=red, key=0, style=solid];
n53 -> n73  [color=red, key=2, style=dotted];
n53 -> n76  [color=red, key=2, style=dotted];
n53 -> n77  [color=red, key=2, style=dotted];
n53 -> n78  [color=red, key=2, style=dotted];
n53 -> n91  [color=red, key=1, label="lambda expression", style=dashed];
n56 -> n57  [color=red, key=0, style=solid];
n56 -> n73  [color=red, key=2, style=dotted];
n56 -> n76  [color=red, key=2, style=dotted];
n56 -> n77  [color=red, key=2, style=dotted];
n56 -> n78  [color=red, key=2, style=dotted];
n56 -> n98  [color=red, key=1, label="lambda expression", style=dashed];
n59 -> n60  [color=red, key=0, style=solid];
n59 -> n73  [color=red, key=2, style=dotted];
n59 -> n76  [color=red, key=2, style=dotted];
n59 -> n77  [color=red, key=2, style=dotted];
n59 -> n78  [color=red, key=2, style=dotted];
n59 -> n105  [color=red, key=1, label="lambda expression", style=dashed];
n60 -> n61  [color=red, key=0, style=solid];
n60 -> n73  [color=red, key=2, style=dotted];
n60 -> n76  [color=red, key=2, style=dotted];
n60 -> n77  [color=red, key=2, style=dotted];
n60 -> n78  [color=red, key=2, style=dotted];
n60 -> n108  [color=red, key=1, label="lambda expression", style=dashed];
n61 -> n62  [color=red, key=0, style=solid];
n61 -> n73  [color=red, key=2, style=dotted];
n61 -> n76  [color=red, key=2, style=dotted];
n61 -> n77  [color=red, key=2, style=dotted];
n61 -> n78  [color=red, key=2, style=dotted];
n61 -> n111  [color=red, key=1, label="lambda expression", style=dashed];
n62 -> n63  [color=red, key=0, style=solid];
n62 -> n73  [color=red, key=2, style=dotted];
n62 -> n76  [color=red, key=2, style=dotted];
n62 -> n77  [color=red, key=2, style=dotted];
n62 -> n78  [color=red, key=2, style=dotted];
n62 -> n114  [color=red, key=1, label="lambda expression", style=dashed];
n63 -> n64  [color=red, key=0, style=solid];
n63 -> n73  [color=red, key=2, style=dotted];
n63 -> n76  [color=red, key=2, style=dotted];
n63 -> n77  [color=red, key=2, style=dotted];
n63 -> n78  [color=red, key=2, style=dotted];
n63 -> n117  [color=red, key=1, label="lambda expression", style=dashed];
n64 -> n65  [color=red, key=0, style=solid];
n64 -> n73  [color=red, key=2, style=dotted];
n64 -> n76  [color=red, key=2, style=dotted];
n64 -> n77  [color=red, key=2, style=dotted];
n64 -> n78  [color=red, key=2, style=dotted];
n64 -> n120  [color=red, key=1, label="lambda expression", style=dashed];
n65 -> n66  [color=red, key=0, style=solid];
n65 -> n73  [color=red, key=2, style=dotted];
n65 -> n76  [color=red, key=2, style=dotted];
n65 -> n77  [color=red, key=2, style=dotted];
n65 -> n78  [color=red, key=2, style=dotted];
n65 -> n123  [color=red, key=1, label="lambda expression", style=dashed];
n66 -> n67  [color=red, key=0, style=solid];
n66 -> n73  [color=red, key=2, style=dotted];
n66 -> n76  [color=red, key=2, style=dotted];
n66 -> n77  [color=red, key=2, style=dotted];
n66 -> n78  [color=red, key=2, style=dotted];
n66 -> n126  [color=red, key=1, label="lambda expression", style=dashed];
n67 -> n68  [color=red, key=0, style=solid];
n67 -> n73  [color=red, key=2, style=dotted];
n67 -> n76  [color=red, key=2, style=dotted];
n67 -> n77  [color=red, key=2, style=dotted];
n67 -> n78  [color=red, key=2, style=dotted];
n67 -> n129  [color=red, key=1, label="lambda expression", style=dashed];
n68 -> n69  [color=red, key=0, style=solid];
n68 -> n73  [color=red, key=2, style=dotted];
n68 -> n76  [color=red, key=2, style=dotted];
n68 -> n77  [color=red, key=2, style=dotted];
n68 -> n78  [color=red, key=2, style=dotted];
n68 -> n132  [color=red, key=1, label="lambda expression", style=dashed];
n46 -> n70  [color=red, key=0, style=solid];
n46 -> n31  [color=red, key=2, style=dotted];
n47 -> n48  [color=red, key=0, style=solid];
n47 -> n8  [color=red, key=2, style=dotted];
n49 -> n50  [color=red, key=0, style=solid];
n49 -> n75  [key=2, style=dotted];
n49 -> n51  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n52  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n53  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n56  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n59  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n60  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n61  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n62  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n63  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n64  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n65  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n66  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n67  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n68  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n69  [color=red, key=1, label=pyDict, style=dashed];
n79 -> n80  [color=red, key=0, style=solid];
n69 -> n70  [color=red, key=0, style=solid];
n69 -> n31  [color=red, key=2, style=dotted];
n82 -> n83  [color=red, key=0, style=solid];
n85 -> n86  [color=red, key=0, style=solid];
n88 -> n89  [color=red, key=0, style=solid];
n54 -> n55  [color=red, key=0, style=solid];
n54 -> n57  [color=red, key=0, style=solid];
n91 -> n92  [color=red, key=0, style=solid];
n55 -> n56  [color=red, key=0, style=solid];
n55 -> n95  [color=red, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
n55 -> n99  [color=red, key=1, label=getVolume, style=dashed];
n55 -> n55  [color=red, key=3, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, double> getVolume", style=bold];
n57 -> n58  [color=red, key=0, style=solid];
n57 -> n69  [color=red, key=0, style=solid];
n95 -> n96  [color=red, key=0, style=solid];
n99 -> n100  [color=red, key=0, style=solid];
n99 -> n101  [color=red, key=2, style=dotted];
n98 -> n99  [color=red, key=0, style=solid];
n58 -> n59  [color=red, key=0, style=solid];
n58 -> n103  [color=red, key=1, label="QuantConnect.Data.Market.IBaseDataBar", style=dashed];
n58 -> n106  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n60  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n109  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n61  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n112  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n62  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n115  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n63  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n118  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n64  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n121  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n65  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n124  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n66  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n127  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n67  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n130  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n68  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n133  [color=red, key=1, label=toQuoteBar, style=dashed];
n58 -> n58  [color=red, key=3, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, QuantConnect.Data.Market.QuoteBar> toQuoteBar", style=bold];
n103 -> n104  [color=red, key=0, style=solid];
n106 -> n107  [color=red, key=0, style=solid];
n106 -> n101  [color=red, key=2, style=dotted];
n109 -> n110  [color=red, key=0, style=solid];
n109 -> n101  [color=red, key=2, style=dotted];
n112 -> n113  [color=red, key=0, style=solid];
n112 -> n101  [color=red, key=2, style=dotted];
n115 -> n116  [color=red, key=0, style=solid];
n115 -> n101  [color=red, key=2, style=dotted];
n118 -> n119  [color=red, key=0, style=solid];
n118 -> n101  [color=red, key=2, style=dotted];
n121 -> n122  [color=red, key=0, style=solid];
n121 -> n101  [color=red, key=2, style=dotted];
n124 -> n125  [color=red, key=0, style=solid];
n124 -> n101  [color=red, key=2, style=dotted];
n127 -> n128  [color=red, key=0, style=solid];
n127 -> n101  [color=red, key=2, style=dotted];
n130 -> n131  [color=red, key=0, style=solid];
n130 -> n101  [color=red, key=2, style=dotted];
n133 -> n134  [color=red, key=0, style=solid];
n133 -> n101  [color=red, key=2, style=dotted];
n105 -> n106  [color=red, key=0, style=solid];
n108 -> n109  [color=red, key=0, style=solid];
n111 -> n112  [color=red, key=0, style=solid];
n114 -> n115  [color=red, key=0, style=solid];
n117 -> n118  [color=red, key=0, style=solid];
n120 -> n121  [color=red, key=0, style=solid];
n123 -> n124  [color=red, key=0, style=solid];
n126 -> n127  [color=red, key=0, style=solid];
n129 -> n130  [color=red, key=0, style=solid];
n132 -> n133  [color=red, key=0, style=solid];
n70 -> n33  [color=blue, key=0, style=bold];
n80 -> n81  [color=red, key=0, style=solid];
n81 -> n79  [color=blue, key=0, style=bold];
n83 -> n84  [color=red, key=0, style=solid];
n84 -> n82  [color=blue, key=0, style=bold];
n86 -> n87  [color=red, key=0, style=solid];
n87 -> n85  [color=blue, key=0, style=bold];
n89 -> n90  [color=red, key=0, style=solid];
n90 -> n88  [color=blue, key=0, style=bold];
n92 -> n93  [color=red, key=0, style=solid];
n93 -> n91  [color=blue, key=0, style=bold];
n94 -> n95  [color=red, key=0, style=solid];
n96 -> n97  [color=red, key=0, style=solid];
n97 -> n94  [color=blue, key=0, style=bold];
n100 -> n98  [color=blue, key=0, style=bold];
n102 -> n103  [color=red, key=0, style=solid];
n104 -> n102  [color=blue, key=0, style=bold];
n107 -> n105  [color=blue, key=0, style=bold];
n110 -> n108  [color=blue, key=0, style=bold];
n113 -> n111  [color=blue, key=0, style=bold];
n116 -> n114  [color=blue, key=0, style=bold];
n119 -> n117  [color=blue, key=0, style=bold];
n122 -> n120  [color=blue, key=0, style=bold];
n125 -> n123  [color=blue, key=0, style=bold];
n128 -> n126  [color=blue, key=0, style=bold];
n131 -> n129  [color=blue, key=0, style=bold];
n134 -> n132  [color=blue, key=0, style=bold];
n135 -> n136  [color=red, key=0, style=solid];
n135 -> n137  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.DateTime>", style=dashed];
n135 -> n139  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n135 -> n140  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n135 -> n157  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n135 -> n142  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n135 -> n143  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n135 -> n160  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
n136 -> n137  [color=red, key=0, style=solid];
n136 -> n147  [color=red, key=2, style=dotted];
n136 -> n148  [color=red, key=2, style=dotted];
n136 -> n153  [color=red, key=1, label=value, style=dashed];
n136 -> n140  [color=red, key=1, label=value, style=dashed];
n136 -> n157  [color=red, key=1, label=value, style=dashed];
n136 -> n143  [color=red, key=1, label=value, style=dashed];
n136 -> n160  [color=red, key=1, label=value, style=dashed];
n137 -> n138  [color=red, key=0, style=solid];
n137 -> n73  [color=red, key=2, style=dotted];
n137 -> n152  [color=red, key=1, label="lambda expression", style=dashed];
n137 -> n145  [color=red, key=1, label=tuples, style=dashed];
n139 -> n140  [color=red, key=0, style=solid];
n139 -> n142  [color=red, key=0, style=solid];
n140 -> n141  [color=red, key=0, style=solid];
n140 -> n73  [color=red, key=2, style=dotted];
n140 -> n156  [color=red, key=1, label="lambda expression", style=dashed];
n140 -> n145  [color=red, key=1, label=tuples, style=dashed];
n157 -> n158  [color=red, key=0, style=solid];
n157 -> n155  [color=red, key=2, style=dotted];
n157 -> n148  [color=red, key=2, style=dotted];
n142 -> n143  [color=red, key=0, style=solid];
n142 -> n145  [color=red, key=0, style=solid];
n143 -> n144  [color=red, key=0, style=solid];
n143 -> n73  [color=red, key=2, style=dotted];
n143 -> n159  [color=red, key=1, label="lambda expression", style=dashed];
n143 -> n145  [color=red, key=1, label=tuples, style=dashed];
n160 -> n161  [color=red, key=0, style=solid];
n160 -> n155  [color=red, key=2, style=dotted];
n160 -> n148  [color=red, key=2, style=dotted];
n160 -> n162  [color=red, key=2, style=dotted];
n153 -> n154  [color=red, key=0, style=solid];
n153 -> n155  [color=red, key=2, style=dotted];
n153 -> n148  [color=red, key=2, style=dotted];
n138 -> n139  [color=red, key=0, style=solid];
n138 -> n141  [color=red, key=1, label=names, style=dashed];
n138 -> n144  [color=red, key=1, label=names, style=dashed];
n138 -> n145  [color=red, key=1, label=names, style=dashed];
n138 -> n138  [color=red, key=3, label="Local variable string names", style=bold];
n152 -> n153  [color=red, key=0, style=solid];
n145 -> n146  [color=red, key=0, style=solid];
n145 -> n149  [color=red, key=2, style=dotted];
n145 -> n150  [color=red, key=2, style=dotted];
n145 -> n151  [color=red, key=2, style=dotted];
n141 -> n142  [color=red, key=0, style=solid];
n141 -> n141  [color=red, key=1, label=names, style=dashed];
n141 -> n144  [color=red, key=1, label=names, style=dashed];
n141 -> n145  [color=red, key=1, label=names, style=dashed];
n144 -> n145  [color=red, key=0, style=solid];
n144 -> n144  [color=red, key=1, label=names, style=dashed];
n156 -> n157  [color=red, key=0, style=solid];
n159 -> n160  [color=red, key=0, style=solid];
n146 -> n135  [color=blue, key=0, style=bold];
n154 -> n152  [color=blue, key=0, style=bold];
n158 -> n156  [color=blue, key=0, style=bold];
n161 -> n159  [color=blue, key=0, style=bold];
n163 -> n164  [key=0, style=solid];
n163 -> n166  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
n163 -> n170  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
n164 -> n165  [key=0, style=solid];
n164 -> n8  [key=2, style=dotted];
n166 -> n167  [color=red, key=0, style=solid];
n166 -> n170  [color=red, key=0, style=solid];
n170 -> n171  [color=red, key=0, style=solid];
n170 -> n73  [color=red, key=2, style=dotted];
n170 -> n173  [color=red, key=2, style=dotted];
n170 -> n31  [color=red, key=2, style=dotted];
n170 -> n180  [color=red, key=1, label="lambda expression", style=dashed];
n170 -> n183  [color=red, key=1, label="lambda expression", style=dashed];
n165 -> n166  [color=red, key=0, style=solid];
n165 -> n75  [key=2, style=dotted];
n165 -> n169  [color=red, key=1, label=pyDict, style=dashed];
n165 -> n170  [color=red, key=1, label=pyDict, style=dashed];
n169 -> n166  [color=red, key=0, style=solid];
n169 -> n172  [color=red, key=2, style=dotted];
n169 -> n77  [color=red, key=2, style=dotted];
n169 -> n78  [color=red, key=2, style=dotted];
n169 -> n169  [color=red, key=1, label=kvp, style=dashed];
n167 -> n168  [color=red, key=0, style=solid];
n167 -> n73  [color=red, key=2, style=dotted];
n167 -> n76  [color=red, key=2, style=dotted];
n167 -> n167  [color=red, key=1, label=kvp, style=dashed];
n167 -> n174  [color=red, key=1, label="lambda expression", style=dashed];
n167 -> n169  [color=red, key=1, label=index, style=dashed];
n168 -> n169  [color=red, key=0, style=solid];
n168 -> n73  [color=red, key=2, style=dotted];
n168 -> n76  [color=red, key=2, style=dotted];
n168 -> n168  [color=red, key=1, label=kvp, style=dashed];
n168 -> n177  [color=red, key=1, label="lambda expression", style=dashed];
n174 -> n175  [color=red, key=0, style=solid];
n177 -> n178  [color=red, key=0, style=solid];
n171 -> n163  [color=blue, key=0, style=bold];
n180 -> n181  [color=red, key=0, style=solid];
n183 -> n184  [color=red, key=0, style=solid];
n175 -> n176  [color=red, key=0, style=solid];
n176 -> n174  [color=blue, key=0, style=bold];
n178 -> n179  [color=red, key=0, style=solid];
n179 -> n177  [color=blue, key=0, style=bold];
n181 -> n182  [color=red, key=0, style=solid];
n181 -> n172  [color=red, key=2, style=dotted];
n182 -> n180  [color=blue, key=0, style=bold];
n184 -> n185  [color=red, key=0, style=solid];
n185 -> n183  [color=blue, key=0, style=bold];
n186 -> n187  [color=red, key=0, style=solid];
n187 -> n188  [color=red, key=0, style=solid];
n187 -> n189  [color=red, key=2, style=dotted];
n188 -> n186  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d12 -> d1  [color=green, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
d12 -> d3  [color=green, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
d12 -> d10  [color=green, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
d12 -> d2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
d12 -> d4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolProperties", style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d6  [key=2, style=dotted];
d2 -> d7  [key=2, style=dotted];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d8  [color=green, key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d6  [color=green, key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d11 -> d9  [color=blue, key=0, style=bold];
d5 -> d0  [color=blue, key=0, style=bold];
m0_18 -> m0_2  [color=green, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> data", style=bold];
m0_18 -> m0_6  [color=green, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m0_18 -> m0_151  [color=green, key=0, style=solid];
m0_18 -> m0_153  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m0_151 -> m0_152  [color=green, key=0, style=solid];
m0_151 -> m0_141  [color=green, key=2, style=dotted];
m0_151 -> m0_153  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_151 -> m0_157  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_152 -> m0_153  [color=green, key=0, style=solid];
m0_152 -> m0_155  [color=green, key=2, style=dotted];
m0_152 -> m0_157  [color=green, key=1, label=security, style=dashed];
m0_153 -> m0_154  [color=green, key=0, style=solid];
m0_153 -> m0_53  [color=green, key=2, style=dotted];
m0_153 -> m0_156  [color=green, key=1, label="lambda expression", style=dashed];
m0_154 -> m0_18  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [color=green, key=0, style=solid];
m0_117 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_117 -> m0_124  [color=green, key=0, style=solid];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_133 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_133 -> m0_134  [color=green, key=0, style=solid];
m0_133 -> m0_140  [color=green, key=0, style=solid];
m0_103 -> m0_104  [color=green, key=0, style=solid];
m0_103 -> m0_11  [color=green, key=2, style=dotted];
m0_103 -> m0_109  [color=green, key=1, label=converter, style=dashed];
m0_103 -> m0_125  [color=green, key=1, label=converter, style=dashed];
m0_104 -> m0_105  [color=green, key=0, style=solid];
m0_104 -> m0_112  [color=green, key=1, label=symbol, style=dashed];
m0_104 -> m0_124  [color=green, key=1, label=symbol, style=dashed];
m0_104 -> m0_128  [color=green, key=1, label=symbol, style=dashed];
m0_109 -> m0_110  [color=green, key=0, style=solid];
m0_109 -> m0_55  [color=green, key=2, style=dotted];
m0_109 -> m0_111  [color=green, key=1, label=dataFrame, style=dashed];
m0_109 -> m0_112  [color=green, key=1, label=dataFrame, style=dashed];
m0_125 -> m0_126  [color=green, key=0, style=solid];
m0_125 -> m0_19  [color=green, key=2, style=dotted];
m0_125 -> m0_127  [color=green, key=1, label=dataFrame, style=dashed];
m0_125 -> m0_128  [color=green, key=1, label=dataFrame, style=dashed];
m0_105 -> m0_106  [color=green, key=0, style=solid];
m0_105 -> m0_141  [color=green, key=2, style=dotted];
m0_105 -> m0_107  [color=green, key=1, label=config, style=dashed];
m0_105 -> m0_108  [color=green, key=1, label=config, style=dashed];
m0_105 -> m0_147  [color=green, key=1, label=config, style=dashed];
m0_112 -> m0_113  [color=green, key=0, style=solid];
m0_112 -> m0_114  [color=green, key=1, label=subDataFrame, style=dashed];
m0_112 -> m0_118  [color=green, key=1, label=subDataFrame, style=dashed];
m0_112 -> m0_119  [color=green, key=1, label=subDataFrame, style=dashed];
m0_112 -> m0_121  [color=green, key=1, label=subDataFrame, style=dashed];
m0_124 -> m0_125  [color=green, key=0, style=solid];
m0_124 -> m0_59  [color=green, key=2, style=dotted];
m0_128 -> m0_129  [color=green, key=0, style=solid];
m0_128 -> m0_130  [color=green, key=1, label=subDataFrame, style=dashed];
m0_128 -> m0_134  [color=green, key=1, label=subDataFrame, style=dashed];
m0_128 -> m0_135  [color=green, key=1, label=subDataFrame, style=dashed];
m0_128 -> m0_137  [color=green, key=1, label=subDataFrame, style=dashed];
m0_108 -> m0_109  [color=green, key=0, style=solid];
m0_108 -> m0_124  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_52  [color=green, key=2, style=dotted];
m0_108 -> m0_53  [color=green, key=2, style=dotted];
m0_108 -> n149  [color=green, key=2, style=dotted];
m0_108 -> m0_145  [color=green, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_120  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_122  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_136  [color=green, key=1, label=rawBars, style=dashed];
m0_108 -> m0_138  [color=green, key=1, label=rawBars, style=dashed];
m0_110 -> m0_111  [color=green, key=0, style=solid];
m0_110 -> m0_15  [color=green, key=2, style=dotted];
m0_111 -> m0_112  [color=green, key=0, style=solid];
m0_111 -> m0_16  [color=green, key=2, style=dotted];
m0_111 -> m0_56  [color=green, key=2, style=dotted];
m0_126 -> m0_127  [color=green, key=0, style=solid];
m0_126 -> m0_15  [color=green, key=2, style=dotted];
m0_127 -> m0_128  [color=green, key=0, style=solid];
m0_127 -> m0_16  [color=green, key=2, style=dotted];
m0_127 -> m0_56  [color=green, key=2, style=dotted];
m0_106 -> m0_107  [color=green, key=0, style=solid];
m0_106 -> m0_142  [color=green, key=2, style=dotted];
m0_106 -> m0_108  [color=green, key=1, label=quandl, style=dashed];
m0_106 -> m0_147  [color=green, key=1, label=quandl, style=dashed];
m0_107 -> m0_108  [color=green, key=0, style=solid];
m0_107 -> m0_143  [color=green, key=2, style=dotted];
m0_113 -> m0_114  [color=green, key=0, style=solid];
m0_113 -> m0_16  [color=green, key=2, style=dotted];
m0_113 -> m0_56  [color=green, key=2, style=dotted];
m0_114 -> m0_115  [color=green, key=0, style=solid];
m0_114 -> m0_57  [color=green, key=2, style=dotted];
m0_114 -> m0_16  [color=green, key=2, style=dotted];
m0_114 -> m0_117  [color=green, key=1, label=count, style=dashed];
m0_118 -> m0_119  [color=green, key=0, style=solid];
m0_118 -> m0_121  [color=green, key=1, label=index, style=dashed];
m0_119 -> m0_120  [color=green, key=0, style=solid];
m0_119 -> m0_16  [color=green, key=2, style=dotted];
m0_121 -> m0_122  [color=green, key=0, style=solid];
m0_121 -> m0_16  [color=green, key=2, style=dotted];
m0_129 -> m0_130  [color=green, key=0, style=solid];
m0_129 -> m0_16  [color=green, key=2, style=dotted];
m0_129 -> m0_56  [color=green, key=2, style=dotted];
m0_130 -> m0_131  [color=green, key=0, style=solid];
m0_130 -> m0_57  [color=green, key=2, style=dotted];
m0_130 -> m0_16  [color=green, key=2, style=dotted];
m0_130 -> m0_133  [color=green, key=1, label=count, style=dashed];
m0_134 -> m0_135  [color=green, key=0, style=solid];
m0_134 -> m0_137  [color=green, key=1, label=index, style=dashed];
m0_135 -> m0_136  [color=green, key=0, style=solid];
m0_135 -> m0_16  [color=green, key=2, style=dotted];
m0_137 -> m0_138  [color=green, key=0, style=solid];
m0_137 -> m0_16  [color=green, key=2, style=dotted];
m0_120 -> m0_121  [color=green, key=0, style=solid];
m0_120 -> m0_58  [color=green, key=2, style=dotted];
m0_122 -> m0_123  [color=green, key=0, style=solid];
m0_122 -> m0_144  [color=green, key=2, style=dotted];
m0_122 -> m0_58  [color=green, key=2, style=dotted];
m0_136 -> m0_137  [color=green, key=0, style=solid];
m0_136 -> m0_58  [color=green, key=2, style=dotted];
m0_138 -> m0_139  [color=green, key=0, style=solid];
m0_138 -> m0_144  [color=green, key=2, style=dotted];
m0_138 -> m0_58  [color=green, key=2, style=dotted];
m0_116 -> m0_120  [color=green, key=1, label=i, style=dashed];
m0_116 -> m0_122  [color=green, key=1, label=i, style=dashed];
m0_116 -> m0_118  [color=green, key=1, label=i, style=dashed];
m0_116 -> m0_117  [color=green, key=0, style=solid];
m0_116 -> m0_123  [color=green, key=1, label=i, style=dashed];
m0_123 -> m0_117  [color=green, key=0, style=solid];
m0_123 -> m0_123  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_136  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_138  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_134  [color=green, key=1, label=i, style=dashed];
m0_132 -> m0_133  [color=green, key=0, style=solid];
m0_132 -> m0_139  [color=green, key=1, label=i, style=dashed];
m0_139 -> m0_133  [color=green, key=0, style=solid];
m0_139 -> m0_139  [color=green, key=1, label=i, style=dashed];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_115 -> m0_58  [color=green, key=2, style=dotted];
m0_131 -> m0_132  [color=green, key=0, style=solid];
m0_131 -> m0_58  [color=green, key=2, style=dotted];
m0_140 -> m0_102  [color=blue, key=0, style=bold];
m0_156 -> m0_157  [color=green, key=0, style=solid];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_63  [color=green, key=2, style=dotted];
m0_61 -> m0_64  [color=green, key=2, style=dotted];
m0_60 -> m0_61  [color=green, key=0, style=solid];
m0_62 -> m0_60  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [color=green, key=0, style=solid];
m0_98 -> m0_100  [color=green, key=2, style=dotted];
m0_98 -> m0_64  [color=green, key=2, style=dotted];
m0_98 -> m0_101  [color=green, key=2, style=dotted];
m0_97 -> m0_98  [color=green, key=0, style=solid];
m0_99 -> m0_97  [color=blue, key=0, style=bold];
m0_147 -> m0_148  [color=green, key=0, style=solid];
m0_147 -> m0_149  [color=green, key=2, style=dotted];
m0_147 -> m0_143  [color=green, key=2, style=dotted];
m0_145 -> m0_147  [color=green, key=1, label=int, style=dashed];
m0_145 -> m0_146  [color=green, key=0, style=solid];
m0_146 -> m0_147  [color=green, key=0, style=solid];
m0_146 -> m0_149  [color=green, key=2, style=dotted];
m0_146 -> m0_150  [color=green, key=2, style=dotted];
m0_148 -> m0_145  [color=blue, key=0, style=bold];
m0_157 -> m0_158  [color=green, key=0, style=solid];
m0_157 -> m0_159  [color=green, key=2, style=dotted];
m0_157 -> m0_160  [color=green, key=2, style=dotted];
m0_157 -> m0_161  [color=green, key=2, style=dotted];
m0_157 -> m0_162  [color=green, key=2, style=dotted];
m0_157 -> m0_12  [color=green, key=2, style=dotted];
m0_157 -> m0_163  [color=green, key=2, style=dotted];
m0_158 -> m0_156  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [color=green, key=0, style=solid];
m0_77 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_77 -> m0_82  [color=green, key=0, style=solid];
m0_77 -> m0_78  [color=green, key=0, style=solid];
m0_91 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_91 -> m0_92  [color=green, key=0, style=solid];
m0_91 -> m0_96  [color=green, key=0, style=solid];
m0_66 -> m0_67  [color=green, key=0, style=solid];
m0_66 -> m0_11  [color=green, key=2, style=dotted];
m0_66 -> m0_69  [color=green, key=1, label=converter, style=dashed];
m0_66 -> m0_83  [color=green, key=1, label=converter, style=dashed];
m0_67 -> m0_68  [color=green, key=0, style=solid];
m0_67 -> m0_98  [color=green, key=1, label=symbol, style=dashed];
m0_67 -> m0_72  [color=green, key=1, label=symbol, style=dashed];
m0_67 -> m0_82  [color=green, key=1, label=symbol, style=dashed];
m0_67 -> m0_86  [color=green, key=1, label=symbol, style=dashed];
m0_69 -> m0_70  [color=green, key=0, style=solid];
m0_69 -> m0_55  [color=green, key=2, style=dotted];
m0_69 -> m0_71  [color=green, key=1, label=dataFrame, style=dashed];
m0_69 -> m0_72  [color=green, key=1, label=dataFrame, style=dashed];
m0_83 -> m0_84  [color=green, key=0, style=solid];
m0_83 -> m0_19  [color=green, key=2, style=dotted];
m0_83 -> m0_85  [color=green, key=1, label=dataFrame, style=dashed];
m0_83 -> m0_86  [color=green, key=1, label=dataFrame, style=dashed];
m0_68 -> m0_69  [color=green, key=0, style=solid];
m0_68 -> m0_52  [color=green, key=2, style=dotted];
m0_68 -> m0_53  [color=green, key=2, style=dotted];
m0_68 -> n149  [color=green, key=2, style=dotted];
m0_68 -> m0_97  [color=green, key=1, label="lambda expression", style=dashed];
m0_68 -> m0_80  [color=green, key=1, label=rawBars, style=dashed];
m0_68 -> m0_82  [color=green, key=1, label=rawBars, style=dashed];
m0_68 -> m0_94  [color=green, key=1, label=rawBars, style=dashed];
m0_72 -> m0_73  [color=green, key=0, style=solid];
m0_72 -> m0_74  [color=green, key=1, label=subDataFrame, style=dashed];
m0_72 -> m0_78  [color=green, key=1, label=subDataFrame, style=dashed];
m0_72 -> m0_79  [color=green, key=1, label=subDataFrame, style=dashed];
m0_82 -> m0_83  [color=green, key=0, style=solid];
m0_82 -> m0_59  [color=green, key=2, style=dotted];
m0_86 -> m0_87  [color=green, key=0, style=solid];
m0_86 -> m0_88  [color=green, key=1, label=subDataFrame, style=dashed];
m0_86 -> m0_92  [color=green, key=1, label=subDataFrame, style=dashed];
m0_86 -> m0_93  [color=green, key=1, label=subDataFrame, style=dashed];
m0_70 -> m0_71  [color=green, key=0, style=solid];
m0_70 -> m0_15  [color=green, key=2, style=dotted];
m0_71 -> m0_72  [color=green, key=0, style=solid];
m0_71 -> m0_16  [color=green, key=2, style=dotted];
m0_71 -> m0_56  [color=green, key=2, style=dotted];
m0_84 -> m0_85  [color=green, key=0, style=solid];
m0_84 -> m0_15  [color=green, key=2, style=dotted];
m0_85 -> m0_86  [color=green, key=0, style=solid];
m0_85 -> m0_16  [color=green, key=2, style=dotted];
m0_85 -> m0_56  [color=green, key=2, style=dotted];
m0_80 -> m0_81  [color=green, key=0, style=solid];
m0_80 -> m0_58  [color=green, key=2, style=dotted];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_94 -> m0_58  [color=green, key=2, style=dotted];
m0_73 -> m0_74  [color=green, key=0, style=solid];
m0_73 -> m0_16  [color=green, key=2, style=dotted];
m0_73 -> m0_56  [color=green, key=2, style=dotted];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_74 -> m0_57  [color=green, key=2, style=dotted];
m0_74 -> m0_16  [color=green, key=2, style=dotted];
m0_74 -> m0_77  [color=green, key=1, label=count, style=dashed];
m0_78 -> m0_79  [color=green, key=0, style=solid];
m0_79 -> m0_80  [color=green, key=0, style=solid];
m0_79 -> m0_16  [color=green, key=2, style=dotted];
m0_87 -> m0_88  [color=green, key=0, style=solid];
m0_87 -> m0_16  [color=green, key=2, style=dotted];
m0_87 -> m0_56  [color=green, key=2, style=dotted];
m0_88 -> m0_89  [color=green, key=0, style=solid];
m0_88 -> m0_57  [color=green, key=2, style=dotted];
m0_88 -> m0_16  [color=green, key=2, style=dotted];
m0_88 -> m0_91  [color=green, key=1, label=count, style=dashed];
m0_92 -> m0_93  [color=green, key=0, style=solid];
m0_93 -> m0_94  [color=green, key=0, style=solid];
m0_93 -> m0_16  [color=green, key=2, style=dotted];
m0_76 -> m0_80  [color=green, key=1, label=i, style=dashed];
m0_76 -> m0_78  [color=green, key=1, label=i, style=dashed];
m0_76 -> m0_77  [color=green, key=0, style=solid];
m0_76 -> m0_81  [color=green, key=1, label=i, style=dashed];
m0_81 -> m0_77  [color=green, key=0, style=solid];
m0_81 -> m0_81  [color=green, key=1, label=i, style=dashed];
m0_90 -> m0_94  [color=green, key=1, label=i, style=dashed];
m0_90 -> m0_92  [color=green, key=1, label=i, style=dashed];
m0_90 -> m0_91  [color=green, key=0, style=solid];
m0_90 -> m0_95  [color=green, key=1, label=i, style=dashed];
m0_95 -> m0_91  [color=green, key=0, style=solid];
m0_95 -> m0_95  [color=green, key=1, label=i, style=dashed];
m0_75 -> m0_76  [color=green, key=0, style=solid];
m0_75 -> m0_58  [color=green, key=2, style=dotted];
m0_89 -> m0_90  [color=green, key=0, style=solid];
m0_89 -> m0_58  [color=green, key=2, style=dotted];
m0_96 -> m0_65  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_11  [color=green, key=2, style=dotted];
m0_1 -> m0_3  [color=green, key=1, label=converter, style=dashed];
m0_1 -> m0_7  [color=green, key=1, label=converter, style=dashed];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_12  [color=green, key=2, style=dotted];
m0_2 -> m0_13  [color=green, key=2, style=dotted];
m0_2 -> m0_6  [color=green, key=1, label=rawBars, style=dashed];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_14  [color=green, key=2, style=dotted];
m0_3 -> m0_5  [color=green, key=1, label=dataFrame, style=dashed];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_19  [color=green, key=2, style=dotted];
m0_7 -> m0_9  [color=green, key=1, label=dataFrame, style=dashed];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_18  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_15  [color=green, key=2, style=dotted];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_16  [color=green, key=2, style=dotted];
m0_5 -> m0_17  [color=green, key=2, style=dotted];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_15  [color=green, key=2, style=dotted];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_16  [color=green, key=2, style=dotted];
m0_9 -> m0_17  [color=green, key=2, style=dotted];
m0_10 -> m0_0  [color=blue, key=0, style=bold];
m0_155 -> m0_151  [color=green, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscriptionDataConfig", style=bold];
m0_155 -> m0_167  [color=green, key=0, style=solid];
m0_167 -> m0_168  [color=green, key=0, style=solid];
m0_167 -> m0_169  [color=green, key=2, style=dotted];
m0_167 -> m0_170  [color=green, key=2, style=dotted];
m0_167 -> m0_171  [color=green, key=2, style=dotted];
m0_167 -> m0_172  [color=green, key=2, style=dotted];
m0_168 -> m0_155  [color=blue, key=0, style=bold];
m0_141 -> m0_104  [color=green, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m0_141 -> m0_105  [color=green, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m0_141 -> m0_164  [color=green, key=0, style=solid];
m0_141 -> m0_18  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m0_164 -> m0_165  [color=green, key=0, style=solid];
m0_164 -> m0_166  [color=green, key=2, style=dotted];
m0_165 -> m0_141  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_21 -> m0_11  [color=green, key=2, style=dotted];
m0_21 -> m0_24  [color=green, key=1, label=converter, style=dashed];
m0_21 -> m0_38  [color=green, key=1, label=converter, style=dashed];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_61  [color=green, key=1, label=symbol, style=dashed];
m0_22 -> m0_27  [color=green, key=1, label=symbol, style=dashed];
m0_22 -> m0_37  [color=green, key=1, label=symbol, style=dashed];
m0_22 -> m0_41  [color=green, key=1, label=symbol, style=dashed];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_55  [color=green, key=2, style=dotted];
m0_24 -> m0_26  [color=green, key=1, label=dataFrame, style=dashed];
m0_24 -> m0_27  [color=green, key=1, label=dataFrame, style=dashed];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_19  [color=green, key=2, style=dotted];
m0_38 -> m0_40  [color=green, key=1, label=dataFrame, style=dashed];
m0_38 -> m0_41  [color=green, key=1, label=dataFrame, style=dashed];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_52  [color=green, key=2, style=dotted];
m0_23 -> m0_53  [color=green, key=2, style=dotted];
m0_23 -> n149  [color=green, key=2, style=dotted];
m0_23 -> m0_60  [color=green, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_35  [color=green, key=1, label=rawBars, style=dashed];
m0_23 -> m0_37  [color=green, key=1, label=rawBars, style=dashed];
m0_23 -> m0_49  [color=green, key=1, label=rawBars, style=dashed];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_29  [color=green, key=1, label=subDataFrame, style=dashed];
m0_27 -> m0_33  [color=green, key=1, label=subDataFrame, style=dashed];
m0_27 -> m0_34  [color=green, key=1, label=subDataFrame, style=dashed];
m0_37 -> m0_38  [color=green, key=0, style=solid];
m0_37 -> m0_59  [color=green, key=2, style=dotted];
m0_41 -> m0_42  [color=green, key=0, style=solid];
m0_41 -> m0_43  [color=green, key=1, label=subDataFrame, style=dashed];
m0_41 -> m0_47  [color=green, key=1, label=subDataFrame, style=dashed];
m0_41 -> m0_48  [color=green, key=1, label=subDataFrame, style=dashed];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_15  [color=green, key=2, style=dotted];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_16  [color=green, key=2, style=dotted];
m0_26 -> m0_56  [color=green, key=2, style=dotted];
m0_39 -> m0_40  [color=green, key=0, style=solid];
m0_39 -> m0_15  [color=green, key=2, style=dotted];
m0_40 -> m0_41  [color=green, key=0, style=solid];
m0_40 -> m0_16  [color=green, key=2, style=dotted];
m0_40 -> m0_56  [color=green, key=2, style=dotted];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_58  [color=green, key=2, style=dotted];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_49 -> m0_58  [color=green, key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_16  [color=green, key=2, style=dotted];
m0_28 -> m0_56  [color=green, key=2, style=dotted];
m0_29 -> m0_30  [color=green, key=0, style=solid];
m0_29 -> m0_57  [color=green, key=2, style=dotted];
m0_29 -> m0_16  [color=green, key=2, style=dotted];
m0_29 -> m0_32  [color=green, key=1, label=count, style=dashed];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_34 -> m0_16  [color=green, key=2, style=dotted];
m0_32 -> m0_37  [color=green, key=0, style=solid];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_32 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_42 -> m0_16  [color=green, key=2, style=dotted];
m0_42 -> m0_56  [color=green, key=2, style=dotted];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_57  [color=green, key=2, style=dotted];
m0_43 -> m0_16  [color=green, key=2, style=dotted];
m0_43 -> m0_46  [color=green, key=1, label=count, style=dashed];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_48 -> m0_49  [color=green, key=0, style=solid];
m0_48 -> m0_16  [color=green, key=2, style=dotted];
m0_31 -> m0_35  [color=green, key=1, label=i, style=dashed];
m0_31 -> m0_33  [color=green, key=1, label=i, style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_36  [color=green, key=1, label=i, style=dashed];
m0_36 -> m0_32  [color=green, key=0, style=solid];
m0_36 -> m0_36  [color=green, key=1, label=i, style=dashed];
m0_45 -> m0_49  [color=green, key=1, label=i, style=dashed];
m0_45 -> m0_47  [color=green, key=1, label=i, style=dashed];
m0_45 -> m0_46  [color=green, key=0, style=solid];
m0_45 -> m0_50  [color=green, key=1, label=i, style=dashed];
m0_50 -> m0_46  [color=green, key=0, style=solid];
m0_50 -> m0_50  [color=green, key=1, label=i, style=dashed];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_58  [color=green, key=2, style=dotted];
m0_46 -> m0_32  [color=green, key=3, label="Local variable int i", style=bold];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_46 -> m0_51  [color=green, key=0, style=solid];
m0_44 -> m0_45  [color=green, key=0, style=solid];
m0_44 -> m0_58  [color=green, key=2, style=dotted];
m0_51 -> m0_20  [color=blue, key=0, style=bold];
m0_173 -> m0_6  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_37  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_82  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_105  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_124  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_151  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_173 -> m0_152  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m0_174 -> m0_61  [color=green, key=1, label=symbol, style=dashed];
m0_175 -> m0_98  [color=green, key=1, label=symbol, style=dashed];
m0_176 -> m0_147  [color=green, key=1, label=config, style=dashed];
m0_177 -> m0_147  [color=green, key=1, label=quandl, style=dashed];
m0_178 -> m0_157  [color=green, key=1, label=subscriptionDataConfig, style=dashed];
m0_179 -> m0_157  [color=green, key=1, label=security, style=dashed];
}
