digraph  {
n227 [label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span=""];
n0 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", span="52-52", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n1 [label="Py.GIL()", span="56-56", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n2 [label="Logging.Log.Trace($''AlgorithmPythonWrapper(): Python version {PythonEngine.Version}: Importing python module {moduleName}'')", span="58-58", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n3 [label="var module = Py.Import(moduleName)", span="60-60", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n8 [label="repr.StartsWith(moduleName) &&                // Must be defined in the module\r\n                            attr.TryConvert(out type) &&                  // Must be a Type\r\n                            typeof(QCAlgorithm).IsAssignableFrom(type)", span="68-70", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n23 [label="Entry Unk.GIL", span="", cluster="Unk.GIL"];
n24 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n4 [label="module.Dir()", span="62-62", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n25 [label="Entry Unk.Import", span="", cluster="Unk.Import"];
n6 [label="var attr = module.GetAttr(name.ToString())", span="65-65", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n5 [label="Type type", span="64-64", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n16 [label="_algorithm == null", span="94-94", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n26 [label="Entry Unk.Dir", span="", cluster="Unk.Dir"];
n7 [label="var repr = attr.Repr().GetStringBetweenChars('\'', '\'')", span="66-66", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n27 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
n28 [label="Entry Unk.GetAttr", span="", cluster="Unk.GetAttr"];
n10 [label="_algorithm = attr.Invoke()", span="74-74", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n29 [label="Entry Unk.Repr", span="", cluster="Unk.Repr"];
n30 [label="Entry Unk.GetStringBetweenChars", span="", cluster="Unk.GetStringBetweenChars"];
n9 [label="Logging.Log.Trace(''AlgorithmPythonWrapper(): Creating IAlgorithm instance.'')", span="72-72", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n31 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)"];
n32 [label="Entry Unk.TryConvert", span="", cluster="Unk.TryConvert"];
n33 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n12 [label="_baseAlgorithm = _algorithm.AsManagedObject(type)", span="80-80", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n11 [label="_algorithm.SetPandasConverter()", span="77-77", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", color=red, community=0];
n34 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke"];
n35 [label="Entry Unk.SetPandasConverter", span="", cluster="Unk.SetPandasConverter"];
n13 [label="_baseAlgorithm.InsightsGenerated += InsightsGenerated", span="84-84", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n36 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject"];
n14 [label="var pythonType = (_algorithm as PyObject).GetAttr(''OnData'').GetPythonType()", span="88-88", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n15 [label="_isOnDataDefined = pythonType.Repr().Equals(''<class \'method\'>'')", span="89-89", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n37 [label="Entry Unk.GetPythonType", span="", cluster="Unk.GetPythonType"];
n38 [label="Entry Unk.Equals", span="", cluster="Unk.Equals"];
n17 [label="throw new Exception(''Please ensure that one class inherits from QCAlgorithm or QCAlgorithmFramework.'');", span="96-96", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n18 [label=Exception, span="100-100", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n22 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", span="52-52", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n19 [label="var interpreter = StackExceptionInterpreter.CreateFromAssemblies(AppDomain.CurrentDomain.GetAssemblies())", span="103-103", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n20 [label="e = interpreter.Interpret(e, interpreter)", span="104-104", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n40 [label="Entry System.AppDomain.GetAssemblies()", span="0-0", cluster="System.AppDomain.GetAssemblies()"];
n41 [label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="109-109", cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)"];
n21 [label="throw new Exception($''AlgorithmPythonWrapper(): {interpreter.GetExceptionMessageHeader(e)}'');", span="106-106", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)"];
n42 [label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="68-68", cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n39 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n43 [label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", span="99-99", cluster="QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)"];
n44 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="305-305", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)"];
n45 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="305-305", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)"];
n46 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="311-311", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)"];
n47 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="311-311", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)"];
n48 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="317-317", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)"];
n49 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="317-317", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)"];
n50 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="323-323", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)"];
n51 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="323-323", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)"];
n52 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="377-377", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)"];
n53 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="377-377", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)"];
n54 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="388-388", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)"];
n55 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="388-388", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)"];
n56 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="399-399", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)"];
n57 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="399-399", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)"];
n58 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="406-406", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)"];
n59 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="406-406", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)"];
n60 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="412-412", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)"];
n61 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="412-412", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)"];
n62 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", span="418-418", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)"];
n63 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", span="418-418", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)"];
n64 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="425-425", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)"];
n65 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="425-425", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)"];
n66 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="430-430", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()"];
n67 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="430-430", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()"];
n68 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="438-438", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)"];
n69 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="438-438", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)"];
n70 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="444-444", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()"];
n71 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="444-444", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()"];
n72 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="449-449", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()"];
n73 [label="Py.GIL()", span="451-451", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()"];
n74 [label="_algorithm.Initialize()", span="453-453", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()"];
n75 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="449-449", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()"];
n76 [label="Entry Unk.Initialize", span="", cluster="Unk.Initialize"];
n77 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="463-463", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)"];
n78 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="463-463", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)"];
n79 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="469-469", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)"];
n80 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="469-469", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)"];
n81 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="474-474", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()"];
n82 [label="Py.GIL()", span="476-476", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()"];
n83 [label="_algorithm.OnBrokerageDisconnect()", span="478-478", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()"];
n84 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="474-474", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()"];
n85 [label="Entry Unk.OnBrokerageDisconnect", span="", cluster="Unk.OnBrokerageDisconnect"];
n86 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="485-485", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n87 [label="Py.GIL()", span="487-487", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n88 [label="_algorithm.OnBrokerageMessage(messageEvent)", span="489-489", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n89 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="485-485", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n90 [label="Entry Unk.OnBrokerageMessage", span="", cluster="Unk.OnBrokerageMessage"];
n91 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="496-496", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()"];
n92 [label="Py.GIL()", span="498-498", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()"];
n93 [label="_algorithm.OnBrokerageReconnect()", span="500-500", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()"];
n94 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="496-496", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()"];
n95 [label="Entry Unk.OnBrokerageReconnect", span="", cluster="Unk.OnBrokerageReconnect"];
n96 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="508-508", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)"];
n97 [label=_isOnDataDefined, span="510-510", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)"];
n99 [label="_algorithm.OnData(SubscriptionManager.HasCustomData ? new PythonSlice(slice) : slice)", span="514-514", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)"];
n98 [label="Py.GIL()", span="512-512", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)"];
n100 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="508-508", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)"];
n101 [label="Entry QuantConnect.Python.PythonSlice.PythonSlice(QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Python.PythonSlice.PythonSlice(QuantConnect.Data.Slice)"];
n102 [label="Entry Unk.OnData", span="", cluster="Unk.OnData"];
n103 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", span="523-523", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)"];
n104 [label="Py.GIL()", span="525-525", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)"];
n105 [label="_algorithm.OnFrameworkData(slice)", span="527-527", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)"];
n106 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", span="523-523", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)"];
n107 [label="Entry Unk.OnFrameworkData", span="", cluster="Unk.OnFrameworkData"];
n108 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="534-534", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()"];
n109 [label="Py.GIL()", span="536-536", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()"];
n110 [label="_algorithm.OnEndOfAlgorithm()", span="538-538", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()"];
n111 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="534-534", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()"];
n112 [label="Entry Unk.OnEndOfAlgorithm", span="", cluster="Unk.OnEndOfAlgorithm"];
n113 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="546-546", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n114 [label="Py.GIL()", span="550-550", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n115 [label="_algorithm.OnEndOfDay()", span="552-552", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n116 [label=PythonException, span="557-557", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n119 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="546-546", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n120 [label="Entry Unk.OnEndOfDay", span="", cluster="Unk.OnEndOfDay"];
n117 [label="!exception.Message.StartsWith(''TypeError : OnEndOfDay()'')", span="559-559", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n118 [label="_baseAlgorithm.SetRunTimeError(exception)", span="561-561", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()"];
n121 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith"];
n122 [label="Entry Unk.SetRunTimeError", span="", cluster="Unk.SetRunTimeError"];
n123 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="574-574", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n124 [label="Py.GIL()", span="578-578", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n125 [label="_algorithm.OnEndOfDay(symbol)", span="580-580", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n126 [label=PythonException, span="585-585", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n129 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="574-574", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n127 [label="!exception.Message.StartsWith(''TypeError : OnEndOfDay()'')", span="587-587", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n128 [label="_baseAlgorithm.SetRunTimeError(exception)", span="589-589", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)"];
n130 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="598-598", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n131 [label="Py.GIL()", span="602-602", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n132 [label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="604-604", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n135 [label="requests.Clear()", span="612-612", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n139 [label="requests.Add(request)", span="619-619", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n140 [label="requests.Count == 0", span="624-624", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n144 [label="_baseAlgorithm.OnMarginCall(requests)", span="635-635", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n133 [label="pyRequests == null || !pyRequests.IsIterable()", span="607-607", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n147 [label="Entry Unk.OnMarginCall", span="", cluster="Unk.OnMarginCall"];
n136 [label=pyRequests, span="614-614", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n134 [label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="609-609", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n148 [label="Entry Unk.IsIterable", span="", cluster="Unk.IsIterable"];
n149 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()"];
n137 [label="SubmitOrderRequest request", span="616-616", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n138 [label="TryConvert(pyRequest, out request)", span="617-617", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n150 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="829-829", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n151 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n141 [label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="626-626", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n142 [label=PythonException, span="630-630", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n146 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="598-598", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n143 [label="pythonException.Message.Contains(''TypeError : No method matches given arguments'')", span="633-633", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n145 [label="throw pythonException;", span="640-640", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n152 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
n153 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
n154 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="648-648", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()"];
n155 [label="Py.GIL()", span="650-650", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()"];
n156 [label="_algorithm.OnMarginCallWarning()", span="652-652", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()"];
n157 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="648-648", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()"];
n158 [label="Entry Unk.OnMarginCallWarning", span="", cluster="Unk.OnMarginCallWarning"];
n159 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="661-661", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
n160 [label="Py.GIL()", span="663-663", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
n161 [label="_algorithm.OnOrderEvent(newEvent)", span="665-665", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
n162 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="661-661", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
n163 [label="Entry Unk.OnOrderEvent", span="", cluster="Unk.OnOrderEvent"];
n164 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="674-674", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)"];
n165 [label="Py.GIL()", span="676-676", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)"];
n166 [label="_algorithm.OnAssignmentOrderEvent(assignmentEvent)", span="678-678", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)"];
n167 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="674-674", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)"];
n168 [label="Entry Unk.OnAssignmentOrderEvent", span="", cluster="Unk.OnAssignmentOrderEvent"];
n169 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="686-686", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n170 [label="Py.GIL()", span="688-688", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n171 [label="_algorithm.OnSecuritiesChanged(changes)", span="690-690", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n172 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="686-686", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n173 [label="Entry Unk.OnSecuritiesChanged", span="", cluster="Unk.OnSecuritiesChanged"];
n174 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="698-698", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n175 [label="Py.GIL()", span="700-700", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n176 [label="_algorithm.OnFrameworkSecuritiesChanged(changes)", span="702-702", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n177 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="698-698", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
n178 [label="Entry Unk.OnFrameworkSecuritiesChanged", span="", cluster="Unk.OnFrameworkSecuritiesChanged"];
n179 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="710-710", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()"];
n180 [label="_baseAlgorithm.PostInitialize()", span="712-712", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()"];
n181 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="710-710", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()"];
n182 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()"];
n183 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", span="718-718", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()"];
n184 [label="Py.GIL()", span="720-720", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()"];
n185 [label="_algorithm.OnWarmupFinished()", span="722-722", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()"];
n186 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", span="718-718", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()"];
n187 [label="Entry Unk.OnWarmupFinished", span="", cluster="Unk.OnWarmupFinished"];
n188 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="731-731", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)"];
n189 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="731-731", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)"];
n190 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="737-737", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)"];
n191 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="737-737", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)"];
n192 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="746-746", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)"];
n193 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="746-746", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)"];
n194 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="754-754", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)"];
n195 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="754-754", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)"];
n196 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="760-760", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)"];
n197 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="760-760", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)"];
n198 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="768-768", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)"];
n199 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="768-768", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)"];
n200 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="774-774", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)"];
n201 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="774-774", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)"];
n202 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="780-780", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)"];
n203 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="780-780", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)"];
n204 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="785-785", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()"];
n205 [label="_baseAlgorithm.SetFinishedWarmingUp()", span="787-787", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()"];
n206 [label="OnWarmupFinished()", span="790-790", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()"];
n208 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588", cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()"];
n207 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="785-785", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()"];
n209 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="797-797", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)"];
n210 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="797-797", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)"];
n211 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="803-803", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)"];
n212 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="803-803", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)"];
n213 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="808-808", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()"];
n214 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="808-808", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()"];
n215 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="814-814", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)"];
n216 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="814-814", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)"];
n217 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="820-820", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)"];
n218 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="820-820", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)"];
n219 [label="result = default(T)", span="831-831", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n220 [label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="832-832", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n222 [label="result = (T)pyObject.AsManagedObject(typeof(T))", span="836-836", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n224 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="829-829", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n221 [label="type == typeof(T)", span="834-834", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n223 [label="return type == typeof(T);", span="839-839", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)"];
n225 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="846-846", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()"];
n226 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="846-846", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()"];
d5 [label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                //_algorithm.Portfolio.SetCash(account.CashBalance);\r\n\r\n                // how close are we?\r\n                decimal delta = _algorithm.Portfolio.Cash - account.CashBalance;\r\n                Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta));\r\n            }", span="73-80", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0];
d116 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
d0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d4 [label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="67-70", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d6 [label="IsActive = true", span="82-82", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d18 [label="decimal delta = _algorithm.Portfolio.Cash - account.CashBalance", span="78-78", cluster="lambda expression"];
d19 [label="Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta))", span="79-79", cluster="lambda expression"];
d3 [label="_brokerage = brokerage", span="66-66", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d14 [label="HandleOrderEvent(fill)", span="69-69", cluster="lambda expression"];
d7 [label="_algorithm = algorithm", span="84-84", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d8 [label="_orders = algorithm.Transactions.Orders", span="87-87", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d9 [label="_orderEvents = algorithm.Transactions.OrderEvents", span="88-88", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d10 [label="_orderQueue = algorithm.Transactions.OrderQueue", span="89-89", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d24 [label="!_exitTriggered", span="111-111", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d26 [label="!_orderQueue.TryDequeue(out order)", span="116-116", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d27 [label="_algorithm.ProcessingOrder = false", span="118-118", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d29 [label="_algorithm.ProcessingOrder = true", span="123-123", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d32 [label="!_orders.TryAdd(order.Id, order)", span="131-131", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d36 [label="HandleNewOrder(order)", span="142-142", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d38 [label="HandleUpdatedOrder(order)", span="146-146", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d40 [label="HandleCancelledOrder(order)", span="150-150", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d47 [label="ProcessSynchronousEvents()", span="163-163", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d49 [label="IsActive = false", span="167-167", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d61 [label="_exitTriggered = true", span="183-183", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()"];
d63 [label="_orders.TryAdd(order.Id, order)", span="193-193", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d64 [label="!GetSufficientCapitalForOrder(order)", span="195-195", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d66 [label="_brokerage.PlaceOrder(order)", span="201-201", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d74 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="223-223", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d75 [label="_orders[order.Id] = order", span="225-225", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d76 [label="!_brokerage.UpdateOrder(order)", span="226-226", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d82 [label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="241-241", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d84 [label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="245-245", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d92 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="258-258", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d93 [label="_orders[order.Id] = order", span="260-260", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d94 [label="!_brokerage.CancelOrder(order)", span="262-262", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d99 [label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="277-277", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d105 [label="_algorithm.Portfolio.ProcessFill(fill)", span="295-295", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d108 [label="_algorithm.OnOrderEvent(fill)", span="306-306", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d110 [label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="310-310", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d11 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d1 [label="brokerage == null", span="61-61", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d16 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d17 [label="Entry lambda expression", span="73-80", cluster="lambda expression"];
d117 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
d20 [label="Exit lambda expression", span="73-80", cluster="lambda expression"];
d21 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)"];
d22 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
d13 [label="Entry lambda expression", span="67-70", cluster="lambda expression"];
d15 [label="Exit lambda expression", span="67-70", cluster="lambda expression"];
d23 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d33 [label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="133-133", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d28 [label="Thread.Sleep(1)", span="119-119", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d25 [label="Order order", span="115-115", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d48 [label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="166-166", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d51 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)"];
d30 [label="order.Direction == OrderDirection.Hold", span="126-126", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d31 [label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="128-128", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d34 [label="order.Status", span="139-139", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d46 [label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="159-159", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d54 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)"];
d35 [label="OrderStatus.New", span="141-141", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d55 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d37 [label="OrderStatus.Update", span="145-145", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d56 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d39 [label="OrderStatus.Canceled", span="149-149", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d57 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d58 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()"];
d50 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d60 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()"];
d62 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()"];
d69 [label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="212-212", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d65 [label="return;", span="197-197", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d71 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d67 [label="order.Status = OrderStatus.Submitted", span="203-203", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d68 [label="order.Status = OrderStatus.Invalid", span="207-207", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d72 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)"];
d73 [label="Order queued", span="222-222", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d78 [label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="234-234", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d80 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
d77 [label="order.Status = OrderStatus.Invalid", span="229-229", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d79 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)"];
d81 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)"];
d83 [label="order.Status = OrderStatus.Invalid", span="244-244", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d86 [label="return true;", span="248-248", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d88 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="390-390", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)"];
d85 [label="return false;", span="246-246", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d89 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d90 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)"];
d91 [label="Order queued", span="257-257", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d96 [label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="270-270", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d95 [label="order.Status = OrderStatus.Invalid", span="265-265", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d97 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)"];
d98 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)"];
d100 [label="order == null", span="278-278", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d112 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="335-335", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)"];
d103 [label="order.Status = fill.Status", span="285-285", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d104 [label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="293-293", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d106 [label="fill.Status != OrderStatus.None", span="299-299", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d113 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)"];
d107 [label="Engine.ResultHandler.OrderEvent(fill)", span="302-302", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d109 [label=Exception, span="308-308", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d111 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d115 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)"];
d2 [label="throw new ArgumentNullException(''brokerage'');", span="63-63", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)"];
d101 [label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="280-280", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d53 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
d52 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)"];
d41 [label="OrderStatus.None", span="154-154", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d45 [label="OrderStatus.Submitted", span="158-158", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d70 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)"];
d59 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()"];
d87 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)"];
d114 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
d102 [label="return;", span="281-281", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)"];
d12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d42 [label="OrderStatus.Invalid", span="155-155", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d44 [label="OrderStatus.Filled", span="157-157", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
d43 [label="OrderStatus.PartiallyFilled", span="156-156", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()"];
m0_2 [label="Entry QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="41-41", cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="ForexPortfolioModel.cs"];
m0_3 [label="Exit QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="41-41", cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="ForexPortfolioModel.cs"];
m0_0 [label="Entry QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="29-29", cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="ForexPortfolioModel.cs"];
m0_1 [label="Exit QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="29-29", cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="ForexPortfolioModel.cs"];
n227 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n11  [key=1, style=dashed, color=red, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n227 -> n206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label=string];
n1 -> n2  [key=0, style=solid];
n1 -> n23  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n24  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n25  [key=2, style=dotted];
n3 -> n6  [key=1, style=dashed, color=darkseagreen4, label=module];
n8 -> n9  [key=0, style=solid];
n8 -> n4  [key=0, style=solid];
n8 -> n31  [key=2, style=dotted];
n8 -> n32  [key=2, style=dotted];
n8 -> n33  [key=2, style=dotted];
n8 -> n8  [key=1, style=dashed, color=darkseagreen4, label=type];
n8 -> n12  [key=1, style=dashed, color=darkseagreen4, label=type];
n4 -> n5  [key=0, style=solid];
n4 -> n16  [key=0, style=solid];
n4 -> n26  [key=2, style=dotted];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label=name];
n6 -> n7  [key=0, style=solid];
n6 -> n27  [key=2, style=dotted];
n6 -> n28  [key=2, style=dotted];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=attr];
n6 -> n10  [key=1, style=dashed, color=darkseagreen4, label=attr];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=1, style=dashed, color=darkseagreen4, label=type];
n5 -> n7  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Data.Market.TradeBar consolidated"];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=0, style=solid];
n16 -> n22  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n29  [key=2, style=dotted];
n7 -> n30  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid, color=red];
n10 -> n34  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n24  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n36  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n35  [key=2, style=dotted, color=red];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n28  [key=2, style=dotted];
n14 -> n37  [key=2, style=dotted];
n15 -> n4  [key=0, style=solid];
n15 -> n29  [key=2, style=dotted];
n15 -> n38  [key=2, style=dotted];
n17 -> n22  [key=0, style=solid];
n17 -> n39  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n22 -> n0  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n40  [key=2, style=dotted];
n19 -> n41  [key=2, style=dotted];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label=interpreter];
n20 -> n21  [key=0, style=solid];
n20 -> n42  [key=2, style=dotted];
n20 -> n20  [key=1, style=dashed, color=darkseagreen4, label=e];
n21 -> n22  [key=0, style=solid];
n21 -> n39  [key=2, style=dotted];
n21 -> n43  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n45 -> n44  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid];
n47 -> n46  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n49 -> n48  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n51 -> n50  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n53 -> n52  [key=0, style=bold, color=blue];
n54 -> n55  [key=0, style=solid];
n55 -> n54  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n57 -> n56  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n59 -> n58  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n61 -> n60  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n62  [key=0, style=bold, color=blue];
n64 -> n65  [key=0, style=solid];
n65 -> n64  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n67 -> n66  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n69 -> n68  [key=0, style=bold, color=blue];
n70 -> n71  [key=0, style=solid];
n71 -> n70  [key=0, style=bold, color=blue];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n23  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=2, style=dotted];
n75 -> n72  [key=0, style=bold, color=blue];
n77 -> n78  [key=0, style=solid];
n78 -> n77  [key=0, style=bold, color=blue];
n79 -> n80  [key=0, style=solid];
n80 -> n79  [key=0, style=bold, color=blue];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n23  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=2, style=dotted];
n84 -> n81  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n87 -> n88  [key=0, style=solid];
n87 -> n23  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=2, style=dotted];
n89 -> n86  [key=0, style=bold, color=blue];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n23  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=2, style=dotted];
n94 -> n91  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid];
n96 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=2, style=dotted];
n99 -> n102  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n23  [key=2, style=dotted];
n100 -> n96  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
n104 -> n105  [key=0, style=solid];
n104 -> n23  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n107  [key=2, style=dotted];
n106 -> n103  [key=0, style=bold, color=blue];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n23  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=2, style=dotted];
n111 -> n108  [key=0, style=bold, color=blue];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n23  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n119  [key=0, style=solid];
n115 -> n120  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n119 -> n113  [key=0, style=bold, color=blue];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n117 -> n121  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n122  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n124 -> n125  [key=0, style=solid];
n124 -> n23  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n129  [key=0, style=solid];
n125 -> n120  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n129 -> n123  [key=0, style=bold, color=blue];
n127 -> n128  [key=0, style=solid];
n127 -> n129  [key=0, style=solid];
n127 -> n121  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n122  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>"];
n130 -> n135  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>"];
n130 -> n139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>"];
n130 -> n140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>"];
n130 -> n144  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>"];
n131 -> n132  [key=0, style=solid];
n131 -> n23  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n147  [key=2, style=dotted];
n132 -> n136  [key=1, style=dashed, color=darkseagreen4, label=pyRequests];
n135 -> n136  [key=0, style=solid];
n135 -> n149  [key=2, style=dotted];
n139 -> n136  [key=0, style=solid];
n139 -> n151  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n140 -> n146  [key=0, style=solid];
n144 -> n146  [key=0, style=solid];
n144 -> n153  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n133 -> n148  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n140  [key=0, style=solid];
n136 -> n138  [key=1, style=dashed, color=darkseagreen4, label=pyRequest];
n134 -> n146  [key=0, style=solid];
n134 -> n39  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n136  [key=0, style=solid];
n138 -> n150  [key=2, style=dotted];
n150 -> n219  [key=0, style=solid];
n150 -> n220  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
n150 -> n222  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
n150 -> n136  [key=3, color=darkorchid, style=bold, label="Parameter variable PyObject pyObject"];
n150 -> n137  [key=3, color=darkorchid, style=bold, label="Parameter variable T result"];
n141 -> n146  [key=0, style=solid];
n141 -> n39  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n146 -> n130  [key=0, style=bold, color=blue];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [key=0, style=solid];
n143 -> n152  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n23  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=2, style=dotted];
n157 -> n154  [key=0, style=bold, color=blue];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n160 -> n161  [key=0, style=solid];
n160 -> n23  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n162 -> n159  [key=0, style=bold, color=blue];
n164 -> n165  [key=0, style=solid];
n164 -> n166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n165 -> n166  [key=0, style=solid];
n165 -> n23  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=2, style=dotted];
n167 -> n164  [key=0, style=bold, color=blue];
n169 -> n170  [key=0, style=solid];
n169 -> n171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
n170 -> n171  [key=0, style=solid];
n170 -> n23  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n173  [key=2, style=dotted];
n172 -> n169  [key=0, style=bold, color=blue];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
n175 -> n176  [key=0, style=solid];
n175 -> n23  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n178  [key=2, style=dotted];
n177 -> n174  [key=0, style=bold, color=blue];
n179 -> n180  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n180 -> n182  [key=2, style=dotted];
n181 -> n179  [key=0, style=bold, color=blue];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n23  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=2, style=dotted];
n186 -> n183  [key=0, style=bold, color=blue];
n188 -> n189  [key=0, style=solid];
n189 -> n188  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n191 -> n190  [key=0, style=bold, color=blue];
n192 -> n193  [key=0, style=solid];
n193 -> n192  [key=0, style=bold, color=blue];
n194 -> n195  [key=0, style=solid];
n195 -> n194  [key=0, style=bold, color=blue];
n196 -> n197  [key=0, style=solid];
n197 -> n196  [key=0, style=bold, color=blue];
n198 -> n199  [key=0, style=solid];
n199 -> n198  [key=0, style=bold, color=blue];
n200 -> n201  [key=0, style=solid];
n201 -> n200  [key=0, style=bold, color=blue];
n202 -> n203  [key=0, style=solid];
n203 -> n202  [key=0, style=bold, color=blue];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n208  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n183  [key=2, style=dotted];
n207 -> n204  [key=0, style=bold, color=blue];
n209 -> n210  [key=0, style=solid];
n210 -> n209  [key=0, style=bold, color=blue];
n211 -> n212  [key=0, style=solid];
n212 -> n211  [key=0, style=bold, color=blue];
n213 -> n214  [key=0, style=solid];
n214 -> n213  [key=0, style=bold, color=blue];
n215 -> n216  [key=0, style=solid];
n216 -> n215  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n218 -> n217  [key=0, style=bold, color=blue];
n219 -> n220  [key=0, style=solid];
n219 -> n224  [key=1, style=dashed, color=darkseagreen4, label="out T"];
n220 -> n221  [key=0, style=solid];
n220 -> n37  [key=2, style=dotted];
n220 -> n36  [key=2, style=dotted];
n220 -> n223  [key=1, style=dashed, color=darkseagreen4, label=type];
n222 -> n223  [key=0, style=solid];
n222 -> n36  [key=2, style=dotted];
n222 -> n224  [key=1, style=dashed, color=darkseagreen4, label="out T"];
n224 -> n150  [key=0, style=bold, color=blue];
n221 -> n222  [key=0, style=solid];
n221 -> n223  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n226 -> n225  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d18  [key=1, style=dashed, color=green, label="QuantConnect.Securities.AccountEvent"];
d5 -> d19  [key=1, style=dashed, color=green, label="QuantConnect.Securities.AccountEvent"];
d116 -> d5  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d116 -> d110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
d0 -> d5  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
d0 -> d19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d6 -> d7  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d21  [key=2, style=dotted];
d19 -> d22  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d16  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d24 -> d48  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d26 -> d29  [key=0, style=solid];
d26 -> d51  [key=2, style=dotted];
d26 -> d30  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d31  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d32  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d33  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d34  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d36  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d38  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d40  [key=1, style=dashed, color=darkseagreen4, label=order];
d26 -> d46  [key=1, style=dashed, color=darkseagreen4, label=order];
d27 -> d28  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d32 -> d24  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d54  [key=2, style=dotted];
d36 -> d47  [key=0, style=solid];
d36 -> d55  [key=2, style=dotted];
d38 -> d47  [key=0, style=solid];
d38 -> d56  [key=2, style=dotted];
d40 -> d47  [key=0, style=solid];
d40 -> d57  [key=2, style=dotted];
d47 -> d24  [key=0, style=solid];
d47 -> d58  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d69  [key=0, style=solid];
d63 -> d54  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d64 -> d66  [key=0, style=solid];
d64 -> d71  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=0, style=solid];
d66 -> d72  [key=2, style=dotted];
d74 -> d74  [key=1, style=dashed, color=darkseagreen4, label=queued];
d74 -> d75  [key=0, style=solid];
d74 -> d78  [key=0, style=solid];
d74 -> d80  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d76 -> d77  [key=0, style=solid];
d76 -> d79  [key=0, style=solid];
d76 -> d81  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d86  [key=0, style=solid];
d82 -> d88  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d89  [key=2, style=dotted];
d84 -> d90  [key=2, style=dotted];
d92 -> d92  [key=1, style=dashed, color=darkseagreen4, label=queued];
d92 -> d93  [key=0, style=solid];
d92 -> d96  [key=0, style=solid];
d92 -> d80  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d94 -> d97  [key=0, style=solid];
d94 -> d98  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d112  [key=2, style=dotted];
d99 -> d103  [key=1, style=dashed, color=darkseagreen4, label=order];
d105 -> d106  [key=0, style=solid];
d105 -> d113  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d108 -> d111  [key=0, style=solid];
d108 -> d115  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d90  [key=2, style=dotted];
d11 -> d0  [key=0, style=bold, color=blue];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d16 -> d4  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent fill"];
d16 -> d99  [key=0, style=solid];
d16 -> d105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d16 -> d107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
d117 -> d19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d20 -> d17  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid];
d15 -> d13  [key=0, style=bold, color=blue];
d23 -> d24  [key=0, style=solid];
d33 -> d24  [key=0, style=solid];
d33 -> d53  [key=2, style=dotted];
d28 -> d24  [key=0, style=solid];
d28 -> d52  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d48 -> d49  [key=0, style=solid];
d48 -> d22  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d34  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d53  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=0, style=solid];
d34 -> d39  [key=0, style=solid];
d34 -> d41  [key=0, style=solid];
d46 -> d47  [key=0, style=solid];
d46 -> d53  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d55 -> d63  [key=0, style=solid];
d55 -> d64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d55 -> d66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d55 -> d25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
d55 -> d67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d55 -> d68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d37 -> d38  [key=0, style=solid];
d56 -> d74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d56 -> d75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d56 -> d76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d56 -> d25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
d56 -> d73  [key=0, style=solid];
d56 -> d77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d56 -> d78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d39 -> d40  [key=0, style=solid];
d57 -> d92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d57 -> d93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d57 -> d94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d57 -> d25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
d57 -> d91  [key=0, style=solid];
d57 -> d95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d57 -> d96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d58 -> d59  [key=0, style=solid];
d50 -> d23  [key=0, style=bold, color=blue];
d60 -> d61  [key=0, style=solid];
d62 -> d60  [key=0, style=bold, color=blue];
d69 -> d70  [key=0, style=solid];
d69 -> d53  [key=2, style=dotted];
d65 -> d70  [key=0, style=solid];
d71 -> d82  [key=0, style=solid];
d71 -> d84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d71 -> d55  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
d71 -> d83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
d71 -> d85  [key=3, color=darkorchid, style=bold, label="method methodReturn bool GetSufficientCapitalForOrder"];
d71 -> d86  [key=3, color=darkorchid, style=bold, label="method methodReturn bool GetSufficientCapitalForOrder"];
d67 -> d70  [key=0, style=solid];
d68 -> d70  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d78 -> d53  [key=2, style=dotted];
d77 -> d79  [key=0, style=solid];
d79 -> d56  [key=0, style=bold, color=blue];
d83 -> d84  [key=0, style=solid];
d86 -> d87  [key=0, style=solid];
d85 -> d87  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d96 -> d53  [key=2, style=dotted];
d95 -> d97  [key=0, style=solid];
d97 -> d57  [key=0, style=bold, color=blue];
d100 -> d101  [key=0, style=solid];
d100 -> d103  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d106  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d111  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d114  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d111 -> d16  [key=0, style=bold, color=blue];
d2 -> d11  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d101 -> d53  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d70 -> d55  [key=0, style=bold, color=blue];
d59 -> d58  [key=0, style=bold, color=blue];
d87 -> d71  [key=0, style=bold, color=blue];
d102 -> d111  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
}
