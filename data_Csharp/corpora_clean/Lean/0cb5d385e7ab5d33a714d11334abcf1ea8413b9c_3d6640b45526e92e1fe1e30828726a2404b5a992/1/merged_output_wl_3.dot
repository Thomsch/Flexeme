digraph  {
n227 [label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span=""];
n0 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", span="52-52"];
n1 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Py.GIL()", span="56-56"];
n2 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Logging.Log.Trace($''AlgorithmPythonWrapper(): Python version {PythonEngine.Version}: Importing python module {moduleName}'')", span="58-58"];
n3 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="var module = Py.Import(moduleName)", span="60-60"];
n8 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="repr.StartsWith(moduleName) &&                // Must be defined in the module\r\n                            attr.TryConvert(out type) &&                  // Must be a Type\r\n                            typeof(QCAlgorithm).IsAssignableFrom(type)", span="68-70"];
n23 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n24 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n4 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="module.Dir()", span="62-62"];
n25 [cluster="Unk.Import", label="Entry Unk.Import", span=""];
n6 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="var attr = module.GetAttr(name.ToString())", span="65-65"];
n5 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Type type", span="64-64"];
n16 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="_algorithm == null", span="94-94"];
n26 [cluster="Unk.Dir", label="Entry Unk.Dir", span=""];
n7 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="var repr = attr.Repr().GetStringBetweenChars('\'', '\'')", span="66-66"];
n27 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
n28 [cluster="Unk.GetAttr", label="Entry Unk.GetAttr", span=""];
n10 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="_algorithm = attr.Invoke()", span="74-74"];
n29 [cluster="Unk.Repr", label="Entry Unk.Repr", span=""];
n30 [cluster="Unk.GetStringBetweenChars", label="Entry Unk.GetStringBetweenChars", span=""];
n9 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Logging.Log.Trace(''AlgorithmPythonWrapper(): Creating IAlgorithm instance.'')", span="72-72"];
n31 [cluster="string.StartsWith(string)", label="Entry string.StartsWith(string)", span="0-0"];
n32 [cluster="Unk.TryConvert", label="Entry Unk.TryConvert", span=""];
n33 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n12 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="_baseAlgorithm = _algorithm.AsManagedObject(type)", span="80-80"];
n11 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", color=red, community=0, label="0: _algorithm.SetPandasConverter()", span="77-77"];
n34 [cluster="Unk.Invoke", label="Entry Unk.Invoke", span=""];
n35 [cluster="Unk.SetPandasConverter", label="Entry Unk.SetPandasConverter", span=""];
n13 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="_baseAlgorithm.InsightsGenerated += InsightsGenerated", span="84-84"];
n36 [cluster="Unk.AsManagedObject", label="Entry Unk.AsManagedObject", span=""];
n14 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="var pythonType = (_algorithm as PyObject).GetAttr(''OnData'').GetPythonType()", span="88-88"];
n15 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="_isOnDataDefined = pythonType.Repr().Equals(''<class \'method\'>'')", span="89-89"];
n37 [cluster="Unk.GetPythonType", label="Entry Unk.GetPythonType", span=""];
n38 [cluster="Unk.Equals", label="Entry Unk.Equals", span=""];
n17 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="throw new Exception(''Please ensure that one class inherits from QCAlgorithm or QCAlgorithmFramework.'');", span="96-96"];
n18 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label=Exception, span="100-100"];
n22 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", span="52-52"];
n19 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="var interpreter = StackExceptionInterpreter.CreateFromAssemblies(AppDomain.CurrentDomain.GetAssemblies())", span="103-103"];
n20 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="e = interpreter.Interpret(e, interpreter)", span="104-104"];
n40 [cluster="System.AppDomain.GetAssemblies()", label="Entry System.AppDomain.GetAssemblies()", span="0-0"];
n41 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="109-109"];
n21 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", label="throw new Exception($''AlgorithmPythonWrapper(): {interpreter.GetExceptionMessageHeader(e)}'');", span="106-106"];
n42 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="68-68"];
n39 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n43 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", span="99-99"];
n44 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="305-305"];
n45 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="305-305"];
n46 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="311-311"];
n47 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="311-311"];
n48 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="317-317"];
n49 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="317-317"];
n50 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="323-323"];
n51 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="323-323"];
n52 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="377-377"];
n53 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="377-377"];
n54 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="388-388"];
n55 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="388-388"];
n56 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="399-399"];
n57 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="399-399"];
n58 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="406-406"];
n59 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="406-406"];
n60 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="412-412"];
n61 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="412-412"];
n62 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", span="418-418"];
n63 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddChart(QuantConnect.Chart)", span="418-418"];
n64 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="425-425"];
n65 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="425-425"];
n66 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="430-430"];
n67 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="430-430"];
n68 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="438-438"];
n69 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="438-438"];
n70 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="444-444"];
n71 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="444-444"];
n72 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="449-449"];
n73 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", label="Py.GIL()", span="451-451"];
n74 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", label="_algorithm.Initialize()", span="453-453"];
n75 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="449-449"];
n76 [cluster="Unk.Initialize", label="Entry Unk.Initialize", span=""];
n77 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="463-463"];
n78 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="463-463"];
n79 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="469-469"];
n80 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="469-469"];
n81 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="474-474"];
n82 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", label="Py.GIL()", span="476-476"];
n83 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", label="_algorithm.OnBrokerageDisconnect()", span="478-478"];
n84 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="474-474"];
n85 [cluster="Unk.OnBrokerageDisconnect", label="Entry Unk.OnBrokerageDisconnect", span=""];
n86 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="485-485"];
n87 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", label="Py.GIL()", span="487-487"];
n88 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", label="_algorithm.OnBrokerageMessage(messageEvent)", span="489-489"];
n89 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="485-485"];
n90 [cluster="Unk.OnBrokerageMessage", label="Entry Unk.OnBrokerageMessage", span=""];
n91 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="496-496"];
n92 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", label="Py.GIL()", span="498-498"];
n93 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", label="_algorithm.OnBrokerageReconnect()", span="500-500"];
n94 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="496-496"];
n95 [cluster="Unk.OnBrokerageReconnect", label="Entry Unk.OnBrokerageReconnect", span=""];
n96 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="508-508"];
n97 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", label=_isOnDataDefined, span="510-510"];
n99 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", label="_algorithm.OnData(SubscriptionManager.HasCustomData ? new PythonSlice(slice) : slice)", span="514-514"];
n98 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", label="Py.GIL()", span="512-512"];
n100 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="508-508"];
n101 [cluster="QuantConnect.Python.PythonSlice.PythonSlice(QuantConnect.Data.Slice)", label="Entry QuantConnect.Python.PythonSlice.PythonSlice(QuantConnect.Data.Slice)", span="57-57"];
n102 [cluster="Unk.OnData", label="Entry Unk.OnData", span=""];
n103 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", span="523-523"];
n104 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", label="Py.GIL()", span="525-525"];
n105 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", label="_algorithm.OnFrameworkData(slice)", span="527-527"];
n106 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkData(QuantConnect.Data.Slice)", span="523-523"];
n107 [cluster="Unk.OnFrameworkData", label="Entry Unk.OnFrameworkData", span=""];
n108 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="534-534"];
n109 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", label="Py.GIL()", span="536-536"];
n110 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", label="_algorithm.OnEndOfAlgorithm()", span="538-538"];
n111 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="534-534"];
n112 [cluster="Unk.OnEndOfAlgorithm", label="Entry Unk.OnEndOfAlgorithm", span=""];
n113 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="546-546"];
n114 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="Py.GIL()", span="550-550"];
n115 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="_algorithm.OnEndOfDay()", span="552-552"];
n116 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label=PythonException, span="557-557"];
n119 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="546-546"];
n120 [cluster="Unk.OnEndOfDay", label="Entry Unk.OnEndOfDay", span=""];
n117 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="!exception.Message.StartsWith(''TypeError : OnEndOfDay()'')", span="559-559"];
n118 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", label="_baseAlgorithm.SetRunTimeError(exception)", span="561-561"];
n121 [cluster="Unk.StartsWith", label="Entry Unk.StartsWith", span=""];
n122 [cluster="Unk.SetRunTimeError", label="Entry Unk.SetRunTimeError", span=""];
n123 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="574-574"];
n124 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="Py.GIL()", span="578-578"];
n125 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="_algorithm.OnEndOfDay(symbol)", span="580-580"];
n126 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label=PythonException, span="585-585"];
n129 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="574-574"];
n127 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="!exception.Message.StartsWith(''TypeError : OnEndOfDay()'')", span="587-587"];
n128 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", label="_baseAlgorithm.SetRunTimeError(exception)", span="589-589"];
n130 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="598-598"];
n131 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Py.GIL()", span="602-602"];
n132 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="604-604"];
n135 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="requests.Clear()", span="612-612"];
n139 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="requests.Add(request)", span="619-619"];
n140 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="requests.Count == 0", span="624-624"];
n144 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="_baseAlgorithm.OnMarginCall(requests)", span="635-635"];
n133 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="pyRequests == null || !pyRequests.IsIterable()", span="607-607"];
n147 [cluster="Unk.OnMarginCall", label="Entry Unk.OnMarginCall", span=""];
n136 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label=pyRequests, span="614-614"];
n134 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="609-609"];
n148 [cluster="Unk.IsIterable", label="Entry Unk.IsIterable", span=""];
n149 [cluster="System.Collections.Generic.List<T>.Clear()", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
n137 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="SubmitOrderRequest request", span="616-616"];
n138 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="TryConvert(pyRequest, out request)", span="617-617"];
n150 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="829-829"];
n151 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n141 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="626-626"];
n142 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label=PythonException, span="630-630"];
n146 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="598-598"];
n143 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="pythonException.Message.Contains(''TypeError : No method matches given arguments'')", span="633-633"];
n145 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="throw pythonException;", span="640-640"];
n152 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
n153 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432"];
n154 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="648-648"];
n155 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", label="Py.GIL()", span="650-650"];
n156 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", label="_algorithm.OnMarginCallWarning()", span="652-652"];
n157 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="648-648"];
n158 [cluster="Unk.OnMarginCallWarning", label="Entry Unk.OnMarginCallWarning", span=""];
n159 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="661-661"];
n160 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Py.GIL()", span="663-663"];
n161 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="_algorithm.OnOrderEvent(newEvent)", span="665-665"];
n162 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="661-661"];
n163 [cluster="Unk.OnOrderEvent", label="Entry Unk.OnOrderEvent", span=""];
n164 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="674-674"];
n165 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", label="Py.GIL()", span="676-676"];
n166 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", label="_algorithm.OnAssignmentOrderEvent(assignmentEvent)", span="678-678"];
n167 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="674-674"];
n168 [cluster="Unk.OnAssignmentOrderEvent", label="Entry Unk.OnAssignmentOrderEvent", span=""];
n169 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="686-686"];
n170 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Py.GIL()", span="688-688"];
n171 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="_algorithm.OnSecuritiesChanged(changes)", span="690-690"];
n172 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="686-686"];
n173 [cluster="Unk.OnSecuritiesChanged", label="Entry Unk.OnSecuritiesChanged", span=""];
n174 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="698-698"];
n175 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Py.GIL()", span="700-700"];
n176 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="_algorithm.OnFrameworkSecuritiesChanged(changes)", span="702-702"];
n177 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="698-698"];
n178 [cluster="Unk.OnFrameworkSecuritiesChanged", label="Entry Unk.OnFrameworkSecuritiesChanged", span=""];
n179 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="710-710"];
n180 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", label="_baseAlgorithm.PostInitialize()", span="712-712"];
n181 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="710-710"];
n182 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
n183 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", span="718-718"];
n184 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", label="Py.GIL()", span="720-720"];
n185 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", label="_algorithm.OnWarmupFinished()", span="722-722"];
n186 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnWarmupFinished()", span="718-718"];
n187 [cluster="Unk.OnWarmupFinished", label="Entry Unk.OnWarmupFinished", span=""];
n188 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="731-731"];
n189 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="731-731"];
n190 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="737-737"];
n191 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="737-737"];
n192 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="746-746"];
n193 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="746-746"];
n194 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="754-754"];
n195 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="754-754"];
n196 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="760-760"];
n197 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="760-760"];
n198 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="768-768"];
n199 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="768-768"];
n200 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="774-774"];
n201 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="774-774"];
n202 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="780-780"];
n203 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="780-780"];
n204 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="785-785"];
n205 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", label="_baseAlgorithm.SetFinishedWarmingUp()", span="787-787"];
n206 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", label="OnWarmupFinished()", span="790-790"];
n208 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588"];
n207 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="785-785"];
n209 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="797-797"];
n210 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="797-797"];
n211 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="803-803"];
n212 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="803-803"];
n213 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="808-808"];
n214 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="808-808"];
n215 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="814-814"];
n216 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="814-814"];
n217 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="820-820"];
n218 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="820-820"];
n219 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="result = default(T)", span="831-831"];
n220 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="832-832"];
n222 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="result = (T)pyObject.AsManagedObject(typeof(T))", span="836-836"];
n224 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="829-829"];
n221 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="type == typeof(T)", span="834-834"];
n223 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", label="return type == typeof(T);", span="839-839"];
n225 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="846-846"];
n226 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="846-846"];
d5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, label="0: _brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                //_algorithm.Portfolio.SetCash(account.CashBalance);\r\n\r\n                // how close are we?\r\n                decimal delta = _algorithm.Portfolio.Cash - account.CashBalance;\r\n                Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta));\r\n            }", span="73-80"];
d116 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
d0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
d4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="67-70"];
d6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="IsActive = true", span="82-82"];
d18 [cluster="lambda expression", label="decimal delta = _algorithm.Portfolio.Cash - account.CashBalance", span="78-78"];
d19 [cluster="lambda expression", label="Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta))", span="79-79"];
d3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_brokerage = brokerage", span="66-66"];
d14 [cluster="lambda expression", label="HandleOrderEvent(fill)", span="69-69"];
d7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_algorithm = algorithm", span="84-84"];
d8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_orders = algorithm.Transactions.Orders", span="87-87"];
d9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_orderEvents = algorithm.Transactions.OrderEvents", span="88-88"];
d10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="_orderQueue = algorithm.Transactions.OrderQueue", span="89-89"];
d24 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="!_exitTriggered", span="111-111"];
d26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="!_orderQueue.TryDequeue(out order)", span="116-116"];
d27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="_algorithm.ProcessingOrder = false", span="118-118"];
d29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="_algorithm.ProcessingOrder = true", span="123-123"];
d32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="!_orders.TryAdd(order.Id, order)", span="131-131"];
d36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="HandleNewOrder(order)", span="142-142"];
d38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="HandleUpdatedOrder(order)", span="146-146"];
d40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="HandleCancelledOrder(order)", span="150-150"];
d47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="ProcessSynchronousEvents()", span="163-163"];
d49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="IsActive = false", span="167-167"];
d61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", label="_exitTriggered = true", span="183-183"];
d63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="_orders.TryAdd(order.Id, order)", span="193-193"];
d64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="!GetSufficientCapitalForOrder(order)", span="195-195"];
d66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="_brokerage.PlaceOrder(order)", span="201-201"];
d74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="223-223"];
d75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="_orders[order.Id] = order", span="225-225"];
d76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="!_brokerage.UpdateOrder(order)", span="226-226"];
d82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="241-241"];
d84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="245-245"];
d92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="258-258"];
d93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="_orders[order.Id] = order", span="260-260"];
d94 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="!_brokerage.CancelOrder(order)", span="262-262"];
d99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="277-277"];
d105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="_algorithm.Portfolio.ProcessFill(fill)", span="295-295"];
d108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="_algorithm.OnOrderEvent(fill)", span="306-306"];
d110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="310-310"];
d11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
d1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="brokerage == null", span="61-61"];
d16 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274"];
d17 [cluster="lambda expression", label="Entry lambda expression", span="73-80"];
d117 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
d20 [cluster="lambda expression", label="Exit lambda expression", span="73-80"];
d21 [cluster="string.Format(string, object, object, object)", label="Entry string.Format(string, object, object, object)", span="0-0"];
d22 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
d13 [cluster="lambda expression", label="Entry lambda expression", span="67-70"];
d15 [cluster="lambda expression", label="Exit lambda expression", span="67-70"];
d23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
d33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="133-133"];
d28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Thread.Sleep(1)", span="119-119"];
d25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Order order", span="115-115"];
d48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="166-166"];
d51 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
d30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="order.Direction == OrderDirection.Hold", span="126-126"];
d31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="128-128"];
d34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="order.Status", span="139-139"];
d46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="159-159"];
d54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
d35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.New", span="141-141"];
d55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
d37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.Update", span="145-145"];
d56 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220"];
d39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.Canceled", span="149-149"];
d57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
d58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
d50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109"];
d60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
d62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181"];
d69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="212-212"];
d65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="return;", span="197-197"];
d71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238"];
d67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="order.Status = OrderStatus.Submitted", span="203-203"];
d68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="order.Status = OrderStatus.Invalid", span="207-207"];
d72 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
d73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="Order queued", span="222-222"];
d78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="234-234"];
d80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="order.Status = OrderStatus.Invalid", span="229-229"];
d79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="220-220"];
d81 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74"];
d83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="order.Status = OrderStatus.Invalid", span="244-244"];
d86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="return true;", span="248-248"];
d88 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="390-390"];
d85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="return false;", span="246-246"];
d89 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d90 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
d91 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="Order queued", span="257-257"];
d96 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="270-270"];
d95 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="order.Status = OrderStatus.Invalid", span="265-265"];
d97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
d98 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
d100 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="order == null", span="278-278"];
d112 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="335-335"];
d103 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="order.Status = fill.Status", span="285-285"];
d104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="293-293"];
d106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="fill.Status != OrderStatus.None", span="299-299"];
d113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467"];
d107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="Engine.ResultHandler.OrderEvent(fill)", span="302-302"];
d109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label=Exception, span="308-308"];
d111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="274-274"];
d115 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
d2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", label="throw new ArgumentNullException(''brokerage'');", span="63-63"];
d101 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="280-280"];
d53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
d52 [cluster="System.Threading.Thread.Sleep(int)", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
d41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.None", span="154-154"];
d45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.Submitted", span="158-158"];
d70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190"];
d59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173"];
d87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetSufficientCapitalForOrder(QuantConnect.Orders.Order)", span="238-238"];
d114 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
d102 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", label="return;", span="281-281"];
d12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.Invalid", span="155-155"];
d44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.Filled", span="157-157"];
d43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", label="OrderStatus.PartiallyFilled", span="156-156"];
m0_2 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="41-41"];
m0_3 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Brokerages.ISymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="41-41"];
m0_0 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="ForexPortfolioModel.cs", label="Entry QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="29-29"];
m0_1 [cluster="QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="ForexPortfolioModel.cs", label="Exit QuantConnect.Brokerages.ISymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="29-29"];
n227 -> n10  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n11  [color=red, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n16  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n74  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n83  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n93  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n97  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n99  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n110  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n115  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n118  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n125  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n128  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n156  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n161  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n166  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n180  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n185  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n205  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n227 -> n206  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n8  [color=darkseagreen4, key=1, label=string, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n23  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n24  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n25  [key=2, style=dotted];
n3 -> n6  [color=darkseagreen4, key=1, label=module, style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n4  [key=0, style=solid];
n8 -> n31  [key=2, style=dotted];
n8 -> n32  [key=2, style=dotted];
n8 -> n33  [key=2, style=dotted];
n8 -> n8  [color=darkseagreen4, key=1, label=type, style=dashed];
n8 -> n12  [color=darkseagreen4, key=1, label=type, style=dashed];
n4 -> n5  [key=0, style=solid];
n4 -> n16  [key=0, style=solid];
n4 -> n26  [key=2, style=dotted];
n4 -> n6  [color=darkseagreen4, key=1, label=name, style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n27  [key=2, style=dotted];
n6 -> n28  [key=2, style=dotted];
n6 -> n8  [color=darkseagreen4, key=1, label=attr, style=dashed];
n6 -> n10  [color=darkseagreen4, key=1, label=attr, style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [color=darkseagreen4, key=1, label=type, style=dashed];
n5 -> n7  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.Market.TradeBar consolidated", style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=0, style=solid];
n16 -> n22  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n29  [key=2, style=dotted];
n7 -> n30  [key=2, style=dotted];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> n34  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n24  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n36  [key=2, style=dotted];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n35  [color=red, key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n28  [key=2, style=dotted];
n14 -> n37  [key=2, style=dotted];
n15 -> n4  [key=0, style=solid];
n15 -> n29  [key=2, style=dotted];
n15 -> n38  [key=2, style=dotted];
n17 -> n22  [key=0, style=solid];
n17 -> n39  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n22 -> n0  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n40  [key=2, style=dotted];
n19 -> n41  [key=2, style=dotted];
n19 -> n21  [color=darkseagreen4, key=1, label=interpreter, style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n42  [key=2, style=dotted];
n20 -> n20  [color=darkseagreen4, key=1, label=e, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n39  [key=2, style=dotted];
n21 -> n43  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n45 -> n44  [color=blue, key=0, style=bold];
n46 -> n47  [key=0, style=solid];
n47 -> n46  [color=blue, key=0, style=bold];
n48 -> n49  [key=0, style=solid];
n49 -> n48  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n51 -> n50  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n53 -> n52  [color=blue, key=0, style=bold];
n54 -> n55  [key=0, style=solid];
n55 -> n54  [color=blue, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n57 -> n56  [color=blue, key=0, style=bold];
n58 -> n59  [key=0, style=solid];
n59 -> n58  [color=blue, key=0, style=bold];
n60 -> n61  [key=0, style=solid];
n61 -> n60  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n63 -> n62  [color=blue, key=0, style=bold];
n64 -> n65  [key=0, style=solid];
n65 -> n64  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n67 -> n66  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n69 -> n68  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n71 -> n70  [color=blue, key=0, style=bold];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n23  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=2, style=dotted];
n75 -> n72  [color=blue, key=0, style=bold];
n77 -> n78  [key=0, style=solid];
n78 -> n77  [color=blue, key=0, style=bold];
n79 -> n80  [key=0, style=solid];
n80 -> n79  [color=blue, key=0, style=bold];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n23  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=2, style=dotted];
n84 -> n81  [color=blue, key=0, style=bold];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n23  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=2, style=dotted];
n89 -> n86  [color=blue, key=0, style=bold];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n23  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=2, style=dotted];
n94 -> n91  [color=blue, key=0, style=bold];
n96 -> n97  [key=0, style=solid];
n96 -> n99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=2, style=dotted];
n99 -> n102  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n23  [key=2, style=dotted];
n100 -> n96  [color=blue, key=0, style=bold];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
n104 -> n105  [key=0, style=solid];
n104 -> n23  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n107  [key=2, style=dotted];
n106 -> n103  [color=blue, key=0, style=bold];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n23  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=2, style=dotted];
n111 -> n108  [color=blue, key=0, style=bold];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n23  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n119  [key=0, style=solid];
n115 -> n120  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n119 -> n113  [color=blue, key=0, style=bold];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n117 -> n121  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n122  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n124 -> n125  [key=0, style=solid];
n124 -> n23  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n129  [key=0, style=solid];
n125 -> n120  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n129 -> n123  [color=blue, key=0, style=bold];
n127 -> n128  [key=0, style=solid];
n127 -> n129  [key=0, style=solid];
n127 -> n121  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n122  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
n130 -> n135  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
n130 -> n139  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
n130 -> n140  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
n130 -> n144  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
n131 -> n132  [key=0, style=solid];
n131 -> n23  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n147  [key=2, style=dotted];
n132 -> n136  [color=darkseagreen4, key=1, label=pyRequests, style=dashed];
n135 -> n136  [key=0, style=solid];
n135 -> n149  [key=2, style=dotted];
n139 -> n136  [key=0, style=solid];
n139 -> n151  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n140 -> n146  [key=0, style=solid];
n144 -> n146  [key=0, style=solid];
n144 -> n153  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n133 -> n148  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n140  [key=0, style=solid];
n136 -> n138  [color=darkseagreen4, key=1, label=pyRequest, style=dashed];
n134 -> n146  [key=0, style=solid];
n134 -> n39  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n136  [key=0, style=solid];
n138 -> n150  [key=2, style=dotted];
n150 -> n219  [key=0, style=solid];
n150 -> n220  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n150 -> n222  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n150 -> n136  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
n150 -> n137  [color=darkorchid, key=3, label="Parameter variable T result", style=bold];
n141 -> n146  [key=0, style=solid];
n141 -> n39  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n146 -> n130  [color=blue, key=0, style=bold];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [key=0, style=solid];
n143 -> n152  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n23  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=2, style=dotted];
n157 -> n154  [color=blue, key=0, style=bold];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
n160 -> n161  [key=0, style=solid];
n160 -> n23  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n162 -> n159  [color=blue, key=0, style=bold];
n164 -> n165  [key=0, style=solid];
n164 -> n166  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
n165 -> n166  [key=0, style=solid];
n165 -> n23  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=2, style=dotted];
n167 -> n164  [color=blue, key=0, style=bold];
n169 -> n170  [key=0, style=solid];
n169 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
n170 -> n171  [key=0, style=solid];
n170 -> n23  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n173  [key=2, style=dotted];
n172 -> n169  [color=blue, key=0, style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
n175 -> n176  [key=0, style=solid];
n175 -> n23  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n178  [key=2, style=dotted];
n177 -> n174  [color=blue, key=0, style=bold];
n179 -> n180  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n180 -> n182  [key=2, style=dotted];
n181 -> n179  [color=blue, key=0, style=bold];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n23  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=2, style=dotted];
n186 -> n183  [color=blue, key=0, style=bold];
n188 -> n189  [key=0, style=solid];
n189 -> n188  [color=blue, key=0, style=bold];
n190 -> n191  [key=0, style=solid];
n191 -> n190  [color=blue, key=0, style=bold];
n192 -> n193  [key=0, style=solid];
n193 -> n192  [color=blue, key=0, style=bold];
n194 -> n195  [key=0, style=solid];
n195 -> n194  [color=blue, key=0, style=bold];
n196 -> n197  [key=0, style=solid];
n197 -> n196  [color=blue, key=0, style=bold];
n198 -> n199  [key=0, style=solid];
n199 -> n198  [color=blue, key=0, style=bold];
n200 -> n201  [key=0, style=solid];
n201 -> n200  [color=blue, key=0, style=bold];
n202 -> n203  [key=0, style=solid];
n203 -> n202  [color=blue, key=0, style=bold];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n208  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n183  [key=2, style=dotted];
n207 -> n204  [color=blue, key=0, style=bold];
n209 -> n210  [key=0, style=solid];
n210 -> n209  [color=blue, key=0, style=bold];
n211 -> n212  [key=0, style=solid];
n212 -> n211  [color=blue, key=0, style=bold];
n213 -> n214  [key=0, style=solid];
n214 -> n213  [color=blue, key=0, style=bold];
n215 -> n216  [key=0, style=solid];
n216 -> n215  [color=blue, key=0, style=bold];
n217 -> n218  [key=0, style=solid];
n218 -> n217  [color=blue, key=0, style=bold];
n219 -> n220  [key=0, style=solid];
n219 -> n224  [color=darkseagreen4, key=1, label="out T", style=dashed];
n220 -> n221  [key=0, style=solid];
n220 -> n37  [key=2, style=dotted];
n220 -> n36  [key=2, style=dotted];
n220 -> n223  [color=darkseagreen4, key=1, label=type, style=dashed];
n222 -> n223  [key=0, style=solid];
n222 -> n36  [key=2, style=dotted];
n222 -> n224  [color=darkseagreen4, key=1, label="out T", style=dashed];
n224 -> n150  [color=blue, key=0, style=bold];
n221 -> n222  [key=0, style=solid];
n221 -> n223  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n226 -> n225  [color=blue, key=0, style=bold];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d18  [color=green, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
d5 -> d19  [color=green, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
d116 -> d5  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d116 -> d110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
d0 -> d5  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
d0 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d0 -> d7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d0 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d0 -> d9  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d0 -> d10  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d6 -> d7  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d21  [key=2, style=dotted];
d19 -> d22  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d16  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d24 -> d48  [key=0, style=solid];
d26 -> d27  [key=0, style=solid];
d26 -> d29  [key=0, style=solid];
d26 -> d51  [key=2, style=dotted];
d26 -> d30  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d31  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d32  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d33  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d34  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d36  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d38  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d40  [color=darkseagreen4, key=1, label=order, style=dashed];
d26 -> d46  [color=darkseagreen4, key=1, label=order, style=dashed];
d27 -> d28  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d32 -> d24  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d54  [key=2, style=dotted];
d36 -> d47  [key=0, style=solid];
d36 -> d55  [key=2, style=dotted];
d38 -> d47  [key=0, style=solid];
d38 -> d56  [key=2, style=dotted];
d40 -> d47  [key=0, style=solid];
d40 -> d57  [key=2, style=dotted];
d47 -> d24  [key=0, style=solid];
d47 -> d58  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d69  [key=0, style=solid];
d63 -> d54  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d64 -> d66  [key=0, style=solid];
d64 -> d71  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=0, style=solid];
d66 -> d72  [key=2, style=dotted];
d74 -> d74  [color=darkseagreen4, key=1, label=queued, style=dashed];
d74 -> d75  [key=0, style=solid];
d74 -> d78  [key=0, style=solid];
d74 -> d80  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d76 -> d77  [key=0, style=solid];
d76 -> d79  [key=0, style=solid];
d76 -> d81  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d86  [key=0, style=solid];
d82 -> d88  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d89  [key=2, style=dotted];
d84 -> d90  [key=2, style=dotted];
d92 -> d92  [color=darkseagreen4, key=1, label=queued, style=dashed];
d92 -> d93  [key=0, style=solid];
d92 -> d96  [key=0, style=solid];
d92 -> d80  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d94 -> d97  [key=0, style=solid];
d94 -> d98  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d112  [key=2, style=dotted];
d99 -> d103  [color=darkseagreen4, key=1, label=order, style=dashed];
d105 -> d106  [key=0, style=solid];
d105 -> d113  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d108 -> d111  [key=0, style=solid];
d108 -> d115  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d90  [key=2, style=dotted];
d11 -> d0  [color=blue, key=0, style=bold];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d16 -> d4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
d16 -> d99  [key=0, style=solid];
d16 -> d105  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d101  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d103  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d104  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d16 -> d107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
d117 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d20 -> d17  [color=blue, key=0, style=bold];
d13 -> d14  [key=0, style=solid];
d15 -> d13  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d33 -> d24  [key=0, style=solid];
d33 -> d53  [key=2, style=dotted];
d28 -> d24  [key=0, style=solid];
d28 -> d52  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d48 -> d49  [key=0, style=solid];
d48 -> d22  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d34  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d53  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=0, style=solid];
d34 -> d39  [key=0, style=solid];
d34 -> d41  [key=0, style=solid];
d46 -> d47  [key=0, style=solid];
d46 -> d53  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d55 -> d63  [key=0, style=solid];
d55 -> d64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d55 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d55 -> d25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
d55 -> d67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d55 -> d68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d37 -> d38  [key=0, style=solid];
d56 -> d74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d56 -> d75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d56 -> d76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d56 -> d25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
d56 -> d73  [key=0, style=solid];
d56 -> d77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d56 -> d78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d39 -> d40  [key=0, style=solid];
d57 -> d92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d57 -> d93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d57 -> d94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d57 -> d25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
d57 -> d91  [key=0, style=solid];
d57 -> d95  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d57 -> d96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d58 -> d59  [key=0, style=solid];
d50 -> d23  [color=blue, key=0, style=bold];
d60 -> d61  [key=0, style=solid];
d62 -> d60  [color=blue, key=0, style=bold];
d69 -> d70  [key=0, style=solid];
d69 -> d53  [key=2, style=dotted];
d65 -> d70  [key=0, style=solid];
d71 -> d82  [key=0, style=solid];
d71 -> d84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d71 -> d55  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
d71 -> d83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
d71 -> d85  [color=darkorchid, key=3, label="method methodReturn bool GetSufficientCapitalForOrder", style=bold];
d71 -> d86  [color=darkorchid, key=3, label="method methodReturn bool GetSufficientCapitalForOrder", style=bold];
d67 -> d70  [key=0, style=solid];
d68 -> d70  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d78 -> d53  [key=2, style=dotted];
d77 -> d79  [key=0, style=solid];
d79 -> d56  [color=blue, key=0, style=bold];
d83 -> d84  [key=0, style=solid];
d86 -> d87  [key=0, style=solid];
d85 -> d87  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d96 -> d53  [key=2, style=dotted];
d95 -> d97  [key=0, style=solid];
d97 -> d57  [color=blue, key=0, style=bold];
d100 -> d101  [key=0, style=solid];
d100 -> d103  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d106  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d111  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d114  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d111 -> d16  [color=blue, key=0, style=bold];
d2 -> d11  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d101 -> d53  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d70 -> d55  [color=blue, key=0, style=bold];
d59 -> d58  [color=blue, key=0, style=bold];
d87 -> d71  [color=blue, key=0, style=bold];
d102 -> d111  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
}
