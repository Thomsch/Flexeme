digraph  {
n0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n1 [label="source.Format", span="39-39", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n3 [label="return new TextSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="42-42", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n5 [label="return new CollectionSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n7 [label="return new ZipEntryNameSubscriptionDataSourceReader(dataProvider, dataCacheProvider, config, date, isLiveMode);", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n8 [label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n2 [label="FileFormat.Csv", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n4 [label="FileFormat.Collection", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n6 [label="FileFormat.ZipEntryName", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n9 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n11 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n13 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)"];
n12 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n10 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataProvider, IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
d385 [label="var config = security.Subscriptions.FirstOrDefault(subscription => subscription.Type == dataType)", span="787-787", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", color=green, community=0];
d377 [label="var security = algorithm.Securities[symbol]", span="779-779", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d384 [label="Type dataType = data.GetType()", span="786-786", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d386 [label="config == null", span="788-788", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d255 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault"];
d478 [label="Entry lambda expression", span="787-787", cluster="lambda expression"];
d388 [label="paired.Add(new DataFeedPacket(security, config, list))", span="793-793", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d479 [label="subscription.Type == dataType", span="787-787", cluster="lambda expression", color=green, community=0];
d607 [label=dataType, span=""];
d480 [label="Exit lambda expression", span="787-787", cluster="lambda expression"];
d262 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="709-709", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d376 [label="slice.Keys", span="777-777", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d378 [label="var data = slice[symbol]", span="780-780", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d383 [label="list.Add(data)", span="784-784", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d382 [label="list.AddRange(ticks)", span="783-783", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d446 [label="Entry Unk.GetType", span="", cluster="Unk.GetType"];
d387 [label="throw new Exception($''A data subscription for type '{dataType.Name}' was not found.'');", span="790-790", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d33 [label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="173-175", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d375 [label="var paired = new List<DataFeedPacket>()", span="776-776", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d379 [label="var list = new List<BaseData>()", span="781-781", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d447 [label="Entry DataFeedPacket.cstr", span="", cluster="DataFeedPacket.cstr"];
d445 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d45 [label="Stream(algorithm, feed, results, token)", span="205-205", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d432 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="891-891", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d431 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="709-709", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d346 [label="bool setStartTime = false", span="711-711", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d393 [label="yield break;", span="801-801", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d403 [label="yield return timeSlice;", span="820-820", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d430 [label="yield return timeSlice;", span="887-887", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d347 [label="var timeZone = algorithm.TimeZone", span="712-712", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d348 [label="var history = algorithm.HistoryProvider", span="713-713", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d349 [label="algorithm.LiveMode", span="716-716", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d350 [label="ProcessVolatilityHistoryRequirements(algorithm)", span="718-718", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d352 [label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="723-723", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d355 [label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="728-731", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d358 [label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="738-738", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d362 [label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="743-743", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d389 [label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="795-795", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d392 [label="algorithm.RunTimeError = err", span="800-800", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d398 [label="algorithm.Debug(''Algorithm warming up...'')", span="810-810", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d402 [label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="818-818", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d405 [label="!algorithm.LiveMode || historyRequests.Count == 0", span="827-827", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d406 [label="algorithm.SetFinishedWarmingUp()", span="829-829", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d408 [label="algorithm.Debug(''Algorithm finished warming up.'')", span="832-832", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d410 [label=feed, span="837-837", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d414 [label="algorithm.LiveMode && algorithm.IsWarmingUp", span="844-844", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d418 [label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="855-855", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d423 [label="algorithm.SetFinishedWarmingUp()", span="874-874", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d424 [label="algorithm.Debug(''Algorithm finished warming up.'')", span="875-875", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d429 [label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="884-884", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d10 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d373 [label="history.GetHistory(historyRequests, timeZone)", span="770-770", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d380 [label="var ticks = data as List<Tick>", span="782-782", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d381 [label="ticks != null", span="783-783", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d444 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
d394 [label="timeSlice != null", span="804-804", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d258 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
d32 [label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="170-170", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d34 [label="algorithm.SubscriptionManager.Subscriptions", span="178-178", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d252 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d253 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()"];
d254 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d324 [label="Entry lambda expression", span="174-174", cluster="lambda expression"];
d328 [label="Entry lambda expression", span="175-175", cluster="lambda expression"];
d38 [label="genericMethod == null && !hasOnDataSlice", span="190-190", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d374 [label="TimeSlice timeSlice", span="772-772", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d250 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d508 [label="delistings.Add(delisting)", span="951-951", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d550 [label="splitWarnings.Add(split)", span="1036-1036", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d603 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
d44 [label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="204-204", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d215 [label="results.ProcessSynchronousEvents()", span="618-618", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d46 [label="_currentTimeStepTime = DateTime.UtcNow", span="208-208", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d216 [label="_currentTimeStepTime = DateTime.MinValue", span="623-623", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d48 [label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="213-213", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d50 [label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="220-220", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d53 [label="var time = timeSlice.Time", span="227-227", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d54 [label="_dataPointCount += timeSlice.DataPointCount", span="228-228", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d71 [label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="282-282", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d73 [label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="286-286", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d74 [label="timeSlice.Slice.SymbolChangedEvents.Keys", span="288-288", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d77 [label="timeSlice.SecurityChanges != SecurityChanges.None", span="298-298", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d78 [label="timeSlice.SecurityChanges.AddedSecurities", span="300-300", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d81 [label="timeSlice.SecuritiesUpdateData", span="311-311", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d92 [label="realtime.SetTime(timeSlice.Time)", span="338-338", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d100 [label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="358-358", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d128 [label="timeSlice.SecurityChanges != SecurityChanges.None", span="422-422", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d129 [label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="426-426", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d130 [label="algorithm.OnFrameworkSecuritiesChanged(timeSlice.SecurityChanges)", span="427-427", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d136 [label="timeSlice.Slice.Dividends.Values", span="439-439", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d139 [label="timeSlice.Slice.Splits.Values", span="446-446", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d151 [label="timeSlice.ConsolidatorUpdateData", span="478-478", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d164 [label="timeSlice.CustomData", span="507-507", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d175 [label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="537-537", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d176 [label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="539-539", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d177 [label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="541-541", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d178 [label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="543-543", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d179 [label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="545-545", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d180 [label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="547-547", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d186 [label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="559-559", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d187 [label="HandleSplitSymbols(timeSlice.Slice.Splits, splitWarnings)", span="562-562", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d188 [label="timeSlice.Slice.QuoteBars.Count > 0", span="570-570", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d189 [label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="572-572", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d190 [label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="574-574", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d191 [label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="577-577", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d192 [label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="577-577", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d193 [label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="578-578", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d194 [label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="578-578", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d195 [label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="579-579", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d196 [label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="579-579", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d197 [label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="580-580", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d198 [label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="580-580", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d204 [label="timeSlice.Slice.HasData", span="592-592", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d205 [label="algorithm.OnData(timeSlice.Slice)", span="595-595", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d206 [label="algorithm.OnFrameworkData(timeSlice.Slice)", span="596-596", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d495 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="891-891", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d484 [label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="893-893", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d485 [label="algorithm.Securities", span="895-895", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d488 [label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="901-901", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d489 [label="historyReq != null && algorithm.HistoryProvider != null", span="903-903", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d490 [label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="905-905", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d395 [label="!setStartTime", span="806-806", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d411 [label="!setStartTime", span="839-839", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d105 [label="var executingMarginCall = false", span="370-370", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d399 [label="DateTime.UtcNow > nextStatusTime", span="812-812", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d404 [label="lastHistoryTimeUtc = timeSlice.Time", span="821-821", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d426 [label="DateTime.UtcNow > nextStatusTime", span="878-878", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d425 [label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="876-876", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d351 [label="DateTime? lastHistoryTimeUtc = null", span="722-722", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d353 [label="var start = DateTime.UtcNow.Ticks", span="726-726", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d433 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="594-594", cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()"];
d300 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
d357 [label="historyRequests.Count != 0", span="735-735", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d360 [label=historyRequests, span="740-740", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d366 [label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="754-754", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d367 [label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="756-756", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d368 [label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="757-757", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d370 [label=historyRequests, span="763-763", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d407 [label="historyRequests.Count != 0", span="830-830", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d354 [label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="727-727", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d356 [label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="733-733", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d435 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
d436 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty"];
d437 [label="Entry Unk.Min", span="", cluster="Unk.Min"];
d456 [label="Entry lambda expression", span="729-729", cluster="lambda expression"];
d359 [label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="739-739", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d438 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
d460 [label="Entry lambda expression", span="738-738", cluster="lambda expression"];
d361 [label="Security security", span="742-742", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d363 [label="request.Resolution < minResolution", span="745-745", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d439 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)"];
d440 [label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30", cluster="QuantConnect.Securities.Security.IsInternalFeed()"];
d390 [label=Exception, span="797-797", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d448 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="617-617", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)"];
d449 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="104-104", cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)"];
d397 [label="_previousTime = timeSlice.Time", span="809-809", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d401 [label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="817-817", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d391 [label="Log.Error(err)", span="799-799", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d451 [label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="414-414", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)"];
d292 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d320 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
d452 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588", cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()"];
d409 [label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="833-833", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d420 [label=hasHistoricalData, span="861-861", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d413 [label="_previousTime = timeSlice.Time", span="842-842", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d417 [label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="852-852", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d422 [label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="872-872", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d428 [label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="883-883", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d415 [label="lastHistoryTimeUtc.HasValue", span="848-848", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d419 [label="hasHistoricalData = true", span="857-857", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d251 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="927-927", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d266 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1104-1104", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d285 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="970-970", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d286 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1044-1044", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d309 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="942-942", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d247 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d11 [label="_dataPointCount = 0", span="140-140", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d12 [label="_algorithm = algorithm", span="141-141", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d13 [label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="142-142", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d14 [label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="143-143", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d22 [label="_algorithmId = job.AlgorithmId", span="154-154", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d24 [label="_previousTime = algorithm.StartDate.Date", span="156-156", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d25 [label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="161-161", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d26 [label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="162-162", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d27 [label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="163-163", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d28 [label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="164-164", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d29 [label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="167-167", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d30 [label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="168-168", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d31 [label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="169-169", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d329 [label="x.DeclaringType == algorithm.GetType()", span="175-175", cluster="lambda expression"];
d36 [label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="184-184", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d39 [label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="192-192", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d49 [label="token.IsCancellationRequested", span="218-218", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d52 [label="leanManager.Update()", span="225-225", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d57 [label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="238-238", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d58 [label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="241-241", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d60 [label="results.SamplePerformance(_previousTime.Date, 0)", span="246-246", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d61 [label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="250-250", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d62 [label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="252-252", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d66 [label="results.SystemDebugMessage(logMessage)", span="259-259", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d67 [label="SampleBenchmark(algorithm, results, time)", span="266-266", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d69 [label="realtime.ScanPastEvents(time)", span="276-276", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d70 [label="algorithm.SetDateTime(time)", span="280-280", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d75 [label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="291-291", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d79 [label="!algorithm.Securities.ContainsKey(security.Symbol)", span="302-302", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d80 [label="algorithm.Securities.Add(security)", span="305-305", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d85 [label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="320-320", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d86 [label="algorithm.Portfolio.CashBook", span="324-324", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d91 [label="alphas.ProcessSynchronousEvents()", span="335-335", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d93 [label="transactions.ProcessSynchronousEvents()", span="341-341", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d94 [label="ProcessDelistedSymbols(algorithm, delistings)", span="344-344", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d95 [label="ProcessSplitSymbols(algorithm, splitWarnings)", span="347-347", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d96 [label="algorithm.Status == AlgorithmStatus.Stopped", span="350-350", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d98 [label="algorithm.RunTimeError != null", span="355-355", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d103 [label="var marginCallOrders = algorithm.Portfolio.MarginCallModel.GetMarginCallOrders(out issueMarginCallWarning)", span="367-367", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d106 [label="algorithm.OnMarginCall(marginCallOrders)", span="374-374", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d108 [label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="379-379", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d110 [label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="382-382", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d112 [label="algorithm.RunTimeError = err", span="387-387", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d118 [label="algorithm.OnMarginCallWarning()", span="399-399", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d120 [label="algorithm.RunTimeError = err", span="403-403", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d126 [label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="416-416", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d132 [label="algorithm.RunTimeError = err", span="431-431", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d137 [label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Dividend for {dividend.Symbol}'')", span="441-441", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d138 [label="algorithm.Portfolio.ApplyDividend(dividend)", span="442-442", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d141 [label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Split for {split.Symbol}'')", span="456-456", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d142 [label="algorithm.Portfolio.ApplySplit(split)", span="457-457", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d143 [label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="459-459", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d144 [label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="462-462", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d145 [label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="463-463", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d147 [label="algorithm.RunTimeError = err", span="468-468", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d160 [label="algorithm.RunTimeError = err", span="500-500", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d169 [label="methodInvoker(algorithm, dataPoint)", span="521-521", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d171 [label="algorithm.RunTimeError = err", span="527-527", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d182 [label="algorithm.RunTimeError = err", span="552-552", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d200 [label="algorithm.RunTimeError = err", span="584-584", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d208 [label="algorithm.RunTimeError = err", span="601-601", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d212 [label="transactions.ProcessSynchronousEvents()", span="609-609", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d214 [label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="615-615", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d218 [label="algorithm.OnEndOfAlgorithm()", span="629-629", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d221 [label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="634-634", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d224 [label="alphas.ProcessSynchronousEvents()", span="640-640", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d225 [label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="643-643", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d226 [label="results.ProcessSynchronousEvents(forceProcess: true)", span="646-646", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d229 [label="algorithm.Liquidate()", span="652-652", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d230 [label="results.LogMessage(''Algorithm Liquidated'')", span="653-653", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d231 [label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="654-654", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d234 [label="results.LogMessage(''Algorithm Stopped'')", span="661-661", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d235 [label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="662-662", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d238 [label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="669-669", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d239 [label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="670-670", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d240 [label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="674-674", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d241 [label="results.SampleRange(algorithm.GetChartUpdates())", span="677-677", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d242 [label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="678-678", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d243 [label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="679-679", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d245 [label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="684-684", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d246 [label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="688-689", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d443 [label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53", cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)"];
d15 [label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="144-144", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d72 [label=hasOnDataSymbolChangedEvents, span="284-284", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d37 [label="methodInvokers.ContainsKey(config.Type)", span="187-187", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d43 [label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="198-198", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d35 [label="config.IsCustomData", span="181-181", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d42 [label="genericMethod != null", span="196-196", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d499 [label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="929-929", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d563 [label="var derivatives = algorithm.Securities.Where(kvp => kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock\r\n                )", span="1066-1071", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d326 [label="Exit lambda expression", span="174-174", cluster="lambda expression"];
d325 [label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="174-174", cluster="lambda expression"];
d330 [label="Exit lambda expression", span="175-175", cluster="lambda expression"];
d20 [label="var delistings = new List<Delisting>()", span="150-150", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d21 [label="var splitWarnings = new List<Split>()", span="151-151", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d505 [label="newDelistings.Values", span="944-944", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d507 [label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="949-949", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d509 [label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="952-952", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d310 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1022-1022", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d545 [label="newSplits.Values", span="1024-1024", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d549 [label="!splitWarnings.Any(x => x.Symbol == split.Symbol && x.Type == SplitType.Warning)", span="1034-1034", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d1 [label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');\r\n                }\r\n\r\n                return null;\r\n            }", span="110-120", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)"];
d5 [label="CurrentTimeStepElapsed > _timeLoopMaximum", span="112-112", cluster="lambda expression"];
d6 [label="return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');", span="114-116", cluster="lambda expression"];
d2 [label="_liveMode = liveMode", span="121-121", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)"];
d23 [label="_algorithm.Status = AlgorithmStatus.Running", span="155-155", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d40 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="193-193", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d47 [label="_algorithm.Status != AlgorithmStatus.Running", span="211-211", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d56 [label="_previousTime.Date != time.Date", span="236-236", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d99 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="357-357", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d101 [label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="363-363", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d113 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="388-388", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d121 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="404-404", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d125 [label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="414-414", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d133 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="432-432", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d148 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="469-469", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d161 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="501-501", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d172 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="528-528", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d183 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="553-553", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d201 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="585-585", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d209 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="602-602", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d213 [label="_previousTime = time", span="612-612", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d220 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="633-633", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d227 [label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="649-649", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d232 [label="_algorithm.Status == AlgorithmStatus.Stopped", span="658-658", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d236 [label="_algorithm.Status == AlgorithmStatus.Deleted", span="666-666", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d342 [label=_lock, span="698-698", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
d344 [label="_algorithm.Status = state", span="704-704", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
d592 [label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1114-1114", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d261 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
d315 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="260-260", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)"];
d97 [label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="352-352", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d217 [label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="626-626", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d263 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d264 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
d51 [label="return;", span="221-221", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d124 [label="nextMarginCallTime = time + marginCallFrequency", span="410-410", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d127 [label="nextSettlementScanTime = time + settlementScanFrequency", span="418-418", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d157 [label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="493-493", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d55 [label=backtestMode, span="233-233", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d273 [label="Entry Unk.]", span="", cluster="Unk.]"];
d332 [label="x.Status.IsOpen() && x.Symbol == symbol", span="291-291", cluster="lambda expression"];
d82 [label="var security = update.Target", span="313-313", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d83 [label="update.Data", span="314-314", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d283 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)"];
d295 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402", cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
d131 [label=Exception, span="429-429", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d296 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)"];
d140 [label="split.Type != SplitType.SplitOccurred", span="451-451", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d336 [label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="462-462", cluster="lambda expression"];
d153 [label=consolidators, span="481-481", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d152 [label="var consolidators = update.Target.Consolidators", span="480-480", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d159 [label=Exception, span="498-498", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d154 [label="update.Data", span="483-483", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d155 [label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="486-486", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d166 [label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="510-510", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d167 [label="update.Data", span="517-517", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d165 [label="MethodInvoker methodInvoker", span="509-509", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d168 [label="update.DataType.IsInstanceOfType(dataPoint)", span="519-519", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d181 [label=Exception, span="550-550", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d338 [label="Entry lambda expression", span="572-572", cluster="lambda expression"];
d311 [label="Entry Unk.Collapse", span="", cluster="Unk.Collapse"];
d260 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d199 [label=Exception, span="582-582", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d207 [label=Exception, span="599-599", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d312 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390", cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)"];
d313 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396", cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)"];
d487 [label="security.VolatilityModel != VolatilityModel.Null", span="899-899", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d491 [label="history != null", span="906-906", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d492 [label=history, span="908-908", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d486 [label="var security = kvp.Value", span="897-897", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d496 [label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46", cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)"];
d396 [label="setStartTime = true", span="808-808", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d412 [label="setStartTime = true", span="841-841", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d104 [label="marginCallOrders.Count != 0", span="368-368", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d416 [label="var hasHistoricalData = false", span="851-851", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d400 [label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="816-816", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d427 [label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="882-882", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d371 [label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="765-765", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d365 [label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="748-748", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d364 [label="request.Resolution = minResolution", span="747-747", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d441 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
d466 [label="Entry lambda expression", span="754-754", cluster="lambda expression"];
d469 [label="Entry lambda expression", span="756-756", cluster="lambda expression"];
d472 [label="Entry lambda expression", span="756-756", cluster="lambda expression"];
d369 [label="request.FillForwardResolution = minResolution", span="759-759", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d475 [label="Entry lambda expression", span="757-757", cluster="lambda expression"];
d372 [label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="766-766", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d434 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)"];
d458 [label="Exit lambda expression", span="729-729", cluster="lambda expression"];
d457 [label="x.Value.Configuration.Resolution.ToTimeSpan()", span="729-729", cluster="lambda expression"];
d463 [label="Entry lambda expression", span="739-739", cluster="lambda expression"];
d462 [label="Exit lambda expression", span="738-738", cluster="lambda expression"];
d461 [label="!x.IsInternalFeed", span="738-738", cluster="lambda expression"];
d450 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
d571 [label="algorithm.Debug($''MarktetOnClose order submitted for option contract '{optionContractSymbol}' due to impending {split.Symbol.Value} split event. ''\r\n                        + ''Option splits are not currently supported.'')", span="1092-1093", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d115 [label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="390-390", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d421 [label="lastHistoryTimeUtc = null", span="867-867", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)"];
d453 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)"];
d454 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
d481 [label="Entry lambda expression", span="852-852", cluster="lambda expression"];
d455 [label="Entry Unk.Subtract", span="", cluster="Unk.Subtract"];
d504 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="927-927", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d501 [label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="932-932", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d594 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1104-1104", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d589 [label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1109-1109", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d591 [label="algorithm.RunTimeError = err", span="1113-1113", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d538 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="970-970", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d519 [label="var i = delistings.Count - 1", span="972-972", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d521 [label="var security = algorithm.Securities[delistings[i].Symbol]", span="975-975", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d523 [label="var delistingTime = delistings[i].Time", span="979-979", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d531 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="994-995", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d533 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, message)", span="1003-1004", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d534 [label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="1009-1010", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d535 [label="algorithm.Transactions.ProcessRequest(request)", span="1013-1013", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d536 [label="delistings.RemoveAt(i)", span="1015-1015", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d574 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1044-1044", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d555 [label="int i = splitWarnings.Count - 1", span="1050-1050", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d557 [label="var split = splitWarnings[i]", span="1052-1052", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d558 [label="var security = algorithm.Securities[split.Symbol]", span="1053-1053", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d567 [label="algorithm.Transactions.CancelOpenOrders(optionContractSymbol, ''Canceled due to impending split. Separate MarketOnClose order submitted to liquidate position.'')", span="1079-1079", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d568 [label="var request = new SubmitOrderRequest(OrderType.MarketOnClose, optionContractSecurity.Type, optionContractSymbol,\r\n                        -optionContractSecurity.Holdings.Quantity, 0, 0, algorithm.UtcTime,\r\n                        ''Liquidated due to impending split. Option splits are not currently supported.''\r\n                    )", span="1081-1084", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d569 [label="algorithm.Transactions.AddOrder(request)", span="1087-1087", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d572 [label="splitWarnings.RemoveAt(i)", span="1097-1097", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d514 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="942-942", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d511 [label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="958-958", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d41 [label="return;", span="194-194", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d116 [label="return;", span="391-391", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d123 [label="return;", span="406-406", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d135 [label="return;", span="434-434", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d150 [label="return;", span="471-471", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d163 [label="return;", span="503-503", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d174 [label="return;", span="530-530", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d185 [label="return;", span="555-555", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d203 [label="return;", span="587-587", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d211 [label="return;", span="604-604", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d223 [label="return;", span="636-636", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d59 [label="portfolioValue == 0m", span="244-244", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d63 [label="portfolioValue <= 0", span="255-255", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d244 [label="portfolioValue == 0m", span="682-682", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d68 [label=backtestMode, span="274-274", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d604 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
d256 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
d265 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46", cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()"];
d267 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
d268 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)"];
d269 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)"];
d64 [label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="257-257", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d65 [label="Log.Trace(logMessage)", span="258-258", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d270 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)"];
d271 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)"];
d272 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)"];
d76 [label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="293-293", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d274 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)"];
d331 [label="Entry lambda expression", span="291-291", cluster="lambda expression"];
d276 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)"];
d277 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)"];
d279 [label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49", cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)"];
d90 [label="cash.Update(updateData)", span="330-330", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d89 [label="updateData != null", span="328-328", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d87 [label="var cash = kvp.Value", span="326-326", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d282 [label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", span="57-57", cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()"];
d284 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()"];
d102 [label="bool issueMarginCallWarning", span="366-366", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d287 [label="Entry QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", span="32-32", cluster="QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)"];
d117 [label=issueMarginCallWarning, span="395-395", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d107 [label="executingMarginCall = true", span="376-376", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d288 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)"];
d109 [label=executedTickets, span="380-380", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d289 [label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="51-51", cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)"];
d290 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
d291 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)"];
d111 [label=Exception, span="385-385", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d119 [label=Exception, span="401-401", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d293 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="437-437", cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()"];
d294 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="672-672", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)"];
d297 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)"];
d298 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="541-541", cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)"];
d299 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="561-561", cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)"];
d146 [label=Exception, span="466-466", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d335 [label="Entry lambda expression", span="462-462", cluster="lambda expression"];
d301 [label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85", cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)"];
d308 [label="Entry Unk.methodInvoker", span="", cluster="Unk.methodInvoker"];
d170 [label=Exception, span="525-525", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d314 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="200-200", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)"];
d219 [label=Exception, span="631-631", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d316 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="452-452", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()"];
d222 [label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="635-635", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d317 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)"];
d302 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1122-1122", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d228 [label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="651-651", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d318 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="577-577", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)"];
d319 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)"];
d233 [label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="660-660", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d237 [label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="668-668", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d321 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)"];
d322 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="516-516", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)"];
d323 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
d16 [label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="145-145", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d248 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d257 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
d259 [label="Entry Unk.DelegateForCallMethod", span="", cluster="Unk.DelegateForCallMethod"];
d500 [label="newSplitMethodInfo != null", span="930-930", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d562 [label="security.LocalTime < latestMarketOnCloseTimeRoundedDownByResolution", span="1063-1063", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d564 [label=derivatives, span="1073-1073", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d585 [label="Entry lambda expression", span="1066-1070", cluster="lambda expression"];
d327 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
d19 [label="var nextSettlementScanTime = DateTime.MinValue", span="148-148", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d512 [label=cancelledOrders, span="959-959", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d506 [label="delisting.Type == DelistingType.Warning", span="947-947", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d517 [label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="949-949", cluster="lambda expression"];
d510 [label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="957-957", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d516 [label="Entry lambda expression", span="949-949", cluster="lambda expression"];
d551 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1022-1022", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d547 [label="Log.Trace($''AlgorithmManager.Run() Security split occurred: {split}'')", span="1028-1028", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d546 [label="split.Type != SplitType.Warning", span="1026-1026", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d548 [label="Log.Trace($''AlgorithmManager.Run() Security split warning: {split}'')", span="1032-1032", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d553 [label="x.Symbol == split.Symbol && x.Type == SplitType.Warning", span="1034-1034", cluster="lambda expression"];
d552 [label="Entry lambda expression", span="1034-1034", cluster="lambda expression"];
d0 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)"];
d4 [label="Entry lambda expression", span="110-120", cluster="lambda expression"];
d7 [label="return null;", span="119-119", cluster="lambda expression"];
d8 [label="Exit lambda expression", span="110-120", cluster="lambda expression"];
d9 [label="Entry double.ToString()", span="0-0", cluster="double.ToString()"];
d3 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)"];
d17 [label="var nextMarginCallTime = DateTime.MinValue", span="146-146", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d114 [label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="389-389", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d122 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="405-405", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d134 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="433-433", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d149 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="470-470", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d162 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="502-502", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d173 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="529-529", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d184 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="554-554", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d202 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="586-586", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d210 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="603-603", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d341 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="696-696", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
d343 [label="state != AlgorithmStatus.Running", span="702-702", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
d345 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="696-696", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
d593 [label="Log.Error(err)", span="1115-1115", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d513 [label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="961-961", cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d18 [label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="147-147", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d158 [label="consolidator.Scan(localTime)", span="494-494", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d304 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="605-605", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)"];
d605 [label=symbol, span=""];
d333 [label="Exit lambda expression", span="291-291", cluster="lambda expression"];
d334 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()"];
d84 [label="security.SetMarketPrice(data)", span="316-316", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d606 [label=split, span=""];
d337 [label="Exit lambda expression", span="462-462", cluster="lambda expression"];
d156 [label="consolidator.Update(dataPoint)", span="488-488", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d306 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
d307 [label="Entry System.Type.IsInstanceOfType(object)", span="0-0", cluster="System.Type.IsInstanceOfType(object)"];
d340 [label="Exit lambda expression", span="572-572", cluster="lambda expression"];
d339 [label="x.Key.ID.SecurityType == SecurityType.Forex", span="572-572", cluster="lambda expression"];
d493 [label="slice.Bars.ContainsKey(security.Symbol)", span="910-910", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d494 [label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="911-911", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)"];
d442 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)"];
d468 [label="Exit lambda expression", span="754-754", cluster="lambda expression"];
d467 [label="x.FillForwardResolution.HasValue", span="754-754", cluster="lambda expression"];
d471 [label="Exit lambda expression", span="756-756", cluster="lambda expression"];
d470 [label="x.FillForwardResolution.HasValue", span="756-756", cluster="lambda expression"];
d474 [label="Exit lambda expression", span="756-756", cluster="lambda expression"];
d473 [label="x.FillForwardResolution.Value", span="756-756", cluster="lambda expression"];
d477 [label="Exit lambda expression", span="757-757", cluster="lambda expression"];
d476 [label="x.FillForwardResolution.HasValue", span="757-757", cluster="lambda expression"];
d459 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="723-723", cluster="QuantConnect.Resolution.ToTimeSpan()"];
d465 [label="Exit lambda expression", span="739-739", cluster="lambda expression"];
d464 [label="x.Resolution", span="739-739", cluster="lambda expression"];
d565 [label="var optionContractSymbol = kvp.Key", span="1075-1075", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d570 [label="optionContractSecurity.IsTradable = false", span="1090-1090", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d483 [label="Exit lambda expression", span="852-852", cluster="lambda expression"];
d482 [label=x, span="852-852", cluster="lambda expression"];
d503 [label="return false;", span="935-935", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d502 [label="return true;", span="933-933", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)"];
d590 [label=Exception, span="1111-1111", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)"];
d595 [label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29", cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)"];
d596 [label="Entry decimal.SmartRounding()", span="207-207", cluster="decimal.SmartRounding()"];
d597 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)"];
d520 [label="i >= 0", span="972-972", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d537 [label="i--", span="972-972", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d522 [label="security.Holdings.Quantity == 0", span="976-976", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d524 [label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="980-980", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d525 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="981-981", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d526 [label="security.LocalTime < nextMarketClose", span="983-983", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d528 [label="security.Type == SecurityType.Option", span="988-988", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d529 [label="var option = (Option)security", span="990-990", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d530 [label="security.Holdings.Quantity > 0", span="992-992", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d541 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)"];
d532 [label="var message = option.GetPayOff(option.Underlying.Price) > 0\r\n                            ? ''Automatic option assignment on expiration''\r\n                            : ''Option expiration''", span="999-1001", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d543 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)"];
d544 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)"];
d556 [label="i >= 0", span="1050-1050", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d573 [label="i--", span="1050-1050", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d559 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="1055-1055", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d560 [label="var highestResolutionSubscription = security.Subscriptions.OrderBy(sub => sub.Resolution).First()", span="1058-1058", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d561 [label="var latestMarketOnCloseTimeRoundedDownByResolution = nextMarketClose.Subtract(MarketOnCloseOrder.DefaultSubmissionTimeBuffer)\r\n                    .RoundDownInTimeZone(security.Resolution.ToTimeSpan(), security.Exchange.TimeZone, highestResolutionSubscription.DataTimeZone)", span="1059-1060", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d586 [label="kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock", span="1066-1070", cluster="lambda expression"];
d566 [label="var optionContractSecurity = (Option) kvp.Value", span="1076-1076", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)"];
d579 [label="Entry Unk.CancelOpenOrders", span="", cluster="Unk.CancelOpenOrders"];
d580 [label="Entry SubmitOrderRequest.cstr", span="", cluster="SubmitOrderRequest.cstr"];
d581 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)"];
d515 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="184-184", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)"];
d275 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)"];
d88 [label="var updateData = cash.ConversionRateSecurity?.GetLastData()", span="327-327", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)"];
d281 [label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="94-94", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)"];
d602 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1122-1122", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d598 [label="config.Increment == TimeSpan.Zero", span="1124-1124", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d600 [label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1129-1129", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d601 [label="return dataPointEndTime == roundedDataPointEndTime;", span="1130-1130", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d249 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
d587 [label="Exit lambda expression", span="1066-1070", cluster="lambda expression"];
d608 [label=delisting, span=""];
d518 [label="Exit lambda expression", span="949-949", cluster="lambda expression"];
d609 [label=split, span=""];
d554 [label="Exit lambda expression", span="1034-1034", cluster="lambda expression"];
d305 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)"];
d278 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)"];
d303 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)"];
d497 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156", cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)"];
d498 [label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38", cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)"];
d539 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)"];
d540 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)"];
d527 [label="SubmitOrderRequest request", span="986-986", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)"];
d542 [label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214", cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)"];
d575 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
d576 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
d582 [label="Entry lambda expression", span="1058-1058", cluster="lambda expression"];
d577 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)"];
d578 [label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="495-495", cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)"];
d610 [label=security, span=""];
d588 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()"];
d280 [label="Entry QuantConnect.Securities.Security.GetLastData()", span="513-513", cluster="QuantConnect.Securities.Security.GetLastData()"];
d599 [label="return true;", span="1126-1126", cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)"];
d584 [label="Exit lambda expression", span="1058-1058", cluster="lambda expression"];
d583 [label="sub.Resolution", span="1058-1058", cluster="lambda expression"];
m0_66 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42", cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="AlgorithmRunner.cs"];
m0_65 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="106-106", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="AlgorithmRunner.cs"];
m0_53 [label="Entry QuantConnect.AlphaRuntimeStatistics.AlphaRuntimeStatistics()", span="10-10", cluster="QuantConnect.AlphaRuntimeStatistics.AlphaRuntimeStatistics()", file="AlgorithmRunner.cs"];
m0_59 [label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118", cluster="QuantConnect.Configuration.Config.Set(string, string)", file="AlgorithmRunner.cs"];
m0_61 [label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="AlgorithmRunner.cs"];
m0_110 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_79 [label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="83-83", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_81 [label="engine.Run(job, algorithmManager, algorithmPath)", span="85-85", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_77 [label="Entry lambda expression", span="80-86", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_86 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_89 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_92 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_95 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_98 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_101 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_104 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_107 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_78 [label="string algorithmPath", span="82-82", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_80 [label="var algorithmManager = new AlgorithmManager(false)", span="84-84", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_82 [label="Exit lambda expression", span="80-86", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_87 [label="s.MeanPopulationScore.Direction", span="110-110", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_88 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_90 [label="s.MeanPopulationScore.Magnitude", span="111-111", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_91 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_93 [label="s.RollingAveragedPopulationScore.Direction", span="112-112", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_94 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_96 [label="s.RollingAveragedPopulationScore.Magnitude", span="113-113", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_97 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_99 [label="s.LongShortRatio", span="114-114", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_100 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_102 [label="s.TotalAlphasClosed", span="115-115", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_103 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_105 [label="s.TotalAlphasGenerated", span="116-116", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_106 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_108 [label="s.TotalEstimatedAlphaValue", span="117-117", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_109 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_111 [label="s.TotalAlphasAnalysisCompleted", span="118-118", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_112 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="AlgorithmRunner.cs"];
m0_54 [label="Entry QuantConnect.Util.Composer.Reset()", span="198-198", cluster="QuantConnect.Util.Composer.Reset()", file="AlgorithmRunner.cs"];
m0_70 [label="Entry System.Threading.Tasks.Task.Wait()", span="0-0", cluster="System.Threading.Tasks.Task.Wait()", file="AlgorithmRunner.cs"];
m0_85 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="AlgorithmRunner.cs"];
m0_63 [label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", span="38-38", cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", file="AlgorithmRunner.cs"];
m0_74 [label="Entry QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", span="129-129", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_113 [label="var field = selector.AsEnumerable().OfType<MemberExpression>().First().ToString()", span="132-132", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_115 [label="var func = selector.Compile()", span="135-135", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_116 [label="var expectedValue = func(expected)", span="136-136", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_117 [label="var actualValue = func(actual)", span="137-137", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_114 [label="field = field.Substring(field.IndexOf('.') + 1)", span="133-133", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_119 [label="Assert.AreEqual((double)expectedValue, (double)actualValue, 1e-4, ''Failed on alpha statistics '' + field)", span="140-140", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_120 [label="Assert.AreEqual(expectedValue, actualValue, ''Failed on alpha statistics '' + field)", span="144-144", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_118 [label="expectedValue is double", span="138-138", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_121 [label="Exit QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", span="129-129", cluster="QuantConnect.Tests.AlgorithmRunner.AssertAlphaStatistics(QuantConnect.AlphaRuntimeStatistics, QuantConnect.AlphaRuntimeStatistics, System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>)", file="AlgorithmRunner.cs"];
m0_123 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="AlgorithmRunner.cs"];
m0_125 [label="Entry System.Linq.Expressions.Expression.ToString()", span="0-0", cluster="System.Linq.Expressions.Expression.ToString()", file="AlgorithmRunner.cs"];
m0_0 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="36-36", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_1 [label="var statistics = new Dictionary<string, string>()", span="38-38", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_4 [label="var logFile = $''./regression/{algorithm}.{language.ToLower()}.log''", span="42-42", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_7 [label="Config.Set(''algorithm-type-name'', algorithm)", span="49-49", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_14 [label="Config.Set(''algorithm-language'', language.ToString())", span="56-56", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_15 [label="Config.Set(''algorithm-location'',\r\n                    language == Language.Python\r\n                        ? ''../../../Algorithm.Python/'' + algorithm + ''.py''\r\n                        : ''QuantConnect.Algorithm.'' + language + ''.dll'')", span="57-60", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_23 [label="Log.LogHandler.Trace(''{0}: Running '' + algorithm + ''...'', DateTime.UtcNow)", span="74-74", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_34 [label=expectedStatistics, span="102-102", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_37 [label="expectedAlphaStatistics != null", span="108-108", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_38 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.MeanPopulationScore.Direction)", span="110-110", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_39 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.MeanPopulationScore.Magnitude)", span="111-111", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_40 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.RollingAveragedPopulationScore.Direction)", span="112-112", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_41 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.RollingAveragedPopulationScore.Magnitude)", span="113-113", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_42 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.LongShortRatio)", span="114-114", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_43 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.TotalAlphasClosed)", span="115-115", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_44 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.TotalAlphasGenerated)", span="116-116", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_45 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.TotalEstimatedAlphaValue)", span="117-117", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_46 [label="AssertAlphaStatistics(expectedAlphaStatistics, alphaStatistics, s => s.TotalAlphasAnalysisCompleted)", span="118-118", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_2 [label="var alphaStatistics = new AlphaRuntimeStatistics()", span="39-39", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_3 [label="Composer.Instance.Reset()", span="41-41", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_5 [label="Directory.CreateDirectory(Path.GetDirectoryName(logFile))", span="43-43", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_6 [label="File.Delete(logFile)", span="44-44", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_17 [label="var logHandlers = new ILogHandler[] {new ConsoleLogHandler(), new FileLogHandler(logFile, false)}", span="66-66", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_47 [label="var passedFile = logFile.Replace(''./regression/'', ''./passed/'')", span="123-123", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_50 [label="File.Copy(logFile, passedFile)", span="126-126", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_8 [label="Config.Set(''live-mode'', ''false'')", span="50-50", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_9 [label="Config.Set(''environment'', '''')", span="51-51", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_10 [label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="52-52", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_11 [label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="53-53", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_12 [label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="54-54", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_13 [label="Config.Set(''result-handler'', ''QuantConnect.Lean.Engine.Results.BacktestingResultHandler'')", span="55-55", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", color=red, community=0, file="AlgorithmRunner.cs"];
m0_16 [label="var debugEnabled = Log.DebuggingEnabled", span="63-63", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_31 [label="Log.DebuggingEnabled = debugEnabled", span="94-94", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_18 [label="Log.LogHandler = new CompositeLogHandler(logHandlers)", span="67-67", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_19 [label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="68-68", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_20 [label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="69-69", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_25 [label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="79-79", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_27 [label="var backtestingResultHandler = (BacktestingResultHandler) algorithmHandlers.Results", span="88-88", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_29 [label="var defaultAlphaHandler = (DefaultAlphaHandler) algorithmHandlers.Alphas", span="91-91", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_21 [label="Log.DebuggingEnabled = true", span="71-71", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_26 [label="Task.Factory.StartNew(() =>\r\n                    {\r\n                        string algorithmPath;\r\n                        var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                        var algorithmManager = new AlgorithmManager(false);\r\n                        engine.Run(job, algorithmManager, algorithmPath);\r\n                    }).Wait()", span="80-86", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_22 [label="Log.LogHandler.Trace('''')", span="73-73", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_24 [label="Log.LogHandler.Trace('''')", span="75-75", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_28 [label="statistics = backtestingResultHandler.FinalStatistics", span="89-89", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_35 [label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="104-104", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_36 [label="Assert.AreEqual(stat.Value, statistics[stat.Key], ''Failed on '' + stat.Key)", span="105-105", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_30 [label="alphaStatistics = defaultAlphaHandler.RuntimeStatistics", span="92-92", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_32 [label=Exception, span="97-97", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_33 [label="Log.LogHandler.Error(''{0} {1}'', ex.Message, ex.StackTrace)", span="99-99", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_48 [label="Directory.CreateDirectory(Path.GetDirectoryName(passedFile))", span="124-124", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_49 [label="File.Delete(passedFile)", span="125-125", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_51 [label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="36-36", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="AlgorithmRunner.cs"];
m0_126 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="AlgorithmRunner.cs"];
m0_57 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)", file="AlgorithmRunner.cs"];
m0_64 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="158-158", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="AlgorithmRunner.cs"];
m0_55 [label="Entry System.Enum.ToLower()", span="909-909", cluster="System.Enum.ToLower()", file="AlgorithmRunner.cs"];
m0_128 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="AlgorithmRunner.cs"];
m0_84 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="AlgorithmRunner.cs"];
m0_58 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="AlgorithmRunner.cs"];
m0_73 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="AlgorithmRunner.cs"];
m0_122 [label="Entry System.Linq.Expressions.Expression.AsEnumerable()", span="58-58", cluster="System.Linq.Expressions.Expression.AsEnumerable()", file="AlgorithmRunner.cs"];
m0_60 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="AlgorithmRunner.cs"];
m0_75 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="AlgorithmRunner.cs"];
m0_56 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="AlgorithmRunner.cs"];
m0_67 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62", cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="AlgorithmRunner.cs"];
m0_127 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="AlgorithmRunner.cs"];
m0_83 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="AlgorithmRunner.cs"];
m0_62 [label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", span="38-38", cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", file="AlgorithmRunner.cs"];
m0_71 [label="Entry QuantConnect.Logging.ILogHandler.Error(string, params object[])", span="30-30", cluster="QuantConnect.Logging.ILogHandler.Error(string, params object[])", file="AlgorithmRunner.cs"];
m0_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="AlgorithmRunner.cs"];
m0_76 [label="Entry System.IO.File.Copy(string, string)", span="0-0", cluster="System.IO.File.Copy(string, string)", file="AlgorithmRunner.cs"];
m0_69 [label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="AlgorithmRunner.cs"];
m0_68 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="AlgorithmRunner.cs"];
m0_129 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="AlgorithmRunner.cs"];
m0_124 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="AlgorithmRunner.cs"];
m0_130 [label=systemHandlers, span="", file="AlgorithmRunner.cs"];
m0_131 [label=engine, span="", file="AlgorithmRunner.cs"];
m1_15 [label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="111-111", cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="BacktestingRealTimeHandler.cs"];
m1_26 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", span="173-173", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs"];
m1_55 [label="return _scheduledEvents.Select(x => x.Value).OrderBy(x => x.NextEventUtcTime).ToList();", span="175-175", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs"];
m1_56 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", span="173-173", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.GetScheduledEventsSortedByTime()", file="BacktestingRealTimeHandler.cs"];
m1_13 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="92-92", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_19 [label="_algorithm != null", span="94-94", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_20 [label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="96-96", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_21 [label="_scheduledEvents[scheduledEvent.Name] = scheduledEvent", span="99-99", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_23 [label="scheduledEvent.IsLoggingEnabled = true", span="102-102", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_22 [label="Log.DebuggingEnabled", span="100-100", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_24 [label="_scheduledEventsSortedByTime = GetScheduledEventsSortedByTime()", span="105-105", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_25 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="92-92", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="BacktestingRealTimeHandler.cs"];
m1_27 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", span="112-112", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs"];
m1_28 [label="ScheduledEvent scheduledEvent", span="114-114", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs"];
m1_29 [label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="115-115", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs"];
m1_30 [label="_scheduledEventsSortedByTime = GetScheduledEventsSortedByTime()", span="117-117", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs"];
m1_31 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", span="112-112", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BacktestingRealTimeHandler.cs"];
m1_63 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_60 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_61 [label="x.Value", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_62 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_64 [label="x.NextEventUtcTime", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_65 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="BacktestingRealTimeHandler.cs"];
m1_50 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingRealTimeHandler.cs"];
m1_52 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BacktestingRealTimeHandler.cs"];
m1_58 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="BacktestingRealTimeHandler.cs"];
m1_33 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="124-124", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_34 [label=_scheduledEventsSortedByTime, span="127-127", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_35 [label="scheduledEvent.Scan(time)", span="129-129", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_36 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="124-124", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_59 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BacktestingRealTimeHandler.cs"];
m1_32 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingRealTimeHandler.cs"];
m1_37 [label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="128-128", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_49 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_17 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="84-84", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", file="BacktestingRealTimeHandler.cs"];
m1_18 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", span="84-84", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Run()", file="BacktestingRealTimeHandler.cs"];
m1_16 [label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="185-185", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_0 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_1 [label="_algorithm = algorithm", span="54-54", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_2 [label="_resultHandler =  resultHandler", span="55-55", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_7 [label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.SecurityEndOfDayDelta))", span="67-67", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_9 [label="scheduledEvent.SkipEventsUntil(algorithm.UtcTime)", span="74-74", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_3 [label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, _algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.AlgorithmEndOfDayDelta))", span="58-58", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_4 [label="_algorithm.Securities", span="61-61", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_5 [label="var security = kvp.Value", span="63-63", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_8 [label=_scheduledEventsSortedByTime, span="71-71", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_6 [label="!security.IsInternalFeed()", span="65-65", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_10 [label="scheduledEvent.IsLoggingEnabled = Log.DebuggingEnabled", span="76-76", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_11 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BacktestingRealTimeHandler.cs"];
m1_14 [label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30", cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="BacktestingRealTimeHandler.cs"];
m1_53 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="168-168", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="BacktestingRealTimeHandler.cs"];
m1_54 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", span="168-168", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Exit()", file="BacktestingRealTimeHandler.cs"];
m1_38 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="137-137", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_39 [label=_scheduledEventsSortedByTime, span="139-139", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_40 [label="scheduledEvent.NextEventUtcTime < time", span="141-141", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_41 [label="_algorithm.SetDateTime(scheduledEvent.NextEventUtcTime)", span="143-143", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_42 [label="scheduledEvent.Scan(scheduledEvent.NextEventUtcTime)", span="147-147", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_44 [label="var errorMessage = $''BacktestingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Name}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="151-151", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", color=green, community=0, file="BacktestingRealTimeHandler.cs"];
m1_43 [label=ScheduledEventException, span="149-149", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_45 [label="Log.Error(scheduledEventException, errorMessage)", span="153-153", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", color=green, community=0, file="BacktestingRealTimeHandler.cs"];
m1_46 [label="_resultHandler.RuntimeError(errorMessage)", span="155-155", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_47 [label="_algorithm.RunTimeError = new Exception(errorMessage)", span="159-159", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_48 [label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="137-137", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BacktestingRealTimeHandler.cs"];
m1_57 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BacktestingRealTimeHandler.cs"];
m1_12 [label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64", cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="BacktestingRealTimeHandler.cs"];
m1_51 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="135-135", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="BacktestingRealTimeHandler.cs"];
m1_66 [label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", span="", file="BacktestingRealTimeHandler.cs"];
m2_120 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="BacktestingResultHandler.cs"];
m2_41 [label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38", cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="BacktestingResultHandler.cs"];
m2_64 [label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131", cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="BacktestingResultHandler.cs"];
m2_90 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="304-304", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_91 [label="order.Quantity == 0", span="307-307", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_93 [label="var security = _securities[order.Symbol]", span="309-309", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_94 [label="var ticket = GetOrderTicket(order.Id)", span="311-311", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_96 [label="Log.Error(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Null order ticket for id: '' + order.Id)", span="314-314", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_98 [label="order.Type == OrderType.OptionExercise", span="318-318", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_102 [label="var quantity = option.GetExerciseQuantity(order.Quantity)", span="326-326", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_103 [label="var newOrder = new LimitOrder\r\n                    {\r\n                        Id = order.Id,\r\n                        Time = order.Time,\r\n                        LimitPrice = option.StrikePrice,\r\n                        Symbol = underlying.Symbol,\r\n                        Quantity = option.Symbol.ID.OptionRight == OptionRight.Call ? quantity : -quantity\r\n                    }", span="328-335", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_104 [label="return GetSufficientCapitalForOrder(portfolio, newOrder);", span="338-338", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_106 [label="security.Holdings.Quantity * order.Quantity < 0 && Math.Abs(security.Holdings.Quantity) >= Math.Abs(order.Quantity)", span="345-345", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_108 [label="var freeMargin = security.MarginModel.GetMarginRemaining(portfolio, security, order.Direction)", span="347-347", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_109 [label="var initialMarginRequiredForOrder = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="348-348", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_110 [label="var percentUnfilled = (Math.Abs(order.Quantity) - Math.Abs(ticket.QuantityFilled))/Math.Abs(order.Quantity)", span="351-351", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_113 [label="Log.Error(string.Format(''SecurityTransactionManager.GetSufficientCapitalForOrder(): Id: {0}, Initial Margin: {1}, Free Margin: {2}'', order.Id, initialMarginRequiredForOrder, freeMargin))", span="356-356", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_92 [label="return true;", span="307-307", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_99 [label="var option = (Option.Option)security", span="321-321", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_95 [label="ticket == null", span="312-312", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_97 [label="return false;", span="315-315", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_100 [label="var underlying = option.Underlying", span="322-322", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_101 [label="option.IsAutoExercised(underlying.Close)", span="324-324", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_105 [label="return true;", span="341-341", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_107 [label="return true;", span="345-345", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_112 [label="Math.Abs(initialMarginRequiredForRemainderOfOrder) > freeMargin", span="354-354", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_111 [label="var initialMarginRequiredForRemainderOfOrder = percentUnfilled*initialMarginRequiredForOrder", span="352-352", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_115 [label="return true;", span="359-359", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_114 [label="return false;", span="357-357", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_116 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="304-304", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="255-255", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="BacktestingResultHandler.cs"];
m2_74 [label="return _orderProcessor.GetOrders(x => x.Symbol == symbol && x.Status.IsOpen()).ToList();", span="257-257", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="BacktestingResultHandler.cs"];
m2_75 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="255-255", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="BacktestingResultHandler.cs"];
m2_52 [label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="223-223", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_53 [label="var orderTicket = GetOrderTicket(orderId)", span="225-225", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_55 [label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Unable to locate ticket for order: '' + orderId)", span="228-228", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_54 [label="orderTicket == null", span="226-226", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_57 [label="!orderTicket.OrderClosed.WaitOne(_marketOrderFillTimeout)", span="232-232", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_56 [label="return false;", span="229-229", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_58 [label="Log.Error(''SecurityTransactionManager.WaitForOrder(): Order did not fill within {0} seconds.'', _marketOrderFillTimeout.TotalSeconds)", span="234-234", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_60 [label="return true;", span="238-238", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_59 [label="return false;", span="235-235", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_61 [label="Exit QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="223-223", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BacktestingResultHandler.cs"];
m2_12 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118", cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="BacktestingResultHandler.cs"];
m2_79 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="273-273", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BacktestingResultHandler.cs"];
m2_80 [label="return _orderProcessor.GetOrderById(orderId);", span="275-275", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BacktestingResultHandler.cs"];
m2_81 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="273-273", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BacktestingResultHandler.cs"];
m2_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BacktestingResultHandler.cs"];
m2_119 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="BacktestingResultHandler.cs"];
m2_32 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="201-201", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingResultHandler.cs"];
m2_42 [label="return _orderProcessor.GetOrderTickets(filter ?? (x => true));", span="203-203", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingResultHandler.cs"];
m2_43 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="201-201", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingResultHandler.cs"];
m2_86 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43", cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="BacktestingResultHandler.cs"];
m2_51 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", span="57-57", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTicket(int)", file="BacktestingResultHandler.cs"];
m2_76 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_36 [label="x.Symbol == symbol && x.Status.IsOpen()", span="178-178", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_35 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_37 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_45 [label="Entry lambda expression", span="203-203", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_46 [label=true, span="203-203", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_47 [label="Exit lambda expression", span="203-203", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_70 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_71 [label="x.Status.IsOpen()", span="247-247", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_72 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_77 [label="x.Symbol == symbol && x.Status.IsOpen()", span="257-257", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_78 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="BacktestingResultHandler.cs"];
m2_62 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingResultHandler.cs"];
m2_122 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47", cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_11 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="366-366", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BacktestingResultHandler.cs"];
m2_124 [label="return Interlocked.Increment(ref _orderId);", span="368-368", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BacktestingResultHandler.cs"];
m2_125 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="366-366", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BacktestingResultHandler.cs"];
m2_68 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65", cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingResultHandler.cs"];
m2_117 [label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="197-197", cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="BacktestingResultHandler.cs"];
m2_13 [label="Entry QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="29-29", cluster="QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_118 [label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="189-189", cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="BacktestingResultHandler.cs"];
m2_127 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="375-375", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BacktestingResultHandler.cs"];
m2_128 [label="_orderProcessor = orderProvider", span="377-377", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BacktestingResultHandler.cs"];
m2_129 [label="Exit QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="375-375", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BacktestingResultHandler.cs"];
m2_63 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BacktestingResultHandler.cs"];
m2_65 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="245-245", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingResultHandler.cs"];
m2_66 [label="return _orderProcessor.GetOrders(x => x.Status.IsOpen()).ToList();", span="247-247", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingResultHandler.cs"];
m2_67 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="245-245", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="BacktestingResultHandler.cs"];
m2_69 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingResultHandler.cs"];
m2_23 [label="Entry QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="191-191", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_39 [label="return ProcessRequest(new CancelOrderRequest(_securities.UtcTime, orderId, tag ?? string.Empty));", span="193-193", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_40 [label="Exit QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", span="191-191", cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_87 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="293-293", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingResultHandler.cs"];
m2_88 [label="return _orderProcessor.GetOrders(filter);", span="295-295", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingResultHandler.cs"];
m2_89 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="293-293", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingResultHandler.cs"];
m2_83 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="283-283", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="BacktestingResultHandler.cs"];
m2_84 [label="return _orderProcessor.GetOrderByBrokerageId(brokerageId);", span="285-285", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="BacktestingResultHandler.cs"];
m2_85 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", span="283-283", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(string)", file="BacktestingResultHandler.cs"];
m2_121 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63", cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="BacktestingResultHandler.cs"];
m2_14 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingResultHandler.cs"];
m2_15 [label="return ProcessRequest(request);", span="146-146", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingResultHandler.cs"];
m2_16 [label="Exit QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingResultHandler.cs"];
m2_4 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BacktestingResultHandler.cs"];
m2_5 [label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_6 [label="var submit = request as SubmitOrderRequest", span="131-131", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_9 [label="return _orderProcessor.Process(request);", span="136-136", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_7 [label="submit != null", span="132-132", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_8 [label="submit.SetOrderId(GetIncrementOrderId())", span="134-134", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_10 [label="Exit QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129", cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BacktestingResultHandler.cs"];
m2_126 [label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0", cluster="System.Threading.Interlocked.Increment(ref int)", file="BacktestingResultHandler.cs"];
m2_123 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BacktestingResultHandler.cs"];
m2_20 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_21 [label="return RemoveOrder(orderId, orderTag);", span="166-166", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_22 [label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="BacktestingResultHandler.cs"];
m2_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingResultHandler.cs"];
m2_0 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="BacktestingResultHandler.cs"];
m2_1 [label="_securities = security", span="52-52", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="BacktestingResultHandler.cs"];
m2_2 [label="_transactionRecord = new Dictionary<DateTime, decimal>()", span="55-55", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="BacktestingResultHandler.cs"];
m2_3 [label="Exit QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="BacktestingResultHandler.cs"];
m2_17 [label="Entry QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BacktestingResultHandler.cs"];
m2_18 [label="return ProcessRequest(request);", span="156-156", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BacktestingResultHandler.cs"];
m2_19 [label="Exit QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="154-154", cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BacktestingResultHandler.cs"];
m2_38 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="BacktestingResultHandler.cs"];
m2_82 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderById(int)", span="36-36", cluster="QuantConnect.Securities.IOrderProvider.GetOrderById(int)", file="BacktestingResultHandler.cs"];
m2_24 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="175-175", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_25 [label="var cancelledOrders = new List<OrderTicket>()", span="177-177", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_26 [label="GetOrderTickets(x => x.Symbol == symbol && x.Status.IsOpen())", span="178-178", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_27 [label="ticket.Cancel(tag)", span="180-180", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_28 [label="cancelledOrders.Add(ticket)", span="181-181", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_29 [label="return cancelledOrders;", span="183-183", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_30 [label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="175-175", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", file="BacktestingResultHandler.cs"];
m2_48 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="211-211", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="BacktestingResultHandler.cs"];
m2_49 [label="return _orderProcessor.GetOrderTicket(orderId);", span="213-213", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="BacktestingResultHandler.cs"];
m2_50 [label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="211-211", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="BacktestingResultHandler.cs"];
m2_44 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50", cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingResultHandler.cs"];
m2_130 [label="Entry QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="383-383", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_131 [label="return order.Status == OrderStatus.Filled || order.Status == OrderStatus.PartiallyFilled || order.Status == OrderStatus.Invalid || order.Status == OrderStatus.Canceled;", span="385-385", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_132 [label="Exit QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", span="383-383", cluster="QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)", file="BacktestingResultHandler.cs"];
m2_133 [label="QuantConnect.Securities.SecurityTransactionManager", span="", file="BacktestingResultHandler.cs"];
m2_134 [label="QuantConnect.Symbol", span="", file="BacktestingResultHandler.cs"];
m2_135 [label="QuantConnect.Symbol", span="", file="BacktestingResultHandler.cs"];
m3_288 [label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120", cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_122 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_126 [label="var security = Securities[symbol]", span="412-412", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_127 [label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice, properties: DefaultOrderProperties?.Clone())", span="413-413", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_128 [label="var response = PreOrderChecks(request)", span="414-414", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_130 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_131 [label="return Transactions.AddOrder(request);", span="420-420", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_129 [label="response.IsError", span="415-415", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_132 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_74 [label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="237-237", cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_203 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_164 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_165 [label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_166 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_18 [label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="87-87", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_19 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_324 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_325 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="859-859", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_326 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_1 [label="return Order(symbol, (decimal)Math.Abs(quantity));", span="42-42", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_2 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_169 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_170 [label="var orders = new List<OrderTicket>()", span="549-549", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_171 [label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_172 [label="strategy.OptionLegs != null", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_173 [label="strategy.OptionLegs", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_174 [label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_176 [label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_181 [label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_184 [label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_187 [label="strategy.UnderlyingLegs != null", span="590-590", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_188 [label="strategy.UnderlyingLegs", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_189 [label="!Securities.ContainsKey(strategy.Underlying)", span="594-594", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_190 [label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_194 [label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_197 [label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_182 [label="orders.Add(marketOrder)", span="577-577", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_185 [label="orders.Add(limitOrder)", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_195 [label="orders.Add(marketOrder)", span="604-604", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_198 [label="orders.Add(limitOrder)", span="608-608", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_200 [label="return orders;", span="615-615", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_179 [label="optionLeg.OrderType", span="573-573", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_186 [label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_175 [label="optionSeq.Count() != 1", span="564-564", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_178 [label="var option = optionSeq.First().Key", span="571-571", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_177 [label="throw new InvalidOperationException(error);", span="568-568", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_180 [label="OrderType.Market", span="575-575", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_183 [label="OrderType.Limit", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_192 [label="underlyingLeg.OrderType", span="600-600", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_199 [label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_191 [label="throw new InvalidOperationException(error);", span="597-597", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_193 [label="OrderType.Market", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_196 [label="OrderType.Limit", span="606-606", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_201 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547", cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_284 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_124 [label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_125 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_205 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_344 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="937-937", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_348 [label="var security = Securities[symbol]", span="939-939", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_352 [label="target == 0", span="946-946", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_354 [label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="949-949", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_358 [label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="957-957", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_361 [label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="961-961", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_349 [label="var price = security.Price", span="940-940", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_353 [label="return -security.Holdings.Quantity;", span="946-946", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_355 [label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="950-950", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_369 [label="orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="974-974", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_373 [label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="984-984", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_374 [label="orderValue = order.GetValue(security)", span="985-985", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_375 [label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_377 [label="feeToPriceRatio -= feeToPriceRatio % security.SymbolProperties.LotSize", span="990-990", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_378 [label="feeToPriceRatio < security.SymbolProperties.LotSize", span="991-991", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_379 [label="feeToPriceRatio = security.SymbolProperties.LotSize", span="993-993", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_380 [label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="997-997", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_350 [label="price == 0", span="943-943", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_351 [label="return 0;", span="943-943", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_356 [label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="953-953", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_357 [label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="954-954", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_368 [label="var orderQuantity = targetOrderValue / unitPrice", span="971-971", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_381 [label="marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue", span="999-999", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_382 [label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="1002-1002", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_359 [label="unitPrice == 0", span="958-958", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_376 [label="feeToPriceRatio = orderFees / unitPrice", span="989-989", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_360 [label="return 0;", span="958-958", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_362 [label="marginRemaining <= 0", span="962-962", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_363 [label="return 0;", span="962-962", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_364 [label="decimal marginRequired", span="965-965", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_365 [label="decimal orderValue", span="966-966", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_366 [label="decimal orderFees", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_367 [label="var feeToPriceRatio = 0m", span="968-968", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_370 [label="orderQuantity -= feeToPriceRatio", span="980-980", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_371 [label="orderQuantity <= 0", span="981-981", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_372 [label="return 0;", span="981-981", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_383 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="937-937", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_66 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_409 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_210 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_214 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_320 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_321 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="846-846", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_322 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_283 [label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154", cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_91 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_92 [label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_93 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_3 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_327 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_328 [label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="872-872", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_329 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_95 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_96 [label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_97 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_12 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_8 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_204 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_310 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_202 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_163 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_167 [label="return GenerateOrders(strategy, quantity);", span="544-544", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_168 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_65 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_84 [label="var security = Securities[symbol]", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_85 [label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag, DefaultOrderProperties?.Clone())", span="275-275", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_86 [label="var response = PreOrderChecks(request)", span="276-276", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_88 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_89 [label="return Transactions.AddOrder(request);", span="282-282", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_87 [label="response.IsError", span="277-277", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_90 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_313 [label="Entry lambda expression", span="774-774", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_75 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_76 [label="x.Resolution != Resolution.Daily", span="206-206", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_77 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_219 [label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_218 [label="Entry lambda expression", span="559-562", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_220 [label="Exit lambda expression", span="559-562", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_314 [label="x.Value", span="774-774", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_315 [label="Exit lambda expression", span="774-774", cluster="lambda expression", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_323 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_330 [label="Security security", span="888-888", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_331 [label="!Securities.TryGetValue(symbol, out security)", span="889-889", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_332 [label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="891-891", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_334 [label=liquidateExistingHoldings, span="896-896", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_338 [label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="902-902", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_339 [label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="905-905", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_340 [label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="911-911", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_342 [label="MarketOrder(symbol, quantity, false, tag)", span="914-914", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_333 [label="return;", span="892-892", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_335 [label=Portfolio, span="898-898", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_336 [label="var holdingSymbol = kvp.Key", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_337 [label="var holdings = kvp.Value", span="901-901", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_341 [label="Math.Abs(quantity) > 0", span="912-912", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_343 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_388 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47", cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_109 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_110 [label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_111 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_395 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1040-1040", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_396 [label="return Order(symbol, (decimal)quantity);", span="1042-1042", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_397 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1040-1040", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_39 [label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_40 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_112 [label="var security = Securities[symbol]", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_113 [label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="366-366", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_114 [label="var response = PreOrderChecks(request)", span="367-367", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_116 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_117 [label="return Transactions.AddOrder(request);", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_115 [label="response.IsError", span="368-368", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_118 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_133 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_134 [label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_135 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_286 [label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238", cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_226 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_228 [label=IsWarmingUp, span="642-642", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_229 [label="return OrderResponse.WarmingUp(request);", span="644-644", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_231 [label="!Securities.TryGetValue(request.Symbol, out security)", span="650-650", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_232 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="652-652", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_233 [label="request.Quantity == 0", span="656-656", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_234 [label="return OrderResponse.ZeroQuantity(request);", span="658-658", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_235 [label="Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="661-661", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_236 [label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderQuantityLessThanLoteSize, $''Unable to {request.OrderRequestType.ToString().ToLower()} order with id {request.OrderId} which quantity ({Math.Abs(request.Quantity)}) is less than lot size ({security.SymbolProperties.LotSize}).'');", span="663-663", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_238 [label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="668-668", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_240 [label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="674-674", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_241 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="676-676", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_242 [label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="680-680", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_243 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="682-682", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_245 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="687-687", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_249 [label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="695-695", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_251 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="699-699", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_256 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="709-709", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_258 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="713-713", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_260 [label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="720-720", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_263 [label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="727-727", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_264 [label="request.OrderType == OrderType.OptionExercise", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_266 [label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_268 [label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="736-736", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_269 [label="request.Quantity > security.Holdings.Quantity", span="738-738", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_270 [label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="739-739", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_271 [label="request.Quantity <= 0.0m", span="741-741", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_272 [label="OrderResponse.ZeroQuantity(request)", span="742-742", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_273 [label="request.OrderType == OrderType.MarketOnClose", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_277 [label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="755-755", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_278 [label="return OrderResponse.Success(request);", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_230 [label="Security security", span="649-649", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_237 [label="!security.IsTradable", span="666-666", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_239 [label="var price = security.Price", span="671-671", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_247 [label="var quoteCurrency = security.QuoteCurrency.Symbol", span="692-692", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_250 [label="security.QuoteCurrency.ConversionRate == 0m", span="697-697", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_252 [label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="703-703", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_254 [label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="706-706", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_259 [label="!security.HasData", span="718-718", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_265 [label="security.Type != SecurityType.Option", span="732-732", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_267 [label="security.Holdings.IsShort", span="735-735", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_274 [label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="747-747", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_276 [label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="750-750", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_244 [label="price == 0", span="685-685", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_246 [label="Cash quoteCash", span="691-691", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_248 [label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="693-693", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_253 [label="Cash baseCash", span="705-705", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_255 [label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="707-707", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_257 [label="baseCash.ConversionRate == 0m", span="711-711", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_261 [label="Transactions.OrdersCount > _maxOrders", span="724-724", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_262 [label="Status = AlgorithmStatus.Stopped", span="726-726", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_275 [label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="749-749", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_279 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_398 [label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1050-1050", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_399 [label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1052-1054", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_400 [label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1056-1056", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_401 [label="return exchangeHours.IsOpen(time, false);", span="1058-1058", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_402 [label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1050-1050", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_16 [label="Entry System.Math.Abs(float)", span="0-0", cluster="System.Math.Abs(float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1724-1724", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_30 [label="return Order(symbol, (decimal)quantity);", span="129-129", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_31 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_33 [label="return MarketOrder(symbol, (decimal)quantity);", span="138-138", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_34 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_78 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_79 [label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_80 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_207 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_216 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_389 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_390 [label="return Order(symbol, quantity, asynchronous, tag);", span="1018-1018", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_391 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_309 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_72 [label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="435-435", cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_71 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_221 [label="var response = PreOrderChecksImpl(request)", span="627-627", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_222 [label="response.IsError", span="628-628", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_223 [label="Error(response.ErrorMessage)", span="630-630", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_224 [label="return response;", span="632-632", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_225 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625", cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_215 [label="Entry Unk.LimitOrder", span="", cluster="Unk.LimitOrder", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_405 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_406 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_21 [label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_22 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_213 [label="Entry Unk.MarketOrder", span="", cluster="Unk.MarketOrder", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_403 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_227 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1749-1749", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_285 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_119 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_120 [label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_121 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_206 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_68 [label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25", cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_160 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_161 [label="return Order(strategy, Math.Abs(quantity));", span="522-522", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_162 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_44 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_45 [label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_46 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_392 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1028-1028", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_393 [label="return Order(symbol, quantity);", span="1030-1030", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_394 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1028-1028", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_282 [label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128", cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_81 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_82 [label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_83 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_385 [label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191", cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_136 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_140 [label="var security = Securities[symbol]", span="462-462", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_141 [label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="463-463", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_142 [label="var response = PreOrderChecks(request)", span="464-464", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_144 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_145 [label="return Transactions.AddOrder(request);", span="471-471", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_143 [label="response.IsError", span="465-465", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_146 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_105 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_106 [label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_107 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_280 [label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164", cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_384 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_10 [label="return Order(symbol, Math.Abs(quantity));", span="64-64", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_11 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_147 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_148 [label="var option = (Option)Securities[optionSymbol]", span="483-483", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_149 [label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag, DefaultOrderProperties?.Clone())", span="485-485", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_156 [label="!asynchronous", span="504-504", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_150 [label=IsWarmingUp, span="488-488", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_151 [label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_152 [label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_154 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_155 [label="var ticket = Transactions.AddOrder(request)", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_153 [label="preOrderCheckResponse.IsError", span="495-495", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_157 [label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_158 [label="return ticket;", span="509-509", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_159 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481", cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_70 [label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="444-444", cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_316 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_317 [label="!_locked", span="831-831", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_318 [label="_maxOrders = max", span="833-833", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_319 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_287 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_212 [label="Entry Unk.First", span="", cluster="Unk.First", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_311 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="225-225", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_209 [label="Entry System.DateTime.ToString()", span="0-0", cluster="System.DateTime.ToString()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_36 [label="return MarketOrder(symbol, quantity);", span="147-147", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_37 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_41 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_42 [label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_43 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_94 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_98 [label="var security = Securities[symbol]", span="318-318", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_99 [label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag, DefaultOrderProperties?.Clone())", span="319-319", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_100 [label="var response = PreOrderChecks(request)", span="320-320", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_102 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_103 [label="return Transactions.AddOrder(request);", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_101 [label="response.IsError", span="321-321", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_104 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_345 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="924-924", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_346 [label="return CalculateOrderQuantity(symbol, (decimal)target);", span="926-926", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_347 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="924-924", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_47 [label="var security = Securities[symbol]", span="199-199", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_49 [label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_54 [label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag, DefaultOrderProperties?.Clone())", span="214-214", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_61 [label="!asynchronous", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_48 [label="!security.Exchange.ExchangeOpen", span="203-203", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_50 [label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_51 [label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_52 [label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_53 [label="return mooTicket;", span="211-211", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_55 [label=IsWarmingUp, span="217-217", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_56 [label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_57 [label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_59 [label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_60 [label="var ticket = Transactions.AddOrder(request)", span="230-230", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_58 [label="preOrderCheckResponse.IsError", span="224-224", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_62 [label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_63 [label="return ticket;", span="238-238", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_64 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_14 [label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_15 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_24 [label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_25 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_5 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_6 [label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_7 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_386 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="505-505", cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_211 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_281 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_289 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_290 [label="var orderIdList = new List<int>()", span="772-772", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_292 [label="symbol != symbolToLiquidate && symbolToLiquidate != null", span="777-777", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_302 [label="Transactions.CancelOrder(order.Id, tag)", span="806-806", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_304 [label="var ticket = Order(symbol, -quantity - marketOrdersQuantity, tag: tag)", span="814-814", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_291 [label="Securities.Keys.OrderBy(x => x.Value)", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_306 [label="orderIdList.Add(ticket.OrderId)", span="817-817", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_307 [label="return orderIdList;", span="822-822", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_293 [label="var orders = Transactions.GetOpenOrders(symbol)", span="781-781", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_294 [label="var quantity = Portfolio[symbol].Quantity", span="784-784", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_295 [label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="787-787", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_297 [label=orders, span="792-792", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_303 [label="quantity != 0", span="811-811", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_296 [label="var marketOrdersQuantity = 0m", span="791-791", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_301 [label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="801-801", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_298 [label="order.Type == OrderType.Market", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_299 [label="var ticket = Transactions.GetOrderTicket(order.Id)", span="797-797", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_300 [label="ticket != null", span="798-798", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_305 [label="ticket.Status == OrderStatus.Filled", span="815-815", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_308 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_73 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_387 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_69 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1061-1061", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_407 [label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag, properties);", span="1063-1063", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_408 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1061-1061", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_404 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_312 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="173-173", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_208 [label="Entry decimal.ToString()", span="0-0", cluster="decimal.ToString()", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_26 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_27 [label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_137 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_138 [label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_139 [label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_410 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_411 [label="QuantConnect.Securities.Option.OptionStrategy", span="", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m3_412 [label=optionLeg, span="", file="BaseDataSubscriptionEnumeratorFactoryTests.cs"];
m5_33 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="23-23", cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CashBuyingPowerModel.cs"];
m5_29 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="CashBuyingPowerModel.cs"];
m5_40 [label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124", cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_32 [label="Entry Unk.ForSource", span="", cluster="Unk.ForSource", file="CashBuyingPowerModel.cs"];
m5_27 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="18-18", cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_1 [label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_2 [label="_mapFileResolver = mapFileResolver", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_3 [label="_factorFileProvider = factorFileProvider", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_41 [label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", span="67-67", cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_30 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", span="86-86", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_34 [label="var config = request.Configuration", span="88-88", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_37 [label="return mapFile.GetMappedSymbol(date);", span="96-96", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", color=red, community=0, file="CashBuyingPowerModel.cs"];
m5_35 [label="config.Symbol.ID.SecurityType == SecurityType.Option ||\r\n                config.Symbol.ID.SecurityType == SecurityType.Equity", span="89-90", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_36 [label="var mapFile = config.Symbol.HasUnderlying ?\r\n                        _mapFileResolver.ResolveMapFile(config.Symbol.Underlying.ID.Symbol, config.Symbol.Underlying.ID.Date) :\r\n                        _mapFileResolver.ResolveMapFile(config.Symbol.ID.Symbol, config.Symbol.ID.Date)", span="92-94", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_38 [label="return config.MappedSymbol;", span="100-100", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_39 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", span="86-86", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="CashBuyingPowerModel.cs"];
m5_8 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="55-55", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_9 [label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="57-57", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_10 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="55-55", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="CashBuyingPowerModel.cs"];
m5_31 [label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="161-161", cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CashBuyingPowerModel.cs"];
m5_28 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="CashBuyingPowerModel.cs"];
m5_15 [label="_dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", span="68-68", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_14 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_25 [label="yield return entry;", span="82-82", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_16 [label="var sourceFactory = (BaseData)Activator.CreateInstance(request.Configuration.Type)", span="70-70", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_17 [label="_tradableDaysProvider(request)", span="72-72", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_18 [label="var currentSymbol = request.Configuration.MappedSymbol", span="74-74", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_19 [label="request.Configuration.MappedSymbol = GetMappedSymbol(request, date)", span="75-75", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_20 [label="var source = sourceFactory.GetSource(request.Configuration, date, false)", span="76-76", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_21 [label="request.Configuration.MappedSymbol = currentSymbol", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_22 [label="var factory = SubscriptionDataSourceReader.ForSource(source, dataProvider, _dataCacheProvider, request.Configuration, date, false)", span="78-78", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_23 [label="var entriesForDate = factory.Read(source)", span="79-79", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_24 [label=entriesForDate, span="80-80", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_26 [label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="CashBuyingPowerModel.cs"];
m5_11 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_6 [label="request.TradableDays", span="45-45", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_5 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_7 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_12 [label="request.TradableDays", span="57-57", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_13 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="CashBuyingPowerModel.cs"];
m5_42 [label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", span="", file="CashBuyingPowerModel.cs"];
m6_130 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", span="439-439", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_241 [label="var resetEvent = new ManualResetEvent(false)", span="441-441", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_242 [label="EventHandler<OrderEvent> handler = (s, e) => { resetEvent.Set(); }", span="443-443", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_245 [label="resetEvent.WaitOne()", span="449-449", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_243 [label="_brokerage.OrderStatusChanged += handler", span="445-445", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_246 [label="_brokerage.OrderStatusChanged -= handler", span="451-451", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_244 [label="_algorithm.StopMarketOrder(symbol, quantity, stopPrice)", span="447-447", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_247 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", span="439-439", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitStopMarketOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_20 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_155 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", span="288-288", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_163 [label="Assert.AreEqual(-0.49875m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 0))", span="304-304", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_162 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="301-301", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_156 [label="_portfolio.SetCash(0)", span="290-290", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_157 [label="_btcusd.SetMarketPrice(new Tick { Value = 10000m })", span="292-292", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_158 [label="_portfolio.SetCash(''BTC'', 0.5m, 10000m)", span="293-293", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_159 [label="var order = new MarketOrder(_btcusd.Symbol, -0.5m, DateTime.UtcNow)", span="296-296", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_160 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="297-297", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_161 [label="order = new MarketOrder(_btcusd.Symbol, -0.51m, DateTime.UtcNow)", span="300-300", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_164 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", span="288-288", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderRequiresBaseCurrencyInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_4 [label="_portfolio.CashBook.Add(''BTC'', 0, 15000m)", span="51-51", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_5 [label="_portfolio.CashBook.Add(''ETH'', 0, 1000m)", span="52-52", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_6 [label="_algorithm.SetBrokerageModel(BrokerageName.GDAX, AccountType.Cash)", span="54-54", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_44 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="190-190", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs"];
m6_34 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", span="92-92", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="CashBuyingPowerModelTests.cs"];
m6_35 [label="_transactionHandler.Exit()", span="94-94", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="CashBuyingPowerModelTests.cs"];
m6_36 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", span="92-92", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.TearDown()", file="CashBuyingPowerModelTests.cs"];
m6_180 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", span="338-338", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_181 [label="_portfolio.SetCash(5000)", span="340-340", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_182 [label="_portfolio.CashBook[''BTC''].SetAmount(1m)", span="341-341", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_183 [label="_portfolio.CashBook[''ETH''].SetAmount(3m)", span="342-342", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_184 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="344-344", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_185 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="345-345", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_186 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="347-347", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_187 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="348-348", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_188 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="350-350", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_189 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="351-351", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_190 [label="_algorithm.SetFinishedWarmingUp()", span="352-352", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_191 [label="SubmitLimitOrder(_btcusd.Symbol, -0.1m, 15000m)", span="355-355", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_192 [label="SubmitLimitOrder(_ethbtc.Symbol, 1m, 0.1m)", span="358-358", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_193 [label="Assert.AreEqual(-0.798m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 0.2m * 15000))", span="362-362", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_194 [label="var order = new MarketOrder(_btcusd.Symbol, -0.80m, DateTime.UtcNow)", span="365-365", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_195 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="366-366", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_196 [label="order = new MarketOrder(_btcusd.Symbol, -0.81m, DateTime.UtcNow)", span="369-369", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_197 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="370-370", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_198 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", span="338-338", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_19 [label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", span="", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="CashBuyingPowerModelTests.cs"];
m6_131 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="CashBuyingPowerModelTests.cs"];
m6_7 [label="_transactionHandler = new BacktestingTransactionHandler()", span="56-56", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_33 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", span="24-24", cluster="QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", file="CashBuyingPowerModelTests.cs"];
m6_209 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", span="391-391", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_210 [label="_portfolio.SetCash(10000)", span="393-393", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_211 [label="_portfolio.SetCash(''EUR'', 10000m, 1.20m)", span="394-394", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_212 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="396-396", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_213 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="397-397", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_214 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="399-399", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_215 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="400-400", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_216 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="402-402", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_217 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="403-403", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_218 [label="_btceur = _algorithm.AddCrypto(''BTCEUR'')", span="405-405", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_219 [label="_btceur.SetMarketPrice(new Tick { Value = 12000m })", span="406-406", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_220 [label="_algorithm.SetFinishedWarmingUp()", span="407-407", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_221 [label="Assert.AreEqual(0.665m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 10000))", span="410-410", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_222 [label="Assert.AreEqual(9.97m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _ethusd, 10000))", span="413-413", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_223 [label="Assert.AreEqual(0m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _ethbtc, 10000))", span="416-416", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_224 [label="var targetValue = 10000m * _portfolio.CashBook[''EUR''].ConversionRate", span="419-419", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_225 [label="Assert.AreEqual(0.83125m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btceur, targetValue))", span="420-420", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_226 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", span="391-391", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.CalculatesMaximumOrderQuantityCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_60 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="55-55", cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="CashBuyingPowerModelTests.cs"];
m6_248 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="CashBuyingPowerModelTests.cs"];
m6_83 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", span="164-164", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_84 [label="_portfolio.SetCash(5000)", span="166-166", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_85 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="168-168", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_86 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="169-169", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_87 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="171-171", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_88 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="172-172", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_89 [label="_algorithm.SetFinishedWarmingUp()", span="173-173", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_90 [label="SubmitLimitOrder(_btcusd.Symbol, 0.1m, 15000m)", span="176-176", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_91 [label="SubmitLimitOrder(_ethusd.Symbol, 3m, 1000m)", span="179-179", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_92 [label="var order = new LimitOrder(_btcusd.Symbol, 0.05m, 10000m, DateTime.UtcNow)", span="182-182", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_93 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="183-183", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_94 [label="order = new LimitOrder(_btcusd.Symbol, 0.06m, 10000m, DateTime.UtcNow)", span="186-186", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_95 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="187-187", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_96 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", span="164-164", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_208 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="112-112", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="CashBuyingPowerModelTests.cs"];
m6_102 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", span="191-191", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_103 [label="_portfolio.SetCash(5000)", span="193-193", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_104 [label="_portfolio.CashBook[''BTC''].SetAmount(1m)", span="194-194", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_105 [label="_portfolio.CashBook[''ETH''].SetAmount(3m)", span="195-195", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_106 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="197-197", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_107 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="198-198", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_108 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="200-200", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_109 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="201-201", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_110 [label="_ethbtc = _algorithm.AddCrypto(''ETHBTC'')", span="203-203", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_111 [label="_ethbtc.SetMarketPrice(new Tick { Value = 0.1m })", span="204-204", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_112 [label="_algorithm.SetFinishedWarmingUp()", span="205-205", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_113 [label="SubmitLimitOrder(_btcusd.Symbol, -0.1m, 15000m)", span="208-208", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_114 [label="SubmitLimitOrder(_ethusd.Symbol, -1m, 1000m)", span="211-211", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_115 [label="SubmitLimitOrder(_ethbtc.Symbol, 1m, 0.1m)", span="214-214", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_116 [label="SubmitStopMarketOrder(_btcusd.Symbol, -0.1m, 5000m)", span="217-217", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_117 [label="var order = new LimitOrder(_btcusd.Symbol, -0.7m, 10000m, DateTime.UtcNow)", span="220-220", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_118 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="221-221", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_119 [label="order = new LimitOrder(_btcusd.Symbol, -0.8m, 10000m, DateTime.UtcNow)", span="224-224", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_120 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="225-225", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_121 [label="order = new LimitOrder(_ethusd.Symbol, -2m, 1200m, DateTime.UtcNow)", span="228-228", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_122 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _ethusd, order))", span="229-229", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_123 [label="order = new LimitOrder(_ethusd.Symbol, -2.1m, 2000m, DateTime.UtcNow)", span="232-232", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_124 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _ethusd, order))", span="233-233", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_125 [label="var stopOrder = new StopMarketOrder(_btcusd.Symbol, -0.7m, 5000m, DateTime.UtcNow)", span="236-236", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_126 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, stopOrder))", span="237-237", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_127 [label="stopOrder = new StopMarketOrder(_btcusd.Symbol, -0.8m, 5000m, DateTime.UtcNow)", span="240-240", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_128 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, stopOrder))", span="241-241", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_129 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", span="191-191", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_249 [label="Entry lambda expression", span="443-443", cluster="lambda expression", file="CashBuyingPowerModelTests.cs"];
m6_238 [label="resetEvent.Set()", span="427-427", cluster="lambda expression", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_237 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="CashBuyingPowerModelTests.cs"];
m6_239 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="CashBuyingPowerModelTests.cs"];
m6_250 [label="resetEvent.Set()", span="443-443", cluster="lambda expression", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_251 [label="Exit lambda expression", span="443-443", cluster="lambda expression", file="CashBuyingPowerModelTests.cs"];
m6_63 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CashBuyingPowerModelTests.cs"];
m6_31 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="CashBuyingPowerModelTests.cs"];
m6_235 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="CashBuyingPowerModelTests.cs"];
m6_234 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="CashBuyingPowerModelTests.cs"];
m6_73 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="485-485", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_37 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="608-608", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="CashBuyingPowerModelTests.cs"];
m6_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="CashBuyingPowerModelTests.cs"];
m6_62 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CashBuyingPowerModelTests.cs"];
m6_12 [label="var tz = TimeZones.NewYork", span="63-63", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_13 [label="_btcusd = new Crypto(\r\n                SecurityExchangeHours.AlwaysOpen(tz),\r\n                _portfolio.CashBook[CashBook.AccountCurrency],\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.BTCUSD, Resolution.Minute, tz, tz, true, false, false),\r\n                new SymbolProperties(''BTCUSD'', ''USD'', 1, 0.01m, 0.00000001m))", span="64-68", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_14 [label="_ethusd = new Crypto(\r\n                SecurityExchangeHours.AlwaysOpen(tz),\r\n                _portfolio.CashBook[CashBook.AccountCurrency],\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.ETHUSD, Resolution.Minute, tz, tz, true, false, false),\r\n                new SymbolProperties(''ETHUSD'', ''USD'', 1, 0.01m, 0.00000001m))", span="70-74", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_15 [label="_btceur = new Crypto(\r\n                SecurityExchangeHours.AlwaysOpen(tz),\r\n                _portfolio.CashBook[''EUR''],\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.BTCEUR, Resolution.Minute, tz, tz, true, false, false),\r\n                new SymbolProperties(''BTCEUR'', ''EUR'', 1, 0.01m, 0.00000001m))", span="76-80", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_16 [label="_ethbtc = new Crypto(\r\n                SecurityExchangeHours.AlwaysOpen(tz),\r\n                _portfolio.CashBook[''BTC''],\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.ETHBTC, Resolution.Minute, tz, tz, true, false, false),\r\n                new SymbolProperties(''ETHBTC'', ''BTC'', 1, 0.00001m, 0.00000001m))", span="82-86", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_17 [label="_buyingPowerModel = new CashBuyingPowerModel()", span="88-88", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_18 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", span="46-46", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.Initialize()", file="CashBuyingPowerModelTests.cs"];
m6_97 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1613-1613", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_25 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="CashBuyingPowerModelTests.cs"];
m6_24 [label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51", cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="CashBuyingPowerModelTests.cs"];
m6_143 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="117-117", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_50 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", span="113-113", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_51 [label="_portfolio.SetCash(20000)", span="115-115", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_52 [label="var order = new LimitOrder(_btcusd.Symbol, 2m, 10000m, DateTime.UtcNow)", span="118-118", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_53 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="119-119", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_54 [label="order = new LimitOrder(_btcusd.Symbol, 2.1m, 10000m, DateTime.UtcNow)", span="122-122", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_55 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="123-123", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_56 [label="order = new LimitOrder(_btcusd.Symbol, 2m, 11000m, DateTime.UtcNow)", span="126-126", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_57 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="127-127", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_58 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", span="113-113", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithUsdRequiresUsdInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_26 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="CashBuyingPowerModelTests.cs"];
m6_27 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="CashBuyingPowerModelTests.cs"];
m6_64 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", span="131-131", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_65 [label="_portfolio.SetCash(''EUR'', 20000m, 1.20m)", span="133-133", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_66 [label="var order = new LimitOrder(_btceur.Symbol, 2m, 10000m, DateTime.UtcNow)", span="136-136", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_67 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="137-137", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_68 [label="order = new LimitOrder(_btceur.Symbol, 2.1m, 10000m, DateTime.UtcNow)", span="140-140", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_69 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="141-141", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_70 [label="order = new LimitOrder(_btceur.Symbol, 2m, 11000m, DateTime.UtcNow)", span="144-144", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_71 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="145-145", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_72 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", span="131-131", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyBtcWithEurRequiresEurInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_0 [label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_1 [label="_highLimit = highLimit", span="29-29", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_2 [label="_lowLimit = lowLimit", span="30-30", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_3 [label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_8 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="CashBuyingPowerModelTests.cs"];
m6_9 [label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", span="38-38", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="CashBuyingPowerModelTests.cs"];
m6_10 [label="return new LimitOrder(Symbol, Math.Abs(quantity), _lowLimit, DateTime.Now);", span="40-40", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="CashBuyingPowerModelTests.cs"];
m6_11 [label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", span="38-38", cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="CashBuyingPowerModelTests.cs"];
m6_49 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="45-45", cluster="QuantConnect.Securities.CashBuyingPowerModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_82 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="125-125", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="CashBuyingPowerModelTests.cs"];
m6_45 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", span="105-105", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="CashBuyingPowerModelTests.cs"];
m6_46 [label="_buyingPowerModel.SetLeverage(_btcusd, 50m)", span="108-108", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="CashBuyingPowerModelTests.cs"];
m6_47 [label="Assert.AreEqual(1m, _buyingPowerModel.GetLeverage(_btcusd))", span="109-109", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="CashBuyingPowerModelTests.cs"];
m6_48 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", span="105-105", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SetLeverageDoesNotUpdateLeverage()", file="CashBuyingPowerModelTests.cs"];
m6_23 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="CashBuyingPowerModelTests.cs"];
m6_30 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="CashBuyingPowerModelTests.cs"];
m6_43 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CashBuyingPowerModelTests.cs"];
m6_28 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="335-335", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="CashBuyingPowerModelTests.cs"];
m6_199 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", span="374-374", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_200 [label="_portfolio.SetCash(20000)", span="376-376", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_201 [label="_btcusd.FeeModel = new ConstantFeeModel(50)", span="377-377", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_202 [label="var order = new LimitOrder(_btcusd.Symbol, 2m, 10000m, DateTime.UtcNow)", span="380-380", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_203 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="381-381", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_204 [label="_portfolio.CashBook[''USD''].AddAmount(50)", span="384-384", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_205 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="387-387", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_206 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", span="374-374", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitBuyOrderIncludesFees()", file="CashBuyingPowerModelTests.cs"];
m6_142 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="CashBuyingPowerModelTests.cs"];
m6_42 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="CashBuyingPowerModelTests.cs"];
m6_207 [label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31", cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="CashBuyingPowerModelTests.cs"];
m6_61 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Securities.CashBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBuyingPowerModelTests.cs"];
m6_22 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="CashBuyingPowerModelTests.cs"];
m6_29 [label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37", cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="CashBuyingPowerModelTests.cs"];
m6_132 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_133 [label="_portfolio.SetCash(20000)", span="247-247", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_134 [label="_btcusd.SetMarketPrice(new Tick { Value = 10000m })", span="249-249", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_135 [label="var order = new MarketOrder(_btcusd.Symbol, 2m, DateTime.UtcNow)", span="252-252", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_136 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="253-253", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_137 [label="Assert.AreEqual(1.995m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 20000))", span="256-256", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_138 [label="_btcusd.SetMarketPrice(new Tick { Value = 9900m })", span="258-258", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_139 [label="order = new MarketOrder(_btcusd.Symbol, 2m, DateTime.UtcNow)", span="261-261", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_140 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="262-262", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_141 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", span="245-245", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithUsdRequiresUsdInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_101 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", span="423-423", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_227 [label="var resetEvent = new ManualResetEvent(false)", span="425-425", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_228 [label="EventHandler<OrderEvent> handler = (s, e) => { resetEvent.Set(); }", span="427-427", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_231 [label="resetEvent.WaitOne()", span="433-433", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_230 [label="_algorithm.LimitOrder(symbol, quantity, limitPrice)", span="431-431", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_229 [label="_brokerage.OrderStatusChanged += handler", span="429-429", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_232 [label="_brokerage.OrderStatusChanged -= handler", span="435-435", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", color=green, community=0, file="CashBuyingPowerModelTests.cs"];
m6_233 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", span="423-423", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.SubmitLimitOrder(QuantConnect.Symbol, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="CashBuyingPowerModelTests.cs"];
m6_38 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", span="98-98", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_39 [label="Assert.AreEqual(1m, _buyingPowerModel.GetLeverage(_btcusd))", span="100-100", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_40 [label="Assert.AreEqual(0m, _buyingPowerModel.GetReservedBuyingPowerForPosition(_btcusd))", span="101-101", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_41 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", span="98-98", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.InitializesCorrectly()", file="CashBuyingPowerModelTests.cs"];
m6_236 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="CashBuyingPowerModelTests.cs"];
m6_59 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="474-474", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="CashBuyingPowerModelTests.cs"];
m6_144 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", span="266-266", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_145 [label="_portfolio.SetCash(''EUR'', 20000m, 1.20m)", span="268-268", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_146 [label="_btceur.SetMarketPrice(new Tick { Value = 10000m })", span="270-270", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_147 [label="var order = new MarketOrder(_btceur.Symbol, 2m, DateTime.UtcNow)", span="273-273", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_148 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="274-274", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_149 [label="var targetValue = 20000m * _portfolio.CashBook[''EUR''].ConversionRate", span="277-277", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_150 [label="Assert.AreEqual(1.995m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btceur, targetValue))", span="278-278", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_151 [label="_btceur.SetMarketPrice(new Tick { Value = 9900m })", span="280-280", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_152 [label="order = new MarketOrder(_btceur.Symbol, 2m, DateTime.UtcNow)", span="283-283", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_153 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btceur, order))", span="284-284", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_154 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", span="266-266", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyBtcWithEurRequiresEurInPortfolioPlusFees()", file="CashBuyingPowerModelTests.cs"];
m6_32 [label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70", cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="CashBuyingPowerModelTests.cs"];
m6_165 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", span="308-308", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_166 [label="_portfolio.SetCash(5000)", span="310-310", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_167 [label="_btcusd = _algorithm.AddCrypto(''BTCUSD'')", span="312-312", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_168 [label="_btcusd.SetMarketPrice(new Tick { Value = 15000m })", span="313-313", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_169 [label="_ethusd = _algorithm.AddCrypto(''ETHUSD'')", span="315-315", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_170 [label="_ethusd.SetMarketPrice(new Tick { Value = 1000m })", span="316-316", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_171 [label="_algorithm.SetFinishedWarmingUp()", span="317-317", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_172 [label="SubmitLimitOrder(_btcusd.Symbol, 0.1m, 15000m)", span="320-320", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_173 [label="SubmitLimitOrder(_ethusd.Symbol, 3m, 1000m)", span="323-323", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_174 [label="Assert.AreEqual(0.03325m, _buyingPowerModel.GetMaximumOrderQuantityForTargetValue(_portfolio, _btcusd, 500))", span="326-326", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_175 [label="var order = new MarketOrder(_btcusd.Symbol, 0.03m, DateTime.UtcNow)", span="329-329", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_176 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="330-330", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_177 [label="order = new MarketOrder(_btcusd.Symbol, 0.04m, DateTime.UtcNow)", span="333-333", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_178 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="334-334", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_179 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", span="308-308", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.MarketBuyOrderChecksOpenOrders()", file="CashBuyingPowerModelTests.cs"];
m6_74 [label="Entry QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_75 [label="_portfolio.SetCash(0)", span="151-151", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_76 [label="_portfolio.CashBook[''BTC''].SetAmount(0.5m)", span="152-152", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_77 [label="var order = new LimitOrder(_btcusd.Symbol, -0.5m, 10000m, DateTime.UtcNow)", span="155-155", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_78 [label="Assert.IsTrue(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="156-156", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_79 [label="order = new LimitOrder(_btcusd.Symbol, -0.6m, 10000m, DateTime.UtcNow)", span="159-159", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_80 [label="Assert.IsFalse(_buyingPowerModel.HasSufficientBuyingPowerForOrder(_portfolio, _btcusd, order))", span="160-160", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_81 [label="Exit QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests.LimitSellOrderRequiresBaseCurrencyInPortfolio()", file="CashBuyingPowerModelTests.cs"];
m6_98 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="CashBuyingPowerModelTests.cs"];
m6_240 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="CashBuyingPowerModelTests.cs"];
m6_252 [label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests", span="", file="CashBuyingPowerModelTests.cs"];
m6_253 [label=resetEvent, span="", file="CashBuyingPowerModelTests.cs"];
m6_254 [label=resetEvent, span="", file="CashBuyingPowerModelTests.cs"];
m8_54 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_64 [label="Entry Unk.setFXCMStartTime", span="", cluster="Unk.setFXCMStartTime", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_57 [label="Entry Unk.setResponseFormat", span="", cluster="Unk.setResponseFormat", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_58 [label="Entry Unk.setFXCMTimingInterval", span="", cluster="Unk.setFXCMTimingInterval", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_71 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_66 [label="Entry Unk.setFXCMEndTime", span="", cluster="Unk.setFXCMEndTime", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_78 [label="Entry System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_80 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_59 [label="Entry Unk.setMDEntryTypeSet", span="", cluster="Unk.setMDEntryTypeSet", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_81 [label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="174-174", cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_77 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_61 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", span="238-238", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_55 [label="Entry MarketDataRequest.cstr", span="", cluster="MarketDataRequest.cstr", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_60 [label="Entry UTCDate.cstr", span="", cluster="UTCDate.cstr", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_50 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", span="202-202", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_56 [label="Entry Unk.setSubscriptionRequestType", span="", cluster="Unk.setSubscriptionRequestType", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_65 [label="Entry Unk.setFXCMEndDate", span="", cluster="Unk.setFXCMEndDate", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_74 [label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123", cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_53 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_63 [label="Entry UTCTimeOnly.cstr", span="", cluster="UTCTimeOnly.cstr", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_3 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", span="98-98", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_0 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataFileProvider, System.Action<int>)", span="67-67", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataFileProvider, System.Action<int>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_1 [label="Connect()", span="69-69", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataFileProvider, System.Action<int>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_2 [label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataFileProvider, System.Action<int>)", span="67-67", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataFileProvider, System.Action<int>)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_68 [label="Entry Unk.addRelatedSymbol", span="", cluster="Unk.addRelatedSymbol", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_73 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_79 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="558-558", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_70 [label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0", cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_18 [label="mdr.setMDEntryTypeSet(MarketDataRequest.MDENTRYTYPESET_ALL)", span="100-100", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_4 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="78-78", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_5 [label=requests, span="80-80", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_48 [label="yield return new Slice(data.EndTime, new[] { data });", span="178-178", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_6 [label="var interval = ToFxcmInterval(request.Resolution)", span="82-82", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_9 [label="var end = request.EndTimeUtc", span="88-88", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_11 [label="end > request.StartTimeUtc", span="91-91", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_12 [label="Log.Debug(string.Format(''FxcmBrokerage.HistoryProvider.GetHistory(): Requesting {0:O} to {1:O}'', end, request.StartTimeUtc))", span="93-93", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_19 [label="mdr.setFXCMStartDate(new UTCDate(ToJavaDateUtc(request.StartTimeUtc)))", span="102-102", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_20 [label="mdr.setFXCMStartTime(new UTCTimeOnly(ToJavaDateUtc(request.StartTimeUtc)))", span="103-103", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_23 [label="mdr.addRelatedSymbol(_fxcmInstruments[_symbolMapper.GetBrokerageSymbol(request.Symbol)])", span="106-106", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_31 [label="request.StartTimeUtc.AddSeconds(300) >= end", span="122-122", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_33 [label="Log.Trace(''FxcmBrokerage.GetHistory(): Request for {0} ended at {1:O}'', request.Symbol.Value, end)", span="130-130", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_37 [label="Log.Trace(''FxcmBrokerage.GetHistory(): Maximum attempts reached for: '' + request.Symbol.Value)", span="143-143", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_39 [label="Log.Trace(''FxcmBrokerage.GetHistory(): Attempt '' + attempt + '' for: '' + request.Symbol.Value + '' ended at '' + lastEndTime.ToString(''O''))", span="149-149", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_44 [label="end = request.Resolution == Resolution.Tick ? firstDateUtc.AddMilliseconds(-1) : firstDateUtc.AddSeconds(-1)", span="163-163", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_45 [label="request.StartTimeUtc.AddSeconds(10) >= end", span="165-165", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_7 [label="var history = new List<BaseData>()", span="85-85", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_17 [label="mdr.setFXCMTimingInterval(interval)", span="99-99", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_8 [label="var lastEndTime = DateTime.MinValue", span="86-86", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_41 [label="history.InsertRange(0, _lastHistoryChunk)", span="156-156", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_46 [label="DataPointCount += history.Count", span="174-174", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_47 [label=history, span="176-176", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_32 [label="end == lastEndTime", span="128-128", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_34 [label="EnableOnlyHistoryRequests && lastEndTime != DateTime.MinValue", span="135-135", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_10 [label="var attempt = 1", span="90-90", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_21 [label="mdr.setFXCMEndDate(new UTCDate(ToJavaDateUtc(end)))", span="104-104", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_22 [label="mdr.setFXCMEndTime(new UTCTimeOnly(ToJavaDateUtc(end)))", span="105-105", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_35 [label="throw new TimeoutException(string.Format(''FxcmBrokerage.GetHistory(): History operation ending in {0:O} took longer than {1} seconds. This may be because there is no data, retrying...'', end, (decimal)HistoryResponseTimeout / 1000));", span="137-137", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_38 [label="lastEndTime = end", span="148-148", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_43 [label="end != firstDateUtc", span="160-160", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_36 [label="++attempt > MaximumHistoryRetryAttempts", span="141-141", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_13 [label="_lastHistoryChunk.Clear()", span="94-94", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_14 [label="var mdr = new MarketDataRequest()", span="96-96", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_15 [label="mdr.setSubscriptionRequestType(SubscriptionRequestTypeFactory.SNAPSHOT)", span="97-97", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_16 [label="mdr.setResponseFormat(IFixMsgTypeDefs.__Fields.MSGTYPE_FXCMRESPONSE)", span="98-98", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_26 [label="_currentRequest = _gateway.sendMessage(mdr)", span="111-111", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_24 [label="AutoResetEvent autoResetEvent", span="108-108", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_25 [label=_locker, span="109-109", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_27 [label="autoResetEvent = new AutoResetEvent(false)", span="112-112", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_28 [label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="113-113", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_30 [label="!autoResetEvent.WaitOne(HistoryResponseTimeout)", span="117-117", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_29 [label="_pendingHistoryRequests.Add(_currentRequest)", span="114-114", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_40 [label=_locker, span="154-154", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_42 [label="var firstDateUtc = _lastHistoryChunk[0].Time.ConvertToUtc(_configTimeZone)", span="159-159", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_49 [label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="78-78", cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_67 [label="Entry QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="152-152", cluster="QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_52 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_76 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_72 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_75 [label="Entry System.TimeoutException.TimeoutException(string)", span="0-0", cluster="System.TimeoutException.TimeoutException(string)", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_62 [label="Entry Unk.setFXCMStartDate", span="", cluster="Unk.setFXCMStartDate", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_69 [label="Entry Unk.sendMessage", span="", cluster="Unk.sendMessage", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m8_82 [label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", span="", file="FineFundamentalSubscriptionEnumeratorFactoryTests.cs"];
m10_75 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="183-183", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs"];
m10_76 [label="ScheduledEvent scheduledEvent", span="185-185", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs"];
m10_77 [label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="186-186", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs"];
m10_78 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="183-183", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs"];
m10_28 [label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="111-111", cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EverySecurityEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Securities.Security, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LiveTradingRealTimeHandler.cs"];
m10_87 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="LiveTradingRealTimeHandler.cs"];
m10_30 [label="Entry lambda expression", span="70-74", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m10_31 [label="RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date)", span="73-73", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m10_32 [label="Exit lambda expression", span="70-74", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m10_82 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="203-203", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_83 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="203-203", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_84 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="212-212", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs"];
m10_85 [label="_cancellationTokenSource.Cancel()", span="214-214", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs"];
m10_86 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="212-212", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs"];
m10_52 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="LiveTradingRealTimeHandler.cs"];
m10_57 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="LiveTradingRealTimeHandler.cs"];
m10_51 [label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="568-568", cluster="System.DateTime.RoundUp(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs"];
m10_20 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="148-148", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_59 [label="date = date.Date", span="150-150", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_60 [label="_algorithm.Securities", span="153-153", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_62 [label="var marketHours = _api.MarketToday(date, security.Symbol)", span="157-157", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_63 [label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="158-158", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_64 [label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="159-159", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_61 [label="var security = kvp.Value", span="155-155", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_65 [label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="160-161", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_66 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="148-148", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_67 [label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288", cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="LiveTradingRealTimeHandler.cs"];
m10_54 [label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="128-128", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_79 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="LiveTradingRealTimeHandler.cs"];
m10_33 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="104-104", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_34 [label="IsActive = true", span="106-106", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_35 [label="!_cancellationTokenSource.IsCancellationRequested", span="109-109", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_36 [label="var time = DateTime.UtcNow", span="112-112", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_47 [label="IsActive = false", span="141-141", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_37 [label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="115-115", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_38 [label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="116-116", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_41 [label="scheduledEvent.Value.Scan(time)", span="124-124", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_39 [label="Thread.Sleep(delay < 0 ? 1 : delay)", span="117-117", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_40 [label=_scheduledEvents, span="120-120", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_42 [label=ScheduledEventException, span="126-126", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_43 [label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="128-128", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="LiveTradingRealTimeHandler.cs"];
m10_44 [label="Log.Error(errorMessage)", span="130-130", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="LiveTradingRealTimeHandler.cs"];
m10_45 [label="_resultHandler.RuntimeError(errorMessage)", span="132-132", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_46 [label="_algorithm.RunTimeError = new Exception(errorMessage)", span="136-136", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_48 [label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="142-142", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_49 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="104-104", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs"];
m10_68 [label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126", cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="LiveTradingRealTimeHandler.cs"];
m10_18 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="LiveTradingRealTimeHandler.cs"];
m10_29 [label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="185-185", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_53 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="LiveTradingRealTimeHandler.cs"];
m10_74 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="135-135", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="LiveTradingRealTimeHandler.cs"];
m10_23 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="617-617", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs"];
m10_27 [label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30", cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="LiveTradingRealTimeHandler.cs"];
m10_22 [label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="270-270", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_80 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="193-193", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_81 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="193-193", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m10_24 [label="Entry ScheduledEvent.cstr", span="", cluster="ScheduledEvent.cstr", file="LiveTradingRealTimeHandler.cs"];
m10_0 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="52-52", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_1 [label="_api = api", span="55-55", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_2 [label="_algorithm = algorithm", span="56-56", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_3 [label="_resultHandler = resultHandler", span="57-57", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_15 [label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="94-94", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_4 [label="_cancellationTokenSource = new CancellationTokenSource()", span="58-58", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_5 [label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="60-60", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_6 [label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="63-63", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_7 [label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="66-68", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_9 [label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.AlgorithmEndOfDayDelta, DateTime.UtcNow))", span="77-77", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_13 [label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", span="87-87", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_8 [label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", span="70-74", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_10 [label="_algorithm.Securities", span="80-80", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_11 [label="var security = kvp.Value", span="82-82", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_14 [label=_scheduledEvents, span="91-91", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_12 [label="!security.IsInternalFeed()", span="84-84", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_16 [label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="96-96", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_17 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="52-52", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs"];
m10_69 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="LiveTradingRealTimeHandler.cs"];
m10_25 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="169-169", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs"];
m10_70 [label="_algorithm != null", span="171-171", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs"];
m10_71 [label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="173-173", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs"];
m10_72 [label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="176-176", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs"];
m10_73 [label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="169-169", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs"];
m10_58 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LiveTradingRealTimeHandler.cs"];
m10_21 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="LiveTradingRealTimeHandler.cs"];
m10_26 [label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64", cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LiveTradingRealTimeHandler.cs"];
m10_50 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="LiveTradingRealTimeHandler.cs"];
m10_56 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="135-135", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="LiveTradingRealTimeHandler.cs"];
m10_19 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="605-605", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs"];
m10_88 [label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span="", file="LiveTradingRealTimeHandler.cs"];
m12_18 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="QCAlgorithm.cs"];
m12_176 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="QCAlgorithm.cs"];
m12_112 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="522-522", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_239 [label="Order queued", span="524-524", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_240 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="525-525", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_241 [label="_orders[order.Id] = order", span="527-527", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_243 [label="orderCanceled = _brokerage.CancelOrder(order)", span="532-532", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_248 [label="order.Status = OrderStatus.Invalid", span="543-543", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_249 [label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="548-548", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_242 [label="bool orderCanceled", span="529-529", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_244 [label=Exception, span="534-534", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_247 [label="!orderCanceled", span="540-540", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_245 [label="Log.Error(err)", span="536-536", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_246 [label="orderCanceled = false", span="537-537", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_250 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="522-522", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_32 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.Order)", span="142-142", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_33 [label="_orderQueue.Enqueue(order)", span="144-144", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_34 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.Order)", span="142-142", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_69 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="QCAlgorithm.cs"];
m12_182 [label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0", cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="QCAlgorithm.cs"];
m12_216 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="293-293", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_141 [label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait()", file="QCAlgorithm.cs"];
m12_235 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="510-510", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_237 [label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="512-515", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_238 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="510-510", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_236 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="89-89", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_105 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="QCAlgorithm.cs"];
m12_270 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="253-253", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_266 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="262-262", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_143 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="336-336", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_153 [label="!Monitor.TryEnter(_performCashSyncReentranceGuard)", span="341-341", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_154 [label="return;", span="343-343", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_155 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="346-346", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_156 [label="var balances = new List<Cash>()", span="348-348", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_157 [label="balances = _brokerage.GetCashBalance()", span="351-351", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_158 [label=Exception, span="353-353", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_160 [label="balances.Count == 0", span="358-358", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_162 [label=balances, span="364-364", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_159 [label="Log.Error(err)", span="355-355", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_161 [label="return;", span="360-360", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_163 [label="Cash cash", span="366-366", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_169 [label="_syncedLiveBrokerageCashToday = true", span="381-381", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_164 [label="_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="367-367", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_165 [label="var delta = cash.Quantity - balance.Quantity", span="370-370", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_167 [label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balance.Symbol,\r\n                                delta.ToString(''0.00''))", span="374-375", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_168 [label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Quantity, balance.ConversionRate)", span="378-378", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_166 [label="Math.Abs(delta) > _algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)", span="371-371", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_170 [label="Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.Now.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="390-405", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_171 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="336-336", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="QCAlgorithm.cs"];
m12_173 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.cs"];
m12_175 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="221-221", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.cs"];
m12_181 [label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="QCAlgorithm.cs"];
m12_43 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="QCAlgorithm.cs"];
m12_31 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="599-599", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithm.cs"];
m12_271 [label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Quantity - account.CashBalance", span="602-602", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithm.cs"];
m12_273 [label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="605-605", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithm.cs"];
m12_272 [label="delta != 0", span="603-603", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithm.cs"];
m12_274 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="599-599", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="QCAlgorithm.cs"];
m12_183 [label="Entry lambda expression", span="390-405", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_21 [label="HandleOrderEvent(fill)", span="100-100", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_25 [label="HandleSecurityHoldingUpdated(holding)", span="105-105", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_29 [label="HandleAccountChanged(account)", span="110-110", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_20 [label="Entry lambda expression", span="98-101", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_22 [label="Exit lambda expression", span="98-101", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_24 [label="Entry lambda expression", span="103-106", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_26 [label="Exit lambda expression", span="103-106", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_28 [label="Entry lambda expression", span="108-111", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_30 [label="Exit lambda expression", span="108-111", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_45 [label="x.Id == orderId", span="155-155", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_44 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_46 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_54 [label="x.BrokerId.Contains(brokerageId)", span="173-173", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_58 [label="x.Value.BrokerId.Contains(brokerageId)", span="178-178", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_53 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_57 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_55 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_59 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_73 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_70 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_71 [label="x.Value", span="199-199", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_72 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_74 [label="x.Value", span="201-201", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_75 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_147 [label="Entry lambda expression", span="324-324", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_151 [label="x.Key <= lowestOrderIdToKeep", span="326-326", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_150 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_148 [label="x.Key", span="324-324", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_149 [label="Exit lambda expression", span="324-324", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_152 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_184 [label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="393-393", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_185 [label="_syncedLiveBrokerageCashToday = false", span="397-397", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_187 [label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="402-402", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_186 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="398-398", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_188 [label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="403-403", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_189 [label="Exit lambda expression", span="390-405", cluster="lambda expression", file="QCAlgorithm.cs"];
m12_145 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="QCAlgorithm.cs"];
m12_108 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.cs"];
m12_106 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="QCAlgorithm.cs"];
m12_76 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="207-207", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_77 [label="!_exitTriggered", span="209-209", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_78 [label="_processingCompletedEvent.Reset()", span="211-211", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_101 [label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="264-264", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_79 [label="Order order", span="213-213", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_80 [label="!_orderQueue.TryDequeue(out order)", span="214-214", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_81 [label="_processingCompletedEvent.Set()", span="216-216", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_83 [label="order.Direction == OrderDirection.Hold", span="224-224", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_84 [label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="226-226", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_85 [label="!_orders.TryAdd(order.Id, order)", span="229-229", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_86 [label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="231-231", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_87 [label="order.Status", span="237-237", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_89 [label="HandleNewOrder(order)", span="240-240", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_91 [label="HandleUpdatedOrder(order)", span="244-244", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_93 [label="HandleCancelledOrder(order)", span="248-248", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_99 [label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="257-257", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_82 [label="Thread.Sleep(1)", span="219-219", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_88 [label="OrderStatus.New", span="239-239", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_90 [label="OrderStatus.Update", span="243-243", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_92 [label="OrderStatus.Canceled", span="247-247", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_94 [label="OrderStatus.None", span="252-252", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_95 [label="OrderStatus.Invalid", span="253-253", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_96 [label="OrderStatus.PartiallyFilled", span="254-254", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_97 [label="OrderStatus.Filled", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_98 [label="OrderStatus.Submitted", span="256-256", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_100 [label="ProcessAsynchronousEvents()", span="261-261", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_102 [label="IsActive = false", span="265-265", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_103 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="207-207", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="QCAlgorithm.cs"];
m12_180 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="433-433", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m12_190 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="411-411", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="QCAlgorithm.cs"];
m12_191 [label="_exitTriggered = true", span="413-413", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="QCAlgorithm.cs"];
m12_192 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="411-411", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="QCAlgorithm.cs"];
m12_16 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.cs"];
m12_109 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="QCAlgorithm.cs"];
m12_111 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="475-475", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_222 [label="Order queued", span="477-477", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_223 [label="_orders.TryGetValue(order.Id, out queued) && CanUpdateOrder(queued)", span="478-478", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_224 [label="_orders[order.Id] = order", span="480-480", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_226 [label="orderUpdated = _brokerage.UpdateOrder(order)", span="485-485", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_231 [label="order.Status = OrderStatus.Invalid", span="496-496", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_232 [label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="501-501", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_225 [label="bool orderUpdated", span="482-482", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_227 [label=Exception, span="487-487", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_230 [label="!orderUpdated", span="493-493", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_228 [label="Log.Error(err)", span="489-489", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_229 [label="orderUpdated = false", span="490-490", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_233 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="475-475", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_116 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="279-279", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_117 [label="!_algorithm.LiveMode", span="284-284", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_118 [label="var spinWait = new SpinWait()", span="286-286", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_123 [label="_syncedLiveBrokerageCashToday && DateTime.Now.Date != LastSyncDate", span="298-298", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_119 [label="!_orderQueue.IsEmpty", span="287-287", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_120 [label="spinWait.SpinOnce()", span="290-290", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_121 [label="_processingCompletedEvent.Wait()", span="293-293", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_122 [label="return;", span="294-294", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_124 [label="_syncedLiveBrokerageCashToday = false", span="300-300", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_125 [label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && DateTime.Now.TimeOfDay >= _liveBrokerageCashSyncTime", span="304-304", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_126 [label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="309-309", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_130 [label="int maxOrdersToKeep = 10000", span="321-321", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_127 [label="PerformCashSync()", span="311-311", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_128 [label=Exception, span="314-314", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_129 [label="Log.Error(err, ''Updating cash balances'')", span="316-316", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_131 [label="_orders.Count < maxOrdersToKeep + 1", span="322-322", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_134 [label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="325-325", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_132 [label="return;", span="322-322", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_133 [label="int max = _orders.Max(x => x.Key)", span="324-324", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_135 [label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="326-326", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_136 [label="Order value", span="328-328", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_137 [label="_orders.TryRemove(item.Key, out value)", span="329-329", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_138 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="279-279", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m12_146 [label="Entry Unk.TryRemove", span="", cluster="Unk.TryRemove", file="QCAlgorithm.cs"];
m12_220 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.cs"];
m12_47 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", span="170-170", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_48 [label="var order = _orderQueue.FirstOrDefault(x => x.BrokerId.Contains(brokerageId))", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_50 [label="order = _orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value", span="178-178", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_49 [label="order == null", span="174-174", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_51 [label="return order;", span="180-180", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_52 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", span="170-170", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(int)", file="QCAlgorithm.cs"];
m12_218 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="220-220", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="QCAlgorithm.cs"];
m12_221 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="82-82", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_234 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs"];
m12_104 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="QCAlgorithm.cs"];
m12_110 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="420-420", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_193 [label="_orders.TryAdd(order.Id, order)", span="422-422", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_194 [label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="425-425", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_195 [label="order.Status = OrderStatus.Invalid", span="427-427", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_196 [label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="428-428", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_199 [label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanSubmitOrder(_algorithm.Securities[order.Symbol], order, out message)", span="434-434", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_200 [label="order.Status = OrderStatus.Invalid", span="437-437", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_202 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="438-438", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_206 [label="orderPlaced = _brokerage.PlaceOrder(order)", span="447-447", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_211 [label="order.Status = OrderStatus.Submitted", span="457-457", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_212 [label="order.Status = OrderStatus.Invalid", span="461-461", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_213 [label="_algorithm.Error(''Brokerage failed to place order: '' + order.Id)", span="462-462", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_214 [label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="467-467", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_198 [label="BrokerageMessageEvent message", span="433-433", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_197 [label="return;", span="429-429", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_205 [label="bool orderPlaced", span="444-444", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_201 [label="message == null", span="438-438", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_203 [label="_algorithm.Error(''OrderID: '' + message)", span="439-439", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_204 [label="return;", span="440-440", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_207 [label=Exception, span="449-449", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_210 [label=orderPlaced, span="455-455", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_208 [label="Log.Error(err)", span="451-451", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_209 [label="orderPlaced = false", span="452-452", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_215 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="420-420", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_113 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="271-271", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="QCAlgorithm.cs"];
m12_115 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="271-271", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="QCAlgorithm.cs"];
m12_267 [label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0", cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="QCAlgorithm.cs"];
m12_17 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="QCAlgorithm.cs"];
m12_56 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="QCAlgorithm.cs"];
m12_42 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="QCAlgorithm.cs"];
m12_60 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="188-188", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_61 [label="_orders == null", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_63 [label="filter != null", span="197-197", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_64 [label="return _orders.Select(x => x.Value).Where(filter);", span="199-199", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_62 [label="return Enumerable.Empty<Order>();", span="194-194", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_65 [label="return _orders.Select(x => x.Value);", span="201-201", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_66 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="188-188", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m12_268 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="455-455", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_19 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="QCAlgorithm.cs"];
m12_36 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="152-152", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_37 [label="var order = _orderQueue.FirstOrDefault(x => x.Id == orderId)", span="155-155", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_39 [label="_orders.TryGetValue(orderId, out order)", span="160-160", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_38 [label="order == null", span="156-156", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_40 [label="return order;", span="162-162", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_41 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="152-152", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m12_107 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="QCAlgorithm.cs"];
m12_179 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62", cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="QCAlgorithm.cs"];
m12_67 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="QCAlgorithm.cs"];
m12_219 [label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="38-38", cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs"];
m12_172 [label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0", cluster="System.Threading.Monitor.TryEnter(object)", file="QCAlgorithm.cs"];
m12_269 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="218-218", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_177 [label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="114-114", cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="QCAlgorithm.cs"];
m12_139 [label="Entry System.Threading.SpinWait.SpinWait()", span="0-0", cluster="System.Threading.SpinWait.SpinWait()", file="QCAlgorithm.cs"];
m12_140 [label="Entry System.Threading.SpinWait.SpinOnce()", span="0-0", cluster="System.Threading.SpinWait.SpinOnce()", file="QCAlgorithm.cs"];
m12_142 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="QCAlgorithm.cs"];
m12_281 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="QCAlgorithm.cs"];
m12_35 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.cs"];
m12_217 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="QCAlgorithm.cs"];
m12_251 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="96-96", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.cs"];
m12_27 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="617-617", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_275 [label="var securityHolding = _algorithm.Portfolio[holding.Symbol]", span="620-620", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_276 [label="var deltaQuantity = securityHolding.Quantity - holding.Quantity", span="621-621", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_277 [label="var deltaAvgPrice = securityHolding.AveragePrice - holding.AveragePrice", span="622-622", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_279 [label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleSecurityHoldingUpdated(): {0} DeltaQuantity: {1} DeltaAvgPrice: {2}'', holding.Symbol, deltaQuantity, deltaAvgPrice))", span="625-625", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_278 [label="deltaQuantity != 0 || deltaAvgPrice != 0", span="623-623", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_280 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="617-617", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="QCAlgorithm.cs"];
m12_114 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QCAlgorithm.cs"];
m12_68 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="QCAlgorithm.cs"];
m12_23 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="552-552", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_252 [label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="555-555", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_254 [label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="558-558", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_256 [label="order.Status = fill.Status", span="563-563", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_257 [label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="571-571", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_259 [label="_algorithm.Portfolio.ProcessFill(fill)", span="574-574", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_260 [label="fill.Status != OrderStatus.None", span="578-578", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_261 [label="_resultHandler.OrderEvent(fill)", span="581-581", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_262 [label="_algorithm.OnOrderEvent(fill)", span="585-585", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_253 [label="order == null", span="556-556", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_255 [label="return;", span="559-559", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_258 [label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.Now.Ticks)", span="573-573", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_263 [label=Exception, span="587-587", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_264 [label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="589-589", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_265 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="552-552", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m12_0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="85-85", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_1 [label="brokerage == null", span="87-87", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_3 [label="_resultHandler = resultHandler", span="93-93", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_6 [label="_brokerage = brokerage", span="97-97", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_11 [label="_algorithm = algorithm", span="115-115", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_2 [label="throw new ArgumentNullException(''brokerage'');", span="89-89", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_4 [label="_syncedLiveBrokerageCashToday = true", span="94-94", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_5 [label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="95-95", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_7 [label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="98-101", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_8 [label="_brokerage.SecurityHoldingUpdated += (sender, holding) =>\r\n            {\r\n                HandleSecurityHoldingUpdated(holding);\r\n            }", span="103-106", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_9 [label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="108-111", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_10 [label="IsActive = true", span="113-113", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_12 [label="_orders = new ConcurrentDictionary<int, Order>()", span="118-118", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_13 [label="_orderQueue = new ConcurrentQueue<Order>()", span="119-119", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_14 [label="_processingCompletedEvent = new ManualResetEventSlim(true)", span="121-121", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_15 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="85-85", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m12_178 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="QCAlgorithm.cs"];
m12_174 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="QCAlgorithm.cs"];
m12_282 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span="", file="QCAlgorithm.cs"];
m12_283 [label=int, span="", file="QCAlgorithm.cs"];
m12_284 [label=int, span="", file="QCAlgorithm.cs"];
m12_285 [label=lowestOrderIdToKeep, span="", file="QCAlgorithm.cs"];
m14_33 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledEvent.cs"];
m14_34 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="ScheduledEvent.cs"];
m14_35 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="ScheduledEvent.cs"];
m14_36 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ScheduledEvent.cs"];
m14_37 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="ScheduledEvent.cs"];
m14_38 [label="Entry QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)", span="230-230", cluster="QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)", file="ScheduledEvent.cs"];
m14_39 [label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="185-185", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_40 [label="utcTime < _orderedEventUtcTimes.Current", span="188-188", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_41 [label="return;", span="188-188", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_42 [label="_orderedEventUtcTimes.MoveNext()", span="190-190", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_47 [label="return;", span="205-205", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_54 [label="Exit QuantConnect.Scheduling.ScheduledEvent.System.IDisposable.Dispose()", span="221-221", cluster="QuantConnect.Scheduling.ScheduledEvent.System.IDisposable.Dispose()", file="ScheduledEvent.cs"];
m14_55 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ScheduledEvent.cs"];
m14_56 [label="!Enabled", span="235-235", cluster="QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)", file="ScheduledEvent.cs"];
m14_57 [label="return;", span="235-235", cluster="QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)", file="ScheduledEvent.cs"];
m14_48 [label=IsLoggingEnabled, span="208-208", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_43 [label="utcTime <= _orderedEventUtcTimes.Current", span="193-193", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_44 [label="_needsMoveNext = false", span="196-196", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_45 [label=IsLoggingEnabled, span="198-198", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_46 [label="Log.Trace(string.Format(''ScheduledEvent.{0}: Skipped events before {1}. Next event: {2}'', Name,\r\n                            utcTime.ToString(DateFormat.UI),\r\n                            _orderedEventUtcTimes.Current.ToString(DateFormat.UI)\r\n                            ))", span="200-203", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_49 [label="Log.Trace(string.Format(''ScheduledEvent.{0}: Exhausted event stream during skip until {1}'', Name,\r\n                    utcTime.ToString(DateFormat.UI)\r\n                    ))", span="210-212", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_52 [label="Entry QuantConnect.Scheduling.ScheduledEvent.System.IDisposable.Dispose()", span="221-221", cluster="QuantConnect.Scheduling.ScheduledEvent.System.IDisposable.Dispose()", file="ScheduledEvent.cs"];
m14_50 [label="_endOfScheduledEvents = true", span="214-214", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_51 [label="Exit QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="185-185", cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="ScheduledEvent.cs"];
m14_53 [label="_orderedEventUtcTimes.Dispose()", span="223-223", cluster="QuantConnect.Scheduling.ScheduledEvent.System.IDisposable.Dispose()", file="ScheduledEvent.cs"];
m14_58 [label="_callback != null", span="237-237", cluster="QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)", file="ScheduledEvent.cs"];
m14_28 [label="OnEventFired(_orderedEventUtcTimes.Current)", span="166-166", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_22 [label="return;", span="147-147", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_12 [label="IAlgorithm algorithm", span="82-82", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_66 [label="Entry QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28", cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", color=green, community=0, file="ScheduledEvent.cs"];
m14_65 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="ScheduledEvent.cs"];
m14_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ScheduledEvent.cs"];
m14_62 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="ScheduledEvent.cs"];
m14_61 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="178-178", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="ScheduledEvent.cs"];
m14_59 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="335-335", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="ScheduledEvent.cs"];
m14_60 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="326-326", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="ScheduledEvent.cs"];
m14_63 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="ScheduledEvent.cs"];
m14_67 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="320-320", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="ScheduledEvent.cs"];
m14_13 [label="var algorithmName = Config.Get(''algorithm-type-name'')", span="83-83", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_70 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="ScheduledEvent.cs"];
m14_29 [label="_needsMoveNext = true", span="167-167", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_26 [label=IsLoggingEnabled, span="158-158", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_30 [label="_needsMoveNext = false", span="172-172", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_25 [label="utcTime >= _orderedEventUtcTimes.Current", span="156-156", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_27 [label="Log.Trace(string.Format(''ScheduledEvent.{0}: Firing at {1} UTC Scheduled at {2} UTC'', Name,\r\n                            utcTime.ToString(DateFormat.UI),\r\n                            _orderedEventUtcTimes.Current.ToString(DateFormat.UI))\r\n                            )", span="160-163", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_31 [label=_needsMoveNext, span="178-178", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_69 [label="return true;", span="170-170", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="ScheduledEvent.cs"];
m14_68 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ScheduledEvent.cs"];
m14_76 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="ScheduledEvent.cs"];
m14_24 [label="Log.Trace(string.Format(''ScheduledEvent.{0}: Next event: {1} UTC'', Name, _orderedEventUtcTimes.Current.ToString(DateFormat.UI)))", span="151-151", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_7 [label="_orderedEventUtcTimes = orderedEventUtcTimes", span="116-116", cluster="QuantConnect.Scheduling.ScheduledEvent.ScheduledEvent(string, System.Collections.Generic.IEnumerator<System.DateTime>, System.Action<string, System.DateTime>)", file="ScheduledEvent.cs"];
m14_23 [label=IsLoggingEnabled, span="149-149", cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="ScheduledEvent.cs"];
m14_4 [label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="68-68", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_5 [label="Errors = new List<string>()", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_6 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="63-63", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_8 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ScheduledEvent.cs"];
m14_9 [label="Enabled = true", span="121-121", cluster="QuantConnect.Scheduling.ScheduledEvent.ScheduledEvent(string, System.Collections.Generic.IEnumerator<System.DateTime>, System.Action<string, System.DateTime>)", file="ScheduledEvent.cs"];
m14_10 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="79-79", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_14 [label="var loader = new Loader(language, TimeSpan.FromHours(1), names => names.Single(name => MatchTypeName(name, algorithmName)))", span="87-87", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_15 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="88-88", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_17 [label="throw new Exception(error + '': try re-building algorithm.'');", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_18 [label="return algorithm;", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_19 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="79-79", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="ScheduledEvent.cs"];
m14_21 [label="Entry Loader.cstr", span="", cluster="Loader.cstr", file="ScheduledEvent.cs"];
m14_16 [label="!complete", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_32 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="180-180", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ScheduledEvent.cs"];
m14_77 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ScheduledEvent.cs"];
m14_11 [label="string error", span="81-81", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="ScheduledEvent.cs"];
m14_71 [label="string.IsNullOrEmpty(expectedTypeName)", span="182-182", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ScheduledEvent.cs"];
m14_73 [label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="186-187", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ScheduledEvent.cs"];
m14_72 [label="return true;", span="184-184", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ScheduledEvent.cs"];
m14_74 [label="QuantConnect.Scheduling.ScheduledEvent", span="", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="ScheduledEvent.cs"];
m14_78 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="190-190", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ScheduledEvent.cs"];
m14_79 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="190-190", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="ScheduledEvent.cs"];
m14_75 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ScheduledEvent.cs"];
m14_0 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="63-63", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_1 [label="MaxOrders = int.MaxValue", span="65-65", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_2 [label="StartingPortfolioValue = 0", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_3 [label="StartingDate = new DateTime(1998, 01, 01)", span="67-67", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="ScheduledEvent.cs"];
m14_80 [label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span="", file="ScheduledEvent.cs"];
m14_81 [label=algorithmName, span="", file="ScheduledEvent.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
n0 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataProvider"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataSource"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=0, style=solid];
n1 -> n6  [key=0, style=solid];
n1 -> n8  [key=0, style=solid];
n3 -> n9  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n5 -> n9  [key=0, style=solid];
n5 -> n11  [key=2, style=dotted];
n7 -> n9  [key=0, style=solid];
n7 -> n12  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n9 -> n0  [key=0, style=bold, color=blue];
d385 -> d386  [key=0, style=solid, color=green];
d385 -> d255  [key=2, style=dotted, color=green];
d385 -> d478  [key=1, style=dashed, color=green, label="lambda expression"];
d385 -> d388  [key=1, style=dashed, color=green, label=config];
d377 -> d385  [key=1, style=dashed, color=green, label=security];
d377 -> d378  [key=0, style=solid];
d377 -> d388  [key=1, style=dashed, color=darkseagreen4, label=security];
d384 -> d385  [key=0, style=solid, color=green];
d384 -> d479  [key=1, style=dashed, color=green, label=dataType];
d384 -> d446  [key=2, style=dotted];
d384 -> d387  [key=1, style=dashed, color=darkseagreen4, label=dataType];
d386 -> d387  [key=0, style=solid];
d386 -> d388  [key=0, style=solid];
d478 -> d479  [key=0, style=solid, color=green];
d388 -> d376  [key=0, style=solid];
d388 -> d447  [key=2, style=dotted];
d388 -> d445  [key=2, style=dotted];
d479 -> d480  [key=0, style=solid, color=green];
d607 -> d479  [key=1, style=dashed, color=green, label=dataType];
d480 -> d478  [key=0, style=bold, color=blue];
d262 -> d377  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d346  [key=0, style=solid];
d262 -> d393  [key=0, style=bold, color=crimson];
d262 -> d403  [key=0, style=bold, color=crimson];
d262 -> d430  [key=0, style=bold, color=crimson];
d262 -> d347  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d350  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d352  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d355  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d402  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d262 -> d405  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d406  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d408  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d410  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
d262 -> d414  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d418  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d423  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d262 -> d429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d262 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
d376 -> d377  [key=0, style=solid];
d376 -> d389  [key=0, style=solid];
d376 -> d378  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d378 -> d384  [key=1, style=dashed, color=darkseagreen4, label=data];
d378 -> d379  [key=0, style=solid];
d378 -> d380  [key=1, style=dashed, color=darkseagreen4, label=data];
d378 -> d383  [key=1, style=dashed, color=darkseagreen4, label=data];
d383 -> d384  [key=0, style=solid];
d383 -> d445  [key=2, style=dotted];
d382 -> d384  [key=0, style=solid];
d382 -> d444  [key=2, style=dotted];
d387 -> d394  [key=0, style=solid];
d387 -> d258  [key=2, style=dotted];
d33 -> d255  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d252  [key=2, style=dotted];
d33 -> d253  [key=2, style=dotted];
d33 -> d254  [key=2, style=dotted];
d33 -> d324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d33 -> d328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d33 -> d38  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSlice];
d375 -> d388  [key=1, style=dashed, color=darkseagreen4, label=paired];
d375 -> d376  [key=0, style=solid];
d375 -> d250  [key=2, style=dotted];
d375 -> d389  [key=1, style=dashed, color=darkseagreen4, label=paired];
d379 -> d388  [key=1, style=dashed, color=darkseagreen4, label=list];
d379 -> d383  [key=1, style=dashed, color=darkseagreen4, label=list];
d379 -> d382  [key=1, style=dashed, color=darkseagreen4, label=list];
d379 -> d380  [key=0, style=solid];
d379 -> d250  [key=2, style=dotted];
d45 -> d262  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d216  [key=0, style=solid];
d45 -> d48  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d50  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d53  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d54  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d71  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d73  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d74  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d77  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d78  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d81  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d92  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d100  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d128  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d129  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d130  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d136  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d139  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d151  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d164  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d175  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d176  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d177  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d178  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d179  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d180  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d186  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d187  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d188  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d189  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d190  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d191  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d192  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d193  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d194  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d195  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d196  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d197  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d198  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d204  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d205  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d45 -> d206  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d432 -> d262  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm"];
d432 -> d484  [key=0, style=solid];
d432 -> d485  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d432 -> d488  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d432 -> d489  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d432 -> d490  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d431 -> d262  [key=0, style=bold, color=blue];
d346 -> d347  [key=0, style=solid];
d346 -> d395  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
d346 -> d411  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
d346 -> d105  [key=3, color=darkorchid, style=bold, label="Local variable bool setStartTime"];
d393 -> d394  [key=0, style=solid];
d403 -> d404  [key=0, style=solid];
d430 -> d410  [key=0, style=solid];
d347 -> d348  [key=0, style=solid];
d347 -> d373  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
d347 -> d389  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
d348 -> d349  [key=0, style=solid];
d348 -> d373  [key=1, style=dashed, color=darkseagreen4, label=history];
d349 -> d350  [key=0, style=solid];
d349 -> d351  [key=0, style=solid];
d350 -> d432  [key=2, style=dotted];
d350 -> d351  [key=0, style=solid];
d352 -> d353  [key=0, style=solid];
d352 -> d433  [key=2, style=dotted];
d352 -> d300  [key=2, style=dotted];
d352 -> d357  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d360  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d366  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d367  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d368  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d370  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d373  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d405  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d352 -> d407  [key=1, style=dashed, color=darkseagreen4, label=historyRequests];
d355 -> d356  [key=0, style=solid];
d355 -> d435  [key=2, style=dotted];
d355 -> d436  [key=2, style=dotted];
d355 -> d437  [key=2, style=dotted];
d355 -> d456  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d358 -> d359  [key=0, style=solid];
d358 -> d254  [key=2, style=dotted];
d358 -> d438  [key=2, style=dotted];
d358 -> d460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d362 -> d362  [key=1, style=dashed, color=darkseagreen4, label=security];
d362 -> d363  [key=0, style=solid];
d362 -> d360  [key=0, style=solid];
d362 -> d439  [key=2, style=dotted];
d362 -> d440  [key=2, style=dotted];
d389 -> d403  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d389 -> d390  [key=0, style=solid];
d389 -> d394  [key=0, style=solid];
d389 -> d448  [key=2, style=dotted];
d389 -> d449  [key=2, style=dotted];
d389 -> d397  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d389 -> d401  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d389 -> d404  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d392 -> d393  [key=0, style=solid];
d398 -> d399  [key=0, style=solid];
d398 -> d451  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d402 -> d292  [key=2, style=dotted];
d402 -> d320  [key=2, style=dotted];
d405 -> d406  [key=0, style=solid];
d405 -> d410  [key=0, style=solid];
d406 -> d407  [key=0, style=solid];
d406 -> d452  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d408 -> d451  [key=2, style=dotted];
d410 -> d431  [key=0, style=solid];
d410 -> d430  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d410 -> d411  [key=0, style=solid];
d410 -> d413  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d410 -> d417  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d410 -> d422  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d410 -> d428  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
d414 -> d430  [key=0, style=solid];
d414 -> d415  [key=0, style=solid];
d418 -> d419  [key=0, style=solid];
d418 -> d417  [key=0, style=solid];
d418 -> d448  [key=2, style=dotted];
d423 -> d424  [key=0, style=solid];
d423 -> d452  [key=2, style=dotted];
d424 -> d425  [key=0, style=solid];
d424 -> d451  [key=2, style=dotted];
d429 -> d430  [key=0, style=solid];
d429 -> d292  [key=2, style=dotted];
d429 -> d320  [key=2, style=dotted];
d10 -> d33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d10 -> d22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d10 -> d24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d329  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d49  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d10 -> d52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Server.ILeanManager"];
d10 -> d57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
d10 -> d70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
d10 -> d79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler"];
d10 -> d92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
d10 -> d93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
d10 -> d94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
d10 -> d145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
d10 -> d214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler"];
d10 -> d225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d10 -> d239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d10 -> d245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d10 -> d246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d373 -> d376  [key=1, style=dashed, color=darkseagreen4, label=slice];
d373 -> d378  [key=1, style=dashed, color=darkseagreen4, label=slice];
d373 -> d389  [key=1, style=dashed, color=darkseagreen4, label=slice];
d373 -> d405  [key=0, style=solid];
d373 -> d374  [key=0, style=solid];
d373 -> d443  [key=2, style=dotted];
d380 -> d382  [key=1, style=dashed, color=darkseagreen4, label=ticks];
d380 -> d381  [key=0, style=solid];
d381 -> d383  [key=0, style=solid];
d381 -> d382  [key=0, style=solid];
d394 -> d373  [key=0, style=solid];
d394 -> d395  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d251  [key=2, style=dotted];
d32 -> d72  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSymbolChangedEvents];
d34 -> d35  [key=0, style=solid];
d34 -> d44  [key=0, style=solid];
d34 -> d36  [key=1, style=dashed, color=darkseagreen4, label=config];
d34 -> d37  [key=1, style=dashed, color=darkseagreen4, label=config];
d34 -> d39  [key=1, style=dashed, color=darkseagreen4, label=config];
d34 -> d43  [key=1, style=dashed, color=darkseagreen4, label=config];
d324 -> d325  [key=0, style=solid];
d328 -> d329  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d42  [key=0, style=solid];
d374 -> d375  [key=0, style=solid];
d508 -> d445  [key=2, style=dotted];
d508 -> d509  [key=0, style=solid];
d550 -> d445  [key=2, style=dotted];
d550 -> d545  [key=0, style=solid];
d603 -> d45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d350  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d397  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d413  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d603 -> d592  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
d44 -> d45  [key=0, style=solid];
d44 -> d261  [key=2, style=dotted];
d215 -> d45  [key=0, style=solid];
d215 -> d315  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d216 -> d217  [key=0, style=solid];
d48 -> d216  [key=0, style=solid];
d48 -> d263  [key=2, style=dotted];
d48 -> d264  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d264  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d53 -> d56  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d67  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d69  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d70  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d101  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d124  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d125  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d127  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d157  [key=1, style=dashed, color=darkseagreen4, label=time];
d53 -> d213  [key=1, style=dashed, color=darkseagreen4, label=time];
d54 -> d55  [key=0, style=solid];
d71 -> d72  [key=0, style=solid];
d71 -> d77  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d73 -> d273  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d74 -> d77  [key=0, style=solid];
d74 -> d332  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d77 -> d78  [key=0, style=solid];
d77 -> d81  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d78 -> d81  [key=0, style=solid];
d78 -> d80  [key=1, style=dashed, color=darkseagreen4, label=security];
d81 -> d82  [key=0, style=solid];
d81 -> d86  [key=0, style=solid];
d81 -> d83  [key=1, style=dashed, color=darkseagreen4, label=update];
d92 -> d93  [key=0, style=solid];
d92 -> d283  [key=2, style=dotted];
d100 -> d216  [key=0, style=solid];
d100 -> d263  [key=2, style=dotted];
d100 -> d261  [key=2, style=dotted];
d128 -> d129  [key=0, style=solid];
d128 -> d136  [key=0, style=solid];
d129 -> d130  [key=0, style=solid];
d129 -> d295  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d130 -> d136  [key=0, style=solid];
d130 -> d296  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d136 -> d139  [key=0, style=solid];
d136 -> d138  [key=1, style=dashed, color=darkseagreen4, label=dividend];
d139 -> d140  [key=0, style=solid];
d139 -> d151  [key=0, style=solid];
d139 -> d141  [key=1, style=dashed, color=darkseagreen4, label=split];
d139 -> d142  [key=1, style=dashed, color=darkseagreen4, label=split];
d139 -> d143  [key=1, style=dashed, color=darkseagreen4, label=split];
d139 -> d144  [key=1, style=dashed, color=darkseagreen4, label=split];
d139 -> d336  [key=1, style=dashed, color=darkseagreen4, label=split];
d139 -> d145  [key=1, style=dashed, color=darkseagreen4, label=split];
d151 -> d152  [key=0, style=solid];
d151 -> d159  [key=0, style=solid];
d151 -> d164  [key=0, style=solid];
d151 -> d154  [key=1, style=dashed, color=darkseagreen4, label=update];
d151 -> d155  [key=1, style=dashed, color=darkseagreen4, label=update];
d151 -> d157  [key=1, style=dashed, color=darkseagreen4, label=update];
d164 -> d165  [key=0, style=solid];
d164 -> d175  [key=0, style=solid];
d164 -> d166  [key=1, style=dashed, color=darkseagreen4, label=update];
d164 -> d167  [key=1, style=dashed, color=darkseagreen4, label=update];
d164 -> d168  [key=1, style=dashed, color=darkseagreen4, label=update];
d175 -> d176  [key=0, style=solid];
d175 -> d177  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d176 -> d273  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d177 -> d179  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d178 -> d273  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d179 -> d181  [key=0, style=solid];
d179 -> d186  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d180 -> d186  [key=0, style=solid];
d180 -> d273  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d186 -> d309  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d310  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d191  [key=0, style=solid];
d189 -> d254  [key=2, style=dotted];
d189 -> d190  [key=0, style=solid];
d189 -> d191  [key=0, style=solid];
d189 -> d338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d190 -> d189  [key=0, style=solid];
d190 -> d311  [key=2, style=dotted];
d190 -> d260  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d193  [key=0, style=solid];
d192 -> d193  [key=0, style=solid];
d192 -> d273  [key=2, style=dotted];
d193 -> d194  [key=0, style=solid];
d193 -> d195  [key=0, style=solid];
d194 -> d195  [key=0, style=solid];
d194 -> d273  [key=2, style=dotted];
d195 -> d196  [key=0, style=solid];
d195 -> d197  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d196 -> d273  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d197 -> d199  [key=0, style=solid];
d197 -> d204  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d198 -> d204  [key=0, style=solid];
d198 -> d273  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d204 -> d207  [key=0, style=solid];
d204 -> d212  [key=0, style=solid];
d205 -> d206  [key=0, style=solid];
d205 -> d312  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d206 -> d212  [key=0, style=solid];
d206 -> d313  [key=2, style=dotted];
d495 -> d432  [key=0, style=bold, color=blue];
d484 -> d485  [key=0, style=solid];
d484 -> d261  [key=2, style=dotted];
d485 -> d495  [key=0, style=solid];
d485 -> d486  [key=0, style=solid];
d488 -> d489  [key=0, style=solid];
d488 -> d496  [key=2, style=dotted];
d488 -> d490  [key=1, style=dashed, color=darkseagreen4, label=historyReq];
d489 -> d485  [key=0, style=solid];
d489 -> d490  [key=0, style=solid];
d490 -> d491  [key=0, style=solid];
d490 -> d443  [key=2, style=dotted];
d490 -> d492  [key=1, style=dashed, color=darkseagreen4, label=history];
d395 -> d396  [key=0, style=solid];
d395 -> d399  [key=0, style=solid];
d411 -> d414  [key=0, style=solid];
d411 -> d412  [key=0, style=solid];
d105 -> d105  [key=3, color=darkorchid, style=bold, label="Local variable bool executingMarginCall"];
d105 -> d106  [key=0, style=solid];
d399 -> d403  [key=0, style=solid];
d399 -> d400  [key=0, style=solid];
d404 -> d418  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
d404 -> d373  [key=0, style=solid];
d404 -> d415  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
d426 -> d430  [key=0, style=solid];
d426 -> d427  [key=0, style=solid];
d425 -> d430  [key=0, style=solid];
d425 -> d261  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d351 -> d418  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
d351 -> d415  [key=1, style=dashed, color=darkseagreen4, label=lastHistoryTimeUtc];
d351 -> d1  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime? lastHistoryTimeUtc"];
d353 -> d354  [key=0, style=solid];
d353 -> d371  [key=1, style=dashed, color=darkseagreen4, label=start];
d353 -> d401  [key=1, style=dashed, color=darkseagreen4, label=start];
d353 -> d428  [key=1, style=dashed, color=darkseagreen4, label=start];
d357 -> d358  [key=0, style=solid];
d357 -> d405  [key=0, style=solid];
d360 -> d362  [key=1, style=dashed, color=darkseagreen4, label=request];
d360 -> d361  [key=0, style=solid];
d360 -> d366  [key=0, style=solid];
d360 -> d363  [key=1, style=dashed, color=darkseagreen4, label=request];
d360 -> d364  [key=1, style=dashed, color=darkseagreen4, label=request];
d360 -> d365  [key=1, style=dashed, color=darkseagreen4, label=request];
d366 -> d367  [key=0, style=solid];
d366 -> d370  [key=0, style=solid];
d366 -> d441  [key=2, style=dotted];
d366 -> d466  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d367 -> d254  [key=2, style=dotted];
d367 -> d368  [key=0, style=solid];
d367 -> d437  [key=2, style=dotted];
d367 -> d469  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d367 -> d472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d367 -> d369  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
d368 -> d254  [key=2, style=dotted];
d368 -> d369  [key=0, style=solid];
d368 -> d370  [key=0, style=solid];
d368 -> d475  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d370 -> d373  [key=0, style=solid];
d370 -> d371  [key=0, style=solid];
d370 -> d372  [key=1, style=dashed, color=darkseagreen4, label=request];
d407 -> d408  [key=0, style=solid];
d407 -> d410  [key=0, style=solid];
d354 -> d355  [key=0, style=solid];
d354 -> d399  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
d354 -> d426  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
d354 -> d434  [key=2, style=dotted];
d356 -> d357  [key=0, style=solid];
d356 -> d356  [key=1, style=dashed, color=darkseagreen4, label=minimumIncrement];
d356 -> d422  [key=1, style=dashed, color=darkseagreen4, label=minimumIncrement];
d456 -> d457  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d359 -> d437  [key=2, style=dotted];
d359 -> d463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d359 -> d363  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
d359 -> d364  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
d359 -> d365  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
d460 -> d461  [key=0, style=solid];
d361 -> d362  [key=0, style=solid];
d363 -> d360  [key=0, style=solid];
d363 -> d364  [key=0, style=solid];
d390 -> d391  [key=0, style=solid];
d397 -> d398  [key=0, style=solid];
d401 -> d402  [key=0, style=solid];
d391 -> d392  [key=0, style=solid];
d391 -> d450  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d409 -> d261  [key=2, style=dotted];
d420 -> d410  [key=0, style=solid];
d420 -> d421  [key=0, style=solid];
d413 -> d414  [key=0, style=solid];
d417 -> d418  [key=0, style=solid];
d417 -> d420  [key=0, style=solid];
d417 -> d453  [key=2, style=dotted];
d417 -> d454  [key=2, style=dotted];
d417 -> d481  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d422 -> d423  [key=0, style=solid];
d422 -> d426  [key=0, style=solid];
d422 -> d455  [key=2, style=dotted];
d428 -> d429  [key=0, style=solid];
d415 -> d422  [key=0, style=solid];
d415 -> d416  [key=0, style=solid];
d419 -> d420  [key=0, style=solid];
d251 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm"];
d251 -> d105  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddMethodInvoker"];
d251 -> d499  [key=0, style=solid];
d251 -> d501  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>"];
d251 -> d15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<System.Type, MethodInvoker> methodInvokers"];
d251 -> d226  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddMethodInvoker"];
d266 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Lean.Engine.Results.IResultHandler results"];
d266 -> d53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
d266 -> d589  [key=0, style=solid];
d266 -> d591  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm"];
d285 -> d519  [key=0, style=solid];
d285 -> d521  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d523  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
d285 -> d531  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d533  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d534  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d535  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d285 -> d536  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
d285 -> d20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings"];
d286 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm"];
d286 -> d555  [key=0, style=solid];
d286 -> d557  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>"];
d286 -> d558  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d563  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d567  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d568  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d569  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d571  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d286 -> d572  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>"];
d286 -> d21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings"];
d309 -> d10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm"];
d309 -> d508  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
d309 -> d505  [key=0, style=solid];
d309 -> d507  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>"];
d309 -> d511  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d309 -> d20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings"];
d247 -> d10  [key=0, style=bold, color=blue];
d11 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d59  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d13 -> d61  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d13 -> d63  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d13 -> d244  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d13 -> d246  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d14 -> d15  [key=0, style=solid];
d14 -> d55  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d14 -> d68  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d14 -> d243  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d14 -> d245  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d14 -> d246  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d22 -> d23  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d25 -> d191  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataTradeBars];
d25 -> d251  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d26 -> d193  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataQuoteBars];
d26 -> d251  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d27 -> d195  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataOptionChains];
d27 -> d251  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d28 -> d197  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataTicks];
d28 -> d251  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d29 -> d175  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataDividends];
d29 -> d251  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d30 -> d177  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataSplits];
d30 -> d251  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d179  [key=1, style=dashed, color=darkseagreen4, label=hasOnDataDelistings];
d31 -> d251  [key=2, style=dotted];
d329 -> d252  [key=2, style=dotted];
d329 -> d330  [key=0, style=solid];
d36 -> d252  [key=2, style=dotted];
d36 -> d38  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
d36 -> d37  [key=0, style=solid];
d36 -> d256  [key=2, style=dotted];
d36 -> d42  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
d36 -> d43  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
d39 -> d258  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d49  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d49 -> d52  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d52 -> d265  [key=2, style=dotted];
d57 -> d266  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d58 -> d267  [key=2, style=dotted];
d58 -> d268  [key=2, style=dotted];
d60 -> d62  [key=0, style=solid];
d60 -> d269  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d61 -> d267  [key=2, style=dotted];
d61 -> d269  [key=2, style=dotted];
d62 -> d63  [key=0, style=solid];
d62 -> d244  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d62 -> d246  [key=1, style=dashed, color=darkseagreen4, label=portfolioValue];
d66 -> d216  [key=0, style=solid];
d66 -> d270  [key=2, style=dotted];
d67 -> d266  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d69 -> d271  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d70 -> d272  [key=2, style=dotted];
d75 -> d74  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d75 -> d274  [key=2, style=dotted];
d75 -> d331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d79 -> d78  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d276  [key=2, style=dotted];
d80 -> d78  [key=0, style=solid];
d80 -> d277  [key=2, style=dotted];
d85 -> d81  [key=0, style=solid];
d85 -> d279  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d91  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d91 -> d282  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d93 -> d284  [key=2, style=dotted];
d94 -> d285  [key=2, style=dotted];
d94 -> d95  [key=0, style=solid];
d95 -> d286  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d96 -> d98  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d98 -> d101  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d103 -> d287  [key=2, style=dotted];
d103 -> d106  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
d103 -> d108  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
d103 -> d117  [key=1, style=dashed, color=darkseagreen4, label=issueMarginCallWarning];
d106 -> d107  [key=0, style=solid];
d106 -> d288  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d108 -> d289  [key=2, style=dotted];
d110 -> d109  [key=0, style=solid];
d110 -> d290  [key=2, style=dotted];
d110 -> d291  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d118 -> d119  [key=0, style=solid];
d118 -> d124  [key=0, style=solid];
d118 -> d293  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d126 -> d294  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d137 -> d297  [key=2, style=dotted];
d138 -> d136  [key=0, style=solid];
d138 -> d298  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d297  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d142 -> d299  [key=2, style=dotted];
d143 -> d139  [key=0, style=solid];
d143 -> d144  [key=0, style=solid];
d143 -> d146  [key=0, style=solid];
d144 -> d145  [key=0, style=solid];
d144 -> d274  [key=2, style=dotted];
d144 -> d335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d145 -> d139  [key=0, style=solid];
d145 -> d300  [key=2, style=dotted];
d145 -> d146  [key=0, style=solid];
d145 -> d301  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d169 -> d167  [key=0, style=solid];
d169 -> d308  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d200 -> d201  [key=0, style=solid];
d208 -> d209  [key=0, style=solid];
d212 -> d213  [key=0, style=solid];
d212 -> d284  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d214 -> d314  [key=2, style=dotted];
d218 -> d219  [key=0, style=solid];
d218 -> d224  [key=0, style=solid];
d218 -> d316  [key=2, style=dotted];
d221 -> d222  [key=0, style=solid];
d221 -> d317  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d282  [key=2, style=dotted];
d225 -> d226  [key=0, style=solid];
d225 -> d314  [key=2, style=dotted];
d226 -> d227  [key=0, style=solid];
d226 -> d315  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d229 -> d318  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d230 -> d319  [key=2, style=dotted];
d231 -> d320  [key=2, style=dotted];
d231 -> d232  [key=0, style=solid];
d234 -> d235  [key=0, style=solid];
d234 -> d319  [key=2, style=dotted];
d235 -> d320  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d238 -> d239  [key=0, style=solid];
d238 -> d321  [key=2, style=dotted];
d239 -> d320  [key=2, style=dotted];
d239 -> d240  [key=0, style=solid];
d240 -> d320  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d241 -> d242  [key=0, style=solid];
d241 -> d322  [key=2, style=dotted];
d241 -> d323  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d267  [key=2, style=dotted];
d242 -> d268  [key=2, style=dotted];
d243 -> d266  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d245 -> d247  [key=0, style=solid];
d245 -> d269  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d267  [key=2, style=dotted];
d246 -> d269  [key=2, style=dotted];
d15 -> d32  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d73  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d176  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d178  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d180  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d192  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d194  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d196  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d198  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d25  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d26  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d27  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d28  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d29  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d30  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d31  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d16  [key=0, style=solid];
d15 -> d248  [key=2, style=dotted];
d15 -> d37  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d43  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d15 -> d166  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d72 -> d73  [key=0, style=solid];
d72 -> d74  [key=0, style=solid];
d37 -> d34  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d257  [key=2, style=dotted];
d43 -> d34  [key=0, style=solid];
d43 -> d259  [key=2, style=dotted];
d43 -> d260  [key=2, style=dotted];
d35 -> d34  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d42 -> d34  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d499 -> d252  [key=2, style=dotted];
d499 -> d500  [key=0, style=solid];
d499 -> d256  [key=2, style=dotted];
d499 -> d501  [key=1, style=dashed, color=darkseagreen4, label=newSplitMethodInfo];
d563 -> d254  [key=2, style=dotted];
d563 -> d564  [key=0, style=solid];
d563 -> d585  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d326 -> d324  [key=0, style=bold, color=blue];
d325 -> d326  [key=0, style=solid];
d325 -> d327  [key=2, style=dotted];
d330 -> d328  [key=0, style=bold, color=blue];
d20 -> d250  [key=2, style=dotted];
d20 -> d186  [key=1, style=dashed, color=darkseagreen4, label=delistings];
d20 -> d94  [key=1, style=dashed, color=darkseagreen4, label=delistings];
d20 -> d21  [key=0, style=solid];
d21 -> d250  [key=2, style=dotted];
d21 -> d187  [key=1, style=dashed, color=darkseagreen4, label=splitWarnings];
d21 -> d22  [key=0, style=solid];
d21 -> d95  [key=1, style=dashed, color=darkseagreen4, label=splitWarnings];
d505 -> d508  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d505 -> d506  [key=0, style=solid];
d505 -> d514  [key=0, style=solid];
d505 -> d507  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d505 -> d517  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d505 -> d509  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d505 -> d510  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d505 -> d511  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d507 -> d508  [key=0, style=solid];
d507 -> d505  [key=0, style=solid];
d507 -> d441  [key=2, style=dotted];
d507 -> d516  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d509 -> d505  [key=0, style=solid];
d509 -> d261  [key=2, style=dotted];
d310 -> d550  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>"];
d310 -> d21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings"];
d310 -> d545  [key=0, style=solid];
d310 -> d549  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>"];
d545 -> d550  [key=1, style=dashed, color=darkseagreen4, label=split];
d545 -> d546  [key=0, style=solid];
d545 -> d551  [key=0, style=solid];
d545 -> d547  [key=1, style=dashed, color=darkseagreen4, label=split];
d545 -> d548  [key=1, style=dashed, color=darkseagreen4, label=split];
d545 -> d549  [key=1, style=dashed, color=darkseagreen4, label=split];
d545 -> d553  [key=1, style=dashed, color=darkseagreen4, label=split];
d549 -> d550  [key=0, style=solid];
d549 -> d545  [key=0, style=solid];
d549 -> d441  [key=2, style=dotted];
d549 -> d552  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d1 -> d1  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
d1 -> d2  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d6 -> d8  [key=0, style=solid];
d6 -> d9  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d47 -> d48  [key=0, style=solid];
d47 -> d49  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d56 -> d63  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
d101 -> d102  [key=0, style=solid];
d101 -> d125  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d125 -> d128  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d133 -> d134  [key=0, style=solid];
d148 -> d149  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d172 -> d173  [key=0, style=solid];
d183 -> d184  [key=0, style=solid];
d201 -> d202  [key=0, style=solid];
d209 -> d210  [key=0, style=solid];
d213 -> d214  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d227 -> d228  [key=0, style=solid];
d227 -> d232  [key=0, style=solid];
d232 -> d233  [key=0, style=solid];
d232 -> d236  [key=0, style=solid];
d236 -> d240  [key=0, style=solid];
d236 -> d237  [key=0, style=solid];
d342 -> d343  [key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d592 -> d593  [key=0, style=solid];
d97 -> d216  [key=0, style=solid];
d97 -> d261  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d217 -> d261  [key=2, style=dotted];
d51 -> d247  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d157 -> d158  [key=0, style=solid];
d157 -> d304  [key=2, style=dotted];
d55 -> d67  [key=0, style=solid];
d55 -> d56  [key=0, style=solid];
d332 -> d333  [key=0, style=solid];
d332 -> d334  [key=2, style=dotted];
d82 -> d85  [key=1, style=dashed, color=darkseagreen4, label=security];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=1, style=dashed, color=darkseagreen4, label=security];
d83 -> d85  [key=0, style=solid];
d83 -> d84  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d140 -> d139  [key=0, style=solid];
d140 -> d141  [key=0, style=solid];
d336 -> d337  [key=0, style=solid];
d336 -> d334  [key=2, style=dotted];
d153 -> d151  [key=0, style=solid];
d153 -> d154  [key=0, style=solid];
d153 -> d156  [key=1, style=dashed, color=darkseagreen4, label=consolidator];
d153 -> d158  [key=1, style=dashed, color=darkseagreen4, label=consolidator];
d152 -> d153  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d154 -> d157  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d154 -> d156  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d155 -> d154  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d155 -> d302  [key=2, style=dotted];
d166 -> d164  [key=0, style=solid];
d166 -> d169  [key=1, style=dashed, color=darkseagreen4, label=methodInvoker];
d166 -> d167  [key=0, style=solid];
d166 -> d306  [key=2, style=dotted];
d167 -> d164  [key=0, style=solid];
d167 -> d169  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d167 -> d168  [key=0, style=solid];
d167 -> d170  [key=0, style=solid];
d165 -> d166  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d167  [key=0, style=solid];
d168 -> d307  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d338 -> d339  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d487 -> d485  [key=0, style=solid];
d487 -> d488  [key=0, style=solid];
d491 -> d485  [key=0, style=solid];
d491 -> d492  [key=0, style=solid];
d492 -> d485  [key=0, style=solid];
d492 -> d493  [key=0, style=solid];
d492 -> d494  [key=1, style=dashed, color=darkseagreen4, label=slice];
d486 -> d488  [key=1, style=dashed, color=darkseagreen4, label=security];
d486 -> d487  [key=0, style=solid];
d486 -> d486  [key=1, style=dashed, color=darkseagreen4, label=kvp];
d486 -> d493  [key=1, style=dashed, color=darkseagreen4, label=security];
d486 -> d494  [key=1, style=dashed, color=darkseagreen4, label=security];
d396 -> d411  [key=1, style=dashed, color=darkseagreen4, label=setStartTime];
d396 -> d397  [key=0, style=solid];
d412 -> d413  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d117  [key=0, style=solid];
d416 -> d105  [key=3, color=darkorchid, style=bold, label="Local variable bool hasHistoricalData"];
d416 -> d420  [key=1, style=dashed, color=darkseagreen4, label=hasHistoricalData];
d416 -> d417  [key=0, style=solid];
d400 -> d426  [key=1, style=dashed, color=darkseagreen4, label=nextStatusTime];
d400 -> d401  [key=0, style=solid];
d400 -> d434  [key=2, style=dotted];
d427 -> d428  [key=0, style=solid];
d427 -> d434  [key=2, style=dotted];
d371 -> d401  [key=1, style=dashed, color=darkseagreen4, label=start];
d371 -> d428  [key=1, style=dashed, color=darkseagreen4, label=start];
d371 -> d371  [key=1, style=dashed, color=darkseagreen4, label=start];
d371 -> d372  [key=0, style=solid];
d371 -> d442  [key=2, style=dotted];
d365 -> d360  [key=0, style=solid];
d364 -> d365  [key=0, style=solid];
d466 -> d467  [key=0, style=solid];
d469 -> d470  [key=0, style=solid];
d472 -> d473  [key=0, style=solid];
d369 -> d368  [key=0, style=solid];
d369 -> d369  [key=1, style=dashed, color=darkseagreen4, label=request];
d475 -> d476  [key=0, style=solid];
d372 -> d370  [key=0, style=solid];
d372 -> d261  [key=2, style=dotted];
d372 -> d290  [key=2, style=dotted];
d458 -> d456  [key=0, style=bold, color=blue];
d457 -> d458  [key=0, style=solid];
d457 -> d457  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>"];
d457 -> d459  [key=2, style=dotted];
d463 -> d464  [key=0, style=solid];
d462 -> d460  [key=0, style=bold, color=blue];
d461 -> d462  [key=0, style=solid];
d571 -> d451  [key=2, style=dotted];
d571 -> d564  [key=0, style=solid];
d115 -> d292  [key=2, style=dotted];
d115 -> d264  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d421 -> d422  [key=0, style=solid];
d481 -> d482  [key=0, style=solid];
d504 -> d251  [key=0, style=bold, color=blue];
d501 -> d260  [key=2, style=dotted];
d501 -> d502  [key=0, style=solid];
d501 -> d259  [key=2, style=dotted];
d594 -> d266  [key=0, style=bold, color=blue];
d589 -> d594  [key=0, style=solid];
d589 -> d590  [key=0, style=solid];
d589 -> d595  [key=2, style=dotted];
d589 -> d596  [key=2, style=dotted];
d589 -> d597  [key=2, style=dotted];
d591 -> d592  [key=0, style=solid];
d538 -> d285  [key=0, style=bold, color=blue];
d519 -> d520  [key=0, style=solid];
d519 -> d521  [key=1, style=dashed, color=darkseagreen4, label=i];
d519 -> d523  [key=1, style=dashed, color=darkseagreen4, label=i];
d519 -> d536  [key=1, style=dashed, color=darkseagreen4, label=i];
d519 -> d537  [key=1, style=dashed, color=darkseagreen4, label=i];
d521 -> d522  [key=0, style=solid];
d521 -> d524  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d525  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d526  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d528  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d529  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d530  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d531  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d533  [key=1, style=dashed, color=darkseagreen4, label=security];
d521 -> d534  [key=1, style=dashed, color=darkseagreen4, label=security];
d523 -> d524  [key=0, style=solid];
d531 -> d535  [key=0, style=solid];
d531 -> d541  [key=2, style=dotted];
d533 -> d535  [key=0, style=solid];
d533 -> d541  [key=2, style=dotted];
d534 -> d535  [key=0, style=solid];
d534 -> d541  [key=2, style=dotted];
d535 -> d536  [key=0, style=solid];
d535 -> d543  [key=2, style=dotted];
d536 -> d537  [key=0, style=solid];
d536 -> d544  [key=2, style=dotted];
d574 -> d286  [key=0, style=bold, color=blue];
d555 -> d556  [key=0, style=solid];
d555 -> d557  [key=1, style=dashed, color=darkseagreen4, label=i];
d555 -> d572  [key=1, style=dashed, color=darkseagreen4, label=i];
d555 -> d573  [key=1, style=dashed, color=darkseagreen4, label=i];
d557 -> d571  [key=1, style=dashed, color=darkseagreen4, label=split];
d557 -> d558  [key=0, style=solid];
d558 -> d563  [key=1, style=dashed, color=darkseagreen4, label=security];
d558 -> d559  [key=0, style=solid];
d558 -> d560  [key=1, style=dashed, color=darkseagreen4, label=security];
d558 -> d561  [key=1, style=dashed, color=darkseagreen4, label=security];
d558 -> d562  [key=1, style=dashed, color=darkseagreen4, label=security];
d558 -> d586  [key=1, style=dashed, color=darkseagreen4, label=security];
d567 -> d568  [key=0, style=solid];
d567 -> d579  [key=2, style=dotted];
d568 -> d569  [key=0, style=solid];
d568 -> d580  [key=2, style=dotted];
d569 -> d570  [key=0, style=solid];
d569 -> d581  [key=2, style=dotted];
d572 -> d573  [key=0, style=solid];
d572 -> d544  [key=2, style=dotted];
d514 -> d309  [key=0, style=bold, color=blue];
d511 -> d512  [key=0, style=solid];
d511 -> d515  [key=2, style=dotted];
d41 -> d247  [key=0, style=solid];
d116 -> d247  [key=0, style=solid];
d123 -> d247  [key=0, style=solid];
d135 -> d247  [key=0, style=solid];
d150 -> d247  [key=0, style=solid];
d163 -> d247  [key=0, style=solid];
d174 -> d247  [key=0, style=solid];
d185 -> d247  [key=0, style=solid];
d203 -> d247  [key=0, style=solid];
d211 -> d247  [key=0, style=solid];
d223 -> d247  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d59 -> d61  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d68  [key=0, style=solid];
d244 -> d245  [key=0, style=solid];
d244 -> d246  [key=0, style=solid];
d68 -> d69  [key=0, style=solid];
d68 -> d70  [key=0, style=solid];
d604 -> d329  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d64 -> d66  [key=1, style=dashed, color=darkseagreen4, label=logMessage];
d64 -> d64  [key=3, color=darkorchid, style=bold, label="Local variable string logMessage"];
d64 -> d65  [key=0, style=solid];
d65 -> d66  [key=0, style=solid];
d65 -> d261  [key=2, style=dotted];
d76 -> d75  [key=0, style=solid];
d76 -> d275  [key=2, style=dotted];
d274 -> d274  [key=3, color=darkorchid, style=bold, label="Field variable string _algorithmId"];
d331 -> d332  [key=0, style=solid];
d90 -> d86  [key=0, style=solid];
d90 -> d281  [key=2, style=dotted];
d89 -> d86  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d87 -> d90  [key=1, style=dashed, color=darkseagreen4, label=cash];
d87 -> d87  [key=1, style=dashed, color=darkseagreen4, label=kvp];
d87 -> d88  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d117 -> d118  [key=0, style=solid];
d117 -> d124  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d114  [key=1, style=dashed, color=darkseagreen4, label=executingMarginCall];
d109 -> d110  [key=0, style=solid];
d109 -> d124  [key=0, style=solid];
d109 -> d111  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
d335 -> d336  [key=0, style=solid];
d301 -> d0  [key=3, color=darkorchid, style=bold, label="Field variable bool _liveMode"];
d170 -> d171  [key=0, style=solid];
d219 -> d220  [key=0, style=solid];
d222 -> d264  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d302 -> d226  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EndTimeIsInNativeResolution"];
d302 -> d598  [key=0, style=solid];
d302 -> d600  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
d302 -> d601  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
d228 -> d229  [key=0, style=solid];
d228 -> d261  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d233 -> d261  [key=2, style=dotted];
d237 -> d238  [key=0, style=solid];
d237 -> d261  [key=2, style=dotted];
d16 -> d124  [key=1, style=dashed, color=darkseagreen4, label=marginCallFrequency];
d16 -> d17  [key=0, style=solid];
d16 -> d249  [key=2, style=dotted];
d500 -> d501  [key=0, style=solid];
d500 -> d503  [key=0, style=solid];
d562 -> d563  [key=0, style=solid];
d562 -> d556  [key=0, style=solid];
d564 -> d572  [key=0, style=solid];
d564 -> d565  [key=0, style=solid];
d564 -> d566  [key=1, style=dashed, color=darkseagreen4, label=kvp];
d585 -> d586  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d125  [key=1, style=dashed, color=darkseagreen4, label=nextSettlementScanTime];
d512 -> d505  [key=0, style=solid];
d512 -> d513  [key=0, style=solid];
d506 -> d507  [key=0, style=solid];
d506 -> d510  [key=0, style=solid];
d517 -> d518  [key=0, style=solid];
d510 -> d261  [key=2, style=dotted];
d510 -> d511  [key=0, style=solid];
d516 -> d517  [key=0, style=solid];
d551 -> d310  [key=0, style=bold, color=blue];
d547 -> d545  [key=0, style=solid];
d547 -> d261  [key=2, style=dotted];
d546 -> d547  [key=0, style=solid];
d546 -> d548  [key=0, style=solid];
d548 -> d549  [key=0, style=solid];
d548 -> d261  [key=2, style=dotted];
d553 -> d554  [key=0, style=solid];
d552 -> d553  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [key=1, style=dashed, color=darkseagreen4, label=bool];
d4 -> d5  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d8 -> d4  [key=0, style=bold, color=blue];
d3 -> d0  [key=0, style=bold, color=blue];
d17 -> d101  [key=1, style=dashed, color=darkseagreen4, label=nextMarginCallTime];
d17 -> d18  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d122 -> d264  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d134 -> d264  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d149 -> d264  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d162 -> d264  [key=2, style=dotted];
d162 -> d163  [key=0, style=solid];
d173 -> d264  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d184 -> d264  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d202 -> d264  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d210 -> d264  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d341 -> d342  [key=0, style=solid];
d341 -> d344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmStatus"];
d341 -> d343  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmStatus"];
d343 -> d344  [key=0, style=solid];
d343 -> d345  [key=0, style=solid];
d345 -> d341  [key=0, style=bold, color=blue];
d593 -> d450  [key=2, style=dotted];
d593 -> d594  [key=0, style=solid];
d513 -> d261  [key=2, style=dotted];
d513 -> d512  [key=0, style=solid];
d18 -> d127  [key=1, style=dashed, color=darkseagreen4, label=settlementScanFrequency];
d18 -> d19  [key=0, style=solid];
d18 -> d249  [key=2, style=dotted];
d158 -> d153  [key=0, style=solid];
d158 -> d305  [key=2, style=dotted];
d605 -> d332  [key=1, style=dashed, color=darkseagreen4, label=symbol];
d333 -> d331  [key=0, style=bold, color=blue];
d84 -> d83  [key=0, style=solid];
d84 -> d278  [key=2, style=dotted];
d606 -> d336  [key=1, style=dashed, color=darkseagreen4, label=split];
d337 -> d335  [key=0, style=bold, color=blue];
d156 -> d154  [key=0, style=solid];
d156 -> d303  [key=2, style=dotted];
d340 -> d338  [key=0, style=bold, color=blue];
d339 -> d340  [key=0, style=solid];
d339 -> d339  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>"];
d493 -> d492  [key=0, style=solid];
d493 -> d494  [key=0, style=solid];
d493 -> d497  [key=2, style=dotted];
d494 -> d492  [key=0, style=solid];
d494 -> d498  [key=2, style=dotted];
d468 -> d466  [key=0, style=bold, color=blue];
d467 -> d468  [key=0, style=solid];
d471 -> d469  [key=0, style=bold, color=blue];
d470 -> d471  [key=0, style=solid];
d474 -> d472  [key=0, style=bold, color=blue];
d473 -> d474  [key=0, style=solid];
d477 -> d475  [key=0, style=bold, color=blue];
d476 -> d477  [key=0, style=solid];
d465 -> d463  [key=0, style=bold, color=blue];
d464 -> d465  [key=0, style=solid];
d565 -> d571  [key=1, style=dashed, color=darkseagreen4, label=optionContractSymbol];
d565 -> d567  [key=1, style=dashed, color=darkseagreen4, label=optionContractSymbol];
d565 -> d568  [key=1, style=dashed, color=darkseagreen4, label=optionContractSymbol];
d565 -> d566  [key=0, style=solid];
d570 -> d571  [key=0, style=solid];
d483 -> d481  [key=0, style=bold, color=blue];
d482 -> d483  [key=0, style=solid];
d503 -> d504  [key=0, style=solid];
d502 -> d504  [key=0, style=solid];
d590 -> d591  [key=0, style=solid];
d520 -> d538  [key=0, style=solid];
d520 -> d521  [key=0, style=solid];
d537 -> d520  [key=0, style=solid];
d537 -> d537  [key=1, style=dashed, color=darkseagreen4, label=i];
d522 -> d523  [key=0, style=solid];
d522 -> d520  [key=0, style=solid];
d524 -> d525  [key=0, style=solid];
d524 -> d539  [key=2, style=dotted];
d525 -> d526  [key=0, style=solid];
d525 -> d540  [key=2, style=dotted];
d526 -> d520  [key=0, style=solid];
d526 -> d527  [key=0, style=solid];
d528 -> d534  [key=0, style=solid];
d528 -> d529  [key=0, style=solid];
d529 -> d530  [key=0, style=solid];
d529 -> d532  [key=1, style=dashed, color=darkseagreen4, label=option];
d530 -> d531  [key=0, style=solid];
d530 -> d532  [key=0, style=solid];
d532 -> d533  [key=0, style=solid];
d532 -> d542  [key=2, style=dotted];
d556 -> d574  [key=0, style=solid];
d556 -> d557  [key=0, style=solid];
d573 -> d556  [key=0, style=solid];
d573 -> d573  [key=1, style=dashed, color=darkseagreen4, label=i];
d559 -> d560  [key=0, style=solid];
d559 -> d540  [key=2, style=dotted];
d559 -> d561  [key=1, style=dashed, color=darkseagreen4, label=nextMarketClose];
d560 -> d561  [key=0, style=solid];
d560 -> d575  [key=2, style=dotted];
d560 -> d576  [key=2, style=dotted];
d560 -> d582  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d561 -> d562  [key=0, style=solid];
d561 -> d459  [key=2, style=dotted];
d561 -> d577  [key=2, style=dotted];
d561 -> d578  [key=2, style=dotted];
d586 -> d586  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
d586 -> d587  [key=0, style=solid];
d586 -> d588  [key=2, style=dotted];
d566 -> d567  [key=0, style=solid];
d566 -> d568  [key=1, style=dashed, color=darkseagreen4, label=optionContractSecurity];
d566 -> d570  [key=1, style=dashed, color=darkseagreen4, label=optionContractSecurity];
d88 -> d90  [key=1, style=dashed, color=darkseagreen4, label=updateData];
d88 -> d89  [key=0, style=solid];
d88 -> d280  [key=2, style=dotted];
d602 -> d302  [key=0, style=bold, color=blue];
d598 -> d599  [key=0, style=solid];
d598 -> d600  [key=0, style=solid];
d600 -> d601  [key=0, style=solid];
d600 -> d578  [key=2, style=dotted];
d601 -> d602  [key=0, style=solid];
d587 -> d585  [key=0, style=bold, color=blue];
d608 -> d517  [key=1, style=dashed, color=darkseagreen4, label=delisting];
d518 -> d516  [key=0, style=bold, color=blue];
d609 -> d553  [key=1, style=dashed, color=darkseagreen4, label=split];
d554 -> d552  [key=0, style=bold, color=blue];
d527 -> d528  [key=0, style=solid];
d582 -> d583  [key=0, style=solid];
d610 -> d586  [key=1, style=dashed, color=darkseagreen4, label=security];
d599 -> d602  [key=0, style=solid];
d584 -> d582  [key=0, style=bold, color=blue];
d583 -> d584  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_83  [key=2, style=dotted];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=algorithmPath];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_85  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_84  [key=2, style=dotted];
m0_82 -> m0_77  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_86  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_89  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_95  [key=0, style=bold, color=blue];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_101  [key=0, style=bold, color=blue];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_104  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_107  [key=0, style=bold, color=blue];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_74 -> m0_113  [key=0, style=solid];
m0_74 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>>"];
m0_74 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_74 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_74 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.AlphaRuntimeStatistics expected"];
m0_74 -> m0_2  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.AlphaRuntimeStatistics actual"];
m0_74 -> m0_38  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_41  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_42  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_43  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_74 -> m0_46  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Func<QuantConnect.AlphaRuntimeStatistics, object>> selector"];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_122  [key=2, style=dotted];
m0_113 -> m0_123  [key=2, style=dotted];
m0_113 -> m0_124  [key=2, style=dotted];
m0_113 -> m0_125  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_128  [key=2, style=dotted];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=func];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_129  [key=2, style=dotted];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_116 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=expectedValue];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_129  [key=2, style=dotted];
m0_117 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=actualValue];
m0_117 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=actualValue];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_126  [key=2, style=dotted];
m0_114 -> m0_127  [key=2, style=dotted];
m0_114 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_114 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_114 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=field];
m0_119 -> m0_121  [key=0, style=solid];
m0_119 -> m0_73  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_73  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_121 -> m0_74  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m0_0 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_0 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_0 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlphaRuntimeStatistics"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_52  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_55  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_4 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=logFile];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_59  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_60  [key=2, style=dotted];
m0_14 -> m0_59  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_59  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_67  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_47  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_74  [key=2, style=dotted];
m0_38 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_74  [key=2, style=dotted];
m0_39 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_74  [key=2, style=dotted];
m0_40 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_74  [key=2, style=dotted];
m0_41 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_74  [key=2, style=dotted];
m0_42 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_74  [key=2, style=dotted];
m0_43 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_74  [key=2, style=dotted];
m0_44 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_74  [key=2, style=dotted];
m0_45 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_74  [key=2, style=dotted];
m0_46 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_53  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_54  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_56  [key=2, style=dotted];
m0_5 -> m0_57  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_58  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_61  [key=2, style=dotted];
m0_17 -> m0_62  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_75  [key=2, style=dotted];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=passedFile];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=passedFile];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_76  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_59  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_59  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_59  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_59  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_59  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_59  [key=2, style=dotted, color=red];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=debugEnabled];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_63  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_64  [key=2, style=dotted];
m0_19 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_19 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_19 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_65  [key=2, style=dotted];
m0_20 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_20 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_20 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_68  [key=2, style=dotted];
m0_25 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=engine];
m0_27 -> m0_28  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_69  [key=2, style=dotted];
m0_26 -> m0_70  [key=2, style=dotted];
m0_26 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_66  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_66  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m0_28 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> d257  [key=2, style=dotted];
m0_35 -> m0_73  [key=2, style=dotted];
m0_35 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=stat];
m0_36 -> m0_34  [key=0, style=solid];
m0_36 -> m0_73  [key=2, style=dotted];
m0_36 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=stat];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_30 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=alphaStatistics];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_71  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_56  [key=2, style=dotted];
m0_48 -> m0_57  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_58  [key=2, style=dotted];
m0_51 -> m0_0  [key=0, style=bold, color=blue];
m0_130 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m0_131 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=engine];
m1_26 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=2, style=dotted];
m1_55 -> m1_58  [key=2, style=dotted];
m1_55 -> m1_59  [key=2, style=dotted];
m1_55 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_55 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_56 -> m1_26  [key=0, style=bold, color=blue];
m1_13 -> m1_19  [key=0, style=solid];
m1_13 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m1_13 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m1_13 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_16  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_13  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_26  [key=2, style=dotted];
m1_31 -> m1_27  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Scheduling.ScheduledEvent>"];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_63  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_35 -> m1_34  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_33  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_17  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_0 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_7 -> m1_4  [key=0, style=solid];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=security];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_4  [key=0, style=solid];
m1_6 -> m1_14  [key=2, style=dotted];
m1_10 -> m1_8  [key=0, style=solid];
m1_11 -> m1_0  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_53  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_48  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m1_39 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m1_39 -> m1_44  [key=1, style=dashed, color=green, label=scheduledEvent];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_39  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_40  [key=0, style=solid];
m1_42 -> m1_37  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid, color=green];
m1_44 -> m1_46  [key=1, style=dashed, color=green, label=errorMessage];
m1_44 -> m1_47  [key=1, style=dashed, color=green, label=errorMessage];
m1_43 -> m1_44  [key=0, style=solid, color=green];
m1_45 -> m1_46  [key=0, style=solid, color=green];
m1_45 -> m1_50  [key=2, style=dotted, color=red];
m1_45 -> d450  [key=2, style=dotted, color=green];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_51  [key=2, style=dotted];
m1_47 -> m1_40  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_48 -> m1_38  [key=0, style=bold, color=blue];
m1_66 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m1_66 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler"];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m2_90 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m2_90 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m2_90 -> m2_60  [key=3, color=darkorchid, style=bold, label="method methodReturn bool GetSufficientCapitalForOrder"];
m2_90 -> m2_56  [key=3, color=darkorchid, style=bold, label="method methodReturn bool GetSufficientCapitalForOrder"];
m2_90 -> m2_90  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.SecurityPortfolioManager portfolio"];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_93 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=security];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_48  [key=2, style=dotted];
m2_94 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_62  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_106  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_118  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_119  [key=2, style=dotted];
m2_104 -> m2_116  [key=0, style=solid];
m2_104 -> m2_90  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_106 -> m2_120  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_121  [key=2, style=dotted];
m2_108 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=freeMargin];
m2_108 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=freeMargin];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_122  [key=2, style=dotted];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=initialMarginRequiredForOrder];
m2_109 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=initialMarginRequiredForOrder];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_120  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_123  [key=2, style=dotted];
m2_113 -> m2_62  [key=2, style=dotted];
m2_92 -> m2_116  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_99 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=option];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=0, style=solid];
m2_97 -> m2_116  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=underlying];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_105  [key=0, style=solid];
m2_101 -> m2_117  [key=2, style=dotted];
m2_105 -> m2_116  [key=0, style=solid];
m2_107 -> m2_116  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_115  [key=0, style=solid];
m2_112 -> m2_120  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_114 -> m2_116  [key=0, style=solid];
m2_116 -> m2_90  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_68  [key=2, style=dotted];
m2_74 -> m2_69  [key=2, style=dotted];
m2_74 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_52 -> m2_56  [key=3, color=darkorchid, style=bold, label="method methodReturn bool WaitForOrder"];
m2_52 -> m2_60  [key=3, color=darkorchid, style=bold, label="method methodReturn bool WaitForOrder"];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_48  [key=2, style=dotted];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=orderTicket];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_62  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_60  [key=0, style=solid];
m2_57 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_61  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_59 -> m2_61  [key=0, style=solid];
m2_61 -> m2_52  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=2, style=dotted];
m2_81 -> m2_79  [key=0, style=bold, color=blue];
m2_32 -> m2_42  [key=0, style=solid];
m2_32 -> m2_26  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<QuantConnect.Orders.OrderTicket, bool> filter"];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=2, style=dotted];
m2_43 -> m2_32  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_38  [key=2, style=dotted];
m2_72 -> m2_70  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_38  [key=2, style=dotted];
m2_78 -> m2_76  [key=0, style=bold, color=blue];
m2_11 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=2, style=dotted];
m2_125 -> m2_11  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_127  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_66 -> m2_69  [key=2, style=dotted];
m2_66 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_23 -> m2_39  [key=0, style=solid];
m2_23 -> m2_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string tag"];
m2_23 -> m2_5  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.OrderTicket RemoveOrder"];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_5  [key=2, style=dotted];
m2_40 -> m2_23  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_68  [key=2, style=dotted];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_85 -> m2_83  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_5  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.OrderTicket AddOrder"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderRequest"];
m2_5 -> m2_14  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderRequest request"];
m2_5 -> m2_17  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderRequest request"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=submit];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_5  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_23  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.OrderTicket CancelOrder"];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_5  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Orders.OrderTicket UpdateOrder"];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_24 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=2, style=dotted];
m2_25 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=cancelledOrders];
m2_25 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=cancelledOrders];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_32  [key=2, style=dotted];
m2_26 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_26 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> d275  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=solid];
m2_28 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_24  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=3, color=darkorchid, style=bold, label="Parameter variable int orderId"];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=2, style=dotted];
m2_50 -> m2_48  [key=0, style=bold, color=blue];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_130  [key=0, style=bold, color=blue];
m2_133 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_133 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m2_134 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_135 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_122 -> m3_126  [key=0, style=solid];
m3_122 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_68  [key=2, style=dotted];
m3_127 -> m3_69  [key=2, style=dotted];
m3_127 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_127 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_71  [key=2, style=dotted];
m3_128 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_130 -> m3_132  [key=0, style=solid];
m3_130 -> m3_72  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_73  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_131  [key=0, style=solid];
m3_132 -> m3_122  [key=0, style=bold, color=blue];
m3_164 -> m3_165  [key=0, style=solid];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_3  [key=2, style=dotted];
m3_165 -> m3_163  [key=2, style=dotted];
m3_166 -> m3_164  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_3  [key=2, style=dotted];
m3_18 -> m3_4  [key=2, style=dotted];
m3_19 -> m3_17  [key=0, style=bold, color=blue];
m3_324 -> m3_325  [key=0, style=solid];
m3_325 -> m3_326  [key=0, style=solid];
m3_325 -> m3_323  [key=2, style=dotted];
m3_326 -> m3_324  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_169 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_169 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_169 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_202  [key=2, style=dotted];
m3_170 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_170 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_170 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_170 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_170 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_203  [key=2, style=dotted];
m3_171 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m3_171 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m3_171 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m3_171 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=strategyTag];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_187  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_187  [key=0, style=solid];
m3_173 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_173 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_173 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_173 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_173 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_173 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_204  [key=2, style=dotted];
m3_174 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_174 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label=optionSeq];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_206  [key=2, style=dotted];
m3_176 -> m3_207  [key=2, style=dotted];
m3_176 -> m3_208  [key=2, style=dotted];
m3_176 -> m3_209  [key=2, style=dotted];
m3_176 -> m3_210  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_213  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_215  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_200  [key=0, style=solid];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_200  [key=0, style=solid];
m3_188 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m3_188 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m3_188 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m3_188 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label=underlyingLeg];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_192  [key=0, style=solid];
m3_189 -> m3_216  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_206  [key=2, style=dotted];
m3_190 -> d292  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_41  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_105  [key=2, style=dotted];
m3_182 -> m3_173  [key=0, style=solid];
m3_182 -> m3_214  [key=2, style=dotted];
m3_185 -> m3_173  [key=0, style=solid];
m3_185 -> m3_214  [key=2, style=dotted];
m3_195 -> m3_188  [key=0, style=solid];
m3_195 -> m3_214  [key=2, style=dotted];
m3_198 -> m3_188  [key=0, style=solid];
m3_198 -> m3_214  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_183  [key=0, style=solid];
m3_179 -> m3_186  [key=0, style=solid];
m3_186 -> m3_201  [key=0, style=solid];
m3_186 -> m3_211  [key=2, style=dotted];
m3_186 -> m3_207  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_178  [key=0, style=solid];
m3_175 -> m3_205  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_212  [key=2, style=dotted];
m3_178 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=option];
m3_178 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=option];
m3_177 -> m3_201  [key=0, style=solid];
m3_177 -> m3_211  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_196  [key=0, style=solid];
m3_192 -> m3_199  [key=0, style=solid];
m3_199 -> m3_201  [key=0, style=solid];
m3_199 -> m3_211  [key=2, style=dotted];
m3_199 -> m3_207  [key=2, style=dotted];
m3_191 -> m3_201  [key=0, style=solid];
m3_191 -> m3_211  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_201 -> m3_169  [key=0, style=bold, color=blue];
m3_123 -> m3_124  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_122  [key=2, style=dotted];
m3_125 -> m3_123  [key=0, style=bold, color=blue];
m3_344 -> m3_348  [key=0, style=solid];
m3_344 -> m3_352  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_344 -> m3_354  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_344 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_344 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_348 -> m3_349  [key=0, style=solid];
m3_348 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_355  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_374  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_375  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_378  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_379  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_348 -> m3_380  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_352 -> m3_353  [key=0, style=solid];
m3_352 -> m3_354  [key=0, style=solid];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_356  [key=1, style=dashed, color=darkseagreen4, label=targetPortfolioValue];
m3_354 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label=targetPortfolioValue];
m3_358 -> m3_359  [key=0, style=solid];
m3_358 -> m3_384  [key=2, style=dotted];
m3_358 -> m3_385  [key=2, style=dotted];
m3_358 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m3_358 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=unitPrice];
m3_361 -> m3_362  [key=0, style=solid];
m3_361 -> m3_386  [key=2, style=dotted];
m3_361 -> m3_381  [key=1, style=dashed, color=darkseagreen4, label=marginRemaining];
m3_349 -> m3_350  [key=0, style=solid];
m3_353 -> m3_383  [key=0, style=solid];
m3_355 -> m3_356  [key=0, style=solid];
m3_355 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label=currentHoldingsValue];
m3_369 -> m3_370  [key=0, style=solid];
m3_369 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_373 -> m3_374  [key=0, style=solid];
m3_373 -> m3_384  [key=2, style=dotted];
m3_373 -> m3_375  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_373 -> m3_380  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_385  [key=2, style=dotted];
m3_374 -> m3_381  [key=1, style=dashed, color=darkseagreen4, label=orderValue];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_387  [key=2, style=dotted];
m3_375 -> m3_381  [key=1, style=dashed, color=darkseagreen4, label=orderFees];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_380  [key=0, style=solid];
m3_379 -> m3_380  [key=0, style=solid];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_388  [key=2, style=dotted];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_352  [key=0, style=solid];
m3_351 -> m3_383  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_356 -> m3_12  [key=2, style=dotted];
m3_356 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m3_356 -> m3_381  [key=1, style=dashed, color=darkseagreen4, label=targetOrderValue];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label=direction];
m3_357 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=direction];
m3_368 -> m3_369  [key=0, style=solid];
m3_381 -> m3_369  [key=0, style=solid];
m3_381 -> m3_382  [key=0, style=solid];
m3_382 -> m3_383  [key=0, style=solid];
m3_359 -> m3_360  [key=0, style=solid];
m3_359 -> m3_361  [key=0, style=solid];
m3_376 -> m3_377  [key=0, style=solid];
m3_360 -> m3_383  [key=0, style=solid];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_364  [key=0, style=solid];
m3_363 -> m3_383  [key=0, style=solid];
m3_364 -> m3_365  [key=0, style=solid];
m3_365 -> m3_366  [key=0, style=solid];
m3_366 -> m3_367  [key=0, style=solid];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label=feeToPriceRatio];
m3_370 -> m3_371  [key=0, style=solid];
m3_370 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_370 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_370 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=orderQuantity];
m3_371 -> m3_372  [key=0, style=solid];
m3_371 -> m3_373  [key=0, style=solid];
m3_372 -> m3_383  [key=0, style=solid];
m3_383 -> m3_344  [key=0, style=bold, color=blue];
m3_320 -> m3_321  [key=0, style=solid];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_323  [key=2, style=dotted];
m3_322 -> m3_320  [key=0, style=bold, color=blue];
m3_91 -> m3_92  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_94  [key=2, style=dotted];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_327 -> m3_328  [key=0, style=solid];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_323  [key=2, style=dotted];
m3_329 -> m3_327  [key=0, style=bold, color=blue];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_94  [key=2, style=dotted];
m3_97 -> m3_95  [key=0, style=bold, color=blue];
m3_163 -> m3_167  [key=0, style=solid];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_169  [key=2, style=dotted];
m3_168 -> m3_163  [key=0, style=bold, color=blue];
m3_65 -> m3_84  [key=0, style=solid];
m3_65 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_84 -> m3_85  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_68  [key=2, style=dotted];
m3_85 -> m3_69  [key=2, style=dotted];
m3_85 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_85 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_71  [key=2, style=dotted];
m3_86 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_88 -> m3_90  [key=0, style=solid];
m3_88 -> m3_72  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_73  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=0, style=solid];
m3_90 -> m3_65  [key=0, style=bold, color=blue];
m3_313 -> m3_314  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_75  [key=0, style=bold, color=blue];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m3_218 -> m3_219  [key=0, style=solid];
m3_220 -> m3_218  [key=0, style=bold, color=blue];
m3_314 -> m3_315  [key=0, style=solid];
m3_315 -> m3_313  [key=0, style=bold, color=blue];
m3_323 -> m3_330  [key=0, style=solid];
m3_323 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_323 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_323 -> m3_334  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_323 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_323 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_323 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_323 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_330 -> m3_331  [key=0, style=solid];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_334  [key=0, style=solid];
m3_331 -> m3_281  [key=2, style=dotted];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_206  [key=2, style=dotted];
m3_332 -> m3_227  [key=2, style=dotted];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_340  [key=0, style=solid];
m3_338 -> m3_339  [key=0, style=solid];
m3_338 -> m3_335  [key=0, style=solid];
m3_339 -> m3_335  [key=0, style=solid];
m3_339 -> m3_38  [key=2, style=dotted];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_344  [key=2, style=dotted];
m3_340 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_35  [key=2, style=dotted];
m3_333 -> m3_343  [key=0, style=solid];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_340  [key=0, style=solid];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_336 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m3_336 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label=holdingSymbol];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m3_337 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_343  [key=0, style=solid];
m3_341 -> m3_12  [key=2, style=dotted];
m3_343 -> m3_323  [key=0, style=bold, color=blue];
m3_109 -> m3_110  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_108  [key=2, style=dotted];
m3_111 -> m3_109  [key=0, style=bold, color=blue];
m3_395 -> m3_396  [key=0, style=solid];
m3_396 -> m3_397  [key=0, style=solid];
m3_396 -> m3_4  [key=2, style=dotted];
m3_397 -> m3_395  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_35  [key=2, style=dotted];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_108 -> m3_112  [key=0, style=solid];
m3_108 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_112 -> m3_113  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_68  [key=2, style=dotted];
m3_113 -> m3_69  [key=2, style=dotted];
m3_113 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_113 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_71  [key=2, style=dotted];
m3_114 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_116 -> m3_118  [key=0, style=solid];
m3_116 -> m3_72  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_73  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_117  [key=0, style=solid];
m3_118 -> m3_108  [key=0, style=bold, color=blue];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_136  [key=2, style=dotted];
m3_135 -> m3_133  [key=0, style=bold, color=blue];
m3_226 -> m3_228  [key=0, style=solid];
m3_226 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_226 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.SubmitOrderRequest"];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_230  [key=0, style=solid];
m3_229 -> m3_279  [key=0, style=solid];
m3_229 -> m3_280  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_233  [key=0, style=solid];
m3_231 -> m3_281  [key=2, style=dotted];
m3_231 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_242  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_265  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_267  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_231 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_232 -> m3_279  [key=0, style=solid];
m3_232 -> m3_206  [key=2, style=dotted];
m3_232 -> m3_282  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_235  [key=0, style=solid];
m3_234 -> m3_279  [key=0, style=solid];
m3_234 -> m3_283  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_237  [key=0, style=solid];
m3_235 -> m3_12  [key=2, style=dotted];
m3_236 -> m3_279  [key=0, style=solid];
m3_236 -> m3_207  [key=2, style=dotted];
m3_236 -> m3_284  [key=2, style=dotted];
m3_236 -> m3_12  [key=2, style=dotted];
m3_236 -> m3_282  [key=2, style=dotted];
m3_238 -> m3_279  [key=0, style=solid];
m3_238 -> m3_206  [key=2, style=dotted];
m3_238 -> m3_282  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_242  [key=0, style=solid];
m3_241 -> m3_279  [key=0, style=solid];
m3_241 -> m3_282  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_244  [key=0, style=solid];
m3_243 -> m3_279  [key=0, style=solid];
m3_243 -> m3_282  [key=2, style=dotted];
m3_245 -> m3_279  [key=0, style=solid];
m3_245 -> m3_206  [key=2, style=dotted];
m3_245 -> m3_282  [key=2, style=dotted];
m3_249 -> m3_279  [key=0, style=solid];
m3_249 -> m3_282  [key=2, style=dotted];
m3_251 -> m3_279  [key=0, style=solid];
m3_251 -> m3_282  [key=2, style=dotted];
m3_256 -> m3_279  [key=0, style=solid];
m3_256 -> m3_282  [key=2, style=dotted];
m3_258 -> m3_279  [key=0, style=solid];
m3_258 -> m3_282  [key=2, style=dotted];
m3_260 -> m3_279  [key=0, style=solid];
m3_260 -> m3_282  [key=2, style=dotted];
m3_263 -> m3_279  [key=0, style=solid];
m3_263 -> d292  [key=2, style=dotted];
m3_263 -> m3_282  [key=2, style=dotted];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_273  [key=0, style=solid];
m3_266 -> m3_279  [key=0, style=solid];
m3_266 -> m3_206  [key=2, style=dotted];
m3_266 -> m3_282  [key=2, style=dotted];
m3_268 -> m3_279  [key=0, style=solid];
m3_268 -> m3_206  [key=2, style=dotted];
m3_268 -> m3_282  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_271  [key=0, style=solid];
m3_270 -> m3_279  [key=0, style=solid];
m3_270 -> m3_206  [key=2, style=dotted];
m3_270 -> m3_282  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_273  [key=0, style=solid];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_283  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_278  [key=0, style=solid];
m3_277 -> m3_279  [key=0, style=solid];
m3_277 -> m3_282  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_288  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_239  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_244  [key=1, style=dashed, color=darkseagreen4, label=price];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_247 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_247 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_247 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label=quoteCurrency];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_252  [key=0, style=solid];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_259  [key=0, style=solid];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m3_254 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_261  [key=0, style=solid];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_267  [key=0, style=solid];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_269  [key=0, style=solid];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_286  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_278  [key=0, style=solid];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_246  [key=0, style=solid];
m3_246 -> m3_247  [key=0, style=solid];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_250  [key=0, style=solid];
m3_248 -> m3_285  [key=2, style=dotted];
m3_253 -> m3_254  [key=0, style=solid];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_257  [key=0, style=solid];
m3_255 -> m3_285  [key=2, style=dotted];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_259  [key=0, style=solid];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_264  [key=0, style=solid];
m3_262 -> m3_263  [key=0, style=solid];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_287  [key=2, style=dotted];
m3_279 -> m3_226  [key=0, style=bold, color=blue];
m3_398 -> m3_399  [key=0, style=solid];
m3_399 -> m3_400  [key=0, style=solid];
m3_399 -> m3_403  [key=2, style=dotted];
m3_399 -> m3_404  [key=2, style=dotted];
m3_399 -> m3_401  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m3_400 -> m3_401  [key=0, style=solid];
m3_400 -> m3_405  [key=2, style=dotted];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_406  [key=2, style=dotted];
m3_402 -> m3_398  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_4  [key=2, style=dotted];
m3_31 -> m3_29  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=2, style=dotted];
m3_34 -> m3_32  [key=0, style=bold, color=blue];
m3_78 -> m3_79  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_65  [key=2, style=dotted];
m3_80 -> m3_78  [key=0, style=bold, color=blue];
m3_389 -> m3_390  [key=0, style=solid];
m3_390 -> m3_391  [key=0, style=solid];
m3_390 -> m3_38  [key=2, style=dotted];
m3_391 -> m3_389  [key=0, style=bold, color=blue];
m3_71 -> m3_221  [key=0, style=solid];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_226  [key=2, style=dotted];
m3_221 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_221 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_224  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_227  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_225 -> m3_71  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_8  [key=2, style=dotted];
m3_21 -> m3_4  [key=2, style=dotted];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [key=2, style=dotted];
m3_121 -> m3_119  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_3  [key=2, style=dotted];
m3_161 -> m3_163  [key=2, style=dotted];
m3_162 -> m3_160  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_35  [key=2, style=dotted];
m3_46 -> m3_44  [key=0, style=bold, color=blue];
m3_392 -> m3_393  [key=0, style=solid];
m3_393 -> m3_394  [key=0, style=solid];
m3_393 -> m3_4  [key=2, style=dotted];
m3_394 -> m3_392  [key=0, style=bold, color=blue];
m3_81 -> m3_82  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_65  [key=2, style=dotted];
m3_83 -> m3_81  [key=0, style=bold, color=blue];
m3_136 -> m3_140  [key=0, style=solid];
m3_136 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_140 -> m3_141  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_68  [key=2, style=dotted];
m3_141 -> m3_69  [key=2, style=dotted];
m3_141 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_141 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_71  [key=2, style=dotted];
m3_142 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_144 -> m3_146  [key=0, style=solid];
m3_144 -> m3_72  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_73  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [key=0, style=solid];
m3_146 -> m3_136  [key=0, style=bold, color=blue];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_108  [key=2, style=dotted];
m3_107 -> m3_105  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_10 -> m3_4  [key=2, style=dotted];
m3_11 -> m3_9  [key=0, style=bold, color=blue];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_147 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_68  [key=2, style=dotted];
m3_149 -> m3_69  [key=2, style=dotted];
m3_149 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_149 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_149 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_149 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_158  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_152  [key=0, style=solid];
m3_151 -> m3_159  [key=0, style=solid];
m3_151 -> m3_70  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_71  [key=2, style=dotted];
m3_152 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=preOrderCheckResponse];
m3_154 -> m3_159  [key=0, style=solid];
m3_154 -> m3_72  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_73  [key=2, style=dotted];
m3_155 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_155 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_155  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_74  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_147  [key=0, style=bold, color=blue];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_318  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_317 -> m3_318  [key=0, style=solid];
m3_317 -> m3_319  [key=0, style=solid];
m3_318 -> m3_319  [key=0, style=solid];
m3_319 -> m3_316  [key=0, style=bold, color=blue];
m3_4 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_35  [key=2, style=dotted];
m3_37 -> m3_4  [key=0, style=bold, color=blue];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_35  [key=2, style=dotted];
m3_43 -> m3_41  [key=0, style=bold, color=blue];
m3_94 -> m3_98  [key=0, style=solid];
m3_94 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_68  [key=2, style=dotted];
m3_99 -> m3_69  [key=2, style=dotted];
m3_99 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_99 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_71  [key=2, style=dotted];
m3_100 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_102 -> m3_104  [key=0, style=solid];
m3_102 -> m3_72  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_73  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_103  [key=0, style=solid];
m3_104 -> m3_94  [key=0, style=bold, color=blue];
m3_345 -> m3_346  [key=0, style=solid];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_344  [key=2, style=dotted];
m3_347 -> m3_345  [key=0, style=bold, color=blue];
m3_35 -> m3_47  [key=0, style=solid];
m3_35 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_35 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m3_35 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_47 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_47 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=security];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_65  [key=2, style=dotted];
m3_49 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m3_49 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m3_49 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=mooTicket];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_68  [key=2, style=dotted];
m3_54 -> m3_69  [key=2, style=dotted];
m3_54 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_54 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_54 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_54 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=request];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_54  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_66  [key=2, style=dotted];
m3_50 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_67  [key=2, style=dotted];
m3_53 -> m3_64  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_57  [key=0, style=solid];
m3_56 -> m3_64  [key=0, style=solid];
m3_56 -> m3_70  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_71  [key=2, style=dotted];
m3_57 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=preOrderCheckResponse];
m3_59 -> m3_64  [key=0, style=solid];
m3_59 -> m3_72  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_73  [key=2, style=dotted];
m3_60 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_60 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_74  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_35  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=2, style=dotted];
m3_14 -> m3_4  [key=2, style=dotted];
m3_15 -> m3_13  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_16  [key=2, style=dotted];
m3_24 -> m3_4  [key=2, style=dotted];
m3_25 -> m3_23  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_4  [key=2, style=dotted];
m3_7 -> m3_5  [key=0, style=bold, color=blue];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m3_289 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_289 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_202  [key=2, style=dotted];
m3_290 -> m3_306  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m3_290 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label=orderIdList];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_291  [key=0, style=solid];
m3_302 -> m3_297  [key=0, style=solid];
m3_302 -> m3_312  [key=2, style=dotted];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_38  [key=2, style=dotted];
m3_304 -> m3_306  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_307  [key=0, style=solid];
m3_291 -> m3_309  [key=2, style=dotted];
m3_291 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_291 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_291 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_291 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m3_306 -> m3_291  [key=0, style=solid];
m3_306 -> m3_214  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_310  [key=2, style=dotted];
m3_293 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_293 -> m3_297  [key=1, style=dashed, color=darkseagreen4, label=orders];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_294 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_291  [key=0, style=solid];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_303  [key=0, style=solid];
m3_297 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_297 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_291  [key=0, style=solid];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_301  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_296 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_301 -> m3_297  [key=0, style=solid];
m3_301 -> m3_301  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_301 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=marketOrdersQuantity];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_302  [key=0, style=solid];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_311  [key=2, style=dotted];
m3_299 -> m3_301  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_297  [key=0, style=solid];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_291  [key=0, style=solid];
m3_308 -> m3_289  [key=0, style=bold, color=blue];
m3_69 -> m3_407  [key=0, style=solid];
m3_407 -> m3_408  [key=0, style=solid];
m3_407 -> m3_409  [key=2, style=dotted];
m3_408 -> m3_69  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_12  [key=2, style=dotted];
m3_27 -> m3_4  [key=2, style=dotted];
m3_28 -> m3_26  [key=0, style=bold, color=blue];
m3_137 -> m3_138  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_136  [key=2, style=dotted];
m3_139 -> m3_137  [key=0, style=bold, color=blue];
m3_410 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_328  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_354  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_390  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_393  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_400  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_410 -> m3_407  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m3_411 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.OptionStrategy"];
m3_412 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label=optionLeg];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Auxiliary.MapFileResolver"];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IFactorFileProvider"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_30 -> m5_34  [key=0, style=solid];
m5_30 -> m5_37  [key=1, style=dashed, color=red, label="System.DateTime"];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_34 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_37 -> m5_39  [key=0, style=solid, color=red];
m5_37 -> m5_41  [key=2, style=dotted, color=red];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_38  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid, color=red];
m5_36 -> m5_40  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_38  [key=3, color=darkorchid, style=bold, label="Local variable decimal orderFee"];
m5_39 -> m5_30  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_10 -> m5_8  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_27  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_25  [key=0, style=bold, color=crimson];
m5_14 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_14 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest"];
m5_25 -> m5_24  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_28  [key=2, style=dotted];
m5_16 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=sourceFactory];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_26  [key=0, style=solid];
m5_17 -> m5_29  [key=2, style=dotted];
m5_17 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=date];
m5_17 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=date];
m5_17 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=date];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=currentSymbol];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_30  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_31  [key=2, style=dotted];
m5_20 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=source];
m5_20 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=source];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_32  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_33  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_17  [key=0, style=solid];
m5_26 -> m5_14  [key=0, style=bold, color=blue];
m5_11 -> m5_12  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_42 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m5_42 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory"];
m6_130 -> m6_241  [key=0, style=solid, color=green];
m6_130 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m6_130 -> m6_113  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m6_130 -> m6_116  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal stopPrice"];
m6_241 -> m6_242  [key=0, style=solid, color=green];
m6_241 -> m6_234  [key=2, style=dotted, color=green];
m6_241 -> m6_250  [key=1, style=dashed, color=green, label=resetEvent];
m6_241 -> m6_245  [key=1, style=dashed, color=green, label=resetEvent];
m6_242 -> m6_242  [key=3, color=green, style=bold, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> handler"];
m6_242 -> m6_243  [key=0, style=solid, color=green];
m6_242 -> m6_246  [key=1, style=dashed, color=green, label=handler];
m6_245 -> m6_236  [key=2, style=dotted];
m6_245 -> m6_246  [key=0, style=solid];
m6_243 -> m6_244  [key=0, style=solid];
m6_246 -> m6_247  [key=0, style=solid];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_248  [key=2, style=dotted];
m6_247 -> m6_130  [key=0, style=bold, color=blue];
m6_155 -> m6_156  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid, color=green];
m6_163 -> m6_143  [key=2, style=dotted, color=green];
m6_163 -> m6_43  [key=2, style=dotted, color=green];
m6_162 -> m6_163  [key=0, style=solid, color=green];
m6_162 -> m6_61  [key=2, style=dotted];
m6_162 -> m6_63  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_59  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_98  [key=2, style=dotted];
m6_157 -> d278  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_73  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_142  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_61  [key=2, style=dotted];
m6_160 -> m6_62  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_142  [key=2, style=dotted];
m6_164 -> m6_155  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_20  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_8  [key=2, style=dotted];
m6_5 -> m6_20  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_21  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_36 -> m6_34  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_59  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_82  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_82  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_97  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_98  [key=2, style=dotted];
m6_185 -> d278  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_97  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_98  [key=2, style=dotted];
m6_187 -> d278  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_97  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_98  [key=2, style=dotted];
m6_189 -> d278  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_100  [key=2, style=dotted];
m6_191 -> m6_101  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_192 -> m6_101  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_143  [key=2, style=dotted];
m6_193 -> m6_43  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_142  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_61  [key=2, style=dotted];
m6_195 -> m6_62  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_142  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_61  [key=2, style=dotted];
m6_197 -> m6_63  [key=2, style=dotted];
m6_198 -> m6_180  [key=0, style=bold, color=blue];
m6_19 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters"];
m6_19 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters"];
m6_19 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters"];
m6_19 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters"];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_22  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_59  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_73  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_97  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_98  [key=2, style=dotted];
m6_213 -> d278  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_97  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_98  [key=2, style=dotted];
m6_215 -> d278  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_97  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_98  [key=2, style=dotted];
m6_217 -> d278  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_97  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_98  [key=2, style=dotted];
m6_219 -> d278  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_100  [key=2, style=dotted];
m6_221 -> m6_143  [key=2, style=dotted];
m6_221 -> m6_43  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_222 -> m6_143  [key=2, style=dotted];
m6_222 -> m6_43  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_223 -> m6_143  [key=2, style=dotted];
m6_223 -> m6_43  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_225 -> m6_143  [key=2, style=dotted];
m6_225 -> m6_43  [key=2, style=dotted];
m6_225 -> m6_226  [key=0, style=solid];
m6_226 -> m6_209  [key=0, style=bold, color=blue];
m6_83 -> m6_84  [key=0, style=solid];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_59  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_97  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_98  [key=2, style=dotted];
m6_86 -> d278  [key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_97  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_98  [key=2, style=dotted];
m6_88 -> d278  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_100  [key=2, style=dotted];
m6_90 -> m6_101  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_91 -> m6_101  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_60  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_61  [key=2, style=dotted];
m6_93 -> m6_62  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_60  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_61  [key=2, style=dotted];
m6_95 -> m6_63  [key=2, style=dotted];
m6_96 -> m6_83  [key=0, style=bold, color=blue];
m6_102 -> m6_103  [key=0, style=solid];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_59  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_82  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_82  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_97  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_98  [key=2, style=dotted];
m6_107 -> d278  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_97  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_98  [key=2, style=dotted];
m6_109 -> d278  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_97  [key=2, style=dotted];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_98  [key=2, style=dotted];
m6_111 -> d278  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_100  [key=2, style=dotted];
m6_113 -> m6_101  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_114 -> m6_101  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_101  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_116 -> m6_130  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_60  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_61  [key=2, style=dotted];
m6_118 -> m6_62  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_60  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_61  [key=2, style=dotted];
m6_120 -> m6_63  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_60  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_61  [key=2, style=dotted];
m6_122 -> m6_62  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_60  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_61  [key=2, style=dotted];
m6_124 -> m6_63  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_131  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_61  [key=2, style=dotted];
m6_126 -> m6_62  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_131  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_61  [key=2, style=dotted];
m6_128 -> m6_63  [key=2, style=dotted];
m6_129 -> m6_102  [key=0, style=bold, color=blue];
m6_249 -> m6_250  [key=0, style=solid, color=green];
m6_238 -> m6_239  [key=0, style=solid, color=green];
m6_238 -> m6_240  [key=2, style=dotted, color=green];
m6_237 -> m6_238  [key=0, style=solid, color=green];
m6_239 -> m6_237  [key=0, style=bold, color=blue];
m6_250 -> m6_251  [key=0, style=solid, color=green];
m6_250 -> m6_240  [key=2, style=dotted, color=green];
m6_251 -> m6_249  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=tz];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=tz];
m6_12 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=tz];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=limit];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=limit];
m6_13 -> m6_29  [key=2, style=dotted];
m6_13 -> m6_30  [key=2, style=dotted];
m6_13 -> m6_31  [key=2, style=dotted];
m6_13 -> m6_32  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=0, style=solid];
m6_14 -> m6_29  [key=2, style=dotted];
m6_14 -> m6_30  [key=2, style=dotted];
m6_14 -> m6_31  [key=2, style=dotted];
m6_14 -> m6_32  [key=2, style=dotted];
m6_15 -> m6_17  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_29  [key=2, style=dotted];
m6_15 -> m6_30  [key=2, style=dotted];
m6_15 -> m6_31  [key=2, style=dotted];
m6_15 -> m6_32  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_29  [key=2, style=dotted];
m6_16 -> m6_30  [key=2, style=dotted];
m6_16 -> m6_31  [key=2, style=dotted];
m6_16 -> m6_32  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_33  [key=2, style=dotted];
m6_18 -> m6_12  [key=0, style=bold, color=blue];
m6_18 -> m6_0  [key=0, style=bold, color=blue];
m6_50 -> m6_51  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_59  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_60  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_61  [key=2, style=dotted];
m6_53 -> m6_62  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_60  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_61  [key=2, style=dotted];
m6_55 -> m6_63  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_60  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_61  [key=2, style=dotted];
m6_57 -> m6_63  [key=2, style=dotted];
m6_58 -> m6_50  [key=0, style=bold, color=blue];
m6_64 -> m6_65  [key=0, style=solid];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_73  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_60  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_61  [key=2, style=dotted];
m6_67 -> m6_62  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_60  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_61  [key=2, style=dotted];
m6_69 -> m6_63  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_60  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_61  [key=2, style=dotted];
m6_71 -> m6_63  [key=2, style=dotted];
m6_72 -> m6_64  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_19  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_20  [key=2, style=dotted];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_23  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_24  [key=2, style=dotted];
m6_9 -> m6_25  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_26  [key=2, style=dotted];
m6_10 -> m6_27  [key=2, style=dotted];
m6_10 -> m6_7  [key=2, style=dotted];
m6_10 -> m6_8  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_28  [key=2, style=dotted];
m6_11 -> m6_9  [key=0, style=bold, color=blue];
m6_45 -> m6_46  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_47 -> m6_43  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_42  [key=2, style=dotted];
m6_48 -> m6_45  [key=0, style=bold, color=blue];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_59  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_207  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_60  [key=2, style=dotted];
m6_202 -> m6_205  [key=1, style=dashed, color=darkseagreen4, label=order];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_61  [key=2, style=dotted];
m6_203 -> m6_63  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_208  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_61  [key=2, style=dotted];
m6_205 -> m6_62  [key=2, style=dotted];
m6_206 -> m6_199  [key=0, style=bold, color=blue];
m6_132 -> m6_133  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_59  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_98  [key=2, style=dotted];
m6_134 -> d278  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_142  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_61  [key=2, style=dotted];
m6_136 -> m6_63  [key=2, style=dotted];
m6_137 -> m6_143  [key=2, style=dotted];
m6_137 -> m6_43  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_98  [key=2, style=dotted];
m6_138 -> d278  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_142  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_61  [key=2, style=dotted];
m6_140 -> m6_62  [key=2, style=dotted];
m6_141 -> m6_132  [key=0, style=bold, color=blue];
m6_101 -> m6_227  [key=0, style=solid, color=green];
m6_101 -> m6_230  [key=1, style=dashed, color=green, label="QuantConnect.Symbol"];
m6_101 -> m6_90  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal limitPrice"];
m6_101 -> m6_105  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m6_101 -> m6_113  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m6_101 -> m6_114  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m6_101 -> m6_104  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal quantity"];
m6_101 -> m6_4  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal limitPrice"];
m6_101 -> m6_5  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal limitPrice"];
m6_227 -> m6_228  [key=0, style=solid, color=green];
m6_227 -> m6_234  [key=2, style=dotted, color=green];
m6_227 -> m6_238  [key=1, style=dashed, color=green, label=resetEvent];
m6_227 -> m6_231  [key=1, style=dashed, color=green, label=resetEvent];
m6_228 -> m6_228  [key=3, color=green, style=bold, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> handler"];
m6_228 -> m6_229  [key=0, style=solid, color=green];
m6_228 -> m6_232  [key=1, style=dashed, color=green, label=handler];
m6_231 -> m6_232  [key=0, style=solid, color=green];
m6_231 -> m6_236  [key=2, style=dotted, color=green];
m6_230 -> m6_231  [key=0, style=solid, color=green];
m6_230 -> m6_235  [key=2, style=dotted, color=green];
m6_229 -> m6_230  [key=0, style=solid, color=green];
m6_232 -> m6_233  [key=0, style=solid, color=green];
m6_233 -> m6_101  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_43  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_42  [key=2, style=dotted];
m6_40 -> m6_43  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_44  [key=2, style=dotted];
m6_41 -> m6_38  [key=0, style=bold, color=blue];
m6_144 -> m6_145  [key=0, style=solid];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_73  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_98  [key=2, style=dotted];
m6_146 -> d278  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_142  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_61  [key=2, style=dotted];
m6_148 -> m6_63  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_150 -> m6_143  [key=2, style=dotted];
m6_150 -> m6_43  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_98  [key=2, style=dotted];
m6_151 -> d278  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_142  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_61  [key=2, style=dotted];
m6_153 -> m6_62  [key=2, style=dotted];
m6_154 -> m6_144  [key=0, style=bold, color=blue];
m6_165 -> m6_166  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_59  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_97  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_98  [key=2, style=dotted];
m6_168 -> d278  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_97  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_98  [key=2, style=dotted];
m6_170 -> d278  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_100  [key=2, style=dotted];
m6_172 -> m6_101  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_173 -> m6_101  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_174 -> m6_143  [key=2, style=dotted];
m6_174 -> m6_43  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_142  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_61  [key=2, style=dotted];
m6_176 -> m6_62  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_142  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_61  [key=2, style=dotted];
m6_178 -> m6_63  [key=2, style=dotted];
m6_179 -> m6_165  [key=0, style=bold, color=blue];
m6_74 -> m6_75  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_59  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_82  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_60  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_61  [key=2, style=dotted];
m6_78 -> m6_62  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_60  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_61  [key=2, style=dotted];
m6_80 -> m6_63  [key=2, style=dotted];
m6_81 -> m6_74  [key=0, style=bold, color=blue];
m6_252 -> m6_163  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_230  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_229  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_232  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_173  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_197  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_252 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.CashBuyingPowerModelTests"];
m6_253 -> m6_238  [key=1, style=dashed, color=green, label=resetEvent];
m6_254 -> m6_250  [key=1, style=dashed, color=green, label=resetEvent];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_59  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_48  [key=0, style=bold, color=crimson];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_49  [key=0, style=solid];
m8_5 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_5 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=request];
m8_48 -> m8_47  [key=0, style=solid];
m8_48 -> m8_81  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_50  [key=2, style=dotted];
m8_6 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=interval];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_9 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=end];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_46  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_52  [key=2, style=dotted];
m8_12 -> m8_53  [key=2, style=dotted];
m8_12 -> m8_12  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_60  [key=2, style=dotted];
m8_19 -> m8_61  [key=2, style=dotted];
m8_19 -> m8_62  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_63  [key=2, style=dotted];
m8_20 -> m8_61  [key=2, style=dotted];
m8_20 -> m8_64  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_67  [key=2, style=dotted];
m8_23 -> m8_68  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_46  [key=0, style=solid];
m8_31 -> m8_73  [key=2, style=dotted];
m8_33 -> m8_46  [key=0, style=solid];
m8_33 -> m8_74  [key=2, style=dotted];
m8_37 -> m8_46  [key=0, style=solid];
m8_37 -> m8_76  [key=2, style=dotted];
m8_39 -> m8_11  [key=0, style=solid];
m8_39 -> m8_77  [key=2, style=dotted];
m8_39 -> m8_76  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_80  [key=2, style=dotted];
m8_44 -> m8_73  [key=2, style=dotted];
m8_45 -> m8_11  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_73  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> d250  [key=2, style=dotted];
m8_7 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=history];
m8_7 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=history];
m8_7 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=history];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_58  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=lastEndTime];
m8_8 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=lastEndTime];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_78  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_5  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_60  [key=2, style=dotted];
m8_21 -> m8_61  [key=2, style=dotted];
m8_21 -> m8_65  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_63  [key=2, style=dotted];
m8_22 -> m8_61  [key=2, style=dotted];
m8_22 -> m8_66  [key=2, style=dotted];
m8_35 -> m8_49  [key=0, style=solid];
m8_35 -> m8_75  [key=2, style=dotted];
m8_35 -> m8_52  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=0, style=solid];
m8_36 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m8_36 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=attempt];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_54  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_55  [key=2, style=dotted];
m8_14 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_14 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=mdr];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_56  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_57  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_69  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_70  [key=2, style=dotted];
m8_27 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=autoResetEvent];
m8_28 -> m8_29  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_40  [key=0, style=solid];
m8_30 -> m8_72  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_71  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_79  [key=2, style=dotted];
m8_42 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=firstDateUtc];
m8_49 -> m8_4  [key=0, style=bold, color=blue];
m8_82 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m8_82 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage"];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_76 -> m10_77  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_79  [key=2, style=dotted];
m10_78 -> m10_75  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_19  [key=2, style=dotted];
m10_31 -> m10_20  [key=2, style=dotted];
m10_32 -> m10_30  [key=0, style=bold, color=blue];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_82  [key=0, style=bold, color=blue];
m10_84 -> m10_85  [key=0, style=solid];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_87  [key=2, style=dotted];
m10_86 -> m10_84  [key=0, style=bold, color=blue];
m10_20 -> m10_59  [key=0, style=solid];
m10_20 -> m10_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime date"];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_59 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_59 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_59 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_66  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_67  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_68  [key=2, style=dotted];
m10_64 -> m10_65  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m10_61 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label=security];
m10_61 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=security];
m10_61 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=security];
m10_65 -> m10_60  [key=0, style=solid];
m10_65 -> m10_69  [key=2, style=dotted];
m10_65 -> m10_58  [key=2, style=dotted];
m10_66 -> m10_20  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_47  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=time];
m10_36 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label=time];
m10_47 -> m10_48  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_50  [key=2, style=dotted];
m10_37 -> m10_51  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_52  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_40  [key=0, style=solid];
m10_41 -> m10_54  [key=2, style=dotted];
m10_41 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m10_41 -> m10_43  [key=1, style=dashed, color=red, label=scheduledEvent];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_53  [key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_35  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid, color=red];
m10_43 -> m10_44  [key=0, style=solid, color=red];
m10_43 -> m10_43  [key=1, style=dashed, color=red, label=scheduledEvent];
m10_43 -> m10_45  [key=1, style=dashed, color=red, label=errorMessage];
m10_43 -> m10_46  [key=1, style=dashed, color=red, label=errorMessage];
m10_44 -> m10_45  [key=0, style=solid, color=red];
m10_44 -> d264  [key=2, style=dotted, color=red];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_56  [key=2, style=dotted];
m10_46 -> m10_40  [key=0, style=solid];
m10_46 -> m10_57  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_58  [key=2, style=dotted];
m10_49 -> m10_33  [key=0, style=bold, color=blue];
m10_80 -> m10_81  [key=0, style=solid];
m10_81 -> m10_80  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m10_0 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_29  [key=2, style=dotted];
m10_15 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_18  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_19  [key=2, style=dotted];
m10_5 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=todayInAlgorithmTimeZone];
m10_5 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label=todayInAlgorithmTimeZone];
m10_5 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label=todayInAlgorithmTimeZone];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_20  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_21  [key=2, style=dotted];
m10_7 -> m10_22  [key=2, style=dotted];
m10_7 -> m10_23  [key=2, style=dotted];
m10_7 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=date];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_26  [key=2, style=dotted];
m10_9 -> m10_25  [key=2, style=dotted];
m10_13 -> m10_10  [key=0, style=solid];
m10_13 -> m10_28  [key=2, style=dotted];
m10_13 -> m10_25  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_24  [key=2, style=dotted];
m10_8 -> m10_25  [key=2, style=dotted];
m10_8 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_14  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m10_11 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label=security];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_17  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_10  [key=0, style=solid];
m10_12 -> m10_27  [key=2, style=dotted];
m10_16 -> m10_14  [key=0, style=solid];
m10_16 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label=scheduledEvent];
m10_17 -> m10_0  [key=0, style=bold, color=blue];
m10_25 -> m10_70  [key=0, style=solid];
m10_25 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m10_25 -> m10_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_29  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_74  [key=2, style=dotted];
m10_73 -> m10_25  [key=0, style=bold, color=blue];
m10_88 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m10_88 -> m10_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler"];
m12_112 -> m12_239  [key=0, style=solid];
m12_112 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_112 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_112 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_112 -> m12_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_112 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_112 -> m12_79  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m12_239 -> m12_240  [key=0, style=solid];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_249  [key=0, style=solid];
m12_240 -> m12_234  [key=2, style=dotted];
m12_240 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label=queued];
m12_241 -> m12_242  [key=0, style=solid];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_247  [key=0, style=solid];
m12_243 -> m12_251  [key=2, style=dotted];
m12_248 -> m12_250  [key=0, style=solid];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_108  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_244 -> m12_245  [key=0, style=solid];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_250  [key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> d450  [key=2, style=dotted];
m12_246 -> m12_247  [key=0, style=solid];
m12_250 -> m12_112  [key=0, style=bold, color=blue];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [key=2, style=dotted];
m12_34 -> m12_32  [key=0, style=bold, color=blue];
m12_235 -> m12_237  [key=0, style=solid];
m12_235 -> m12_222  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m12_237 -> m12_238  [key=0, style=solid];
m12_238 -> m12_235  [key=0, style=bold, color=blue];
m12_143 -> m12_153  [key=0, style=solid];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_155  [key=0, style=solid];
m12_153 -> m12_172  [key=2, style=dotted];
m12_154 -> m12_170  [key=0, style=solid];
m12_154 -> m12_171  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_114  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_173  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_160  [key=0, style=solid];
m12_157 -> m12_174  [key=2, style=dotted];
m12_157 -> m12_162  [key=1, style=dashed, color=darkseagreen4, label=balances];
m12_158 -> m12_159  [key=0, style=solid];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_162  [key=0, style=solid];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_169  [key=0, style=solid];
m12_162 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label=balance];
m12_162 -> m12_165  [key=1, style=dashed, color=darkseagreen4, label=balance];
m12_162 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label=balance];
m12_162 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label=balance];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> d450  [key=2, style=dotted];
m12_161 -> m12_170  [key=0, style=solid];
m12_161 -> m12_171  [key=0, style=solid];
m12_163 -> m12_164  [key=0, style=solid];
m12_169 -> m12_170  [key=0, style=solid];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_168  [key=0, style=solid];
m12_164 -> m12_175  [key=2, style=dotted];
m12_164 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=cash];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label=delta];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_178  [key=2, style=dotted];
m12_167 -> m12_179  [key=2, style=dotted];
m12_168 -> m12_162  [key=0, style=solid];
m12_168 -> m12_180  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_168  [key=0, style=solid];
m12_166 -> m12_176  [key=2, style=dotted];
m12_166 -> m12_177  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_142  [key=2, style=dotted];
m12_170 -> m12_181  [key=2, style=dotted];
m12_170 -> m12_182  [key=2, style=dotted];
m12_170 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_170 -> m12_154  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.TickType tickType"];
m12_171 -> m12_143  [key=0, style=bold, color=blue];
m12_31 -> m12_271  [key=0, style=solid];
m12_31 -> m12_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m12_31 -> m12_9  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.AccountEvent account"];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_273  [key=1, style=dashed, color=darkseagreen4, label=delta];
m12_273 -> m12_274  [key=0, style=solid];
m12_273 -> m12_217  [key=2, style=dotted];
m12_273 -> m12_114  [key=2, style=dotted];
m12_272 -> m12_273  [key=0, style=solid];
m12_272 -> m12_274  [key=0, style=solid];
m12_274 -> m12_31  [key=0, style=bold, color=blue];
m12_183 -> m12_184  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_31  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_22 -> m12_20  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_26 -> m12_24  [key=0, style=bold, color=blue];
m12_28 -> m12_29  [key=0, style=solid];
m12_30 -> m12_28  [key=0, style=bold, color=blue];
m12_45 -> m12_46  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_46 -> m12_44  [key=0, style=bold, color=blue];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_56  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_56  [key=2, style=dotted];
m12_58 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m12_53 -> m12_54  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_55 -> m12_53  [key=0, style=bold, color=blue];
m12_59 -> m12_57  [key=0, style=bold, color=blue];
m12_73 -> m12_74  [key=0, style=solid];
m12_70 -> m12_71  [key=0, style=solid];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m12_72 -> m12_70  [key=0, style=bold, color=blue];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m12_75 -> m12_73  [key=0, style=bold, color=blue];
m12_147 -> m12_148  [key=0, style=solid];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m12_150 -> m12_151  [key=0, style=solid];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>"];
m12_149 -> m12_147  [key=0, style=bold, color=blue];
m12_152 -> m12_150  [key=0, style=bold, color=blue];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_187  [key=0, style=solid];
m12_184 -> m12_142  [key=2, style=dotted];
m12_185 -> m12_186  [key=0, style=solid];
m12_187 -> m12_188  [key=0, style=solid];
m12_186 -> m12_189  [key=0, style=solid];
m12_186 -> m12_114  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_114  [key=2, style=dotted];
m12_189 -> m12_183  [key=0, style=bold, color=blue];
m12_76 -> m12_77  [key=0, style=solid];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_101  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_104  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_114  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_83  [key=0, style=solid];
m12_80 -> m12_105  [key=2, style=dotted];
m12_80 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_80 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_106  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_87  [key=0, style=solid];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_108  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_77  [key=0, style=solid];
m12_85 -> m12_109  [key=2, style=dotted];
m12_86 -> m12_77  [key=0, style=solid];
m12_86 -> m12_108  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_90  [key=0, style=solid];
m12_87 -> m12_92  [key=0, style=solid];
m12_87 -> m12_94  [key=0, style=solid];
m12_89 -> m12_100  [key=0, style=solid];
m12_89 -> m12_110  [key=2, style=dotted];
m12_91 -> m12_100  [key=0, style=solid];
m12_91 -> m12_111  [key=2, style=dotted];
m12_93 -> m12_100  [key=0, style=solid];
m12_93 -> m12_112  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_108  [key=2, style=dotted];
m12_82 -> m12_77  [key=0, style=solid];
m12_82 -> m12_107  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_90 -> m12_91  [key=0, style=solid];
m12_92 -> m12_93  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_97 -> m12_98  [key=0, style=solid];
m12_98 -> m12_99  [key=0, style=solid];
m12_100 -> m12_77  [key=0, style=solid];
m12_100 -> m12_113  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_103 -> m12_76  [key=0, style=bold, color=blue];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_157  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m12_191 -> m12_192  [key=0, style=solid];
m12_192 -> m12_190  [key=0, style=bold, color=blue];
m12_111 -> m12_222  [key=0, style=solid];
m12_111 -> m12_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_111 -> m12_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_111 -> m12_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_111 -> m12_231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_111 -> m12_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_111 -> m12_79  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m12_222 -> m12_223  [key=0, style=solid];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_232  [key=0, style=solid];
m12_223 -> m12_234  [key=2, style=dotted];
m12_223 -> m12_235  [key=2, style=dotted];
m12_223 -> m12_223  [key=1, style=dashed, color=darkseagreen4, label=queued];
m12_224 -> m12_225  [key=0, style=solid];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_230  [key=0, style=solid];
m12_226 -> m12_236  [key=2, style=dotted];
m12_231 -> m12_233  [key=0, style=solid];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_108  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_227 -> m12_228  [key=0, style=solid];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_233  [key=0, style=solid];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> d450  [key=2, style=dotted];
m12_229 -> m12_230  [key=0, style=solid];
m12_233 -> m12_111  [key=0, style=bold, color=blue];
m12_116 -> m12_117  [key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_123  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_139  [key=2, style=dotted];
m12_118 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label=spinWait];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_125  [key=0, style=solid];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_121  [key=0, style=solid];
m12_120 -> m12_119  [key=0, style=solid];
m12_120 -> m12_140  [key=2, style=dotted];
m12_120 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label=spinWait];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_141  [key=2, style=dotted];
m12_122 -> m12_138  [key=0, style=solid];
m12_124 -> m12_125  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_130  [key=0, style=solid];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_128  [key=0, style=solid];
m12_126 -> m12_130  [key=0, style=solid];
m12_126 -> m12_142  [key=2, style=dotted];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_134  [key=1, style=dashed, color=darkseagreen4, label=maxOrdersToKeep];
m12_130 -> m12_130  [key=3, color=darkorchid, style=bold, label="Local variable int maxOrdersToKeep"];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_130  [key=0, style=solid];
m12_127 -> m12_143  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> d450  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_133  [key=0, style=solid];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label=lowestOrderIdToKeep];
m12_132 -> m12_138  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_145  [key=2, style=dotted];
m12_133 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_138  [key=0, style=solid];
m12_135 -> m12_69  [key=2, style=dotted];
m12_135 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_135 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label=item];
m12_136 -> m12_137  [key=0, style=solid];
m12_137 -> m12_135  [key=0, style=solid];
m12_137 -> m12_146  [key=2, style=dotted];
m12_138 -> m12_116  [key=0, style=bold, color=blue];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_47 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_47 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_42  [key=2, style=dotted];
m12_48 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_48 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_42  [key=2, style=dotted];
m12_50 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_47  [key=0, style=bold, color=blue];
m12_110 -> m12_193  [key=0, style=solid];
m12_110 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m12_110 -> m12_79  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_214  [key=0, style=solid];
m12_193 -> m12_109  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_198  [key=0, style=solid];
m12_194 -> m12_216  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_217  [key=2, style=dotted];
m12_196 -> m12_218  [key=2, style=dotted];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_205  [key=0, style=solid];
m12_199 -> m12_219  [key=2, style=dotted];
m12_199 -> m12_201  [key=1, style=dashed, color=darkseagreen4, label=message];
m12_199 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label=message];
m12_200 -> m12_201  [key=0, style=solid];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_220  [key=2, style=dotted];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_210  [key=0, style=solid];
m12_206 -> m12_221  [key=2, style=dotted];
m12_211 -> m12_215  [key=0, style=solid];
m12_212 -> m12_213  [key=0, style=solid];
m12_213 -> m12_215  [key=0, style=solid];
m12_213 -> m12_218  [key=2, style=dotted];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_108  [key=2, style=dotted];
m12_198 -> m12_199  [key=0, style=solid];
m12_197 -> m12_215  [key=0, style=solid];
m12_205 -> m12_206  [key=0, style=solid];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_203  [key=0, style=solid];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_218  [key=2, style=dotted];
m12_204 -> m12_215  [key=0, style=solid];
m12_207 -> m12_208  [key=0, style=solid];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_212  [key=0, style=solid];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> d450  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_215 -> m12_110  [key=0, style=bold, color=blue];
m12_113 -> m12_115  [key=0, style=solid];
m12_115 -> m12_113  [key=0, style=bold, color=blue];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Orders.Order, bool>"];
m12_60 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Orders.Order, bool>"];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_63  [key=0, style=solid];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_65  [key=0, style=solid];
m12_64 -> m12_66  [key=0, style=solid];
m12_64 -> m12_68  [key=2, style=dotted];
m12_64 -> m12_69  [key=2, style=dotted];
m12_64 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_62 -> m12_66  [key=0, style=solid];
m12_62 -> m12_67  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_68  [key=2, style=dotted];
m12_65 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_66 -> m12_60  [key=0, style=bold, color=blue];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_36 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_42  [key=2, style=dotted];
m12_37 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_37 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_43  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_40  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_41 -> m12_36  [key=0, style=bold, color=blue];
m12_219 -> m12_219  [key=3, color=darkorchid, style=bold, label="Field variable bool _syncedLiveBrokerageCashToday"];
m12_27 -> m12_275  [key=0, style=solid];
m12_27 -> m12_276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityEvent"];
m12_27 -> m12_277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityEvent"];
m12_27 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityEvent"];
m12_27 -> m12_8  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.SecurityEvent holding"];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_277  [key=1, style=dashed, color=darkseagreen4, label=securityHolding];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_278  [key=1, style=dashed, color=darkseagreen4, label=deltaQuantity];
m12_276 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label=deltaQuantity];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label=deltaAvgPrice];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_281  [key=2, style=dotted];
m12_279 -> m12_114  [key=2, style=dotted];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_280  [key=0, style=solid];
m12_280 -> m12_27  [key=0, style=bold, color=blue];
m12_23 -> m12_252  [key=0, style=solid];
m12_23 -> m12_254  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_23 -> m12_7  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent fill"];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_266  [key=2, style=dotted];
m12_252 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_108  [key=2, style=dotted];
m12_256 -> m12_257  [key=0, style=solid];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_260  [key=0, style=solid];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_268  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_265  [key=0, style=solid];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_269  [key=2, style=dotted];
m12_262 -> m12_263  [key=0, style=solid];
m12_262 -> m12_265  [key=0, style=solid];
m12_262 -> m12_270  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_256  [key=0, style=solid];
m12_255 -> m12_265  [key=0, style=solid];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_267  [key=2, style=dotted];
m12_263 -> m12_264  [key=0, style=solid];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_218  [key=2, style=dotted];
m12_265 -> m12_23  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m12_0 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m12_0 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_2 -> m12_15  [key=0, style=solid];
m12_2 -> m12_16  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityEvent"];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m12_10 -> m12_11  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_17  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_18  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_19  [key=2, style=dotted];
m12_15 -> m12_0  [key=0, style=bold, color=blue];
m12_282 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_252  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_282 -> m12_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m12_283 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_284 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_284 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_285 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label=lowestOrderIdToKeep];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m14_33 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m14_33 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_33 -> m14_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m14_34 -> m14_34  [key=3, color=darkorchid, style=bold, label="Local variable bool initializeComplete"];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_48  [key=0, style=solid];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_36 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_36 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_36 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_36 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_36 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_59  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_60  [key=2, style=dotted];
m14_38 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_38 -> m14_56  [key=0, style=solid];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_61  [key=2, style=dotted];
m14_39 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_39 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_39 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_62  [key=2, style=dotted];
m14_40 -> m14_42  [key=0, style=solid];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_51  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_48  [key=0, style=solid];
m14_42 -> m14_13  [key=2, style=dotted];
m14_47 -> m14_49  [key=0, style=solid];
m14_47 -> m14_52  [key=0, style=solid];
m14_47 -> m14_51  [key=0, style=solid];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_65  [key=2, style=dotted];
m14_54 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m14_54 -> m14_52  [key=0, style=bold, color=blue];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_66  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_67  [key=2, style=dotted];
m14_56 -> m14_58  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_67  [key=0, style=solid];
m14_48 -> m14_52  [key=0, style=solid];
m14_48 -> m14_24  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_50  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_41  [key=0, style=solid];
m14_44 -> m14_45  [key=0, style=solid];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_47  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_35  [key=2, style=dotted];
m14_46 -> m14_37  [key=2, style=dotted];
m14_46 -> m14_34  [key=2, style=dotted];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_35  [key=2, style=dotted];
m14_49 -> m14_36  [key=2, style=dotted];
m14_49 -> m14_34  [key=2, style=dotted];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_54  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_63  [key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_64  [key=2, style=dotted];
m14_51 -> m14_39  [key=0, style=bold, color=blue];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m14_53 -> m14_55  [key=2, style=dotted];
m14_58 -> m14_33  [key=0, style=bold, color=blue];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_60  [key=0, style=solid];
m14_28 -> m14_38  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_22 -> m14_32  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_66 -> m14_67  [key=0, style=solid, color=green];
m14_66 -> m14_70  [key=2, style=dotted, color=green];
m14_65 -> m14_66  [key=0, style=solid, color=green];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_69  [key=2, style=dotted];
m14_62 -> m14_67  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_68  [key=2, style=dotted];
m14_61 -> m14_67  [key=0, style=solid];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_63  [key=0, style=solid];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_68  [key=2, style=dotted];
m14_60 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label=handler];
m14_60 -> m14_61  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_67 -> m14_38  [key=0, style=bold, color=blue];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_20  [key=2, style=dotted];
m14_13 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m14_13 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m14_70 -> m14_68  [key=0, style=bold, color=blue];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_31  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_28  [key=2, style=dotted];
m14_26 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_32  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_30  [key=0, style=solid];
m14_27 -> m14_25  [key=0, style=bold, color=blue];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_35  [key=2, style=dotted];
m14_27 -> m14_37  [key=2, style=dotted];
m14_27 -> m14_34  [key=2, style=dotted];
m14_31 -> m14_29  [key=0, style=bold, color=blue];
m14_31 -> m14_16  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_68 -> m14_69  [key=0, style=solid];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_35  [key=2, style=dotted];
m14_24 -> m14_36  [key=2, style=dotted];
m14_24 -> m14_34  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="System.Action<string, System.DateTime>"];
m14_4 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerator<System.DateTime>"];
m14_4 -> m14_8  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_12  [key=2, style=dotted];
m14_5 -> d250  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_0  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_13  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_4  [key=0, style=bold, color=blue];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m14_10 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_10 -> m14_12  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance"];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_14 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_14 -> m14_21  [key=2, style=dotted];
m14_14 -> m14_22  [key=2, style=dotted];
m14_14 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [key=0, style=solid];
m14_15 -> m14_23  [key=2, style=dotted];
m14_15 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_25  [key=0, style=solid];
m14_17 -> m14_19  [key=0, style=solid];
m14_17 -> m14_24  [key=2, style=dotted];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_23  [key=0, style=solid];
m14_18 -> m14_13  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_21  [key=0, style=solid];
m14_19 -> m14_10  [key=0, style=bold, color=blue];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_33  [key=2, style=dotted];
m14_20 -> m14_34  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_16 -> m14_32  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [key=0, style=solid];
m14_32 -> m14_14  [key=0, style=bold, color=blue];
m14_32 -> m14_71  [key=0, style=solid];
m14_32 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_32 -> m14_13  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedTypeName"];
m14_32 -> m14_69  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchTypeName"];
m14_11 -> m14_12  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_73  [key=0, style=solid];
m14_71 -> m14_75  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_76  [key=2, style=dotted];
m14_73 -> m14_77  [key=2, style=dotted];
m14_72 -> m14_74  [key=0, style=solid];
m14_74 -> m14_32  [key=0, style=bold, color=blue];
m14_74 -> m14_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_74 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Scheduling.ScheduledEvent"];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_78  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_7  [key=2, style=dotted];
m14_80 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_80 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m14_81 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m14_81 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
}
