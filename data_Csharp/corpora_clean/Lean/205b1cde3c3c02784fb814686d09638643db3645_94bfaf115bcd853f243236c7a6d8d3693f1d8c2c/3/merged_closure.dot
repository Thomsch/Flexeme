digraph  {
m3_32 [cluster="System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingSetupHandler.cs", label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_42 [cluster="System.Math.Abs(decimal)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m3_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1358-1358"];
m3_43 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="67-67"];
m3_40 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Math.Abs(chain.Underlying.Price - x.Strike)", span="66-66"];
m3_39 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="66-66"];
m3_41 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="66-66"];
m3_44 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="x.Expiry", span="67-67"];
m3_45 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="67-67"];
m3_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m3_34 [cluster="QuantConnect.Securities.Option.OptionStrategies.Straddle(QuantConnect.Symbol, decimal, System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Option.OptionStrategies.Straddle(QuantConnect.Symbol, decimal, System.DateTime)", span="168-168"];
m3_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344"];
m3_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m3_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m3_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", span="36-36"];
m3_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="SetStartDate(2015, 12, 24)", span="38-38"];
m3_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="SetEndDate(2015, 12, 24)", span="39-39"];
m3_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="SetCash(1000000)", span="40-40"];
m3_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m3_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="var option = AddOption(UnderlyingTicker)", span="43-43"];
m3_6 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m3_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="SetBenchmark(equity.Symbol)", span="51-51"];
m3_7 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="option.SetFilter(-2, +2, TimeSpan.Zero, TimeSpan.FromDays(180))", span="48-48"];
m3_9 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.Initialize()", span="36-36"];
m3_16 [cluster="System.TimeSpan.FromDays(double)", file="BacktestingSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m3_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636"];
m3_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m3_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m3_30 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m3_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m3_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m3_19 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m3_20 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="!Portfolio.Invested", span="60-60"];
m3_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="63-63"];
m3_27 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="slice.Bars", span="81-81"];
m3_21 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="OptionChain chain", span="62-62"];
m3_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="Liquidate()", span="78-78"];
m3_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="var atmStraddle = chain\r\n                        .OrderBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Expiry)\r\n                        .FirstOrDefault()", span="65-68"];
m3_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="atmStraddle != null", span="70-70"];
m3_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="Sell(OptionStrategies.Straddle(OptionSymbol, atmStraddle.Strike, atmStraddle.Expiry), 2)", span="72-72"];
m3_28 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="Console.WriteLine(''---> OnData: {0}, {1}, {2}'', Time, kpv.Key.Value, kpv.Value.Close.ToString(''0.00''))", span="83-83"];
m3_29 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m3_46 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="92-92"];
m3_47 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingSetupHandler.cs", label="Log(orderEvent.ToString())", span="94-94"];
m3_48 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="92-92"];
m3_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m3_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976"];
m3_38 [cluster="System.Console.WriteLine(string, object, object, object)", file="BacktestingSetupHandler.cs", label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0"];
m3_49 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m3_37 [cluster="decimal.ToString(string)", file="BacktestingSetupHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m3_51 [file="BacktestingSetupHandler.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", span=""];
m3_52 [file="BacktestingSetupHandler.cs", label=chain, span=""];
m5_86 [cluster="Unk.GetEntry", file="Cash.cs", label="Entry Unk.GetEntry", span=""];
m5_135 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Cash.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_73 [cluster="Unk.Where", file="Cash.cs", label="Entry Unk.Where", span=""];
m5_124 [cluster="decimal.RoundToSignificantDigits(int)", file="Cash.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m5_91 [cluster="Unk.Trace", file="Cash.cs", label="Entry Unk.Trace", span=""];
m5_79 [cluster="Unk.Concat", file="Cash.cs", label="Entry Unk.Concat", span=""];
m5_17 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m5_18 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label=_locker, span="103-103"];
m5_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Amount += amount", span="105-105"];
m5_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="return Amount;", span="106-106"];
m5_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m5_9 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m5_10 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_isBaseCurrency, span="85-85"];
m5_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="var rate = data.Value", span="87-87"];
m5_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="return;", span="85-85"];
m5_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label=_invertRealTimePrice, span="88-88"];
m5_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="rate = 1/rate", span="90-90"];
m5_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="ConversionRate = rate", span="92-92"];
m5_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m5_83 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Cash.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m5_119 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="225-225"];
m5_121 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="229-229"];
m5_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="225-225"];
m5_81 [cluster="Unk.Min", file="Cash.cs", label="Entry Unk.Min", span=""];
m5_116 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="178-178"];
m5_107 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="174-174"];
m5_111 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="175-175"];
m5_114 [cluster="lambda expression", file="Cash.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="176-176"];
m5_93 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="146-147"];
m5_96 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m5_99 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m5_102 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="164-164"];
m5_106 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="174-174"];
m5_110 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="175-175"];
m5_113 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="176-176"];
m5_94 [cluster="lambda expression", file="Cash.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="146-147"];
m5_95 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="146-147"];
m5_97 [cluster="lambda expression", file="Cash.cs", label="x.SecurityType", span="164-164"];
m5_98 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m5_100 [cluster="lambda expression", file="Cash.cs", label="x.Key", span="164-164"];
m5_101 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m5_103 [cluster="lambda expression", file="Cash.cs", label="y.First().ID.Market", span="164-164"];
m5_104 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="164-164"];
m5_108 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="174-174"];
m5_112 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="175-175"];
m5_115 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="176-176"];
m5_117 [cluster="lambda expression", file="Cash.cs", label="x.Resolution", span="178-178"];
m5_118 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="178-178"];
m5_127 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Cash.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m5_90 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m5_85 [cluster="Unk.ToString", file="Cash.cs", label="Entry Unk.ToString", span=""];
m5_76 [cluster="Unk.ContainsKey", file="Cash.cs", label="Entry Unk.ContainsKey", span=""];
m5_87 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m5_82 [cluster="Unk.GetSymbolProperties", file="Cash.cs", label="Entry Unk.GetSymbolProperties", span=""];
m5_136 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Cash.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m5_89 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m5_129 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="239-239"];
m5_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="string market", span="241-241"];
m5_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="!markets.TryGetValue(securityType, out market)", span="242-242"];
m5_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="market = marketMap[securityType]", span="244-244"];
m5_133 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="247-247"];
m5_134 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="239-239"];
m5_7 [cluster="System.ArgumentException.ArgumentException(string)", file="Cash.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m5_23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label=_locker, span="116-116"];
m5_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Amount = amount", span="118-118"];
m5_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m5_77 [cluster="Unk.Add", file="Cash.cs", label="Entry Unk.Add", span=""];
m5_8 [cluster="string.ToUpper()", file="Cash.cs", label="Entry string.ToUpper()", span="0-0"];
m5_88 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="Cash.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m5_125 [cluster="System.Math.Round(decimal, int)", file="Cash.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m5_84 [cluster="Exception.cstr", file="Cash.cs", label="Entry Exception.cstr", span=""];
m5_128 [cluster="string.Format(string, params object[])", file="Cash.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m5_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m5_109 [cluster="Unk.CreateSymbol", file="Cash.cs", label="Entry Unk.CreateSymbol", span=""];
m5_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m5_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="symbol == null || symbol.Length != 3", span="70-70"];
m5_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Amount = amount", span="74-74"];
m5_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="ConversionRate = conversionRate", span="75-75"];
m5_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Symbol = symbol.ToUpper()", span="76-76"];
m5_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="72-72"];
m5_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m5_92 [cluster="string.Format(string, object, object)", file="Cash.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="193-193"];
m5_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m5_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Symbol == CashBook.AccountCurrency", span="135-135"];
m5_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="146-147"];
m5_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="164-164"];
m5_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="174-176"];
m5_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="178-178"];
m5_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="186-186"];
m5_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="188-188"];
m5_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="192-192"];
m5_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="195-195"];
m5_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securities.Add(config.Symbol, security)", span="211-211"];
m5_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="137-137"];
m5_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="144-144"];
m5_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_isBaseCurrency = true", span="138-138"];
m5_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="ConversionRate = 1.0m", span="139-139"];
m5_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="140-140"];
m5_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="145-145"];
m5_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == normal", span="149-149"];
m5_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="symbol.Value == normal || symbol.Value == invert", span="182-182"];
m5_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="config.Symbol.Value == invert", span="154-154"];
m5_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = symbol.Value == invert", span="184-184"];
m5_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="151-151"];
m5_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="156-156"];
m5_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="152-152"];
m5_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="_invertRealTimePrice = true", span="157-157"];
m5_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return null;", span="158-158"];
m5_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="165-165"];
m5_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="167-167"];
m5_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="169-169"];
m5_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="171-171"];
m5_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label=potentials, span="180-180"];
m5_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="179-179"];
m5_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="218-218"];
m5_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="var securityType = symbol.ID.SecurityType", span="185-185"];
m5_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="212-212"];
m5_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Cfd", span="199-199"];
m5_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="securityType == SecurityType.Crypto", span="203-203"];
m5_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Cash quoteCash", span="187-187"];
m5_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="201-201"];
m5_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="205-205"];
m5_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="209-209"];
m5_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="SecuritySymbol = config.Symbol", span="196-196"];
m5_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Security security", span="198-198"];
m5_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="return security;", span="213-213"];
m5_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="Cash.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m5_105 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_78 [cluster="Unk.Select", file="Cash.cs", label="Entry Unk.Select", span=""];
m5_75 [cluster="Unk.ToDictionary", file="Cash.cs", label="Entry Unk.ToDictionary", span=""];
m5_80 [cluster="Unk.DefaultIfEmpty", file="Cash.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m5_126 [cluster="decimal.ToString(string)", file="Cash.cs", label="Entry decimal.ToString(string)", span="0-0"];
m5_137 [file="Cash.cs", label="QuantConnect.Securities.Cash", span=""];
m5_138 [file="Cash.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m5_139 [file="Cash.cs", label=markets, span=""];
m6_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m6_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="CommissionReport = commissionReport", span="35-35"];
m6_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m6_3 [file="CommissionReportEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span=""];
m7_22 [cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="30-30"];
m7_10 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m7_0 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41"];
m7_1 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="message = null", span="43-43"];
m7_2 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="var securityType = order.SecurityType", span="45-45"];
m7_6 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="!CanExecuteOrder(security, order)", span="55-55"];
m7_3 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="securityType != SecurityType.Equity", span="46-46"];
m7_4 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model only supports equities.''\r\n                    )", span="48-50"];
m7_5 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="return false;", span="52-52"];
m7_7 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ExtendedMarket'',\r\n                    ''Tradier does not support extended market hours trading.  Your order will be processed at market open.''\r\n                    )", span="57-59"];
m7_8 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="return true;", span="63-63"];
m7_9 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41"];
m7_17 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="92-92"];
m7_18 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="ConsoleLogHandler.cs", label="security.Type == SecurityType.Equity", span="94-94"];
m7_19 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="ConsoleLogHandler.cs", label="return new ConstantFeeTransactionModel(1m);", span="97-97"];
m7_20 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="ConsoleLogHandler.cs", label="return new ConstantFeeTransactionModel(0m);", span="102-102"];
m7_21 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="92-92"];
m7_11 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="76-76"];
m7_12 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="var timeOfDay = security.Time.TimeOfDay", span="79-79"];
m7_13 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="timeOfDay < EquityExchange.MarketOpen || timeOfDay > EquityExchange.MarketClose", span="80-80"];
m7_14 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="return false;", span="82-82"];
m7_15 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="return true;", span="84-84"];
m7_16 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="76-76"];
m7_23 [file="ConsoleLogHandler.cs", label="QuantConnect.Brokerages.TradierBrokerageModel", span=""];
m8_40 [cluster="Unk.Where", file="DefaultMarginCallModel.cs", label="Entry Unk.Where", span=""];
m8_14 [cluster="Unk.AddRange", file="DefaultMarginCallModel.cs", label="Entry Unk.AddRange", span=""];
m8_18 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="46-46"];
m8_33 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="DefaultMarginCallModel.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", prediction=0, span="99-99"];
m8_32 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="OptionChain chain", span="98-98"];
m8_34 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17))\r\n                            .FirstOrDefault()", span="101-104"];
m8_19 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="new PortfolioTarget(s, 0)", span="46-46"];
m8_20 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="46-46"];
m8_22 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="70-70"];
m8_25 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="70-70"];
m8_27 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32"];
m8_30 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="73-73"];
m8_31 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel", span=""];
m8_35 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="contract.BidPrice != 0.05m", span="106-106"];
m8_24 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="75-75"];
m8_28 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="73-73"];
m8_29 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Symbol", span="73-73"];
m8_36 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="throw new Exception(''Regression test failed: current bid price was not loaded from FOXA file and is not $0.05'');", span="108-108"];
m8_21 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.PortfolioTarget(QuantConnect.Symbol, decimal)", span="40-40"];
m8_23 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="_removedSymbols = changes.RemovedSecurities.Select(x => x.Symbol).ToList()", span="73-73"];
m8_26 [cluster="Unk.ToList", file="DefaultMarginCallModel.cs", label="Entry Unk.ToList", span=""];
m8_37 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m8_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m8_48 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="69-69"];
m8_52 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="102-102"];
m8_55 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="103-103"];
m8_54 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="102-102"];
m8_53 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Expiry", span="102-102"];
m8_57 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="103-103"];
m8_56 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17)", span="103-103"];
m8_45 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="68-68"];
m8_47 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="68-68"];
m8_46 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Expiry", span="68-68"];
m8_49 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17)", span="69-69"];
m8_50 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="69-69"];
m8_58 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m8_59 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DefaultMarginCallModel.cs", label="Log(orderEvent.ToString())", span="122-122"];
m8_60 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m8_43 [cluster="System.Exception.Exception(string)", file="DefaultMarginCallModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m8_51 [cluster="System.DateTime.DateTime(int, int, int)", file="DefaultMarginCallModel.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_13 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m8_10 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="DefaultMarginCallModel.cs", label="return targets;", span="62-62"];
m8_0 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m8_1 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="DefaultMarginCallModel.cs", label="SetStartDate(2013, 06, 28)", prediction=0, span="38-38"];
m8_8 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="DefaultMarginCallModel.cs", label="SetBenchmark(equity.Symbol)", prediction=0, span="51-51"];
m8_9 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m8_2 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="DefaultMarginCallModel.cs", label="SetEndDate(2013, 07, 02)", prediction=0, span="39-39"];
m8_3 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="DefaultMarginCallModel.cs", label="SetCash(1000000)", prediction=0, span="40-40"];
m8_5 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="DefaultMarginCallModel.cs", label="var option = AddOption(UnderlyingTicker)", span="43-43"];
m8_4 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="DefaultMarginCallModel.cs", label="var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m8_6 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="DefaultMarginCallModel.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m8_7 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="DefaultMarginCallModel.cs", label="option.SetFilter(-1, +1, TimeSpan.Zero, TimeSpan.MaxValue)", prediction=0, span="48-48"];
m8_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m8_41 [cluster="Unk.FirstOrDefault", file="DefaultMarginCallModel.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_16 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m8_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636"];
m8_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m8_38 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m8_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m8_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m8_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976"];
m8_42 [cluster="Unk.Buy", file="DefaultMarginCallModel.cs", label="Entry Unk.Buy", span=""];
m8_61 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m8_63 [file="DefaultMarginCallModel.cs", label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", span=""];
m9_20 [cluster="Unk.OnSecuritiesChanged", file="DisposableExtensions.cs", label="Entry Unk.OnSecuritiesChanged", span=""];
m9_8 [cluster="Unk.Select", file="DisposableExtensions.cs", label="Entry Unk.Select", span=""];
m9_11 [cluster="lambda expression", file="DisposableExtensions.cs", label="new Tick {Time = x, Symbol = request.Configuration.Symbol}", span="55-55"];
m9_12 [cluster="lambda expression", file="DisposableExtensions.cs", label="Exit lambda expression", span="55-55"];
m9_13 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="DisposableExtensions.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m9_14 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="DisposableExtensions.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory", span=""];
m9_15 [cluster="Unk.Execute", file="DisposableExtensions.cs", label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", span=""];
m9_16 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DisposableExtensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="68-68"];
m9_17 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DisposableExtensions.cs", label="Py.GIL()", span="70-70"];
m9_18 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DisposableExtensions.cs", label="_model.OnSecuritiesChanged(algorithm, changes)", span="72-72"];
m9_19 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DisposableExtensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="68-68"];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", file="DisposableExtensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", span="34-34"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", color=green, community=0, file="DisposableExtensions.cs", label="Py.GIL()", prediction=6, span="36-36"];
m9_2 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", color=green, community=0, file="DisposableExtensions.cs", label="new[] { ''Execute'', ''OnSecuritiesChanged'' }", prediction=6, span="38-38"];
m9_3 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", file="DisposableExtensions.cs", label="!model.HasAttr(attributeName)", span="40-40"];
m9_9 [cluster="System.NotImplementedException.NotImplementedException(string)", file="DisposableExtensions.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m9_10 [cluster="lambda expression", file="DisposableExtensions.cs", label="Entry lambda expression", span="55-55"];
m9_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="DisposableExtensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m9_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="DisposableExtensions.cs", label="return _universe.GetTriggerTimes(request.StartTimeUtc, request.EndTimeUtc, _marketHoursDatabase)\r\n                .Select(x => new Tick {Time = x, Symbol = request.Configuration.Symbol}).GetEnumerator();", span="54-55"];
m9_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="DisposableExtensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m9_7 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="DisposableExtensions.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="193-193"];
m9_21 [file="DisposableExtensions.cs", label="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper", span=""];
m10_5 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33"];
m10_32 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="var result = disposable.DisposeSafely(error => errorHandlerWasInvoked = true)", prediction=8, span="45-45"];
m10_7 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18"];
m10_13 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="DisposableExtensionsTests.cs", label="Execution = new ExecutionModelPythonWrapper(execution)", span="59-59"];
m10_40 [cluster="QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", span="34-34"];
m10_41 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Disposable(bool)", file="DisposableExtensionsTests.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m10_36 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="DisposableExtensionsTests.cs", label="SetRiskManagement(model)", span="106-106"];
m10_42 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", color=green, community=0, file="DisposableExtensionsTests.cs", label=DisposeWasCalled, prediction=9, span="62-62"];
m10_43 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", color=green, community=0, file="DisposableExtensionsTests.cs", label="throw new ObjectDisposedException(GetType().FullName);", prediction=9, span="64-64"];
m10_44 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="DisposeWasCalled = true", span="67-67"];
m10_45 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label=_throwException, span="69-69"];
m10_46 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="throw new Exception();", span="71-71"];
m10_47 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable.Dispose()", span="60-60"];
m10_49 [cluster="object.GetType()", file="DisposableExtensionsTests.cs", label="Entry object.GetType()", span="0-0"];
m10_24 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", span="34-34"];
m10_37 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="DisposableExtensionsTests.cs", label="RiskManagement = new RiskManagementModelPythonWrapper(riskManagement)", span="110-110"];
m10_38 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", color=green, community=0, file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", prediction=11, span="101-101"];
m10_39 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="237-237"];
m10_25 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84"];
m10_26 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="DisposableExtensionsTests.cs", label="IUniverseSelectionModel model", span="86-86"];
m10_31 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="Assert.IsTrue(disposable.DisposeWasCalled)", prediction=12, span="43-43"];
m10_6 [cluster="PyObject.TryConvert<T>(out T)", file="DisposableExtensionsTests.cs", label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037"];
m10_27 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", span="38-38"];
m10_29 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="var disposable = new Disposable()", prediction=12, span="41-41"];
m10_28 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="var errorHandlerWasInvoked = false", prediction=14, span="40-40"];
m10_30 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="disposable.Dispose()", prediction=15, span="42-42"];
m10_9 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="var result = disposable.DisposeSafely()", span="21-21"];
m10_10 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Assert.IsTrue(result)", span="22-22"];
m10_11 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Assert.IsTrue(disposable.DisposeWasCalled)", span="23-23"];
m10_12 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsTrueOnSuccessfulDisposal()", span="18-18"];
m10_14 [cluster="Unk.IsTrue", file="DisposableExtensionsTests.cs", label="Entry Unk.IsTrue", span=""];
m10_0 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10"];
m10_1 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="DisposableExtensionsTests.cs", label="IDisposable disposable = null", span="12-12"];
m10_2 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="DisposableExtensionsTests.cs", label="var result = disposable.DisposeSafely()", span="13-13"];
m10_4 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", span="10-10"];
m10_3 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.ReturnsFalseForNullDisposable()", file="DisposableExtensionsTests.cs", label="Assert.IsFalse(result)", span="14-14"];
m10_23 [cluster="System.IDisposable.DisposeSafely(System.Action<System.Exception>)", file="DisposableExtensionsTests.cs", label="Entry System.IDisposable.DisposeSafely(System.Action<System.Exception>)", span="29-29"];
m10_16 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="var errorHandlerWasInvoked = false", span="29-29"];
m10_33 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="Assert.IsTrue(result)", prediction=16, span="46-46"];
m10_34 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", color=green, community=0, file="DisposableExtensionsTests.cs", label="Assert.IsFalse(errorHandlerWasInvoked)", prediction=8, span="47-47"];
m10_35 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Tests.Common.Util.DisposableExtensionsTests.SwallowsObjectDisposedException()", span="38-38"];
m10_48 [cluster="System.ObjectDisposedException.ObjectDisposedException(string)", file="DisposableExtensionsTests.cs", label="Entry System.ObjectDisposedException.ObjectDisposedException(string)", span="0-0"];
m10_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34"];
m10_15 [cluster="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Tests.Common.Util.DisposableExtensionsTests.InvokesErrorHandlerOnExceptionDuringDispose()", span="27-27"];
m10_50 [cluster="System.Exception.Exception()", file="DisposableExtensionsTests.cs", label="Entry System.Exception.Exception()", span="0-0"];
m10_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m10_21 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="PortfolioConstruction = new PortfolioConstructionModelPythonWrapper(portfolioConstruction)", span="76-76"];
m10_20 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="SetPortfolioConstruction(model)", span="72-72"];
m10_18 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="IPortfolioConstructionModel model", span="69-69"];
m10_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="portfolioConstruction.TryConvert(out model)", span="70-70"];
m10_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="DisposableExtensionsTests.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m10_51 [file="DisposableExtensionsTests.cs", label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", span=""];
m11_10 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ToString()", span="74-74"];
m11_11 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="ExecutionDetailsEventArgs.cs", label="return string.Format(''{0} order for {1} unit{2} of {3} at stop {4}'', Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol, StopPrice);", span="76-76"];
m11_12 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ToString()", span="74-74"];
m11_13 [cluster="string.Format(string, params object[])", file="ExecutionDetailsEventArgs.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m11_0 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m11_1 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="ExecutionDetailsEventArgs.cs", label="Type = OrderType.StopMarket", span="42-42"];
m11_2 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m11_9 [cluster="decimal.ToString(string)", file="ExecutionDetailsEventArgs.cs", label="Entry decimal.ToString(string)", span="0-0"];
m11_3 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m11_6 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="ExecutionDetailsEventArgs.cs", label="tag == ''''", span="60-60"];
m11_7 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="ExecutionDetailsEventArgs.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="63-63"];
m11_5 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="ExecutionDetailsEventArgs.cs", label="Type = OrderType.StopMarket", span="58-58"];
m11_8 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m11_14 [file="ExecutionDetailsEventArgs.cs", label="QuantConnect.Orders.StopMarketOrder", span=""];
m12_307 [cluster="Unk.ToDateTimeUtc", file="Extensions.cs", label="Entry Unk.ToDateTimeUtc", span=""];
m12_371 [cluster="System.TimeSpan.FromHours(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m12_86 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Extensions.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m12_20 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m12_315 [cluster="System.Timers.Timer.Stop()", file="Extensions.cs", label="Entry System.Timers.Timer.Stop()", span="0-0"];
m12_281 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="567-567"];
m12_282 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="d == TimeSpan.Zero", span="569-569"];
m12_283 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return time;", span="572-572"];
m12_284 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="574-574"];
m12_285 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="567-567"];
m12_233 [cluster="System.IO.StreamWriter.Flush()", file="Extensions.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m12_279 [cluster="System.DateTime.DateTime(long)", file="Extensions.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m12_425 [cluster="Unk.SingleOrDefault", file="Extensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m12_157 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToInt64(string)", span="313-313"];
m12_158 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="long value = 0", span="315-315"];
m12_160 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="i < str.Length", span="316-316"];
m12_161 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="value = value * 10 + (str[i] - '0')", span="318-318"];
m12_159 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="var i = 0", span="316-316"];
m12_163 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="return value;", span="320-320"];
m12_162 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="i++", span="316-316"];
m12_164 [cluster="QuantConnect.Extensions.ToInt64(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToInt64(string)", span="313-313"];
m12_203 [cluster="string.Trim(params char[])", file="Extensions.cs", label="Entry string.Trim(params char[])", span="0-0"];
m12_0 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45"];
m12_1 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="var oItem = list[oldIndex]", span="47-47"];
m12_2 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="list.RemoveAt(oldIndex)", span="48-48"];
m12_3 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="newIndex > oldIndex", span="49-49"];
m12_4 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="newIndex--", span="49-49"];
m12_5 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="list.Insert(newIndex, oItem)", span="50-50"];
m12_6 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45"];
m12_337 [cluster="System.Type.GetGenericTypeDefinition()", file="Extensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m12_94 [cluster="System.Math.Log10(double)", file="Extensions.cs", label="Entry System.Math.Log10(double)", span="0-0"];
m12_434 [cluster="string.ToLower()", file="Extensions.cs", label="Entry string.ToLower()", span="0-0"];
m12_390 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Extensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m12_389 [cluster="System.Enum.Parse(System.Type, string)", file="Extensions.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m12_209 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetDecimalEpsilon()", span="400-400"];
m12_210 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="return new decimal(1, 0, 0, false, 27);", span="402-402"];
m12_211 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetDecimalEpsilon()", span="400-400"];
m12_53 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m12_54 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="136-136"];
m12_55 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="Extensions.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="134-134"];
m12_399 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="808-808"];
m12_400 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="return waitHandle.WaitOne((int) timeout.TotalMilliseconds, cancellationToken);", span="810-810"];
m12_401 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="808-808"];
m12_258 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="513-513"];
m12_259 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="516-516"];
m12_260 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="return dateTime;", span="516-516"];
m12_261 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="var rounded = dateTime.RoundDown(interval)", span="518-518"];
m12_262 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="519-519"];
m12_263 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="rounded -= interval", span="521-521"];
m12_264 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="return rounded;", span="523-523"];
m12_265 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="513-513"];
m12_40 [cluster="System.Text.StringBuilder.Append(string)", file="Extensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m12_256 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m12_124 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
m12_125 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="long value = 0", span="250-250"];
m12_129 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var length = str.Length", span="254-254"];
m12_130 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index < length && char.IsWhiteSpace(str[index])", span="256-256"];
m12_132 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var isNegative = index < length && str[index] == '-'", span="261-261"];
m12_136 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var ch = str[index++]", span="269-269"];
m12_126 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var decimalPlaces = 0", span="251-251"];
m12_141 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="value = value * 10 + (ch - '0')", span="281-281"];
m12_143 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var lo = (int)value", span="286-286"];
m12_144 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var mid = (int)(value >> 32)", span="287-287"];
m12_127 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var hasDecimals = false", span="252-252"];
m12_142 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="decimalPlaces++", span="282-282"];
m12_145 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="return new decimal(lo, mid, 0, isNegative, (byte)(hasDecimals ? decimalPlaces : 0));", span="288-288"];
m12_128 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="var index = 0", span="253-253"];
m12_131 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index++", span="258-258"];
m12_134 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index++", span="264-264"];
m12_135 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="index < length", span="267-267"];
m12_133 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label=isNegative, span="262-262"];
m12_137 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="ch == '.'", span="270-270"];
m12_140 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="char.IsWhiteSpace(ch)", span="275-275"];
m12_138 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="hasDecimals = true", span="272-272"];
m12_139 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="decimalPlaces = 0", span="273-273"];
m12_146 [cluster="QuantConnect.Extensions.ToDecimal(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
m12_348 [cluster="Unk.Join", file="Extensions.cs", label="Entry Unk.Join", span=""];
m12_35 [cluster="System.Text.StringBuilder.StringBuilder()", file="Extensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m12_7 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m12_37 [cluster="System.Text.Encoding.GetBytes(string)", file="Extensions.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m12_68 [cluster="System.Func<T, TResult>.Invoke(T)", file="Extensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_183 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_231 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="Extensions.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m12_16 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m12_17 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="T item", span="73-73"];
m12_18 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="queue.TryDequeue(out item)", span="74-74"];
m12_19 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71"];
m12_373 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Extensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m12_42 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m12_43 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var crypt = new SHA256Managed()", span="115-115"];
m12_45 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="117-117"];
m12_44 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="var hash = new StringBuilder()", span="116-116"];
m12_47 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="hash.Append(theByte.ToString(''x2''))", span="120-120"];
m12_48 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="return hash.ToString();", span="122-122"];
m12_46 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label=crypto, span="118-118"];
m12_49 [cluster="QuantConnect.Extensions.ToSHA256(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToSHA256(string)", span="113-113"];
m12_234 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="442-442"];
m12_235 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="roundingInterval == TimeSpan.Zero", span="444-444"];
m12_236 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="return time;", span="447-447"];
m12_237 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="return new TimeSpan(\r\n                Convert.ToInt64(Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="450-455"];
m12_238 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="442-442"];
m12_410 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0"];
m12_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m12_219 [cluster="System.Math.Max(int, int)", file="Extensions.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m12_349 [cluster="Unk.Replace", file="Extensions.cs", label="Entry Unk.Replace", span=""];
m12_104 [cluster="System.Math.Abs(decimal)", file="Extensions.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m12_317 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="653-653"];
m12_318 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.AssemblyQualifiedName == typeName", span="655-655"];
m12_320 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.FullName == typeName", span="659-659"];
m12_322 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="type.Name == typeName", span="663-663"];
m12_319 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="657-657"];
m12_321 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="661-661"];
m12_323 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return true;", span="665-665"];
m12_324 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="return false;", span="667-667"];
m12_325 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="653-653"];
m12_298 [cluster="Unk.AtLeniently", file="Extensions.cs", label="Entry Unk.AtLeniently", span=""];
m12_93 [cluster="System.Math.Abs(double)", file="Extensions.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m12_115 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SafeDecimalCast(double)", span="227-227"];
m12_116 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="input <= (double) decimal.MinValue", span="229-229"];
m12_118 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="input >= (double) decimal.MaxValue", span="230-230"];
m12_120 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return (decimal) input;", span="231-231"];
m12_117 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return decimal.MinValue;", span="229-229"];
m12_119 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="return decimal.MaxValue;", span="230-230"];
m12_121 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SafeDecimalCast(double)", span="227-227"];
m12_52 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="Extensions.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m12_275 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m12_338 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="705-705"];
m12_339 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="string name = type.Name", span="707-707"];
m12_340 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="type.IsGenericType", span="708-708"];
m12_341 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="var genericArguments = type.GetGenericArguments()", span="710-710"];
m12_343 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="name = name.Replace(toBeReplaced, ''<'' + string.Join('', '', genericArguments.Select(x => x.GetBetterTypeName())) + ''>'')", span="712-712"];
m12_344 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="return name;", span="714-714"];
m12_342 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="var toBeReplaced = ''`'' + (genericArguments.Length)", span="711-711"];
m12_345 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="705-705"];
m12_266 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="Extensions.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m12_462 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m12_220 [cluster="System.Collections.Generic.List<T>.List()", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_426 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="871-871"];
m12_58 [cluster="lambda expression", file="Extensions.cs", label=value, span="136-136"];
m12_57 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="136-136"];
m12_59 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="136-136"];
m12_66 [cluster="lambda expression", file="Extensions.cs", label="addValueFactory(key)", span="150-150"];
m12_70 [cluster="lambda expression", file="Extensions.cs", label="new Lazy<TValue>(() => updateValueFactory(key2, old.Value))", span="150-150"];
m12_73 [cluster="lambda expression", file="Extensions.cs", label="updateValueFactory(key2, old.Value)", span="150-150"];
m12_69 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m12_65 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m12_67 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m12_71 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m12_72 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="150-150"];
m12_74 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="150-150"];
m12_350 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="712-712"];
m12_351 [cluster="lambda expression", file="Extensions.cs", label="x.GetBetterTypeName()", span="712-712"];
m12_352 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="712-712"];
m12_427 [cluster="lambda expression", file="Extensions.cs", label="x.Contains(''.'' + algorithmTypeName)", span="871-871"];
m12_428 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="871-871"];
m12_377 [cluster="string.ConvertTo(System.Type)", file="Extensions.cs", label="Entry string.ConvertTo(System.Type)", span="759-759"];
m12_96 [cluster="System.Math.Pow(double, double)", file="Extensions.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m12_239 [cluster="System.TimeSpan.TimeSpan(long)", file="Extensions.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m12_267 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="537-537"];
m12_268 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="540-540"];
m12_269 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="return dateTime;", span="540-540"];
m12_270 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="var rounded = dateTime.RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="542-542"];
m12_271 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="543-543"];
m12_272 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="rounded = (rounded - interval).RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="545-545"];
m12_273 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="return rounded;", span="547-547"];
m12_274 [cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="537-537"];
m12_26 [cluster="System.Text.Encoding.GetString(byte[])", file="Extensions.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m12_232 [cluster="System.IO.StreamWriter.Write(string)", file="Extensions.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m12_75 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Extensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m12_406 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="837-837"];
m12_407 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="var md5 = MD5.Create()", span="839-839"];
m12_408 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="return md5.ComputeHash(stream);", span="841-841"];
m12_409 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="837-837"];
m12_297 [cluster="Unk.ToDateTimeUnspecified", file="Extensions.cs", label="Entry Unk.ToDateTimeUnspecified", span=""];
m12_433 [cluster="System.Enum.ToString()", file="Extensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m12_398 [cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="827-827"];
m12_242 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="465-465"];
m12_243 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="467-467"];
m12_244 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="465-465"];
m12_421 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="867-867"];
m12_422 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="return names.Count == 1 ? names.Single() : names.SingleOrDefault(x => x.Contains(''.'' + algorithmTypeName));", span="871-871"];
m12_423 [cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="867-867"];
m12_418 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="Extensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m12_294 [cluster="Unk.FromDateTime", file="Extensions.cs", label="Entry Unk.FromDateTime", span=""];
m12_205 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsNaNOrZero(double)", span="391-391"];
m12_206 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="return double.IsNaN(value) || Math.Abs(value) < double.Epsilon;", span="393-393"];
m12_207 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsNaNOrZero(double)", span="391-391"];
m12_208 [cluster="double.IsNaN(double)", file="Extensions.cs", label="Entry double.IsNaN(double)", span="0-0"];
m12_393 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Extensions.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m12_405 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="Extensions.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m12_212 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetExtension(string)", span="410-410"];
m12_213 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="411-411"];
m12_214 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="412-412"];
m12_215 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="!allowedExt.Contains(ext)", span="413-413"];
m12_217 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="return ext;", span="417-417"];
m12_216 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="ext = ''.custom''", span="415-415"];
m12_218 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetExtension(string)", span="410-410"];
m12_293 [cluster="Unk.ReferenceEquals", file="Extensions.cs", label="Entry Unk.ReferenceEquals", span=""];
m12_463 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="Extensions.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m12_347 [cluster="Unk.Select", file="Extensions.cs", label="Entry Unk.Select", span=""];
m12_51 [cluster="System.Text.Encoding.GetByteCount(string)", file="Extensions.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m12_429 [cluster="string.Contains(string)", file="Extensions.cs", label="Entry string.Contains(string)", span="0-0"];
m12_296 [cluster="Unk.WithZone", file="Extensions.cs", label="Entry Unk.WithZone", span=""];
m12_149 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToInt32(string)", span="297-297"];
m12_150 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="int value = 0", span="299-299"];
m12_152 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="i < str.Length", span="300-300"];
m12_153 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="value = value * 10 + (str[i] - '0')", span="302-302"];
m12_151 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="var i = 0", span="300-300"];
m12_155 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="return value;", span="304-304"];
m12_154 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="i++", span="300-300"];
m12_156 [cluster="QuantConnect.Extensions.ToInt32(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToInt32(string)", span="297-297"];
m12_395 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="790-790"];
m12_396 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="return waitHandle.WaitOne(Timeout.Infinite, cancellationToken);", span="792-792"];
m12_397 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="790-790"];
m12_461 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m12_60 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Entry QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m12_61 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="var result = dictionary.AddOrUpdate(key, new Lazy<TValue>(() => addValueFactory(key)), (key2, old) => new Lazy<TValue>(() => updateValueFactory(key2, old.Value)))", span="150-150"];
m12_62 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="return result.Value;", span="151-151"];
m12_63 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Exit QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="148-148"];
m12_435 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m12_436 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitPrice = 0m", span="892-892"];
m12_438 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="order.Type", span="895-895"];
m12_440 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitOrder = order as LimitOrder", span="898-898"];
m12_443 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopMarketOrder = order as StopMarketOrder", span="902-902"];
m12_446 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopLimitOrder = order as StopLimitOrder", span="906-906"];
m12_453 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = order.Price", span="914-914"];
m12_454 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = order.Price", span="915-915"];
m12_457 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="submitOrderRequest.SetOrderId(order.Id)", span="930-930"];
m12_458 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="return new OrderTicket(transactionManager, submitOrderRequest);", span="932-932"];
m12_437 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopPrice = 0m", span="893-893"];
m12_439 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Limit", span="897-897"];
m12_442 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopMarket", span="901-901"];
m12_445 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopLimit", span="905-905"];
m12_449 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.OptionExercise", span="910-910"];
m12_455 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="throw new ArgumentOutOfRangeException();", span="918-918"];
m12_441 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = limitOrder.LimitPrice", span="899-899"];
m12_444 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopMarketOrder.StopPrice", span="903-903"];
m12_447 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopLimitOrder.StopPrice", span="907-907"];
m12_448 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = stopLimitOrder.LimitPrice", span="908-908"];
m12_450 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Market", span="911-911"];
m12_451 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnOpen", span="912-912"];
m12_452 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnClose", span="913-913"];
m12_459 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m12_41 [cluster="System.Text.StringBuilder.ToString()", file="Extensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m12_98 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="195-195"];
m12_99 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="d == 0", span="197-197"];
m12_101 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="var scale = (decimal)Math.Pow(10, Math.Floor(Math.Log10((double) Math.Abs(d))) + 1)", span="198-198"];
m12_102 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="return scale * Math.Round(d / scale, digits);", span="199-199"];
m12_100 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="return 0;", span="197-197"];
m12_103 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="195-195"];
m12_36 [cluster="System.Security.Cryptography.MD5.Create()", file="Extensions.cs", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
m12_308 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="631-631"];
m12_309 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="return (date.DayOfWeek != DayOfWeek.Saturday && date.DayOfWeek != DayOfWeek.Sunday);", span="633-633"];
m12_310 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="631-631"];
m12_147 [cluster="char.IsWhiteSpace(char)", file="Extensions.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m12_83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Extensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m12_424 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Extensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m12_346 [cluster="System.Type.GetGenericArguments()", file="Extensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m12_85 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="Extensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_222 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToStream(string)", span="425-425"];
m12_223 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="var stream = new MemoryStream()", span="427-427"];
m12_225 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="writer.Write(str)", span="429-429"];
m12_224 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="var writer = new StreamWriter(stream)", span="428-428"];
m12_227 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="stream.Position = 0", span="431-431"];
m12_228 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="return stream;", span="432-432"];
m12_226 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="writer.Flush()", span="430-430"];
m12_229 [cluster="QuantConnect.Extensions.ToStream(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToStream(string)", span="425-425"];
m12_245 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="476-476"];
m12_246 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="interval == TimeSpan.Zero", span="478-478"];
m12_247 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return dateTime;", span="481-481"];
m12_248 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="483-483"];
m12_249 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="476-476"];
m12_241 [cluster="System.Convert.ToInt64(decimal)", file="Extensions.cs", label="Entry System.Convert.ToInt64(decimal)", span="0-0"];
m12_106 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="Entry QuantConnect.Extensions.SmartRounding(decimal)", span="206-206"];
m12_107 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="input = Normalize(input)", span="208-208"];
m12_108 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="input > 1000", span="211-211"];
m12_109 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="return Math.Round(input, 4);", span="213-213"];
m12_110 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="var d = (double)input", span="217-217"];
m12_111 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="return (decimal)d.RoundToSignificantDigits(7);", span="218-218"];
m12_112 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="Extensions.cs", label="Exit QuantConnect.Extensions.SmartRounding(decimal)", span="206-206"];
m12_316 [cluster="System.Timers.Timer.Start()", file="Extensions.cs", label="Entry System.Timers.Timer.Start()", span="0-0"];
m12_302 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="616-616"];
m12_303 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label=strict, span="618-618"];
m12_304 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="620-620"];
m12_305 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="623-623"];
m12_306 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="616-616"];
m12_114 [cluster="double.RoundToSignificantDigits(int)", file="Extensions.cs", label="Entry double.RoundToSignificantDigits(int)", span="182-182"];
m12_251 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m12_252 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="var dateTimeInRoundingTimeZone = dateTime.ConvertTo(sourceTimeZone, roundingTimeZone)", span="496-496"];
m12_253 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="var roundedDateTimeInRoundingTimeZone = dateTimeInRoundingTimeZone.RoundDown(roundingInterval)", span="497-497"];
m12_254 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="return roundedDateTimeInRoundingTimeZone.ConvertTo(roundingTimeZone, sourceTimeZone);", span="498-498"];
m12_255 [cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="494-494"];
m12_299 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="604-604"];
m12_300 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="return time.ConvertTo(TimeZones.Utc, to, strict);", span="606-606"];
m12_301 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="604-604"];
m12_165 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="329-329"];
m12_166 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="int last = 0", span="331-331"];
m12_167 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="var csv = new List<string>(size)", span="332-332"];
m12_169 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="i < str.Length", span="333-333"];
m12_170 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="str[i] == ','", span="335-335"];
m12_173 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last, i - last))", span="338-338"];
m12_178 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last))", span="343-343"];
m12_171 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last != 0", span="337-337"];
m12_172 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = last + 1", span="337-337"];
m12_176 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last != 0", span="342-342"];
m12_177 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = last + 1", span="342-342"];
m12_168 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="int i = 0", span="333-333"];
m12_179 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="return csv;", span="344-344"];
m12_174 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="last = i", span="339-339"];
m12_175 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="i++", span="333-333"];
m12_180 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="329-329"];
m12_221 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m12_372 [cluster="System.TimeSpan.FromDays(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m12_8 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
m12_27 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m12_28 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var builder = new StringBuilder()", span="99-99"];
m12_30 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="102-102"];
m12_29 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="var md5Hash = MD5.Create()", span="100-100"];
m12_32 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="builder.Append(t.ToString(''x2''))", span="103-103"];
m12_33 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="return builder.ToString();", span="105-105"];
m12_31 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label=data, span="103-103"];
m12_34 [cluster="QuantConnect.Extensions.ToMD5(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToMD5(string)", span="97-97"];
m12_148 [cluster="decimal.Decimal(int, int, int, bool, byte)", file="Extensions.cs", label="Entry decimal.Decimal(int, int, int, bool, byte)", span="0-0"];
m12_184 [cluster="string.Substring(int)", file="Extensions.cs", label="Entry string.Substring(int)", span="0-0"];
m12_353 [cluster="System.Type.GetBetterTypeName()", file="Extensions.cs", label="Entry System.Type.GetBetterTypeName()", span="705-705"];
m12_326 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="677-677"];
m12_327 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type != null && type != typeof(object)", span="679-679"];
m12_329 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type.IsGenericType && possibleSuperType.IsGenericTypeDefinition", span="682-682"];
m12_330 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="cur = type.GetGenericTypeDefinition()", span="684-684"];
m12_331 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="cur = type", span="688-688"];
m12_332 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="possibleSuperType == cur", span="690-690"];
m12_334 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="type = type.BaseType", span="694-694"];
m12_328 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Type cur", span="681-681"];
m12_335 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="return false;", span="696-696"];
m12_333 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="return true;", span="692-692"];
m12_336 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="677-677"];
m12_105 [cluster="System.Math.Round(decimal, int)", file="Extensions.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m12_368 [cluster="System.TimeSpan.FromTicks(long)", file="Extensions.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m12_402 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="827-827"];
m12_403 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="return WaitHandle.WaitAny(new[] { waitHandle, cancellationToken.WaitHandle }, millisecondsTimeout) == 0;", span="829-829"];
m12_404 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="827-827"];
m12_460 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Extensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m12_394 [cluster="Unk.DeserializeObject", file="Extensions.cs", label="Entry Unk.DeserializeObject", span=""];
m12_50 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="Extensions.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m12_430 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToLower(System.Enum)", span="879-879"];
m12_431 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="return @enum.ToString().ToLower();", span="881-881"];
m12_432 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToLower(System.Enum)", span="879-879"];
m12_39 [cluster="byte.ToString(string)", file="Extensions.cs", label="Entry byte.ToString(string)", span="0-0"];
m12_374 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo<T>(string)", span="748-748"];
m12_375 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="return (T) value.ConvertTo(typeof (T));", span="750-750"];
m12_376 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo<T>(string)", span="748-748"];
m12_391 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="Extensions.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m12_369 [cluster="System.TimeSpan.FromSeconds(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m12_230 [cluster="System.IO.MemoryStream.MemoryStream()", file="Extensions.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m12_87 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="182-182"];
m12_88 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="d == 0", span="184-184"];
m12_90 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="185-185"];
m12_91 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="return scale * Math.Round(d / scale, digits);", span="186-186"];
m12_89 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="return 0;", span="184-184"];
m12_92 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="182-182"];
m12_9 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetBytes(string)", span="58-58"];
m12_10 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="var bytes = new byte[str.Length * sizeof(char)]", span="60-60"];
m12_11 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length)", span="61-61"];
m12_12 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="return bytes;", span="62-62"];
m12_13 [cluster="QuantConnect.Extensions.GetBytes(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetBytes(string)", span="58-58"];
m12_14 [cluster="string.ToCharArray()", file="Extensions.cs", label="Entry string.ToCharArray()", span="0-0"];
m12_181 [cluster="System.Collections.Generic.List<T>.List(int)", file="Extensions.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m12_182 [cluster="string.Substring(int, int)", file="Extensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m12_76 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m12_77 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="TCollection list", span="167-167"];
m12_78 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="!dictionary.TryGetValue(key, out list)", span="168-168"];
m12_80 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="dictionary.Add(key, list)", span="171-171"];
m12_81 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="list.Add(element)", span="173-173"];
m12_79 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="list = new TCollection()", span="170-170"];
m12_82 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="164-164"];
m12_378 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo(string, System.Type)", span="759-759"];
m12_379 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="type.IsEnum", span="761-761"];
m12_380 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return Enum.Parse(type, value);", span="763-763"];
m12_381 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="typeof (IConvertible).IsAssignableFrom(type)", span="766-766"];
m12_382 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return Convert.ChangeType(value, type, CultureInfo.InvariantCulture);", span="768-768"];
m12_383 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="var parse = type.GetMethod(''Parse'', new[] {typeof (string)})", span="772-772"];
m12_385 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="var result = parse.Invoke(null, new object[] {value})", span="775-775"];
m12_387 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return JsonConvert.DeserializeObject(value, type);", span="779-779"];
m12_384 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="parse != null", span="773-773"];
m12_386 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="return result;", span="776-776"];
m12_388 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo(string, System.Type)", span="759-759"];
m12_411 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="850-850"];
m12_412 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="var regx = new Regex(''http(s)?://([\\w+?\\.\\w+])+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\'\\,]*([a-zA-Z0-9\\?\\#\\=\\/]){1})?'', RegexOptions.IgnoreCase)", span="852-852"];
m12_413 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="var matches = regx.Matches(source)", span="853-853"];
m12_415 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="source = source.Replace(match.Value, ''<a href=''' + match.Value + ''' target='blank'>'' + match.Value + ''</a>'')", span="856-856"];
m12_416 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="return source;", span="858-858"];
m12_414 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label=matches, span="854-854"];
m12_417 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="850-850"];
m12_370 [cluster="System.TimeSpan.FromMinutes(double)", file="Extensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m12_84 [cluster="TCollection.cstr", file="Extensions.cs", label="Entry TCollection.cstr", span=""];
m12_250 [cluster="System.DateTime.AddTicks(long)", file="Extensions.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m12_419 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="Extensions.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m12_257 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="Extensions.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m12_295 [cluster="Unk.AtStrictly", file="Extensions.cs", label="Entry Unk.AtStrictly", span=""];
m12_64 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="Extensions.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m12_280 [cluster="System.TimeSpan.Round(System.TimeSpan)", file="Extensions.cs", label="Entry System.TimeSpan.Round(System.TimeSpan)", span="465-465"];
m12_113 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Normalize(decimal)", span="234-234"];
m12_122 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="return input / 1.000000000000000000000000000000000m;", span="237-237"];
m12_123 [cluster="QuantConnect.Extensions.Normalize(decimal)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Normalize(decimal)", span="234-234"];
m12_185 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToCsvData(string, int)", span="353-353"];
m12_186 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="var csv = new List<string>(size)", span="355-355"];
m12_190 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="i < str.Length", span="360-360"];
m12_191 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="str[i]", span="362-362"];
m12_196 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last + 1, (i - last)).Trim(' ', ','))", span="370-370"];
m12_199 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="last != str.Length - 1", span="379-379"];
m12_200 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="csv.Add(str.Substring(last + 1).Trim())", span="381-381"];
m12_187 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="int last = -1", span="357-357"];
m12_201 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="return csv;", span="384-384"];
m12_188 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="bool textDataField = false", span="358-358"];
m12_189 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="var i = 0", span="360-360"];
m12_193 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="textDataField = !textDataField", span="365-365"];
m12_197 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="last = i", span="371-371"];
m12_198 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="i++", span="360-360"];
m12_192 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="''''", span="364-364"];
m12_194 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="','", span="367-367"];
m12_195 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="!textDataField", span="368-368"];
m12_202 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToCsvData(string, int)", span="353-353"];
m12_420 [cluster="string.Replace(string, string)", file="Extensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m12_15 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="Extensions.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m12_354 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="722-722"];
m12_355 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label=resolution, span="724-724"];
m12_356 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Tick", span="726-726"];
m12_358 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Second", span="729-729"];
m12_360 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Minute", span="731-731"];
m12_362 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Hour", span="733-733"];
m12_364 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Resolution.Daily", span="735-735"];
m12_366 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="738-738"];
m12_357 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromTicks(0);", span="728-728"];
m12_359 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromSeconds(1);", span="730-730"];
m12_361 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromMinutes(1);", span="732-732"];
m12_363 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromHours(1);", span="734-734"];
m12_365 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="return TimeSpan.FromDays(1);", span="736-736"];
m12_367 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="722-722"];
m12_97 [cluster="System.Math.Round(double, int)", file="Extensions.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m12_311 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="640-640"];
m12_312 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="timer.Stop()", span="642-642"];
m12_313 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="timer.Start()", span="643-643"];
m12_314 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="640-640"];
m12_95 [cluster="System.Math.Floor(double)", file="Extensions.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m12_392 [cluster="System.Type.GetMethod(string, System.Type[])", file="Extensions.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m12_204 [cluster="string.Trim()", file="Extensions.cs", label="Entry string.Trim()", span="0-0"];
m12_21 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m12_22 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="encoding == null", span="87-87"];
m12_24 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="return encoding.GetString(bytes);", span="89-89"];
m12_23 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="encoding = Encoding.ASCII", span="87-87"];
m12_25 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85"];
m12_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m12_286 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="585-585"];
m12_287 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="ReferenceEquals(from, to)", span="587-587"];
m12_288 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return time;", span="587-587"];
m12_289 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label=strict, span="589-589"];
m12_290 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="591-591"];
m12_291 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="594-594"];
m12_292 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="585-585"];
m12_276 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="556-556"];
m12_277 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="558-558"];
m12_278 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="Extensions.cs", label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="556-556"];
m12_240 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="Extensions.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m12_464 [file="Extensions.cs", label=V, span=""];
m12_465 [file="Extensions.cs", label=TKey, span=""];
m12_466 [file="Extensions.cs", label="System.Func<TKey, TValue>", span=""];
m12_467 [file="Extensions.cs", label="System.Func<TKey, TValue, TValue>", span=""];
m12_468 [file="Extensions.cs", label=TKey, span=""];
m12_469 [file="Extensions.cs", label="System.Lazy<TValue>", span=""];
m12_470 [file="Extensions.cs", label=string, span=""];
m16_39 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m16_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m16_74 [cluster="Unk.All", file="GDAXBrokerage.cs", label="Entry Unk.All", span=""];
m16_119 [cluster="Unk.ConvertOrderStatus", file="GDAXBrokerage.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m16_121 [cluster="Unk.Where", file="GDAXBrokerage.cs", label="Entry Unk.Where", span=""];
m16_148 [cluster="Securities.Cash.cstr", file="GDAXBrokerage.cs", label="Entry Securities.Cash.cstr", span=""];
m16_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m16_58 [cluster="int.ToString()", file="GDAXBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m16_161 [cluster="System.Collections.Generic.List<T>.Clear()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m16_151 [cluster="Unk.ToUpper", file="GDAXBrokerage.cs", label="Entry Unk.ToUpper", span=""];
m16_72 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_115 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m16_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m16_124 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="204-204"];
m16_75 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Entry lambda expression", span="135-135"];
m16_76 [cluster="lambda expression", file="GDAXBrokerage.cs", label=a, span="135-135"];
m16_77 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="135-135"];
m16_125 [cluster="lambda expression", file="GDAXBrokerage.cs", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="204-204"];
m16_126 [cluster="lambda expression", file="GDAXBrokerage.cs", label="Exit lambda expression", span="204-204"];
m16_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="113-113"];
m16_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="115-115"];
m16_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="113-113"];
m16_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m16_45 [cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m16_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m16_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var list = new List<Order>()", span="152-152"];
m16_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="return list;", span="212-212"];
m16_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="item.Status.IsOpen()", span="202-202"];
m16_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="204-204"];
m16_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="this.CachedOrderIDs[cached.First().Key] = item", span="207-207"];
m16_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="cached.Any()", span="205-205"];
m16_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m16_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m16_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m16_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="LockStream()", span="45-45"];
m16_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.size = Math.Abs(order.Quantity)", span="51-51"];
m16_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.side = order.Direction.ToString().ToLower()", span="52-52"];
m16_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.type = ConvertOrderType(order.Type)", span="53-53"];
m16_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="54-54"];
m16_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="55-55"];
m16_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="79-79"];
m16_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="81-81"];
m16_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId.Add(brokerId)", span="85-85"];
m16_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="86-86"];
m16_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="90-90"];
m16_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="93-93"];
m16_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="95-95"];
m16_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="100-100"];
m16_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="102-102"];
m16_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="47-47"];
m16_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="dynamic payload = new ExpandoObject()", span="49-49"];
m16_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="req.AddJsonBody(payload)", span="62-62"];
m16_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="64-64"];
m16_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="65-65"];
m16_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="payload.overdraft_enabled = true", span="59-59"];
m16_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="57-57"];
m16_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="67-67"];
m16_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="69-69"];
m16_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="73-73"];
m16_16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="raw == null || raw.Id == null", span="71-71"];
m16_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var brokerId = raw.Id", span="78-78"];
m16_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="74-74"];
m16_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return false;", span="75-75"];
m16_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="96-96"];
m16_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return true;", span="97-97"];
m16_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="103-103"];
m16_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="UnlockStream()", span="104-104"];
m16_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return false;", span="105-105"];
m16_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m16_37 [cluster="RestRequest.cstr", file="GDAXBrokerage.cs", label="Entry RestRequest.cstr", span=""];
m16_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="GDAXBrokerage.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m16_48 [cluster="BrokerageMessageEvent.cstr", file="GDAXBrokerage.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m16_117 [cluster="Unk.ToString", file="GDAXBrokerage.cs", label="Entry Unk.ToString", span=""];
m16_152 [cluster="Unk.Create", file="GDAXBrokerage.cs", label="Entry Unk.Create", span=""];
m16_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m16_44 [cluster="Unk.AddJsonBody", file="GDAXBrokerage.cs", label="Entry Unk.AddJsonBody", span=""];
m16_47 [cluster="Unk.>", file="GDAXBrokerage.cs", label="Entry Unk.>", span=""];
m16_41 [cluster="string.ToLower()", file="GDAXBrokerage.cs", label="Entry string.ToLower()", span="0-0"];
m16_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m16_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var success = new List<bool>()", span="125-125"];
m16_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId", span="127-127"];
m16_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="132-132"];
m16_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return success.All(a => a);", span="135-135"];
m16_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="129-129"];
m16_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="130-130"];
m16_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="131-131"];
m16_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m16_81 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m16_114 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m16_52 [cluster="Unk.Add", file="GDAXBrokerage.cs", label="Entry Unk.Add", span=""];
m16_128 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m16_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m16_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="return new List<Holding>();", span="227-227"];
m16_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m16_40 [cluster="System.Enum.ToString()", file="GDAXBrokerage.cs", label="Entry System.Enum.ToString()", span="0-0"];
m16_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m16_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m16_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="WebSocket.Close()", span="143-143"];
m16_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m16_122 [cluster="Unk.Any", file="GDAXBrokerage.cs", label="Entry Unk.Any", span=""];
m16_150 [cluster="Unk.GetConversionRate", file="GDAXBrokerage.cs", label="Entry Unk.GetConversionRate", span=""];
m16_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m16_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var totalFee = 0m", span="288-288"];
m16_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="order.BrokerId", span="290-290"];
m16_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="totalFee += (decimal)fill.fill_fees", span="297-297"];
m16_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="return totalFee;", span="300-300"];
m16_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="292-292"];
m16_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="GetAuthenticationToken(req)", span="293-293"];
m16_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var response = RestClient.Execute(req)", span="294-294"];
m16_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="295-295"];
m16_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m16_46 [cluster="Unk.Execute", file="GDAXBrokerage.cs", label="Entry Unk.Execute", span=""];
m16_116 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m16_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m16_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m16_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m16_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="return list;", span="263-263"];
m16_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="242-242"];
m16_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Balance > 0", span="244-244"];
m16_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="item.Currency == ''USD''", span="246-246"];
m16_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var rate = GetConversionRate(item.Currency)", span="252-252"];
m16_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="257-257"];
m16_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m16_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m16_149 [cluster="Unk.Contains", file="GDAXBrokerage.cs", label="Entry Unk.Contains", span=""];
m16_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m16_123 [cluster="Unk.First", file="GDAXBrokerage.cs", label="Entry Unk.First", span=""];
m16_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m16_62 [cluster="System.NotSupportedException.NotSupportedException(string)", file="GDAXBrokerage.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m16_160 [cluster="System.Collections.Generic.List<T>.ToArray()", file="GDAXBrokerage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m16_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m16_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label=Ticks, span="272-272"];
m16_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="var copy = Ticks.ToArray()", span="274-274"];
m16_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Ticks.Clear()", span="275-275"];
m16_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="return copy;", span="276-276"];
m16_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="GDAXBrokerage.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m16_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="GDAXBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m16_118 [cluster="Unk.ConvertProductId", file="GDAXBrokerage.cs", label="Entry Unk.ConvertProductId", span=""];
m16_172 [file="GDAXBrokerage.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m16_173 [file="GDAXBrokerage.cs", label=item, span=""];
m17_8 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m17_106 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m17_95 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="383-383"];
m17_96 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="var security = _securities[order.Symbol]", span="385-385"];
m17_97 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="var freeMargin = security.MarginModel.GetMarginRemaining(portfolio, security, order.Direction)", span="387-387"];
m17_98 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="var initialMarginRequiredForOrder = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="388-388"];
m17_100 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(string.Format(''Transactions.GetSufficientCapitalForOrder(): Id: {0}, Initial Margin: {1}, Free Margin: {2}'', order.Id, initialMarginRequiredForOrder, freeMargin))", span="391-391"];
m17_99 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Math.Abs(initialMarginRequiredForOrder) > freeMargin", span="389-389"];
m17_102 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return true;", span="394-394"];
m17_101 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return false;", span="392-392"];
m17_103 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="383-383"];
m17_54 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="296-296"];
m17_56 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Thread.Sleep(1)", span="305-305"];
m17_57 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="296-296"];
m17_64 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="329-329"];
m17_68 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Orders.TryGetValue(orderId, out order)", span="340-340"];
m17_66 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="order != null", span="335-335"];
m17_67 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="return order;", span="337-337"];
m17_69 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="return order;", span="342-342"];
m17_70 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="345-345"];
m17_72 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="return null;", span="349-349"];
m17_71 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''TransactionManager.GetOrderById(): '' + err.Message)", span="347-347"];
m17_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="329-329"];
m17_75 [cluster="Unk.TryGetValue", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.TryGetValue", span=""];
m17_92 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="368-368"];
m17_76 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="334-334"];
m17_78 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="334-334"];
m17_89 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="x.BrokerId.Contains(brokerageId)", span="362-362"];
m17_93 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="x.Value.BrokerId.Contains(brokerageId)", span="368-368"];
m17_88 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="362-362"];
m17_90 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="362-362"];
m17_94 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="368-368"];
m17_19 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m17_105 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m17_38 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", span="253-253"];
m17_40 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", span="253-253"];
m17_20 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", span="209-209"];
m17_21 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="var id = order.Id", span="214-214"];
m17_23 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="order.Quantity == 0", span="218-218"];
m17_29 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="_orders[id] = order", span="230-230"];
m17_30 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="OrderQueue.Enqueue(order)", span="233-233"];
m17_25 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="_orders.ContainsKey(id)", span="220-220"];
m17_26 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="_orders[id].Status == OrderStatus.Filled || _orders[id].Status == OrderStatus.Canceled", span="223-223"];
m17_24 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return -1;", span="218-218"];
m17_31 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return -6;", span="238-238"];
m17_27 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return -5;", span="225-225"];
m17_32 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="241-241"];
m17_35 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return 0;", span="246-246"];
m17_33 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''Algorithm.Transactions.UpdateOrder(): '' + err.Message)", span="243-243"];
m17_34 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return -7;", span="244-244"];
m17_36 [cluster="QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.Order)", span="209-209"];
m17_108 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="401-401"];
m17_109 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="GDAXBrokerage.Messaging.cs", label="return _orderId++;", span="403-403"];
m17_110 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="401-401"];
m17_63 [cluster="Unk.ToList", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ToList", span=""];
m17_41 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", span="262-262"];
m17_42 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="!Orders.ContainsKey(orderId)", span="267-267"];
m17_45 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="var order = Orders[orderId]", span="273-273"];
m17_43 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''Security.TransactionManager.RemoveOutstandingOrder(): Cannot find this id.'')", span="269-269"];
m17_44 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="return;", span="270-270"];
m17_49 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="order.Status = OrderStatus.Canceled", span="281-281"];
m17_50 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="OrderQueue.Enqueue(order)", span="284-284"];
m17_47 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''Security.TransactionManager.RemoveOutstandingOrder(): Order already filled'')", span="276-276"];
m17_51 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="286-286"];
m17_52 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''TransactionManager.RemoveOrder(): '' + err.Message)", span="288-288"];
m17_53 [cluster="QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(int)", span="262-262"];
m17_79 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", span="357-357"];
m17_80 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="var order = OrderQueue.FirstOrDefault(x => x.BrokerId.Contains(brokerageId))", span="362-362"];
m17_83 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="return Orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value;", span="368-368"];
m17_81 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="order != null", span="363-363"];
m17_82 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="return order;", span="365-365"];
m17_84 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="370-370"];
m17_85 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''TransactionManager.GetOrderByBrokerageId(): '' + err.Message)", span="372-372"];
m17_86 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="return null;", span="373-373"];
m17_87 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(int)", span="357-357"];
m17_7 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m17_10 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", span="182-182"];
m17_11 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="order.Id = _orderId++", span="187-187"];
m17_13 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="OrderQueue.Enqueue(order)", span="190-190"];
m17_16 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="return order.Id;", span="196-196"];
m17_15 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Log.Error(''Algorithm.Transaction.AddOrder(): '' + err.Message)", span="194-194"];
m17_17 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", span="182-182"];
m17_91 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m17_74 [cluster="Unk.FirstOrDefault", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.FirstOrDefault", span=""];
m17_59 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="313-313"];
m17_62 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders()", span="313-313"];
m17_58 [cluster="System.Threading.Thread.Sleep(int)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m17_104 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m17_37 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m17_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_107 [cluster="string.Format(string, object, object, object)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m17_18 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m17_0 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="52-52"];
m17_1 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="_securities = security", span="55-55"];
m17_2 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="_orders = new ConcurrentDictionary<int, Order>()", span="58-58"];
m17_3 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="_orderQueue = new ConcurrentQueue<Order>()", span="61-61"];
m17_4 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="_orderEvents = new ConcurrentDictionary<int, List<OrderEvent>>()", span="64-64"];
m17_5 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="_transactionRecord = new Dictionary<DateTime, decimal>()", span="67-67"];
m17_6 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="52-52"];
m17_111 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Securities.SecurityTransactionManager", span=""];
m17_112 [file="GDAXBrokerage.Messaging.cs", label=int, span=""];
m17_113 [file="GDAXBrokerage.Messaging.cs", label=int, span=""];
m20_744 [cluster="IBApi.Order.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry IBApi.Order.cstr", span=""];
m20_970 [cluster="QuantConnect.Holding.Holding()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m20_404 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m20_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.InteractiveBrokersClient(EReaderSignal)", span="416-416"];
m20_333 [cluster="int.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry int.ToString()", span="0-0"];
m20_505 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidId == 0)\r\n                {\r\n                    _nextValidId = e.OrderId;\r\n                    _waitForNextValidId.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", prediction=18, span="203-212"];
m20_721 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m20_0 [cluster="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm.Initialize()", span="28-28"];
m20_1 [cluster="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="SetStartDate(2013, 10, 07)", span="30-30"];
m20_2 [cluster="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="SetEndDate(2013, 10, 11)", span="31-31"];
m20_3 [cluster="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="SetCash(100000)", span="32-32"];
m20_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m20_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_algorithm = algorithm", span="182-182"];
m20_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_orderProvider = orderProvider", span="183-183"];
m20_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_securityProvider = securityProvider", span="184-184"];
m20_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_account = account", span="185-185"];
m20_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_clientId = IncrementClientId()", span="188-188"];
m20_589 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78"];
m20_121 [cluster="Unk.ToArray", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToArray", span=""];
m20_294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m20_296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_client != null", span="680-680"];
m20_297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="682-682"];
m20_298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_client.Dispose()", span="683-683"];
m20_299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.Dispose()", span="686-686"];
m20_300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="_ctsRestartGateway.Cancel(false)", span="688-688"];
m20_295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Dispose(): Disposing of IB resources.'')", span="678-678"];
m20_301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m20_590 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m20_238 [cluster="EReader.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry EReader.cstr", span=""];
m20_277 [cluster="Unk.reqAccountUpdates", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqAccountUpdates", span=""];
m20_811 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m20_1350 [cluster="System.IO.File.ReadAllLines(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
m20_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.Error += HandleError", prediction=19, span="197-197"];
m20_1253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m20_1277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var historicalTicker = GetNextTickerId()", span="2490-2490"];
m20_1278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[historicalTicker] = ''GetHistory: '' + contract", span="2492-2492"];
m20_1282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.Error += clientOnError", span="2530-2530"];
m20_1283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalData += clientOnHistoricalData", span="2531-2531"];
m20_1284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="2532-2532"];
m20_1285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.reqHistoricalData(historicalTicker, contract, endTime.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                    duration, resolution, dataType, useRegularTradingHours, 2, false, new List<TagValue>())", span="2534-2535"];
m20_1289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.Error -= clientOnError", span="2543-2543"];
m20_1290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalData -= clientOnHistoricalData", span="2544-2544"];
m20_1291 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="2545-2545"];
m20_1270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var history = new List<TradeBar>()", span="2479-2479"];
m20_1276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var historyPiece = new List<TradeBar>()", span="2489-2489"];
m20_1272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var dataDownloaded = new ManualResetEvent(false)", span="2481-2481"];
m20_1275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var pacing = false", span="2488-2488"];
m20_1279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        var bar = ConvertTradeBar(request.Symbol, request.Resolution, args);\r\n                        if (request.Resolution != Resolution.Daily)\r\n                        {\r\n                            bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone);\r\n                        }\r\n\r\n                        historyPiece.Add(bar);\r\n                        dataDownloading.Set();\r\n                    }\r\n                }", span="2494-2507"];
m20_1280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2509-2515"];
m20_1281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                {\r\n                    if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                    {\r\n                        // pacing violation happened\r\n                        pacing = true;\r\n                    }\r\n                    if (args.Code == 162 && args.Message.Contains(''no data''))\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2517-2528"];
m20_1273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var useRegularTradingHours = Convert.ToInt32(!request.IncludeExtendedMarketHours)", span="2483-2483"];
m20_1286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var waitResult = 0", span="2537-2537"];
m20_1287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult == 0", span="2538-2538"];
m20_1292 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult == WaitHandle.WaitTimeout", span="2547-2547"];
m20_1269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="int timeOut = 60", span="2477-2477"];
m20_1271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var dataDownloading = new AutoResetEvent(false)", span="2480-2480"];
m20_1298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="history.AddRange(filteredPiece)", span="2568-2568"];
m20_1300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="return history;", span="2574-2574"];
m20_1296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="!historyPiece.Any()", span="2561-2561"];
m20_1297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredPiece = historyPiece.OrderBy(x => x.Time)", span="2566-2566"];
m20_1288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="waitResult = WaitHandle.WaitAny(new WaitHandle[] {dataDownloading, dataDownloaded}, timeOut*1000)", span="2540-2540"];
m20_1274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="endTime >= startTime", span="2486-2486"];
m20_1293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label=pacing, span="2549-2549"];
m20_1294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Pacing violation. Paused for {0} secs.'', timeOut)", span="2552-2552"];
m20_1295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() History request timed out ({0} sec)'', timeOut)", span="2556-2556"];
m20_1299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="endTime = filteredPiece.First().Time", span="2571-2571"];
m20_1301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2467-2467"];
m20_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m20_604 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="!_disconnected1100Fired", span="1202-1202"];
m20_608 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label=_previouslyInResetTime, span="1211-1211"];
m20_610 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="1216-1216"];
m20_611 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with Interactive Brokers lost. '' +\r\n                                                                 ''This could be because of internet connectivity issues or a log in from another location.''\r\n                        ))", span="1221-1223"];
m20_613 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="1231-1231"];
m20_614 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="_previouslyInResetTime = isResetTime", span="1234-1234"];
m20_612 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="1228-1228"];
m20_609 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Reset time finished and still disconnected. Restarting...'')", span="1214-1214"];
m20_605 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="return;", span="1204-1204"];
m20_606 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="var isResetTime = IsWithinScheduledServerResetTimes()", span="1207-1207"];
m20_607 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="!isResetTime", span="1209-1209"];
m20_615 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1198-1198"];
m20_1059 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m20_784 [cluster="Unk.ToString", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToString", span=""];
m20_1264 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m20_176 [cluster="System.DateTime.ToString(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m20_397 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m20_120 [cluster="Unk.ToList", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToList", span=""];
m20_27 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="41-44"];
m20_1093 [cluster="string.ToLower()", file="InteractiveBrokersBrokerage.cs", label="Entry string.ToLower()", span="0-0"];
m20_1212 [cluster="Unk.Count", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Count", span=""];
m20_140 [cluster="Unk.Substring", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Substring", span=""];
m20_1142 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m20_775 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m20_856 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.StopLimit", span="1706-1706"];
m20_851 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="order.OrderType", span="1702-1702"];
m20_861 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="order.Tif == IB.TimeInForce.MarketOnOpen", span="1710-1710"];
m20_864 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(order.OrderType, ''order.OrderType'');", span="1717-1717"];
m20_862 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.MarketOnOpen;", span="1712-1712"];
m20_857 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.StopLimit;", span="1706-1706"];
m20_853 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.Limit;", span="1704-1704"];
m20_855 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.StopMarket;", span="1705-1705"];
m20_859 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.MarketOnClose;", span="1707-1707"];
m20_863 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="return OrderType.Market;", span="1714-1714"];
m20_852 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Limit", span="1704-1704"];
m20_854 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Stop", span="1705-1705"];
m20_858 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.MarketOnClose", span="1707-1707"];
m20_860 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderType.Market", span="1709-1709"];
m20_865 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1700-1700"];
m20_331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m20_785 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var securityType = ConvertSecurityType(symbol.ID.SecurityType)", prediction=20, span="1593-1593"];
m20_786 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var ibSymbol = _symbolMapper.GetBrokerageSymbol(symbol)", prediction=21, span="1594-1594"];
m20_787 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = ibSymbol,\r\n                Exchange = exchange ?? ''Smart'',\r\n                SecType = securityType,\r\n                Currency = ''USD''\r\n            }", prediction=22, span="1595-1601"];
m20_790 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol.Substring(0, 3)", prediction=23, span="1606-1606"];
m20_791 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Currency = ibSymbol.Substring(3)", prediction=24, span="1607-1607"];
m20_798 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol", prediction=25, span="1620-1620"];
m20_802 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Symbol = ibSymbol", span="1630-1630"];
m20_788 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Forex", prediction=26, span="1602-1602"];
m20_789 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = ''IDEALPRO''", prediction=27, span="1605-1605"];
m20_793 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.PrimaryExch = GetPrimaryExchange(contract)", prediction=28, span="1612-1612"];
m20_795 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.EightCharacter)", prediction=29, span="1617-1617"];
m20_808 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="return contract;", span="1646-1646"];
m20_792 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Equity", prediction=26, span="1610-1610"];
m20_794 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option", prediction=26, span="1615-1615"];
m20_801 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Future", prediction=26, span="1625-1625"];
m20_796 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Right = symbol.ID.OptionRight == OptionRight.Call ? IB.RightType.Call : IB.RightType.Put", prediction=33, span="1618-1618"];
m20_797 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Strike = Convert.ToDouble(symbol.ID.StrikePrice)", prediction=34, span="1619-1619"];
m20_800 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.TradingClass = GetTradingClass(contract)", prediction=35, span="1622-1622"];
m20_799 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="contract.Multiplier = ''100''", prediction=36, span="1621-1621"];
m20_806 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = GetFuturesContractExchange(contract)", span="1636-1636"];
m20_807 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = _futuresExchanges.ContainsKey(symbol.ID.Market) ?\r\n                                            _futuresExchanges[symbol.ID.Market] :\r\n                                            symbol.ID.Market", span="1640-1642"];
m20_803 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.YearMonth)", span="1631-1631"];
m20_804 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.Market == Market.USA", span="1633-1633"];
m20_805 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="contract.Exchange = ''''", span="1635-1635"];
m20_809 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1591-1591"];
m20_601 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m20_617 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68"];
m20_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client = new IB.InteractiveBrokersClient(_signal)", span="190-190"];
m20_634 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m20_99 [cluster="Unk.reqAllOpenOrders", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqAllOpenOrders", span=""];
m20_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m20_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="782-782"];
m20_359 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="787-787"];
m20_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="781-781"];
m20_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.TradingClass;", span="784-784"];
m20_360 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="788-788"];
m20_362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.TradingClass;", span="794-794"];
m20_361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="return null;", span="791-791"];
m20_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="779-779"];
m20_1213 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m20_334 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m20_665 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m20_883 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Invalid;", prediction=37, span="1748-1748"];
m20_882 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Error", span="1747-1747"];
m20_885 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1751-1751"];
m20_867 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label=status, span="1726-1726"];
m20_889 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(status, ''status'');", span="1759-1759"];
m20_886 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.None;", span="1752-1752"];
m20_871 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.New;", span="1731-1731"];
m20_875 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Canceled;", span="1736-1736"];
m20_877 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Submitted;", span="1739-1739"];
m20_879 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.Filled;", span="1742-1742"];
m20_881 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.PartiallyFilled;", span="1745-1745"];
m20_888 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderStatus.None;", span="1755-1755"];
m20_884 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Inactive", span="1750-1750"];
m20_868 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.ApiPending", span="1728-1728"];
m20_872 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.ApiCancelled", span="1733-1733"];
m20_876 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Submitted", span="1738-1738"];
m20_878 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Filled", span="1741-1741"];
m20_880 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PartiallyFilled", span="1744-1744"];
m20_887 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.None", span="1754-1754"];
m20_870 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PreSubmitted", span="1730-1730"];
m20_874 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.Cancelled", span="1735-1735"];
m20_869 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PendingSubmit", span="1729-1729"];
m20_873 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="IB.OrderStatus.PendingCancel", span="1734-1734"];
m20_890 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1724-1724"];
m20_1254 [cluster="System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", span="0-0"];
m20_591 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m20_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="193-193"];
m20_1057 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_1354 [cluster="Unk.Any", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Any", span=""];
m20_747 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m20_836 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label=type, span="1684-1684"];
m20_849 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="1693-1693"];
m20_837 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Market", span="1686-1686"];
m20_839 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Limit", span="1687-1687"];
m20_841 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopMarket", span="1688-1688"];
m20_843 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopLimit", span="1689-1689"];
m20_847 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnClose", span="1691-1691"];
m20_838 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Market;", span="1686-1686"];
m20_840 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Limit;", span="1687-1687"];
m20_842 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Stop;", span="1688-1688"];
m20_844 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.StopLimit;", span="1689-1689"];
m20_846 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.Market;", span="1690-1690"];
m20_848 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="return IB.OrderType.MarketOnClose;", span="1691-1691"];
m20_845 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnOpen", span="1690-1690"];
m20_850 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1682-1682"];
m20_990 [cluster="System.Math.Round(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m20_1211 [cluster="Unk.GroupBy", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GroupBy", span=""];
m20_187 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_928 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m20_145 [cluster="Unk.GetUsdConversion", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetUsdConversion", span=""];
m20_781 [cluster="StopMarketOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry StopMarketOrder.cstr", span=""];
m20_105 [cluster="Unk.ConvertOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertOrder", span=""];
m20_343 [cluster="Unk.Format", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Format", span=""];
m20_1094 [cluster="string.IndexOf(string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.IndexOf(string)", span="0-0"];
m20_149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m20_150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="CheckIbGateway()", span="413-413"];
m20_151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="415-415"];
m20_152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m20_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m20_303 [cluster="QuantConnect.Util.RateGate.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196"];
m20_502 [cluster="Unk.reqMktData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqMktData", span=""];
m20_1307 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m20_100 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m20_244 [cluster="Unk.setServerLogLevel", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.setServerLogLevel", span=""];
m20_1306 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m20_48 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception)", span="244-244"];
m20_49 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="215-246"];
m20_50 [cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="827-827"];
m20_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m20_245 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m20_750 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m20_762 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="order = new MarketOnCloseOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime()\r\n                        )", prediction=38, span="1545-1548"];
m20_752 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var mappedSymbol = MapSymbol(contract)", span="1525-1525"];
m20_754 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var quantitySign = direction == OrderDirection.Sell ? -1 : 1", span="1527-1527"];
m20_761 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnClose", span="1544-1544"];
m20_770 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Add(ibOrder.OrderId.ToString())", span="1580-1580"];
m20_753 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var direction = ConvertOrderDirection(ibOrder.Action)", span="1526-1526"];
m20_758 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="1532-1535"];
m20_760 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new MarketOnOpenOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime())", span="1539-1541"];
m20_764 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1552-1556"];
m20_766 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        new DateTime()\r\n                        )", span="1560-1564"];
m20_768 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1568-1573"];
m20_751 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Order order", span="1524-1524"];
m20_755 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="var orderType = ConvertOrderType(ibOrder)", span="1528-1528"];
m20_756 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label=orderType, span="1529-1529"];
m20_771 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="return order;", span="1582-1582"];
m20_757 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Market", span="1531-1531"];
m20_759 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.MarketOnOpen", span="1538-1538"];
m20_763 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.Limit", span="1551-1551"];
m20_765 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopMarket", span="1559-1559"];
m20_767 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="OrderType.StopLimit", span="1567-1567"];
m20_769 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="1577-1577"];
m20_772 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1517-1517"];
m20_746 [cluster="System.Math.Abs(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m20_603 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m20_1034 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="CanSubscribe(symbol)", span="2046-2046"];
m20_1035 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=_sync, span="2048-2048"];
m20_1037 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedSymbols.ContainsKey(symbol)", span="2052-2052"];
m20_1041 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Add(subscribeSymbol, symbol)", span="2061-2061"];
m20_1044 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var id = GetNextTickerId()", span="2070-2070"];
m20_1045 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(subscribeSymbol)", span="2071-2071"];
m20_1046 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[id] = ''Subscribe: '' + contract", span="2073-2073"];
m20_1047 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.WaitToProceed()", span="2075-2075"];
m20_1048 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes[id] = DateTime.UtcNow", span="2078-2078"];
m20_1049 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.reqMktData(id, contract, ''101'', false, false, new List<TagValue>())", span="2081-2081"];
m20_1050 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols[symbol] = id", span="2083-2083"];
m20_1051 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets[id] = subscribeSymbol", span="2084-2084"];
m20_1033 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=symbols, span="2044-2044"];
m20_1036 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Request: '' + symbol.Value)", span="2050-2050"];
m20_1054 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.Subscribe(): '' + err.Message)", span="2094-2094"];
m20_1038 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var subscribeSymbol = symbol", span="2055-2055"];
m20_1040 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="subscribeSymbol = symbol.Underlying", span="2060-2060"];
m20_1042 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Future && symbol.IsCanonical()", span="2065-2065"];
m20_1052 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Processed: {0} ({1}) # {2}'', symbol.Value, contract.ToString(), id)", span="2086-2086"];
m20_1043 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2067-2067"];
m20_1053 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="2092-2092"];
m20_1039 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.IsCanonical()", span="2058-2058"];
m20_1055 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2040-2040"];
m20_52 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m20_387 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m20_119 [cluster="Unk.Where", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Where", span=""];
m20_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m20_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details = null", span="819-819"];
m20_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="820-820"];
m20_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''GetContractDetails: '' + contract", span="822-822"];
m20_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestId) return;\r\n                details = args.ContractDetails;\r\n                var uniqueKey = GetUniqueKey(contract);\r\n                _contractDetails.TryAdd(uniqueKey, details);\r\n                manualResetEvent.Set();\r\n                Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey);\r\n            }", span="827-836"];
m20_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails += clientOnContractDetails", span="838-838"];
m20_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="841-841"];
m20_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails -= clientOnContractDetails", span="849-849"];
m20_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="int timeout = 60", span="817-817"];
m20_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="824-824"];
m20_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetContractDetails(): failed to receive response from IB within {0} seconds'', timeout)", span="845-845"];
m20_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="843-843"];
m20_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details;", span="851-851"];
m20_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="815-815"];
m20_574 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m20_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m20_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", prediction=39, span="652-652"];
m20_260 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="613-617"];
m20_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="!_accountHoldingsResetEvent.WaitOne(15000)", span="640-640"];
m20_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", prediction=40, span="653-653"];
m20_263 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="623-626"];
m20_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return true;", prediction=41, span="655-655"];
m20_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return false;", prediction=42, span="648-648"];
m20_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Operation took longer than 15 seconds.'')", span="646-646"];
m20_261 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="618-618"];
m20_264 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="628-628"];
m20_265 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqAccountUpdates(true, _account)", span="631-631"];
m20_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="643-643"];
m20_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="644-644"];
m20_262 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="622-622"];
m20_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(2500)", span="638-638"];
m20_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="634-634"];
m20_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount()", span="610-610"];
m20_97 [cluster="System.Collections.Generic.List<T>.List()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_339 [cluster="Unk.placeOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.placeOrder", span=""];
m20_259 [cluster="Unk.processMsgs", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.processMsgs", span=""];
m20_237 [cluster="Unk.eConnect", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.eConnect", span=""];
m20_1058 [cluster="QuantConnect.Symbol.IsCanonical()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m20_509 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="920-920"];
m20_31 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_nextValidId = e.OrderId", span="208-208"];
m20_34 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="55-58"];
m20_37 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="215-246"];
m20_40 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token)", span="223-223"];
m20_46 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'')", span="240-240"];
m20_28 [cluster="System.Threading.Thread.Start()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m20_29 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="41-44"];
m20_32 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_waitForNextValidId.Set()", span="209-209"];
m20_33 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId)", span="211-211"];
m20_35 [cluster="System.Threading.EventWaitHandle.Set()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m20_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m20_38 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'')", span="219-219"];
m20_39 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="!_ctsRestartGateway.IsCancellationRequested", span="221-221"];
m20_41 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'')", span="225-225"];
m20_42 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="ResetGatewayConnection()", span="229-229"];
m20_44 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception)", span="233-233"];
m20_43 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="231-231"];
m20_47 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="242-242"];
m20_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", prediction=43, span="1617-1617"];
m20_130 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="381-400"];
m20_146 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="400-400"];
m20_134 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var currency = local.Symbol.Value.Substring(3)", prediction=44, span="391-391"];
m20_131 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.Type != SecurityType.Forex", span="384-384"];
m20_132 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = 1m", span="387-387"];
m20_135 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="currency == ''USD''", prediction=45, span="392-392"];
m20_138 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="399-399"];
m20_143 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="399-399"];
m20_136 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="local.ConversionRate = 1m", prediction=46, span="394-394"];
m20_137 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="395-395"];
m20_133 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return null;", prediction=47, span="388-388"];
m20_139 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="381-400"];
m20_185 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details.Add(args)", span="450-450"];
m20_181 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="446-446"];
m20_254 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error)", span="515-515"];
m20_103 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="344-344"];
m20_154 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="415-415"];
m20_250 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.IsConnected()", span="505-505"];
m20_251 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_signal.waitForSignal()", span="509-509"];
m20_280 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_accountHoldingsResetEvent.Set()", span="616-616"];
m20_393 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryAdd(uniqueKey, details)", span="833-833"];
m20_622 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="TryWaitForReconnect()", span="1231-1231"];
m20_123 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="378-378"];
m20_127 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="378-378"];
m20_148 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="400-400"];
m20_147 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="400-400"];
m20_142 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="399-399"];
m20_144 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="399-399"];
m20_184 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == requestId", span="450-450"];
m20_183 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="448-451"];
m20_186 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="448-451"];
m20_180 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == requestId", span="446-446"];
m20_182 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="444-447"];
m20_252 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="reader.processMsgs()", span="510-510"];
m20_253 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label=Exception, span="512-512"];
m20_528 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="1013-1013"];
m20_1321 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="2519-2519"];
m20_1323 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.Code == 162 && args.Message.Contains(''no data'')", span="2524-2524"];
m20_1356 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Contains(separatorLine)", span="2609-2609"];
m20_1359 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="line.Contains(''End this session and let the other session proceed'')", span="2611-2611"];
m20_279 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account)", span="615-615"];
m20_514 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="rate = Convert.ToDecimal(args.Price)", span="960-960"];
m20_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m20_249 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId)", span="503-503"];
m20_255 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId)", span="519-519"];
m20_395 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey)", span="835-835"];
m20_515 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency)", span="961-961"];
m20_102 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="341-345"];
m20_104 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="341-345"];
m20_153 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="415-415"];
m20_155 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="415-415"];
m20_281 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="613-617"];
m20_389 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId != requestId", span="830-830"];
m20_391 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details = args.ContractDetails", span="831-831"];
m20_392 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var uniqueKey = GetUniqueKey(contract)", span="832-832"];
m20_394 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="834-834"];
m20_412 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Array.IndexOf(exchanges, e)", span="864-864"];
m20_513 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK", span="958-958"];
m20_520 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="997-997"];
m20_524 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="1005-1005"];
m20_621 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1231-1231"];
m20_623 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1231-1231"];
m20_1215 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m20_1309 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="2496-2496"];
m20_1317 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.RequestId == historicalTicker", span="2511-2511"];
m20_125 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="378-378"];
m20_124 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="ObjectActivator.Clone(x.Value)", span="378-378"];
m20_129 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="378-378"];
m20_128 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Quantity != 0", span="378-378"];
m20_408 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="863-863"];
m20_411 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="864-864"];
m20_1218 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2384-2384"];
m20_1221 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2385-2385"];
m20_1224 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2386-2386"];
m20_1266 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2459-2459"];
m20_432 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="contractDetails.Add(args.ContractDetails)", span="881-881"];
m20_521 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="data.Add(args)", span="999-999"];
m20_1313 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="historyPiece.Add(bar)", span="2504-2504"];
m20_179 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="444-447"];
m20_108 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="349-349"];
m20_283 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="firstAccountUpdateReceived.Set()", span="625-625"];
m20_435 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="884-884"];
m20_516 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="962-962"];
m20_525 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Set()", span="1007-1007"];
m20_1318 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloaded.Set()", span="2513-2513"];
m20_1324 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloaded.Set()", span="2526-2526"];
m20_1314 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="dataDownloading.Set()", span="2505-2505"];
m20_527 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1011-1018"];
m20_529 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="pacingViolation = true", span="1016-1016"];
m20_530 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1011-1018"];
m20_1320 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2517-2528"];
m20_1322 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="pacing = true", span="2522-2522"];
m20_1325 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2517-2528"];
m20_1355 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2609-2609"];
m20_1357 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2609-2609"];
m20_1358 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2611-2611"];
m20_1360 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2611-2611"];
m20_278 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="613-617"];
m20_512 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="956-964"];
m20_517 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="956-964"];
m20_248 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="501-520"];
m20_256 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="501-520"];
m20_396 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="827-836"];
m20_388 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="827-836"];
m20_390 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return;", span="830-830"];
m20_413 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="864-864"];
m20_519 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="995-1001"];
m20_522 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="995-1001"];
m20_523 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1003-1009"];
m20_526 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1003-1009"];
m20_1225 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="exchangeFilter(g.Key)", span="2386-2386"];
m20_1214 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2352-2352"];
m20_1216 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2352-2352"];
m20_1267 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bar.Time >= requestStartTime && bar.EndTime <= requestEndTime", span="2459-2459"];
m20_1310 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var bar = ConvertTradeBar(request.Symbol, request.Resolution, args)", span="2498-2498"];
m20_1311 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="request.Resolution != Resolution.Daily", span="2499-2499"];
m20_1312 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone)", span="2501-2501"];
m20_1255 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2438-2438"];
m20_1258 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2439-2439"];
m20_1261 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2440-2447"];
m20_1308 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2494-2507"];
m20_1315 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2494-2507"];
m20_1316 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2509-2515"];
m20_1319 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2509-2515"];
m20_410 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="863-863"];
m20_409 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="details.Summary.Exchange", span="863-863"];
m20_1220 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2384-2384"];
m20_1219 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Summary", span="2384-2384"];
m20_1223 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2385-2385"];
m20_1222 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Exchange", span="2385-2385"];
m20_1226 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2386-2386"];
m20_1268 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2459-2459"];
m20_431 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="881-881"];
m20_433 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="881-881"];
m20_531 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="1044-1044"];
m20_1326 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="2566-2566"];
m20_107 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="346-350"];
m20_109 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="346-350"];
m20_282 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="623-626"];
m20_284 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="623-626"];
m20_434 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="884-884"];
m20_436 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="884-884"];
m20_510 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x == invertedSymbol || x == normalSymbol", span="920-920"];
m20_1262 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period)", span="2440-2447"];
m20_1257 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2438-2438"];
m20_1256 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="bid.Time", span="2438-2438"];
m20_1260 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2439-2439"];
m20_1259 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="ask.Time", span="2439-2439"];
m20_1263 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2440-2447"];
m20_533 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="1044-1044"];
m20_532 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Bar.Time", span="1044-1044"];
m20_1328 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="2566-2566"];
m20_1327 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Time", span="2566-2566"];
m20_511 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="920-920"];
m20_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m20_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="IBPlaceOrder(order, false)", span="289-289"];
m20_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="287-287"];
m20_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err)", span="293-293"];
m20_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="291-291"];
m20_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="296-296"];
m20_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="294-294"];
m20_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m20_1265 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m20_958 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m20_748 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m20_986 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="minTick == 0", span="1936-1936"];
m20_987 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="return minTick;", span="1936-1936"];
m20_988 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="return Math.Round(input/minTick)*minTick;", span="1937-1937"];
m20_989 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1934-1934"];
m20_98 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m20_779 [cluster="MarketOnCloseOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOnCloseOrder.cstr", span=""];
m20_1014 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m20_1015 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_brokerTimeDiff = e.CurrentTimeUtc.Subtract(DateTime.UtcNow)", span="2002-2002"];
m20_1016 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="1999-1999"];
m20_812 [cluster="Contract.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry Contract.cstr", span=""];
m20_1085 [cluster="System.Convert.ToInt32(double)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m20_499 [cluster="Unk.Create", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Create", span=""];
m20_616 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m20_1009 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes(): '' + result)", span="1994-1994"];
m20_1006 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="result = true", span="1985-1985"];
m20_1008 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="result = timeOfDay > new TimeSpan(23, 0, 0) || timeOfDay < new TimeSpan(1, 30, 0)", span="1991-1991"];
m20_1010 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="return result;", span="1996-1996"];
m20_1005 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="time.DayOfWeek == DayOfWeek.Saturday", span="1983-1983"];
m20_1007 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="var timeOfDay = time.TimeOfDay", span="1989-1989"];
m20_1003 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="bool result", span="1979-1979"];
m20_1004 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="1980-1980"];
m20_1011 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1977-1977"];
m20_82 [cluster="Unk.cancelOrder", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.cancelOrder", span=""];
m20_866 [cluster="ArgumentException.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry ArgumentException.cstr", span=""];
m20_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m20_999 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextTickerId);", span="1960-1960"];
m20_1000 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1958-1958"];
m20_1149 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m20_1151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2266-2266"];
m20_1157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2274-2274"];
m20_1163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidPrices.TryGetValue(symbol, out tick.BidPrice)", span="2284-2284"];
m20_1164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidSizes[symbol] = (int)tick.Quantity", span="2285-2285"];
m20_1169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskPrices.TryGetValue(symbol, out tick.AskPrice)", span="2295-2295"];
m20_1170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskSizes[symbol] = (int)tick.Quantity", span="2296-2296"];
m20_1176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastPrices.TryGetValue(symbol, out lastPrice)", span="2307-2307"];
m20_1177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastVolumes[symbol] = (int)tick.Quantity", span="2308-2308"];
m20_1183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_openInterests.ContainsKey(symbol) || _openInterests[symbol] != e.Size", span="2320-2320"];
m20_1186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_openInterests[symbol] = e.Size", span="2324-2324"];
m20_1188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2332-2332"];
m20_1190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_ticks.Add(tick)", span="2333-2333"];
m20_1150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Symbol symbol", span="2264-2264"];
m20_1152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2266-2266"];
m20_1153 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var tick = new Tick()", span="2268-2268"];
m20_1154 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Symbol = symbol", span="2271-2271"];
m20_1155 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2272-2272"];
m20_1182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option || symbol.ID.SecurityType == SecurityType.Future", span="2318-2318"];
m20_1156 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = AdjustQuantity(securityType, e.Size)", span="2273-2273"];
m20_1158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity == 0", span="2276-2276"];
m20_1162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2282-2282"];
m20_1165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = tick.BidPrice", span="2287-2287"];
m20_1168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2293-2293"];
m20_1171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = tick.AskPrice", span="2298-2298"];
m20_1175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="decimal lastPrice", span="2306-2306"];
m20_1178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = lastPrice", span="2310-2310"];
m20_1184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.OpenInterest", span="2322-2322"];
m20_1185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = e.Size", span="2323-2323"];
m20_1166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.BidSize = tick.Quantity", span="2288-2288"];
m20_1172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.AskSize = tick.Quantity", span="2299-2299"];
m20_1189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.IsValid()", span="2333-2333"];
m20_1160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Field", span="2278-2278"];
m20_1174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Trade", span="2304-2304"];
m20_1181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPTION_PUT_OPEN_INTEREST", span="2316-2316"];
m20_1159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2276-2276"];
m20_1161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.BID_SIZE", span="2280-2280"];
m20_1167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.ASK_SIZE", span="2291-2291"];
m20_1187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2330-2330"];
m20_1173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.LAST_SIZE", span="2303-2303"];
m20_1179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPEN_INTEREST", span="2314-2314"];
m20_1180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.OPTION_CALL_OPEN_INTEREST", span="2315-2315"];
m20_1191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2262-2262"];
m20_969 [cluster="Unk.GetCurrencySymbol", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetCurrencySymbol", span=""];
m20_774 [cluster="Unk.ConvertOrderDirection", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertOrderDirection", span=""];
m20_1032 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m20_669 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m20_704 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="orderEvent.Message += '' - '' + remainingQuantity + '' remaining''", prediction=48, span="1414-1414"];
m20_702 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee, ''Interactive Brokers Order Fill Event'')\r\n            {\r\n                Status = status,\r\n                FillPrice = price,\r\n                FillQuantity = fillQuantity\r\n            }", span="1406-1411"];
m20_703 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="remainingQuantity != 0", span="1412-1412"];
m20_705 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="OnOrderEvent(orderEvent)", prediction=43, span="1418-1418"];
m20_698 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var security = _securityProvider.GetSecurity(order.Symbol)", span="1399-1399"];
m20_701 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="order.PriceCurrency = _securityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="1405-1405"];
m20_696 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var orderFee = 0m", span="1396-1396"];
m20_697 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="currentQuantityFilled == totalQuantityFilled", span="1397-1397"];
m20_699 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="1400-1400"];
m20_700 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? currentQuantityFilled : -currentQuantityFilled", span="1404-1404"];
m20_706 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1392-1392"];
m20_568 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m20_106 [cluster="Unk.Add", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Add", span=""];
m20_175 [cluster="ExecutionFilter.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry ExecutionFilter.cstr", span=""];
m20_776 [cluster="MarketOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOrder.cstr", span=""];
m20_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m20_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.eDisconnect()", prediction=43, span="663-663"];
m20_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread != null", prediction=43, span="665-665"];
m20_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_signal.issueSignal()", prediction=43, span="667-667"];
m20_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread.Join()", span="668-668"];
m20_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread = null", span="669-669"];
m20_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m20_81 [cluster="int.Parse(string)", file="InteractiveBrokersBrokerage.cs", label="Entry int.Parse(string)", span="0-0"];
m20_960 [cluster="TradeBar.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry TradeBar.cstr", span=""];
m20_1106 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m20_1108 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2195-2195"];
m20_1113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2203-2203"];
m20_1123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidSizes.TryGetValue(symbol, out quantity)", span="2219-2219"];
m20_1125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastBidPrices[symbol] = price", span="2221-2221"];
m20_1129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskSizes.TryGetValue(symbol, out quantity)", span="2228-2228"];
m20_1131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastAskPrices[symbol] = price", span="2230-2230"];
m20_1135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_lastPrices[symbol] = price", span="2237-2237"];
m20_1137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2244-2244"];
m20_1139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_ticks.Add(tick)", span="2245-2245"];
m20_1110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var price = Convert.ToDecimal(e.Price)", span="2197-2197"];
m20_1107 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Symbol symbol", span="2193-2193"];
m20_1109 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2195-2195"];
m20_1112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Symbol = symbol", span="2202-2202"];
m20_1114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2204-2204"];
m20_1111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var tick = new Tick()", span="2199-2199"];
m20_1122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.BidPrice = price", span="2218-2218"];
m20_1124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = quantity", span="2220-2220"];
m20_1128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.AskPrice = price", span="2227-2227"];
m20_1130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Quantity = quantity", span="2229-2229"];
m20_1134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = price", span="2236-2236"];
m20_1138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.IsValid()", span="2245-2245"];
m20_1115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.Value = price", span="2205-2205"];
m20_1116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Price <= 0 &&\r\n                securityType != SecurityType.Future &&\r\n                securityType != SecurityType.Option", span="2207-2209"];
m20_1119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Field", span="2213-2213"];
m20_1121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2217-2217"];
m20_1127 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Quote", span="2226-2226"];
m20_1133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="tick.TickType = TickType.Trade", span="2235-2235"];
m20_1117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2210-2210"];
m20_1136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="2241-2241"];
m20_1118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="int quantity", span="2212-2212"];
m20_1120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.BID", span="2215-2215"];
m20_1126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.ASK", span="2224-2224"];
m20_1132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="IBApi.TickType.LAST", span="2233-2233"];
m20_1140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2191-2191"];
m20_302 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", span="424-424"];
m20_257 [cluster="Unk.IsConnected", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsConnected", span=""];
m20_1095 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m20_1096 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var time = DateTime.UtcNow.Add(_brokerTimeDiff)", span="2178-2178"];
m20_1098 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="2181-2181"];
m20_1100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="2185-2185"];
m20_1097 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="DateTimeZone exchangeTimeZone", span="2180-2180"];
m20_1101 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return time.ConvertFromUtc(exchangeTimeZone);", span="2188-2188"];
m20_1099 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType).TimeZone", span="2184-2184"];
m20_1102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2176-2176"];
m20_959 [cluster="Unk.ParseExact", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ParseExact", span=""];
m20_1305 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_694 [cluster="Unk.ToInt32", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToInt32", span=""];
m20_633 [cluster="decimal.Parse(string, System.IFormatProvider)", file="InteractiveBrokersBrokerage.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m20_1349 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m20_636 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="151-151"];
m20_996 [cluster="System.Threading.Interlocked.Increment(ref int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m20_1353 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m20_953 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m20_954 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var time = resolution != Resolution.Daily ?\r\n                Time.UnixTimeStampToDateTime(Convert.ToDouble(historyBar.Bar.Time, CultureInfo.InvariantCulture)) :\r\n                DateTime.ParseExact(historyBar.Bar.Time, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="1876-1878"];
m20_955 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return new TradeBar(time, symbol, (decimal)historyBar.Bar.Open, (decimal)historyBar.Bar.High, (decimal)historyBar.Bar.Low,\r\n                (decimal)historyBar.Bar.Close, historyBar.Bar.Volume, resolution.ToTimeSpan());", span="1880-1881"];
m20_956 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1874-1874"];
m20_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m20_728 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var ibOrder = new IBApi.Order\r\n            {\r\n                ClientId = _clientId,\r\n                OrderId = ibOrderId,\r\n                Account = _account,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = (int)Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", prediction=53, span="1473-1485"];
m20_729 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="order.Type == OrderType.MarketOnOpen", prediction=54, span="1487-1487"];
m20_730 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="ibOrder.Tif = IB.TimeInForce.MarketOnOpen", prediction=53, span="1489-1489"];
m20_735 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(limitOrder.LimitPrice, GetMinTick(contract)))", prediction=56, span="1497-1497"];
m20_737 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopMarketOrder.StopPrice, GetMinTick(contract)))", prediction=57, span="1501-1501"];
m20_740 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.LimitPrice, minTick))", prediction=58, span="1506-1506"];
m20_742 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return ibOrder;", prediction=53, span="1514-1514"];
m20_731 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var limitOrder = order as LimitOrder", prediction=60, span="1492-1492"];
m20_732 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var stopMarketOrder = order as StopMarketOrder", prediction=61, span="1493-1493"];
m20_734 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="limitOrder != null", prediction=60, span="1495-1495"];
m20_733 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var stopLimitOrder = order as StopLimitOrder", prediction=63, span="1494-1494"];
m20_736 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="stopMarketOrder != null", prediction=61, span="1499-1499"];
m20_738 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="stopLimitOrder != null", prediction=63, span="1503-1503"];
m20_741 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.StopPrice, minTick))", prediction=66, span="1507-1507"];
m20_739 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var minTick = GetMinTick(contract)", prediction=67, span="1505-1505"];
m20_743 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1471-1471"];
m20_156 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m20_782 [cluster="StopLimitOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry StopLimitOrder.cstr", span=""];
m20_247 [cluster="System.Exception.Exception(string, System.Exception)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m20_1348 [cluster="System.IO.File.GetLastWriteTimeUtc(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.File.GetLastWriteTimeUtc(string)", span="0-0"];
m20_635 [cluster="QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", span="37-37"];
m20_1017 [cluster="System.DateTime.Subtract(System.DateTime)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m20_1060 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m20_1209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="144-144"];
m20_1143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m20_1144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label=type, span="2253-2253"];
m20_1146 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="return size * 100;", span="2256-2256"];
m20_1147 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="return size;", span="2258-2258"];
m20_1145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Equity", span="2255-2255"];
m20_1148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2251-2251"];
m20_1304 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m20_777 [cluster="System.DateTime.DateTime()", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m20_118 [cluster="Unk.Select", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Select", span=""];
m20_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m20_997 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextRequestId);", span="1955-1955"];
m20_998 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1953-1953"];
m20_234 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m20_101 [cluster="System.TimeoutException.TimeoutException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m20_386 [cluster="Unk.reqContractDetails", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqContractDetails", span=""];
m20_1012 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m20_995 [cluster="System.Threading.Thread.Yield()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m20_1302 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m20_246 [cluster="string.Contains(string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Contains(string)", span="0-0"];
m20_110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m20_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                var currency = local.Symbol.Value.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", prediction=68, span="381-400"];
m20_112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="var holdings = _accountHoldings.Select(x => ObjectActivator.Clone(x.Value)).Where(x => x.Quantity != 0).ToList()", span="378-378"];
m20_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Task.WaitAll(tasks, 5000)", span="402-402"];
m20_111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="CheckIbGateway()", span="376-376"];
m20_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="return holdings;", span="404-404"];
m20_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m20_1345 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m20_720 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_620 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m20_693 [cluster="Unk.Error", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Error", span=""];
m20_1303 [cluster="System.Convert.ToInt32(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(bool)", span="0-0"];
m20_501 [cluster="Unk.Trace", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Trace", span=""];
m20_783 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m20_157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m20_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(symbol)", span="929-929"];
m20_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="932-932"];
m20_450 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="934-934"];
m20_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var marketDataTicker = GetNextTickerId()", span="952-952"];
m20_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[marketDataTicker] = ''GetUsdConversion.MarketData: '' + contract", span="954-954"];
m20_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice += clientOnTickPrice", span="967-967"];
m20_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqMktData(marketDataTicker, contract, string.Empty, true, false, new List<TagValue>())", span="969-969"];
m20_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice -= clientOnTickPrice", span="976-976"];
m20_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var historicalTicker = GetNextTickerId()", span="991-991"];
m20_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[historicalTicker] = ''GetUsdConversion.Historical: '' + contract", span="993-993"];
m20_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalData += clientOnHistoricalData", span="1021-1021"];
m20_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="1022-1022"];
m20_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.Error += clientOnError", span="1023-1023"];
m20_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqHistoricalData(historicalTicker, contract, DateTime.UtcNow.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                        requestSpan, IB.BarSize.OneSecond, HistoricalDataType.Ask, 0, 2, false, new List<TagValue>())", span="1027-1028"];
m20_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalData -= clientOnHistoricalData", span="1056-1056"];
m20_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="1057-1057"];
m20_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="_client.Error -= clientOnError", span="1058-1058"];
m20_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var data = new List<IB.HistoricalDataEventArgs>()", span="990-990"];
m20_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="944-944"];
m20_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(pacingDelaySeconds * 1000)", span="1039-1039"];
m20_439 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Getting USD conversion for '' + currency)", span="915-915"];
m20_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Last historical price rate is '' + rate + '' for currency '' + currency)", span="1052-1052"];
m20_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="973-973"];
m20_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1032-1032"];
m20_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="manualResetEvent.Reset()", span="988-988"];
m20_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var symbol = Symbol.Create(currencyPair, SecurityType.Forex, Market.FXCM)", span="928-928"];
m20_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="931-931"];
m20_451 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="937-937"];
m20_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="int requestTimeout = 60", span="949-949"];
m20_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK)\r\n                {\r\n                    rate = Convert.ToDecimal(args.Price);\r\n                    Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency);\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="956-964"];
m20_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting market data for '' + currencyPair)", span="966-966"];
m20_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="971-971"];
m20_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="rate <= 0", span="980-980"];
m20_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            data.Add(args);\r\n                        }\r\n                    }", span="995-1001"];
m20_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            manualResetEvent.Set();\r\n                        }\r\n                    }", span="1003-1009"];
m20_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting historical data for '' + currencyPair)", span="1020-1020"];
m20_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                    {\r\n                        if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                        {\r\n                            // pacing violation happened\r\n                            pacingViolation = true;\r\n                        }\r\n                    }", span="1011-1018"];
m20_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="string requestSpan = ''100 S''", span="1026-1026"];
m20_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1030-1030"];
m20_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label=pacingViolation, span="1060-1060"];
m20_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="int pacingDelaySeconds = 60", span="983-983"];
m20_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var ordered = data.OrderByDescending(x => x.Bar.Time)", span="1044-1044"];
m20_453 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var rate = 0m", span="943-943"];
m20_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion() Pacing violation, pausing for {0} secs.'', pacingDelaySeconds)", span="1038-1038"];
m20_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="return inverted ? 1 / rate : rate;", span="1063-1063"];
m20_437 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="currency == ''USD''", span="910-910"];
m20_440 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var invertedSymbol = ''USD'' + currency", span="918-918"];
m20_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="rate = Convert.ToDecimal(mostRecentQuote.Bar.Close)", span="1051-1051"];
m20_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label=pacingViolation, span="1035-1035"];
m20_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="pacingViolation = false", span="987-987"];
m20_442 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var currencyPair = Currencies.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="920-920"];
m20_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="bool inverted = invertedSymbol == currencyPair", span="927-927"];
m20_441 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var normalSymbol = currency + ''USD''", span="919-919"];
m20_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to resolve currency conversion pair for currency: '' + currency);", span="923-923"];
m20_452 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to resolve conversion for currency: '' + currency);", span="939-939"];
m20_438 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="return 1m;", span="912-912"];
m20_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="bool pacingViolation", span="982-982"];
m20_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="var mostRecentQuote = ordered.FirstOrDefault()", span="1045-1045"];
m20_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="mostRecentQuote == null", span="1046-1046"];
m20_443 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="currencyPair == null", span="921-921"];
m20_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''Unable to get recent quote for '' + currencyPair);", span="1048-1048"];
m20_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="908-908"];
m20_929 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m20_930 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label=resolution, span="1837-1837"];
m20_933 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneSecond;", span="1841-1841"];
m20_935 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneMinute;", span="1843-1843"];
m20_937 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneHour;", span="1845-1845"];
m20_939 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return IB.BarSize.OneDay;", span="1848-1848"];
m20_931 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Tick", span="1839-1839"];
m20_934 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Minute", span="1842-1842"];
m20_936 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Hour", span="1844-1844"];
m20_938 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Daily", span="1846-1846"];
m20_932 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Second", span="1840-1840"];
m20_940 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1835-1835"];
m20_1031 [cluster="System.Collections.Generic.List<T>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m20_518 [cluster="System.Convert.ToDecimal(double)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m20_810 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m20_891 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label=type, span="1768-1768"];
m20_904 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1789-1789"];
m20_893 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Stock;", span="1771-1771"];
m20_895 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Option;", span="1774-1774"];
m20_897 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Commodity;", span="1777-1777"];
m20_899 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Cash;", span="1780-1780"];
m20_901 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="return IB.SecurityType.Future;", span="1783-1783"];
m20_903 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1786-1786"];
m20_892 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Equity", span="1770-1770"];
m20_894 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Option", span="1773-1773"];
m20_896 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Commodity", span="1776-1776"];
m20_898 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Forex", span="1779-1779"];
m20_900 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Future", span="1782-1782"];
m20_902 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="SecurityType.Base", span="1785-1785"];
m20_905 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1766-1766"];
m20_1104 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m20_414 [cluster="Unk.IndexOf", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IndexOf", span=""];
m20_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m20_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[orderId] = ''CancelOrder: '' + order", span="315-315"];
m20_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.cancelOrder(orderId)", span="317-317"];
m20_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="308-308"];
m20_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err)", span="324-324"];
m20_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="var orderId = int.Parse(id)", span="313-313"];
m20_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId", span="311-311"];
m20_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="322-322"];
m20_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="325-325"];
m20_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="327-327"];
m20_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m20_692 [cluster="Unk.GetOrderByBrokerageId", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m20_773 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m20_972 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var securityType = ConvertSecurityType(contract.SecType)", span="1912-1912"];
m20_977 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, contractDate);", span="1920-1920"];
m20_982 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, expiryDate, strike, right);", span="1928-1928"];
m20_983 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market);", span="1931-1931"];
m20_973 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var ibSymbol = securityType == SecurityType.Forex ? contract.Symbol + contract.Currency : contract.Symbol", span="1913-1913"];
m20_974 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="1914-1914"];
m20_975 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Future", span="1916-1916"];
m20_978 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Option", span="1922-1922"];
m20_976 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1918-1918"];
m20_979 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var expiryDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1924-1924"];
m20_980 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var right = contract.Right == IB.RightType.Call ? OptionRight.Call : OptionRight.Put", span="1925-1925"];
m20_981 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="var strike = Convert.ToDecimal(contract.Strike)", span="1926-1926"];
m20_984 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1910-1910"];
m20_503 [cluster="System.Threading.EventWaitHandle.Reset()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m20_292 [cluster="Unk.issueSignal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.issueSignal", span=""];
m20_816 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m20_822 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Undefined", span="1658-1658"];
m20_817 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label=direction, span="1654-1654"];
m20_824 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(direction, ''direction'');", span="1660-1660"];
m20_823 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Hold;", span="1658-1658"];
m20_819 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Buy;", span="1656-1656"];
m20_821 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="return OrderDirection.Sell;", span="1657-1657"];
m20_818 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Buy", span="1656-1656"];
m20_820 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="IB.ActionSide.Sell", span="1657-1657"];
m20_825 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1652-1652"];
m20_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="195-195"];
m20_1001 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextClientId);", span="1968-1968"];
m20_1002 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1966-1966"];
m20_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m20_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="InteractiveBrokersBrokerage.cs", label="return new Dictionary<string, string>(_accountProperties);", span="696-696"];
m20_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="694-694"];
m20_1367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m20_722 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m20_723 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_accountHoldingsResetEvent.Reset()", prediction=43, span="1463-1463"];
m20_724 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var holding = CreateHolding(e)", prediction=70, span="1464-1464"];
m20_725 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_accountHoldings[holding.Symbol.Value] = holding", prediction=71, span="1465-1465"];
m20_726 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1461-1461"];
m20_258 [cluster="Unk.waitForSignal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.waitForSignal", span=""];
m20_241 [cluster="System.Exception.Exception(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m20_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m20_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="800-800"];
m20_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="805-805"];
m20_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="799-799"];
m20_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return 0;", span="809-809"];
m20_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return (decimal) details.MinTick;", span="802-802"];
m20_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="806-806"];
m20_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="return (decimal) details.MinTick;", span="812-812"];
m20_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="797-797"];
m20_575 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="_disconnected1100Fired = false", span="1151-1151"];
m20_576 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1154-1154"];
m20_578 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="1157-1157"];
m20_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="1166-1166"];
m20_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="RestoreDataSubscriptions()", span="1169-1169"];
m20_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1173-1173"];
m20_577 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Disconnecting...'')", span="1156-1156"];
m20_579 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Stopping IB Gateway...'')", span="1159-1159"];
m20_581 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restarting IB Gateway...'')", span="1162-1162"];
m20_583 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Reconnecting...'')", span="1165-1165"];
m20_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restoring data subscriptions...'')", span="1168-1168"];
m20_580 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="1160-1160"];
m20_582 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="InteractiveBrokersGatewayRunner.Restart()", span="1163-1163"];
m20_588 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m20_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_agentDescription = agentDescription", span="189-189"];
m20_335 [cluster="System.ArgumentException.ArgumentException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m20_1084 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m20_534 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m20_540 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation.TryGetValue(requestId, out requestMessage)", span="1082-1082"];
m20_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 1100 && !_disconnected1100Fired", span="1101-1101"];
m20_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_disconnected1100Fired = true", span="1103-1103"];
m20_550 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="TryWaitForReconnect()", span="1106-1106"];
m20_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1111-1111"];
m20_554 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="1118-1118"];
m20_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Server Version: '' + _client.ClientSocket.ServerVersion)", span="1124-1124"];
m20_561 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(requestId)", span="1133-1133"];
m20_564 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnOrderEvent(orderEvent)", span="1140-1140"];
m20_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1143-1143"];
m20_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError(): RequestId: {requestId} ErrorCode: {errorCode} - {errorMsg}'')", span="1087-1087"];
m20_560 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): IBOrderId: {requestId} ErrorCode: {message}'')", span="1130-1130"];
m20_553 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Reconnect message received. Restarting...'')", span="1116-1116"];
m20_535 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var requestId = e.Id", span="1073-1073"];
m20_539 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="string requestMessage", span="1081-1081"];
m20_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorMsg += ''. Origin: '' + requestMessage", span="1084-1084"];
m20_536 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var errorCode = e.Code", span="1074-1074"];
m20_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="WarningCodes.Contains(errorCode)", span="1095-1095"];
m20_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="1093-1093"];
m20_547 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="1097-1097"];
m20_551 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 1102 || errorCode == 1101", span="1108-1108"];
m20_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="InvalidatingCodes.Contains(errorCode)", span="1127-1127"];
m20_538 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorMsg = errorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="1078-1078"];
m20_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="1090-1090"];
m20_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1120-1120"];
m20_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="errorCode == 506", span="1122-1122"];
m20_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="int orderFee = 0", span="1134-1134"];
m20_563 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Invalid,\r\n                    Message = message\r\n                }", span="1135-1139"];
m20_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var message = $''{errorCode} - {errorMsg}''", span="1129-1129"];
m20_537 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var errorMsg = e.Message", span="1075-1075"];
m20_544 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="ErrorCodes.Contains(errorCode)", span="1091-1091"];
m20_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1069-1069"];
m20_1352 [cluster="System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", span="0-0"];
m20_727 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m20_963 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var symbol = MapSymbol(e.Contract)", span="1890-1890"];
m20_967 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = ConvertSecurityType(e.Contract.SecType),\r\n                Quantity = e.Position,\r\n                AveragePrice = Convert.ToDecimal(e.AverageCost) / multiplier,\r\n                MarketPrice = Convert.ToDecimal(e.MarketPrice),\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol = currencySymbol\r\n            };", span="1895-1904"];
m20_962 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var currencySymbol = Currencies.GetCurrencySymbol(e.Contract.Currency)", span="1889-1889"];
m20_964 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var multiplier = Convert.ToDecimal(e.Contract.Multiplier)", span="1892-1892"];
m20_965 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="multiplier == 0m", span="1893-1893"];
m20_966 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="multiplier = 1m", span="1893-1893"];
m20_968 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1887-1887"];
m20_666 [cluster="System.Convert.ToInt32(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m20_1018 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m20_1020 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label=_ticks, span="2016-2016"];
m20_1021 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="ticks = _ticks.ToArray()", span="2018-2018"];
m20_1022 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="_ticks.Clear()", span="2019-2019"];
m20_1025 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="_underlyings.ContainsKey(tick.Symbol)", span="2026-2026"];
m20_1027 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="2029-2029"];
m20_1019 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Tick[] ticks", span="2014-2014"];
m20_1023 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label=ticks, span="2022-2022"];
m20_1024 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="yield return tick;", span="2024-2024"];
m20_1026 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="var underlyingTick = tick.Clone()", span="2028-2028"];
m20_1028 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="yield return underlyingTick;", span="2030-2030"];
m20_1029 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2012-2012"];
m20_778 [cluster="MarketOnOpenOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry MarketOnOpenOrder.cstr", span=""];
m20_405 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m20_1056 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m20_1087 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var market = symbol.ID.Market", span="2161-2161"];
m20_1088 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="var securityType = symbol.ID.SecurityType", span="2162-2162"];
m20_1089 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="symbol.Value.ToLower().IndexOf(''universe'') != -1", span="2164-2164"];
m20_1091 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA) ||\r\n                (securityType == SecurityType.Future);", span="2166-2170"];
m20_1090 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="2164-2164"];
m20_1092 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2159-2159"];
m20_407 [cluster="Unk.FirstOrDefault", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.FirstOrDefault", span=""];
m20_235 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m20_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.TickPrice += HandleTickPrice", prediction=72, span="198-198"];
m20_571 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m20_1105 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m20_814 [cluster="string.Substring(int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Substring(int)", span="0-0"];
m20_941 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m20_942 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label=resolution, span="1859-1859"];
m20_945 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''60 S'';", span="1863-1863"];
m20_947 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 D'';", span="1865-1865"];
m20_949 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 M'';", span="1867-1867"];
m20_951 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return ''1 Y'';", span="1870-1870"];
m20_943 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Tick", span="1861-1861"];
m20_946 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Minute", span="1864-1864"];
m20_948 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Hour", span="1866-1866"];
m20_950 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Daily", span="1868-1868"];
m20_944 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Resolution.Second", span="1862-1862"];
m20_952 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1857-1857"];
m20_141 [cluster="Unk.StartNew", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.StartNew", span=""];
m20_504 [cluster="Unk.reqHistoricalData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqHistoricalData", span=""];
m20_1346 [cluster="System.IO.Path.Combine(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m20_602 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m20_671 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m20_672 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + executionDetails)", prediction=73, span="1348-1348"];
m20_673 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="!IsConnected", prediction=43, span="1350-1350"];
m20_678 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(executionDetails.Execution.OrderId)", prediction=75, span="1363-1363"];
m20_679 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="order == null", prediction=76, span="1364-1364"];
m20_684 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var remainingQuantity = Convert.ToInt32(order.AbsoluteQuantity - totalQuantityFilled)", span="1372-1372"];
m20_687 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!IsFillAlreadyHandled(order, executionDetails.Execution.OrderId, remainingQuantity)", span="1378-1378"];
m20_688 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1380-1380"];
m20_680 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Unable to locate order with BrokerageID '' + executionDetails.Execution.OrderId)", prediction=77, span="1366-1366"];
m20_681 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return;", prediction=78, span="1367-1367"];
m20_682 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var currentQuantityFilled = Convert.ToInt32(executionDetails.Execution.Shares)", prediction=79, span="1370-1370"];
m20_683 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var totalQuantityFilled = Convert.ToInt32(executionDetails.Execution.CumQty)", prediction=80, span="1371-1371"];
m20_674 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client != null", prediction=43, span="1352-1352"];
m20_675 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", prediction=43, span="1354-1354"];
m20_676 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; _client is null'')", prediction=83, span="1358-1358"];
m20_677 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return;", prediction=84, span="1360-1360"];
m20_685 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var price = Convert.ToDecimal(executionDetails.Execution.Price)", span="1373-1373"];
m20_686 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var status = remainingQuantity > 0 ? OrderStatus.PartiallyFilled : OrderStatus.Filled", span="1376-1376"];
m20_689 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1383-1383"];
m20_690 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + err)", span="1385-1385"];
m20_691 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1344-1344"];
m20_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705"];
m20_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="708-708"];
m20_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="!IsConnected", span="710-710"];
m20_314 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(order.Symbol, exchange)", span="723-723"];
m20_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var id = GetNextBrokerageOrderId()", span="729-729"];
m20_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[ibOrderId] = ''IBPlaceOrder: '' + contract", span="743-743"];
m20_325 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.exerciseOptions(ibOrderId, contract, 1, decimal.ToInt32(order.Quantity), _account, 0)", span="747-747"];
m20_326 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="var ibOrder = ConvertOrder(order, contract, ibOrderId)", span="751-751"];
m20_327 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.placeOrder(ibOrder.OrderId, contract, ibOrder)", span="752-752"];
m20_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="int ibOrderId", span="725-725"];
m20_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="712-712"];
m20_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="exchange == null &&\r\n                order.Symbol.SecurityType == SecurityType.Option &&\r\n                (order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose)", span="716-718"];
m20_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="exchange = Market.CBOE.ToUpper()", span="720-720"];
m20_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label=needsNewId, span="726-726"];
m20_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Add(id.ToString())", span="730-730"];
m20_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="ibOrderId = id", span="731-731"];
m20_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="ibOrderId = int.Parse(order.BrokerId[0])", span="736-736"];
m20_324 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.Type == OrderType.OptionExercise", span="745-745"];
m20_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="order.BrokerId.Any()", span="733-733"];
m20_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="740-740"];
m20_328 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="705-705"];
m20_507 [cluster="Exception.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry Exception.cstr", span=""];
m20_695 [cluster="Unk.IsFillAlreadyHandled", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsFillAlreadyHandled", span=""];
m20_336 [cluster="decimal.ToInt32(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry decimal.ToInt32(decimal)", span="0-0"];
m20_122 [cluster="Unk.WaitAll", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.WaitAll", span=""];
m20_308 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m20_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="194-194"];
m20_624 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m20_625 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="1246-1246"];
m20_628 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="1252-1252"];
m20_629 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="1253-1253"];
m20_631 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err)", span="1258-1258"];
m20_626 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="1249-1249"];
m20_627 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var cashBalance = decimal.Parse(e.Value, CultureInfo.InvariantCulture)", span="1251-1251"];
m20_630 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1256-1256"];
m20_632 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1240-1240"];
m20_1141 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m20_1347 [cluster="System.IO.Directory.GetFiles(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m20_961 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m20_83 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m20_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="341-345"];
m20_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrder += clientOnOpenOrder", span="352-352"];
m20_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="353-353"];
m20_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqAllOpenOrders()", span="355-355"];
m20_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="364-364"];
m20_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="_client.OpenOrderEnd -= clientOnOpenOrderEnd", span="365-365"];
m20_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="var orders = new List<Order>()", span="336-336"];
m20_85 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="338-338"];
m20_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="EventHandler clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="346-350"];
m20_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(15000)", span="358-358"];
m20_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="return orders;", span="367-367"];
m20_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 15 seconds.'');", span="360-360"];
m20_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m20_332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m20_991 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="_nextValidId == 0", span="1948-1948"];
m20_993 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="return Interlocked.Increment(ref _nextValidId);", span="1950-1950"];
m20_992 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Thread.Yield()", span="1948-1948"];
m20_994 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1944-1944"];
m20_239 [cluster="Unk.Start", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Start", span=""];
m20_573 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m20_1351 [cluster="string.String(char, int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.String(char, int)", span="0-0"];
m20_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", span=""];
m20_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="IBPlaceOrder(order, true)", span="268-268"];
m20_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="266-266"];
m20_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err)", span="273-273"];
m20_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="269-269"];
m20_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="271-271"];
m20_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="return false;", span="274-274"];
m20_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262"];
m20_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.CurrentTimeUtc += HandleBrokerTime", span="200-200"];
m20_815 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_707 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m20_906 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m20_907 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label=type, span="1798-1798"];
m20_926 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1826-1826"];
m20_909 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Equity;", span="1801-1801"];
m20_911 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Option;", span="1804-1804"];
m20_913 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Commodity;", span="1807-1807"];
m20_915 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Forex;", span="1810-1810"];
m20_917 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Future;", span="1813-1813"];
m20_925 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="return SecurityType.Base;", span="1823-1823"];
m20_908 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Stock", span="1800-1800"];
m20_910 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Option", span="1803-1803"];
m20_912 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Commodity", span="1806-1806"];
m20_914 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Cash", span="1809-1809"];
m20_916 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Future", span="1812-1812"];
m20_918 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Index", span="1816-1816"];
m20_924 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Undefined", span="1822-1822"];
m20_919 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.FutureOption", span="1817-1817"];
m20_923 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bill", span="1821-1821"];
m20_920 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bag", span="1818-1818"];
m20_922 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Warrant", span="1820-1820"];
m20_921 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="IB.SecurityType.Bond", span="1819-1819"];
m20_927 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1796-1796"];
m20_1210 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m20_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m20_1364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="_resetEventRestartGateway.Set()", span="2623-2623"];
m20_1361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): start'')", span="2619-2619"];
m20_1363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): IB Gateway not running. Restarting...'')", span="2622-2622"];
m20_1365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): end'')", span="2625-2625"];
m20_1362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="!InteractiveBrokersGatewayRunner.IsRunning()", span="2620-2620"];
m20_1366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m20_158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m20_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var filter = new ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientId,\r\n                Exchange = exchange,\r\n                SecType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = (timeSince ?? DateTime.MinValue).ToString(''yyyyMMdd HH:mm:ss''),\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", prediction=85, span="424-433"];
m20_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var details = new List<IB.ExecutionDetailsEventArgs>()", prediction=86, span="435-435"];
m20_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqExecutions(requestId, filter)", span="457-457"];
m20_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", prediction=87, span="437-437"];
m20_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ExecutionDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) details.Add(args);\r\n            }", span="448-451"];
m20_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="return details;", span="468-468"];
m20_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="439-439"];
m20_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) manualResetEvent.Set();\r\n            }", span="444-447"];
m20_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(5000)", span="459-459"];
m20_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''GetExecutions: '' + symbol", span="441-441"];
m20_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails += clientOnExecDetails", span="453-453"];
m20_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetailsEnd += clientOnExecutionDataEnd", span="454-454"];
m20_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails -= clientOnExecDetails", span="465-465"];
m20_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetailsEnd -= clientOnExecutionDataEnd", span="466-466"];
m20_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 5 seconds.'');", span="461-461"];
m20_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m20_619 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m20_813 [cluster="string.Substring(int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Substring(int, int)", span="0-0"];
m20_637 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m20_653 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="var price = Convert.ToDecimal(update.LastFillPrice)", prediction=88, span="1298-1298"];
m20_652 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var remainingQuantity = update.Remaining", span="1297-1297"];
m20_654 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!IsFillAlreadyHandled(order, update.OrderId, remainingQuantity)", span="1300-1300"];
m20_655 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1302-1302"];
m20_639 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="!IsConnected", span="1271-1271"];
m20_640 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="_client != null", span="1273-1273"];
m20_641 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1275-1275"];
m20_644 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var order = _orderProvider.GetOrderByBrokerageId(update.OrderId)", span="1284-1284"];
m20_661 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Interactive Brokers Order Event'')\r\n                            {\r\n                                Status = status\r\n                            })", span="1323-1326"];
m20_638 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + update)", span="1269-1269"];
m20_646 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="1287-1287"];
m20_648 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var status = ConvertOrderStatus(update.Status)", span="1291-1291"];
m20_650 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var currentQuantityFilled = Convert.ToInt32(update.Filled)", span="1295-1295"];
m20_651 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="var totalQuantityFilled = Convert.ToInt32(order.AbsoluteQuantity - update.Remaining)", span="1296-1296"];
m20_662 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="1331-1331"];
m20_658 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring update in closed state - order.Status: '' + order.Status + '', status: '' + status)", span="1313-1313"];
m20_660 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring status '' + status + '' after partial fills'')", span="1318-1318"];
m20_642 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; _client is null'')", span="1279-1279"];
m20_663 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err)", span="1333-1333"];
m20_643 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1281-1281"];
m20_645 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="order == null", span="1285-1285"];
m20_656 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="status != order.Status", span="1308-1308"];
m20_657 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="order.Status.IsClosed()", span="1310-1310"];
m20_659 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="order.Status == OrderStatus.PartiallyFilled && (status == OrderStatus.New || status == OrderStatus.Submitted)", span="1315-1315"];
m20_647 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="return;", span="1288-1288"];
m20_649 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="status == OrderStatus.Filled || status == OrderStatus.PartiallyFilled", span="1293-1293"];
m20_664 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1265-1265"];
m20_780 [cluster="LimitOrder.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry LimitOrder.cstr", span=""];
m20_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="179-179"];
m20_745 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m20_827 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label=direction, span="1669-1669"];
m20_834 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="1675-1675"];
m20_828 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Buy", span="1671-1671"];
m20_830 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Sell", span="1672-1672"];
m20_832 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="OrderDirection.Hold", span="1673-1673"];
m20_829 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Buy;", span="1671-1671"];
m20_831 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Sell;", span="1672-1672"];
m20_833 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="return IB.ActionSide.Undefined;", span="1673-1673"];
m20_835 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1667-1667"];
m20_188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m20_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=2, file="InteractiveBrokersBrokerage.cs", label="attempt++ < maxAttempts", prediction=89, span="583-583"];
m20_193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var attempt = 1", span="482-482"];
m20_194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="int maxAttempts = 5", span="483-483"];
m20_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="attempt++ < maxAttempts", span="540-540"];
m20_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="attempt++ < maxAttempts", span="559-559"];
m20_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label=existingSessionDetected, prediction=90, span="576-576"];
m20_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(15000)", prediction=91, span="585-585"];
m20_229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Error(err)", prediction=92, span="590-590"];
m20_195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var existingSessionDetected = false", span="484-484"];
m20_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="existingSessionDetected = true", span="535-535"];
m20_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=Exception, span="573-573"];
m20_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="Log.Error(err)", prediction=93, span="578-578"];
m20_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread = new Thread(() =>\r\n                    {\r\n                        Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId);\r\n\r\n                        while (_client.ClientSocket.IsConnected())\r\n                        {\r\n                            try\r\n                            {\r\n                                _signal.waitForSignal();\r\n                                reader.processMsgs();\r\n                            }\r\n                            catch (Exception error)\r\n                            {\r\n                                // error in message processing thread, log error and disconnect\r\n                                Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error);\r\n                            }\r\n                        }\r\n\r\n                        Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId);\r\n                    }) { IsBackground = true }", prediction=94, span="501-520"];
m20_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="var reader = new EReader(_client.ClientSocket, _signal)", span="498-498"];
m20_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="reader.Start()", span="499-499"];
m20_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_messageProcessingThread.Start()", span="522-522"];
m20_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw;", span="579-579"];
m20_196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=true, span="485-485"];
m20_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="err.Message.Contains(''Connection refused'')", prediction=95, span="593-593"];
m20_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="throw new Exception(err.Message + ''. Be sure to logout of Trader Workstation. '' +\r\n                            ''IB only allows one active log in at a time. '' +\r\n                            ''This can also be caused by requiring two-factor authentication. '' +\r\n                            ''Be sure to disable this in IB Account Management > Security > SLS Opt out.'', err);", prediction=96, span="595-598"];
m20_232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="throw;", prediction=97, span="601-601"];
m20_189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label=IsConnected, span="476-476"];
m20_191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_accountHoldings.Clear()", span="479-479"];
m20_192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_accountProperties.Clear()", span="480-480"];
m20_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="492-492"];
m20_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.eConnect(_host, _port, _clientId)", span="495-495"];
m20_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="!_waitForNextValidId.WaitOne(15000)", span="525-525"];
m20_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="530-530"];
m20_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="!_client.Connected", span="551-551"];
m20_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="!DownloadAccount()", span="553-553"];
m20_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Disconnect()", span="557-557"];
m20_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.setServerLogLevel(5)", span="569-569"];
m20_197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ({0}/{1}) ...'', attempt, maxAttempts)", span="489-489"];
m20_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="ExistingSessionDetected()", span="533-533"];
m20_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(1000)", span="542-542"];
m20_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'');", span="546-546"];
m20_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(1000)", span="561-561"];
m20_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed.'');", span="565-565"];
m20_209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): An existing session was detected and will not be automatically disconnected. Please close the existing session manually.'');", span="536-536"];
m20_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): Connection returned but was not in connected state.'');", span="551-551"];
m20_190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="return;", span="476-476"];
m20_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'')", span="527-527"];
m20_213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''IB next valid id received.'')", span="549-549"];
m20_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed. Operation took longer than 15 seconds.'')", span="555-555"];
m20_233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m20_508 [cluster="Unk.ToDecimal", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToDecimal", span=""];
m20_1103 [cluster="System.DateTime.Add(System.TimeSpan)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m20_126 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="129-129"];
m20_1228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m20_1229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="!CanSubscribe(request.Symbol) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Option && request.Symbol.IsCanonical()) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Future && request.Symbol.IsCanonical())", span="2404-2406"];
m20_1231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var contract = CreateContract(request.Symbol)", span="2412-2412"];
m20_1232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var resolution = ConvertResolution(request.Resolution)", span="2413-2413"];
m20_1233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var duration = ConvertResolutionToDuration(request.Resolution)", span="2414-2414"];
m20_1238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="2422-2422"];
m20_1240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="2426-2426"];
m20_1243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var historyBid = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Bid)", span="2434-2434"];
m20_1244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var historyAsk = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Ask)", span="2435-2435"];
m20_1246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Trades)", span="2452-2452"];
m20_1249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history.Where(bar => bar.Time >= requestStartTime && bar.EndTime <= requestEndTime)", span="2459-2459"];
m20_1251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Download completed'')", span="2464-2464"];
m20_1230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="yield break;", span="2408-2408"];
m20_1236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory(): Submitting request: {0}({1}): {2} {3} UTC -> {4} UTC'',\r\n                request.Symbol.Value, contract, request.Resolution, startTime, endTime)", span="2418-2419"];
m20_1234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var startTime = request.Resolution == Resolution.Daily ? request.StartTimeUtc.Date : request.StartTimeUtc", span="2415-2415"];
m20_1237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="DateTimeZone exchangeTimeZone", span="2421-2421"];
m20_1239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(request.Symbol.ID.Market, request.Symbol, request.Symbol.SecurityType).TimeZone", span="2425-2425"];
m20_1241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="IEnumerable<BaseData> history", span="2429-2429"];
m20_1247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var requestStartTime = request.StartTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2456-2456"];
m20_1248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var requestEndTime = request.EndTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2457-2457"];
m20_1235 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="var endTime = request.Resolution == Resolution.Daily ? request.EndTimeUtc.Date : request.EndTimeUtc", span="2416-2416"];
m20_1242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="request.Symbol.SecurityType == SecurityType.Forex || request.Symbol.SecurityType == SecurityType.Cfd", span="2430-2430"];
m20_1245 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="history = historyBid.Join(historyAsk,\r\n                    bid => bid.Time,\r\n                    ask => ask.Time,\r\n                    (bid, ask) => new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period))", span="2437-2447"];
m20_1250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="yield return bar;", span="2461-2461"];
m20_1252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2401-2401"];
m20_1086 [cluster="Unk.cancelMktData", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.cancelMktData", span=""];
m20_749 [cluster="System.Convert.ToDouble(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m20_506 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m20_353 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="new Thread(() =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread started.'');\r\n\r\n                    while (!_ctsRestartGateway.IsCancellationRequested)\r\n                    {\r\n                        if (_resetEventRestartGateway.WaitOne(1000, _ctsRestartGateway.Token))\r\n                        {\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence start.'');\r\n\r\n                            try\r\n                            {\r\n                                ResetGatewayConnection();\r\n                            }\r\n                            catch (Exception exception)\r\n                            {\r\n                                Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in ResetGatewayConnection: '' + exception);\r\n                            }\r\n\r\n                            Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): Reset sequence end.'');\r\n                        }\r\n                    }\r\n\r\n                    Log.Trace(''InteractiveBrokersBrokerage.ResetHandler(): thread ended.'');\r\n                }\r\n                catch (Exception exception)\r\n                {\r\n                    Log.Error(''InteractiveBrokersBrokerage.ResetHandler(): Error in reset handler thread: '' + exception);\r\n                }\r\n            }) { IsBackground = true }.Start()", span="215-246"];
m20_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_client.ExecutionDetails += HandleExecutionDetails", prediction=98, span="196-196"];
m20_971 [cluster="Unk.ConvertSecurityType", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ConvertSecurityType", span=""];
m20_330 [cluster="string.ToUpper()", file="InteractiveBrokersBrokerage.cs", label="Entry string.ToUpper()", span="0-0"];
m20_957 [cluster="Unk.ToDouble", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToDouble", span=""];
m20_592 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m20_594 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label=_sync, span="1182-1182"];
m20_595 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="subscribedSymbols = _subscribedSymbols.Keys.ToList()", span="1184-1184"];
m20_596 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols.Clear()", span="1186-1186"];
m20_597 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets.Clear()", span="1187-1187"];
m20_598 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Clear()", span="1188-1188"];
m20_599 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Subscribe(null, subscribedSymbols)", span="1191-1191"];
m20_593 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="List<Symbol> subscribedSymbols", span="1181-1181"];
m20_600 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1179-1179"];
m20_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerage.cs", label="_client.TickSize += HandleTickSize", span="199-199"];
m20_329 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m20_403 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m20_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var requestId = GetNextRequestId()", span="872-872"];
m20_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_requestInformation[requestId] = ''FindContracts: '' + contract", span="874-874"];
m20_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails += clientOnContractDetails", span="886-886"];
m20_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetailsEnd += clientOnContractDetailsEnd", span="887-887"];
m20_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="890-890"];
m20_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetailsEnd -= clientOnContractDetailsEnd", span="898-898"];
m20_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="_client.ContractDetails -= clientOnContractDetails", span="899-899"];
m20_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDetails = new List<ContractDetails>()", span="877-877"];
m20_418 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="876-876"];
m20_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.FindContracts(): failed to receive response from IB within {0} seconds'', timeout)", span="894-894"];
m20_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="int timeout = 60", span="870-870"];
m20_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnContractDetailsEnd =\r\n                (sender, args) => manualResetEvent.Set()", span="883-884"];
m20_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails =\r\n                (sender, args) => contractDetails.Add(args.ContractDetails)", span="880-881"];
m20_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="892-892"];
m20_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="return contractDetails;", span="901-901"];
m20_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="868-868"];
m20_572 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", span="90-90"];
m20_567 [cluster="string.Replace(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Replace(string, string)", span="0-0"];
m20_242 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m20_304 [cluster="System.Threading.CancellationTokenSource.Cancel(bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.CancellationTokenSource.Cancel(bool)", span="0-0"];
m20_178 [cluster="Unk.reqExecutions", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.reqExecutions", span=""];
m20_985 [cluster="Unk.GetLeanSymbol", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetLeanSymbol", span=""];
m20_708 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m20_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m20_346 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="764-764"];
m20_348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="details = GetContractDetails(contract)", span="769-769"];
m20_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="ContractDetails details", span="763-763"];
m20_347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.PrimaryExch;", span="766-766"];
m20_349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="details == null", span="770-770"];
m20_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return details.Summary.PrimaryExch;", span="776-776"];
m20_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return null;", span="773-773"];
m20_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="761-761"];
m20_291 [cluster="Unk.eDisconnect", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.eDisconnect", span=""];
m20_398 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m20_399 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="var contractDetails = FindContracts(contract)", span="857-857"];
m20_400 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="var exchanges = _futuresExchanges.Values.Reverse().ToArray()", span="859-859"];
m20_401 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="return contractDetails\r\n                    .Select(details => details.Summary.Exchange)\r\n                    .OrderByDescending(e => Array.IndexOf(exchanges, e))\r\n                    .FirstOrDefault();", span="862-865"];
m20_402 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="854-854"];
m20_667 [cluster="System.Convert.ToInt32(decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m20_570 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m20_1013 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m20_337 [cluster="Unk.exerciseOptions", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.exerciseOptions", span=""];
m20_1192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m20_1193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Connect()", span="2347-2347"];
m20_1195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var futuresExchanges = _futuresExchanges.Values.Reverse().ToArray()", span="2351-2351"];
m20_1197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = _symbolMapper.GetBrokerageRootSymbol(lookupName),\r\n                Currency = securityCurrency ?? ''USD'',\r\n                Exchange = exchangeSpecifier,\r\n                SecType = ConvertSecurityType(securityType)\r\n            }", span="2355-2361"];
m20_1201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var symbols = _algorithm.OptionChainProvider.GetOptionContractList(underlyingSymbol, DateTime.Today).ToList()", span="2371-2371"];
m20_1204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var results = FindContracts(contract)", span="2379-2379"];
m20_1207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="return filteredResults != null ? filteredResults.Select(MapSymbol) : Enumerable.Empty<Symbol>();", span="2392-2392"];
m20_1205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredResults =\r\n                    results\r\n                    .Select(x => x.Summary)\r\n                    .GroupBy(x => x.Exchange)\r\n                    .OrderByDescending(g => exchangeFilter(g.Key))\r\n                    .FirstOrDefault()", span="2382-2387"];
m20_1194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var exchangeSpecifier = securityType == SecurityType.Future ? securityExchange ?? '''' : securityExchange ?? ''Smart''", span="2350-2350"];
m20_1196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Func<string, int> exchangeFilter = exchange => securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2352-2352"];
m20_1198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Requesting symbol list for '' + contract.Symbol + '' ...'')", span="2363-2363"];
m20_1200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="var underlyingSymbol = Symbol.Create(contract.Symbol, SecurityType.Equity, Market.USA)", span="2370-2370"];
m20_1202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} contracts for {1}'', symbols.Count, contract.Symbol)", span="2373-2373"];
m20_1203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="return symbols;", span="2375-2375"];
m20_1199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="securityType == SecurityType.Option", span="2365-2365"];
m20_1206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} symbol(s)'', filteredResults != null ? filteredResults.Count() : 0)", span="2389-2389"];
m20_1208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2344-2344"];
m20_1061 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m20_1063 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="CanSubscribe(symbol)", span="2109-2109"];
m20_1064 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=_sync, span="2111-2111"];
m20_1067 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_underlyings.Remove(symbol.Underlying)", span="2117-2117"];
m20_1069 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedSymbols.TryRemove(symbol, out id)", span="2121-2121"];
m20_1070 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_messagingRateLimiter.WaitToProceed()", span="2123-2123"];
m20_1072 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes.TryGetValue(id, out subscriptionTime)", span="2127-2127"];
m20_1074 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="timeSinceSubscription < _minimumTimespanBeforeUnsubscribe", span="2130-2130"];
m20_1075 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var delay = Convert.ToInt32((_minimumTimespanBeforeUnsubscribe - timeSinceSubscription).TotalMilliseconds)", span="2132-2132"];
m20_1077 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscriptionTimes.Remove(id)", span="2136-2136"];
m20_1078 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Client.ClientSocket.cancelMktData(id)", span="2139-2139"];
m20_1080 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="_subscribedTickets.TryRemove(id, out s)", span="2142-2142"];
m20_1076 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Thread.Sleep(delay)", span="2133-2133"];
m20_1065 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Unsubscribe(): Unsubscribe Request: '' + symbol.Value)", span="2113-2113"];
m20_1082 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Log.Error(''InteractiveBrokersBrokerage.Unsubscribe(): '' + err.Message)", span="2150-2150"];
m20_1062 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=symbols, span="2107-2107"];
m20_1066 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.ID.StrikePrice == 0.0m", span="2115-2115"];
m20_1068 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="int id", span="2120-2120"];
m20_1071 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="DateTime subscriptionTime", span="2126-2126"];
m20_1073 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="var timeSinceSubscription = DateTime.UtcNow - subscriptionTime", span="2129-2129"];
m20_1079 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Symbol s", span="2141-2141"];
m20_1081 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label=Exception, span="2148-2148"];
m20_1083 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2103-2103"];
m20_670 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m20_826 [cluster="System.ArgumentException.ArgumentException(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m20_668 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m20_709 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="order.Status == OrderStatus.Filled", prediction=99, span="1431-1431"];
m20_710 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="1432-1432"];
m20_711 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="int previousRemainingQuantity", prediction=100, span="1434-1434"];
m20_715 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="newRemainingQuantity > 0", prediction=101, span="1444-1444"];
m20_712 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="_orderFills.TryGetValue(orderId, out previousRemainingQuantity)", span="1435-1435"];
m20_713 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="newRemainingQuantity >= previousRemainingQuantity", span="1437-1437"];
m20_716 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="_orderFills[orderId] = newRemainingQuantity", prediction=102, span="1447-1447"];
m20_717 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="_orderFills.Remove(orderId)", span="1452-1452"];
m20_718 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="return false;", prediction=103, span="1455-1455"];
m20_714 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="return true;", span="1440-1440"];
m20_719 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1428-1428"];
m20_1030 [cluster="System.Collections.Generic.List<T>.ToArray()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m20_406 [cluster="Unk.OrderByDescending", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.OrderByDescending", span=""];
m20_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m20_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="return string.Format(''{0} {1} {2} {3}'', contract, contract.LastTradeDateOrContractMonth, contract.Strike, contract.Right);", span="758-758"];
m20_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="756-756"];
m20_1217 [cluster="System.Array.IndexOf<T>(T[], T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m20_1227 [cluster="Unk.exchangeFilter", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.exchangeFilter", span=""];
m20_293 [cluster="System.Threading.Thread.Join()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m20_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m20_1341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var separatorLine = new string('-', 60)", span="2608-2608"];
m20_1329 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var ibControllerLogPath = Path.Combine(Config.Get(''ib-controller-dir''), ''Logs'')", span="2587-2587"];
m20_1340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var lines = File.ReadAllLines(ibControllerLogFileName).ToList()", span="2607-2607"];
m20_1342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var index = lines.FindLastIndex(x => x.Contains(separatorLine))", span="2609-2609"];
m20_1343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="return index >= 0 && lines.Skip(index + 1).Any(line => line.Contains(''End this session and let the other session proceed''));", span="2611-2611"];
m20_1339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="return false;", span="2603-2603"];
m20_1330 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var files = Directory.GetFiles(ibControllerLogPath, ''ibc-*.txt'')", span="2588-2588"];
m20_1332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var ibControllerLogFileName = string.Empty", span="2590-2590"];
m20_1338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="ibControllerLogFileName.IsNullOrEmpty()", span="2601-2601"];
m20_1337 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="ibControllerLogFileName = file", span="2597-2597"];
m20_1331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var lastLogUpdateTime = DateTime.MinValue", span="2589-2589"];
m20_1333 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label=files, span="2591-2591"];
m20_1336 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="lastLogUpdateTime = time", span="2596-2596"];
m20_1335 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="time > lastLogUpdateTime", span="2594-2594"];
m20_1334 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="var time = File.GetLastWriteTimeUtc(file)", span="2593-2593"];
m20_1344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2584-2584"];
m20_1368 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m20_1371 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Symbol", span=""];
m20_1372 [file="InteractiveBrokersBrokerage.cs", label=currency, span=""];
m20_1375 [file="InteractiveBrokersBrokerage.cs", label=details, span=""];
m20_1374 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m20_1369 [file="InteractiveBrokersBrokerage.cs", label=orders, span=""];
m20_1373 [file="InteractiveBrokersBrokerage.cs", label=requestId, span=""];
m20_1376 [file="InteractiveBrokersBrokerage.cs", label=reader, span=""];
m20_1402 [file="InteractiveBrokersBrokerage.cs", label=separatorLine, span=""];
m20_1387 [file="InteractiveBrokersBrokerage.cs", label=string, span=""];
m20_1378 [file="InteractiveBrokersBrokerage.cs", label=requestId, span=""];
m20_1379 [file="InteractiveBrokersBrokerage.cs", label=Contract, span=""];
m20_1380 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m20_1381 [file="InteractiveBrokersBrokerage.cs", label=exchanges, span=""];
m20_1386 [file="InteractiveBrokersBrokerage.cs", label=marketDataTicker, span=""];
m20_1389 [file="InteractiveBrokersBrokerage.cs", label=historicalTicker, span=""];
m20_1391 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.SecurityType", span=""];
m20_1392 [file="InteractiveBrokersBrokerage.cs", label=futuresExchanges, span=""];
m20_1396 [file="InteractiveBrokersBrokerage.cs", label=historicalTicker, span=""];
m20_1382 [file="InteractiveBrokersBrokerage.cs", label=contractDetails, span=""];
m20_1390 [file="InteractiveBrokersBrokerage.cs", label=data, span=""];
m20_1399 [file="InteractiveBrokersBrokerage.cs", label=historyPiece, span=""];
m20_1370 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m20_1377 [file="InteractiveBrokersBrokerage.cs", label=firstAccountUpdateReceived, span=""];
m20_1383 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m20_1388 [file="InteractiveBrokersBrokerage.cs", label=manualResetEvent, span=""];
m20_1401 [file="InteractiveBrokersBrokerage.cs", label=dataDownloaded, span=""];
m20_1400 [file="InteractiveBrokersBrokerage.cs", label=dataDownloading, span=""];
m20_1393 [file="InteractiveBrokersBrokerage.cs", label=exchangeFilter, span=""];
m20_1394 [file="InteractiveBrokersBrokerage.cs", label=requestStartTime, span=""];
m20_1395 [file="InteractiveBrokersBrokerage.cs", label=requestEndTime, span=""];
m20_1397 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m20_1398 [file="InteractiveBrokersBrokerage.cs", label=DateTimeZone, span=""];
m20_1384 [file="InteractiveBrokersBrokerage.cs", label=invertedSymbol, span=""];
m20_1385 [file="InteractiveBrokersBrokerage.cs", label=normalSymbol, span=""];
m21_241 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="353-353"];
m21_244 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool filled = false", span="358-358"];
m21_243 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="356-356"];
m21_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="369-369"];
m21_245 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="359-365"];
m21_255 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(filled)", span="381-381"];
m21_242 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="int id = 0", span="355-355"];
m21_249 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="370-370"];
m21_254 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.UpdateOrder(order)", span="378-378"];
m21_247 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, limitPrice, DateTime.UtcNow) {Id = ++id}", span="368-368"];
m21_246 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal limitPrice = 10000m", span="367-367"];
m21_251 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="373-373"];
m21_250 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var stopwatch = Stopwatch.StartNew()", span="372-372"];
m21_252 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(1000)", span="376-376"];
m21_253 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="order.LimitPrice = order.LimitPrice/2", span="377-377"];
m21_256 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="353-353"];
m21_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m21_496 [cluster="Unk.Pass", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Pass", span=""];
m21_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="676-676"];
m21_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m21_485 [cluster="System.Console.WriteLine(string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m21_75 [cluster="Unk.ToString", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.ToString", span=""];
m21_337 [cluster="Unk.ContainsKey", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.ContainsKey", span=""];
m21_80 [cluster="Unk.IsTrue", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.IsTrue", span=""];
m21_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="127-127"];
m21_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="129-129"];
m21_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="130-130"];
m21_79 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="127-127"];
m21_465 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="638-638"];
m21_466 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="640-640"];
m21_467 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="641-641"];
m21_482 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="669-669"];
m21_472 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="ib.IsConnected", span="650-650"];
m21_479 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="!ib.IsConnected && stopwatch.Elapsed < tenMinutes", span="663-663"];
m21_475 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="var stopwatch = Stopwatch.StartNew()", span="656-656"];
m21_473 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(2500)", span="652-652"];
m21_480 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(2500)", span="665-665"];
m21_468 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="var tenMinutes = TimeSpan.FromMinutes(10)", span="643-643"];
m21_471 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''------'')", span="647-647"];
m21_474 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.Write(''.'')", span="653-653"];
m21_478 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''------'')", span="660-660"];
m21_481 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.Write(''.'')", span="666-666"];
m21_476 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''------'')", span="658-658"];
m21_469 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''------'')", span="645-645"];
m21_470 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''Waiting for internet disconnection '')", span="646-646"];
m21_477 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''Trying to reconnect '')", span="659-659"];
m21_483 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientReconnectsAfterInternetDisconnect()", span="638-638"];
m21_264 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="385-385"];
m21_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var openOrders = ib.GetOpenOrders()", span="416-416"];
m21_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="390-390"];
m21_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="414-414"];
m21_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="417-417"];
m21_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="406-406"];
m21_266 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="388-388"];
m21_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="392-402"];
m21_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="407-407"];
m21_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.CancelOrder(order)", span="412-412"];
m21_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new LimitOrder(Symbols.USDJPY, -buyQuantity, 100000, DateTime.UtcNow, null)", span="405-405"];
m21_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsNull(cancelledOrder)", span="418-418"];
m21_265 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="387-387"];
m21_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="408-408"];
m21_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(500)", span="410-410"];
m21_279 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="385-385"];
m21_12 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m21_358 [cluster="Unk.Any", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Any", span=""];
m21_52 [cluster="Unk.Join", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Join", span=""];
m21_336 [cluster="Unk.WriteLine", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.WriteLine", span=""];
m21_138 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="411-411"];
m21_47 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m21_103 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", span="161-161"];
m21_104 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="163-163"];
m21_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="var i = 0", span="167-167"];
m21_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="164-164"];
m21_112 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="172-172"];
m21_111 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="171-171"];
m21_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Disconnect()", span="169-169"];
m21_110 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsFalse(ib.IsConnected)", span="170-170"];
m21_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="int iterations = 2", span="166-166"];
m21_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="i < iterations", span="167-167"];
m21_113 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="i++", span="167-167"];
m21_114 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ConnectDisconnectLoop()", span="161-161"];
m21_282 [cluster="Unk.IsNull", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.IsNull", span=""];
m21_50 [cluster="Unk.Where", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Where", span=""];
m21_201 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m21_387 [cluster="System.Collections.Generic.List<T>.List()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_411 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="568-568"];
m21_497 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="680-680"];
m21_498 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="order.BrokerId.Any(x => x == id)", prediction=104, span="680-680"];
m21_499 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="680-680"];
m21_500 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="680-680"];
m21_501 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="x == id", prediction=105, span="680-680"];
m21_502 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="680-680"];
m21_440 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))", span="607-607"];
m21_443 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="executions.Any(e => e.Execution.OrderId == int.Parse(id))", span="607-607"];
m21_158 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = true", span="220-220"];
m21_175 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = true", span="246-246"];
m21_204 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = true", span="275-275"];
m21_65 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="109-109"];
m21_361 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="509-509"];
m21_439 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="607-607"];
m21_441 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="607-607"];
m21_442 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="607-607"];
m21_444 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="607-607"];
m21_445 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="607-607"];
m21_157 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="218-218"];
m21_159 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="221-221"];
m21_160 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="216-223"];
m21_174 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="244-244"];
m21_176 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="247-247"];
m21_177 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="242-249"];
m21_203 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="273-273"];
m21_206 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="price = orderEvent.FillPrice", span="278-278"];
m21_207 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="delta = 0.02m", span="279-279"];
m21_205 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="276-276"];
m21_208 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="271-280"];
m21_237 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="fillPrice = args.FillPrice", span="319-319"];
m21_238 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="delta = 0.02m", span="320-320"];
m21_239 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="321-321"];
m21_62 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="101-101"];
m21_67 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="109-109"];
m21_66 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="109-109"];
m21_289 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="417-417"];
m21_363 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="509-509"];
m21_362 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol == ''USD''", span="509-509"];
m21_446 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="e.Execution.OrderId == int.Parse(id)", span="607-607"];
m21_447 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="607-607"];
m21_56 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="75-75"];
m21_58 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Canceled", span="79-79"];
m21_69 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="113-113"];
m21_72 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="113-113"];
m21_156 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="216-223"];
m21_173 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="242-249"];
m21_202 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="271-280"];
m21_236 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = true", span="318-318"];
m21_235 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="316-322"];
m21_240 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="316-322"];
m21_261 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="args.Status == OrderStatus.Filled", span="361-361"];
m21_393 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="538-538"];
m21_310 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="order.Status = fill.Status", span="440-440"];
m21_437 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.Set()", span="591-591"];
m21_436 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="args.Status == OrderStatus.Filled", span="589-589"];
m21_64 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="101-101"];
m21_63 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Quantity != 0", span="101-101"];
m21_287 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="canceledResetEvent.Set()", span="400-400"];
m21_284 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Submitted", span="394-394"];
m21_286 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEvent.Status == OrderStatus.Canceled", span="398-398"];
m21_290 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="417-417"];
m21_291 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="417-417"];
m21_463 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.Set()", span="620-620"];
m21_462 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="args.Status == OrderStatus.Submitted", span="618-618"];
m21_364 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="515-515"];
m21_262 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="filled = true", span="363-363"];
m21_59 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="canceledResetEvent.Set()", span="81-81"];
m21_57 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="filledResetEvent.Set()", span="77-77"];
m21_55 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="73-83"];
m21_60 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="73-83"];
m21_71 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="113-113"];
m21_70 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Quantity != 0", span="113-113"];
m21_74 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="113-113"];
m21_73 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol.ToString() + '' '' + x.Quantity", span="113-113"];
m21_307 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="fill.Status == OrderStatus.Filled", span="433-433"];
m21_308 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilledEventCount++", span="435-435"];
m21_338 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="460-460"];
m21_342 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="fill.Status == OrderStatus.Filled", span="475-475"];
m21_345 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="490-490"];
m21_390 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.Set()", span="530-530"];
m21_389 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="args.Status == OrderStatus.Filled", span="528-528"];
m21_408 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="564-564"];
m21_414 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="576-576"];
m21_285 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderedResetEvent.Set()", span="396-396"];
m21_309 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilledResetEvent.Set()", span="436-436"];
m21_343 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderResetEvent.Set()", span="475-475"];
m21_394 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="accountChangedFired.Set()", span="539-539"];
m21_412 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="568-568"];
m21_260 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="359-365"];
m21_263 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="359-365"];
m21_392 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="536-540"];
m21_306 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="431-441"];
m21_311 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="431-441"];
m21_438 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="587-593"];
m21_435 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="587-593"];
m21_288 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="392-402"];
m21_283 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="392-402"];
m21_464 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="616-622"];
m21_461 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="616-622"];
m21_366 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="515-515"];
m21_365 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol == ''USD''", span="515-515"];
m21_340 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="460-460"];
m21_339 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol", span="460-460"];
m21_341 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="473-476"];
m21_344 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="473-476"];
m21_347 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="490-490"];
m21_346 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol", span="490-490"];
m21_391 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="526-532"];
m21_388 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="526-532"];
m21_410 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="564-564"];
m21_409 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol == ''USD''", span="564-564"];
m21_416 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="576-576"];
m21_415 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x.Symbol == ''USD''", span="576-576"];
m21_395 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="536-540"];
m21_413 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="568-568"];
m21_396 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="560-560"];
m21_397 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="562-562"];
m21_402 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="571-571"];
m21_401 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="570-570"];
m21_398 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="decimal balance = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="564-564"];
m21_400 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="568-568"];
m21_403 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="572-572"];
m21_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="decimal balanceAfterTrade = ib.GetCashBalance().Single(x => x.Symbol == ''USD'').Amount", span="576-576"];
m21_399 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="567-567"];
m21_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="574-574"];
m21_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="578-578"];
m21_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="560-560"];
m21_259 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="283-283"];
m21_433 [cluster="System.Diagnostics.Stopwatch.Stop()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m21_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="210-210"];
m21_151 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="230-230"];
m21_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="212-212"];
m21_145 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="214-214"];
m21_147 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) {Id = 1}", span="225-225"];
m21_146 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="216-223"];
m21_150 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2500)", span="229-229"];
m21_152 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="231-231"];
m21_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="213-213"];
m21_149 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="227-227"];
m21_148 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="226-226"];
m21_153 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="210-210"];
m21_44 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m21_359 [cluster="System.Console.WriteLine(object)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m21_448 [cluster="int.Parse(string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry int.Parse(string)", span="0-0"];
m21_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="661-661"];
m21_161 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="235-235"];
m21_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="258-258"];
m21_162 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="237-237"];
m21_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="240-240"];
m21_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, DateTime.UtcNow)", span="252-252"];
m21_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="242-249"];
m21_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2500)", span="256-256"];
m21_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="259-259"];
m21_163 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="238-238"];
m21_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="254-254"];
m21_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="253-253"];
m21_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="235-235"];
m21_486 [cluster="System.Console.Write(string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Console.Write(string)", span="0-0"];
m21_11 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m21_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="63-63"];
m21_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var orders = _interactiveBrokersBrokerage.GetOpenOrders()", span="89-89"];
m21_36 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var openOrdersText = _interactiveBrokersBrokerage.GetOpenOrders().Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="109-109"];
m21_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Canceling open orders...'')", span="87-87"];
m21_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label=orders, span="90-90"];
m21_35 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="holdings.Where(x => x.Quantity != 0)", span="101-101"];
m21_37 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Open orders: '' + string.Join('', '', openOrdersText))", span="110-110"];
m21_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n                {\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        filledResetEvent.Set();\r\n                    }\r\n                    if (orderEvent.Status == OrderStatus.Canceled)\r\n                    {\r\n                        canceledResetEvent.Set();\r\n                    }\r\n                }", span="73-83"];
m21_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage.CancelOrder(order)", span="92-92"];
m21_34 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var holdings = _interactiveBrokersBrokerage.GetAccountHoldings()", span="100-100"];
m21_38 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var holdingsText = _interactiveBrokersBrokerage.GetAccountHoldings().Where(x => x.Quantity != 0).Select(x => x.Symbol.ToString() + '' '' + x.Quantity)", span="113-113"];
m21_40 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage.Dispose()", span="117-117"];
m21_41 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage = null", span="118-118"];
m21_32 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="canceledResetEvent.Reset()", span="94-94"];
m21_33 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Liquidating open positions...'')", span="97-97"];
m21_24 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="71-71"];
m21_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="72-72"];
m21_31 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="canceledResetEvent.WaitOne(3000)", span="93-93"];
m21_39 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Account holdings: '' + string.Join('', '', holdingsText))", span="114-114"];
m21_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''-----'')", span="67-67"];
m21_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Starting teardown...'')", span="68-68"];
m21_23 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''-----'')", span="69-69"];
m21_42 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="63-63"];
m21_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m21_43 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m21_305 [cluster="System.DateTime.DateTime()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m21_51 [cluster="Unk.Select", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Select", span=""];
m21_335 [cluster="Unk.ToDictionary", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.ToDictionary", span=""];
m21_431 [cluster="System.DateTime.AddDays(double)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m21_61 [cluster="System.Threading.EventWaitHandle.Set()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m21_7 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m21_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="374-374"];
m21_53 [cluster="Unk.Trace", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Trace", span=""];
m21_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="304-304"];
m21_48 [cluster="System.Threading.EventWaitHandle.Reset()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m21_115 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", span="177-177"];
m21_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="179-179"];
m21_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="180-180"];
m21_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="186-186"];
m21_121 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="ib.ResetGatewayConnection()", span="185-185"];
m21_119 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="var i = 0", span="183-183"];
m21_118 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="int iterations = 2", span="182-182"];
m21_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="i++", span="183-183"];
m21_120 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="i < iterations", span="183-183"];
m21_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ResetConnectionLoop()", span="177-177"];
m21_68 [cluster="QuantConnect.Symbol.ToString()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m21_10 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.SecurityProvider()", span="33-33"];
m21_140 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m21_101 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m21_100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1149-1149"];
m21_18 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.OrderProvider(System.Collections.Generic.IList<QuantConnect.Orders.Order>)", span="32-32"];
m21_434 [cluster="System.Console.WriteLine(string, object, object)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m21_155 [cluster="Unk.AreEqual", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.AreEqual", span=""];
m21_281 [cluster="Unk.FirstOrDefault", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m21_292 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m21_495 [cluster="Unk.Fail", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Fail", span=""];
m21_257 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m21_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m21_81 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", span="134-134"];
m21_82 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="136-136"];
m21_83 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="137-137"];
m21_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="143-143"];
m21_86 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="142-142"];
m21_84 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Disconnect()", span="139-139"];
m21_85 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsFalse(ib.IsConnected)", span="140-140"];
m21_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedUpdatesCorrectly()", span="134-134"];
m21_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="334-334"];
m21_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="191-191"];
m21_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="193-193"];
m21_128 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="196-196"];
m21_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="203-203"];
m21_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="195-195"];
m21_132 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow)", span="202-202"];
m21_129 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="197-197"];
m21_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="204-204"];
m21_130 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="var brokerageID = order.BrokerId.Single()", span="199-199"];
m21_131 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreNotEqual(0, brokerageID)", span="200-200"];
m21_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="206-206"];
m21_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="191-191"];
m21_137 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m21_139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="262-262"];
m21_360 [cluster="Unk.Single", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Single", span=""];
m21_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="308-308"];
m21_231 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="348-348"];
m21_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="310-310"];
m21_212 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="312-312"];
m21_217 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="326-326"];
m21_230 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(1000)", span="346-346"];
m21_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = false", span="334-334"];
m21_227 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="order = new StopMarketOrder(Symbols.USDJPY, -buyQuantity, fillPrice + delta, DateTime.UtcNow) { Id = ++id }", span="342-342"];
m21_232 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="349-349"];
m21_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="311-311"];
m21_213 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal fillPrice = 100m", span="314-314"];
m21_215 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="316-322"];
m21_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="328-328"];
m21_226 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="340-340"];
m21_229 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="344-344"];
m21_216 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="int id = 0", span="325-325"];
m21_218 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="327-327"];
m21_224 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="order = new StopMarketOrder(Symbols.USDJPY, buyQuantity, fillPrice - delta, DateTime.UtcNow) { Id = ++id }", span="338-338"];
m21_225 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="339-339"];
m21_228 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="343-343"];
m21_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(orderFilled)", span="332-332"];
m21_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2000)", span="330-330"];
m21_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Reset()", span="331-331"];
m21_214 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal delta = 85.0m", span="315-315"];
m21_233 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="308-308"];
m21_178 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="263-263"];
m21_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="303-303"];
m21_179 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="265-265"];
m21_181 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="267-267"];
m21_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Order order = new MarketOrder(Symbols.USDJPY, buyQuantity, DateTime.UtcNow) { Id = ++id }", span="284-284"];
m21_184 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="271-280"];
m21_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(1000)", span="301-301"];
m21_194 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="order = new LimitOrder(Symbols.USDJPY, -buyQuantity, price + delta, DateTime.UtcNow, null) { Id = ++id }", span="297-297"];
m21_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="304-304"];
m21_180 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="266-266"];
m21_182 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal price = 100m", span="269-269"];
m21_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="286-286"];
m21_193 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="295-295"];
m21_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="299-299"];
m21_185 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="int id = 0", span="283-283"];
m21_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="285-285"];
m21_191 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="order = new LimitOrder(Symbols.USDJPY, buyQuantity, price - delta, DateTime.UtcNow, null) { Id = ++id }", span="293-293"];
m21_192 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="294-294"];
m21_195 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="298-298"];
m21_183 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal delta = 85.0m", span="270-270"];
m21_189 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2000)", span="288-288"];
m21_190 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Reset()", span="289-289"];
m21_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="263-263"];
m21_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", span="147-147"];
m21_92 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="149-149"];
m21_93 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="150-150"];
m21_96 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="154-154"];
m21_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(ib.IsConnected)", span="157-157"];
m21_95 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(InteractiveBrokersGatewayRunner.IsRunning())", span="153-153"];
m21_94 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="ib.ResetGatewayConnection()", span="152-152"];
m21_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="ib.CheckIbGateway()", span="156-156"];
m21_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.IsConnectedAfterReset()", span="147-147"];
m21_8 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m21_102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2617-2617"];
m21_432 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="422-422"];
m21_367 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="521-521"];
m21_368 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="523-523"];
m21_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="546-546"];
m21_377 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity*(i + 1), new DateTime()) {Id = i + 1}", span="545-545"];
m21_369 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="var orderEventFired = new ManualResetEvent(false)", span="525-525"];
m21_370 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="526-532"];
m21_373 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="536-540"];
m21_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="547-547"];
m21_385 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="556-556"];
m21_372 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="535-535"];
m21_375 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="int i = 0", span="543-543"];
m21_376 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="i < orderCount", span="543-543"];
m21_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="549-549"];
m21_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="552-552"];
m21_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.Reset()", span="550-550"];
m21_371 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="var cashBalanceUpdates = new List<decimal>()", span="534-534"];
m21_374 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="int orderCount = 3", span="542-542"];
m21_383 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="accountChangedFired.Reset()", span="553-553"];
m21_384 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="i++", span="543-543"];
m21_386 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="521-521"];
m21_293 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="422-422"];
m21_294 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="424-424"];
m21_296 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="427-427"];
m21_295 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, buyQuantity, new DateTime()) {Id = 1}", span="426-426"];
m21_299 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="431-441"];
m21_300 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="443-443"];
m21_297 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="int orderFilledEventCount = 0", span="429-429"];
m21_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="450-450"];
m21_298 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="430-430"];
m21_301 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="445-445"];
m21_302 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(2000)", span="448-448"];
m21_304 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="422-422"];
m21_90 [cluster="Unk.IsFalse", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.IsFalse", span=""];
m21_484 [cluster="System.TimeSpan.FromMinutes(double)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m21_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="474-474"];
m21_234 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m21_417 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="582-582"];
m21_426 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="602-602"];
m21_429 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.Execution.OrderId == int.Parse(id)))))", span="607-607"];
m21_418 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="584-584"];
m21_425 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="var stopwatch = Stopwatch.StartNew()", span="600-600"];
m21_427 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="stopwatch.Stop()", span="604-604"];
m21_428 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(''Total executions fetched: {0}, elapsed time: {1} ms'', executions.Count, stopwatch.ElapsedMilliseconds)", span="605-605"];
m21_421 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, -buyQuantity, new DateTime())", span="595-595"];
m21_422 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="596-596"];
m21_419 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="var orderEventFired = new ManualResetEvent(false)", span="586-586"];
m21_420 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="587-593"];
m21_423 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="597-597"];
m21_424 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.WaitOne(1500)", span="598-598"];
m21_430 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="582-582"];
m21_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="136-136"];
m21_348 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="505-505"];
m21_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(cashBalance.Any(x => x.Symbol == ''USD''))", span="509-509"];
m21_350 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="var cashBalance = ib.GetCashBalance()", span="508-508"];
m21_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label=cashBalance, span="510-510"];
m21_349 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="507-507"];
m21_355 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreNotEqual(0m, cashBalance.Single(x => x.Symbol == ''USD''))", span="515-515"];
m21_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="cash.Symbol == ''USD''", span="513-513"];
m21_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(cash)", span="512-512"];
m21_356 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="505-505"];
m21_312 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="454-454"];
m21_313 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="456-456"];
m21_324 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="481-481"];
m21_323 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new MarketOrder(Symbols.USDJPY, quantity, DateTime.UtcNow)", span="480-480"];
m21_332 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbols.USDJPY))", span="499-499"];
m21_314 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(500)", span="458-458"];
m21_315 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="460-460"];
m21_321 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="473-476"];
m21_325 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="482-482"];
m21_328 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="490-490"];
m21_331 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(previousHoldings[Symbols.USDJPY].Quantity, newHoldings[Symbols.USDJPY].Quantity - quantity)", span="495-495"];
m21_333 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(newHoldings[Symbols.USDJPY].Quantity, quantity)", span="500-500"];
m21_320 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="472-472"];
m21_322 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="int quantity = -buyQuantity", span="479-479"];
m21_318 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbols.USDJPY].Quantity)", span="467-467"];
m21_329 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbols.USDJPY].Quantity)", span="491-491"];
m21_326 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="orderResetEvent.WaitOneAssertFail(3000, ''Didn't receive order event'')", span="485-485"];
m21_327 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(5000)", span="488-488"];
m21_330 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label=hasSymbol, span="493-493"];
m21_316 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label=previousHoldings, span="462-462"];
m21_319 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbols.USDJPY)", span="469-469"];
m21_317 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Console.WriteLine(holding.Value)", span="464-464"];
m21_334 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="454-454"];
m21_449 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="611-611"];
m21_458 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="var openOrders = ib.GetOpenOrders()", span="632-632"];
m21_450 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = _interactiveBrokersBrokerage", span="613-613"];
m21_457 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Thread.Sleep(250)", span="630-630"];
m21_459 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="634-634"];
m21_454 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="_orders.Add(order)", span="625-625"];
m21_451 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="var orderEventFired = new ManualResetEvent(false)", span="615-615"];
m21_452 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="616-622"];
m21_455 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="626-626"];
m21_456 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="orderEventFired.WaitOne(1500)", span="628-628"];
m21_453 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new LimitOrder(Symbols.USDJPY, buyQuantity, 0.01m, DateTime.UtcNow)", span="624-624"];
m21_460 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="611-611"];
m21_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="42-42"];
m21_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-controller-dir''), \r\n                Config.Get(''ib-tws-dir''), \r\n                Config.Get(''ib-user-name''), \r\n                Config.Get(''ib-password''),\r\n                Config.Get(''ib-trading-mode''),\r\n                Config.GetBool(''ib-use-tws'')\r\n                )", prediction=106, span="44-50"];
m21_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="var securityProvider = new SecurityProvider()", span="53-53"];
m21_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="securityProvider[Symbols.USDJPY] = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof(TradeBar), Symbols.USDJPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="54-56"];
m21_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage = new InteractiveBrokersBrokerage(new QCAlgorithm(), new OrderProvider(_orders), securityProvider)", span="58-58"];
m21_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="_interactiveBrokersBrokerage.Connect()", span="59-59"];
m21_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="42-42"];
m21_258 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m21_280 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m21_141 [cluster="Unk.AreNotEqual", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.AreNotEqual", span=""];
m21_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="672-672"];
m21_487 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="!orderFilled", prediction=107, span="675-675"];
m21_488 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="ib.GetOpenOrders()", prediction=104, span="678-678"];
m21_492 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="Assert.Pass(''The order was successfully filled!'')", prediction=109, span="688-688"];
m21_489 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", prediction=104, span="680-680"];
m21_491 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", prediction=111, span="685-685"];
m21_490 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="return openOrder;", prediction=104, span="682-682"];
m21_493 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="return null;", prediction=113, span="689-689"];
m21_494 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="672-672"];
m21_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m21_526 [file="InteractiveBrokersBrokerageTests.cs", label="QuantConnect.Orders.Order", span=""];
m21_527 [file="InteractiveBrokersBrokerageTests.cs", label=string, span=""];
m21_503 [file="InteractiveBrokersBrokerageTests.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m21_522 [file="InteractiveBrokersBrokerageTests.cs", label=order, span=""];
m21_523 [file="InteractiveBrokersBrokerageTests.cs", label=executions, span=""];
m21_506 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m21_507 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m21_508 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m21_509 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m21_524 [file="InteractiveBrokersBrokerageTests.cs", label=string, span=""];
m21_518 [file="InteractiveBrokersBrokerageTests.cs", label=cashBalanceUpdates, span=""];
m21_515 [file="InteractiveBrokersBrokerageTests.cs", label=order, span=""];
m21_521 [file="InteractiveBrokersBrokerageTests.cs", label=orderEventFired, span=""];
m21_511 [file="InteractiveBrokersBrokerageTests.cs", label=canceledResetEvent, span=""];
m21_512 [file="InteractiveBrokersBrokerageTests.cs", label=order, span=""];
m21_525 [file="InteractiveBrokersBrokerageTests.cs", label=orderEventFired, span=""];
m21_505 [file="InteractiveBrokersBrokerageTests.cs", label=canceledResetEvent, span=""];
m21_504 [file="InteractiveBrokersBrokerageTests.cs", label=filledResetEvent, span=""];
m21_513 [file="InteractiveBrokersBrokerageTests.cs", label=orderFilledEventCount, span=""];
m21_517 [file="InteractiveBrokersBrokerageTests.cs", label=orderEventFired, span=""];
m21_510 [file="InteractiveBrokersBrokerageTests.cs", label=orderedResetEvent, span=""];
m21_514 [file="InteractiveBrokersBrokerageTests.cs", label=orderFilledResetEvent, span=""];
m21_516 [file="InteractiveBrokersBrokerageTests.cs", label=orderResetEvent, span=""];
m21_519 [file="InteractiveBrokersBrokerageTests.cs", label=accountChangedFired, span=""];
m21_520 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m24_61 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanData.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m24_32 [cluster="System.Math.Abs(decimal)", file="LeanData.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m24_28 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62"];
m24_29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m24_37 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m24_38 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var addedSymbols = new List<Symbol>()", span="128-128"];
m24_39 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="changes.AddedSecurities", span="129-129"];
m24_41 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var symbolData = new SymbolData(algorithm, added, _period, _resolution)", span="134-134"];
m24_45 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="algorithm.History(addedSymbols, _period, _resolution)\r\n                    .PushThroughConsolidators(symbol =>\r\n                    {\r\n                        SymbolData data;\r\n                        return _symbolData.TryGetValue(symbol, out data) ? data.Consolidator : null;\r\n                    })", span="143-148"];
m24_46 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="changes.RemovedSecurities", span="151-151"];
m24_49 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="157-157"];
m24_51 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="160-160"];
m24_42 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="addedSymbols.Add(added.Symbol)", span="135-135"];
m24_44 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="addedSymbols.Count > 0", span="140-140"];
m24_40 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="132-132"];
m24_43 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="_symbolData[added.Symbol] = symbolData", span="136-136"];
m24_47 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="SymbolData data", span="154-154"];
m24_48 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="155-155"];
m24_50 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="_symbolData.Remove(removed.Symbol)", span="159-159"];
m24_52 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m24_58 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.PushThroughConsolidators(System.Func<QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator>)", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.PushThroughConsolidators(System.Func<QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator>)", span="195-195"];
m24_82 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207"];
m24_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m24_53 [cluster="System.Collections.Generic.List<T>.List()", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m24_36 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m24_97 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="225-229"];
m24_62 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="144-148"];
m24_63 [cluster="lambda expression", file="LeanData.cs", label="SymbolData data", span="146-146"];
m24_64 [cluster="lambda expression", file="LeanData.cs", label="return _symbolData.TryGetValue(symbol, out data) ? data.Consolidator : null;", span="147-147"];
m24_65 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="144-148"];
m24_80 [cluster="lambda expression", file="LeanData.cs", label="kvp.Value.ContainsMember(symbol)", span="205-205"];
m24_79 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="205-205"];
m24_81 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="205-205"];
m24_98 [cluster="lambda expression", file="LeanData.cs", label="SMA.Update(consolidated.EndTime, consolidated.Value)", span="227-227"];
m24_99 [cluster="lambda expression", file="LeanData.cs", label="STD.Update(consolidated.EndTime, consolidated.Value)", span="228-228"];
m24_100 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="225-229"];
m24_34 [cluster="System.Math.Sign(decimal)", file="LeanData.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m24_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m24_30 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="170-170"];
m24_66 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="var deviations = _deviations * data.STD", span="172-172"];
m24_67 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="unorderedQuantity > 0", span="173-173"];
m24_68 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="var price = data.Security.BidPrice == 0\r\n                    ? data.Security.Price\r\n                    : data.Security.BidPrice", span="175-177"];
m24_69 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="price < data.SMA - deviations", span="179-179"];
m24_71 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="var price = data.Security.AskPrice == 0\r\n                    ? data.Security.AskPrice\r\n                    : data.Security.Price", span="186-188"];
m24_72 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="price > data.SMA + deviations", span="190-190"];
m24_70 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="return true;", span="181-181"];
m24_74 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="return false;", span="196-196"];
m24_73 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="return true;", span="192-192"];
m24_75 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="170-170"];
m24_55 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="215-215"];
m24_83 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="Security = security", span="217-217"];
m24_84 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="218-218"];
m24_85 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="var smaName = algorithm.CreateIndicatorName(security.Symbol, ''SMA'' + period, resolution)", span="219-219"];
m24_86 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="SMA = new SimpleMovingAverage(smaName, period)", span="220-220"];
m24_87 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="var stdName = algorithm.CreateIndicatorName(security.Symbol, ''STD'' + period, resolution)", span="221-221"];
m24_88 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="STD = new StandardDeviation(stdName, period)", span="222-222"];
m24_89 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="224-224"];
m24_90 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="Consolidator.DataConsolidated += (sender, consolidated) =>\r\n                {\r\n                    SMA.Update(consolidated.EndTime, consolidated.Value);\r\n                    STD.Update(consolidated.EndTime, consolidated.Value);\r\n                }", span="225-229"];
m24_91 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="215-215"];
m24_95 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="LeanData.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m24_0 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m24_1 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="_period = period", span="60-60"];
m24_2 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="_deviations = deviations", span="61-61"];
m24_3 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="_resolution = resolution", span="62-62"];
m24_4 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="_targetsCollection = new PortfolioTargetCollection()", span="63-63"];
m24_5 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="64-64"];
m24_6 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m24_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m24_96 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="LeanData.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m24_9 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73"];
m24_10 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="_targetsCollection.AddRange(targets)", span="75-75"];
m24_13 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="82-82"];
m24_22 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="algorithm.MarketOrder(symbol, Math.Sign(unorderedQuantity) * orderSize)", span="108-108"];
m24_23 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="113-113"];
m24_11 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label=_targetsCollection, span="77-77"];
m24_12 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="var symbol = target.Symbol", span="79-79"];
m24_25 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="_targetsCollection.Remove(target.Symbol)", span="116-116"];
m24_15 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="86-86"];
m24_14 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="SymbolData data", span="85-85"];
m24_17 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="data.STD.IsReady && PriceIsFavorable(data, unorderedQuantity)", span="98-98"];
m24_19 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="102-102"];
m24_16 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="data.Security.Price == 0m", span="92-92"];
m24_18 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="var maxOrderSize = OrderSizing.Value(data.Security, MaximumOrderValue)", span="101-101"];
m24_20 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="105-105"];
m24_21 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="orderSize != 0", span="106-106"];
m24_24 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="unorderedQuantity == 0m", span="114-114"];
m24_26 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="73-73"];
m24_78 [cluster="Unk.Any", file="LeanData.cs", label="Entry Unk.Any", span=""];
m24_59 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="202-202"];
m24_76 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="LeanData.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="205-205"];
m24_77 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="202-202"];
m24_94 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="LeanData.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m24_31 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", span="44-44"];
m24_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m24_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m24_56 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m24_33 [cluster="System.Math.Min(decimal, decimal)", file="LeanData.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m24_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="LeanData.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m24_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", file="LeanData.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", span="26-26"];
m24_101 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="LeanData.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m24_102 [file="LeanData.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", span=""];
m24_103 [file="LeanData.cs", label="QuantConnect.Symbol", span=""];
m24_104 [file="LeanData.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", span=""];
m25_87 [cluster="Unk.GetEntry", file="LeanDataTests.cs", label="Entry Unk.GetEntry", span=""];
m25_136 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanDataTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m25_75 [cluster="Unk.Where", file="LeanDataTests.cs", label="Entry Unk.Where", span=""];
m25_128 [cluster="decimal.RoundToSignificantDigits(int)", file="LeanDataTests.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m25_92 [cluster="Unk.Trace", file="LeanDataTests.cs", label="Entry Unk.Trace", span=""];
m25_81 [cluster="Unk.Concat", file="LeanDataTests.cs", label="Entry Unk.Concat", span=""];
m25_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m25_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LeanDataTests.cs", label=_locker, span="106-106"];
m25_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LeanDataTests.cs", label="Amount += amount", span="108-108"];
m25_22 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LeanDataTests.cs", label="return Amount;", span="109-109"];
m25_23 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="104-104"];
m25_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m25_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label=_isBaseCurrency, span="88-88"];
m25_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="var rate = data.Value", span="90-90"];
m25_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="return;", span="88-88"];
m25_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label=_invertRealTimePrice, span="91-91"];
m25_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="rate = 1/rate", span="93-93"];
m25_17 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="ConversionRate = rate", span="95-95"];
m25_18 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m25_85 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235"];
m25_123 [cluster="QuantConnect.Securities.Cash.ToString()", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="228-228"];
m25_124 [cluster="QuantConnect.Securities.Cash.ToString()", file="LeanDataTests.cs", label="var rate = ConversionRate", span="231-231"];
m25_125 [cluster="QuantConnect.Securities.Cash.ToString()", file="LeanDataTests.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="232-232"];
m25_126 [cluster="QuantConnect.Securities.Cash.ToString()", file="LeanDataTests.cs", label="return $''{Symbol}: {CurrencySymbol}{Amount,15:0.00} @ {rate,10:0.00####} = ${Math.Round(ValueInAccountCurrency, 2)}'';", span="233-233"];
m25_127 [cluster="QuantConnect.Securities.Cash.ToString()", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="228-228"];
m25_83 [cluster="Unk.Min", file="LeanDataTests.cs", label="Entry Unk.Min", span=""];
m25_120 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="181-181"];
m25_111 [cluster="lambda expression", file="LeanDataTests.cs", label="CreateSymbol(marketMap, fx, markets, SecurityType.Forex)", span="177-177"];
m25_115 [cluster="lambda expression", file="LeanDataTests.cs", label="CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)", span="178-178"];
m25_118 [cluster="lambda expression", file="LeanDataTests.cs", label="CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)", span="179-179"];
m25_94 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="149-150"];
m25_97 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="167-167"];
m25_100 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="167-167"];
m25_103 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="167-167"];
m25_106 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="167-167"];
m25_110 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="177-177"];
m25_114 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="178-178"];
m25_117 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="179-179"];
m25_95 [cluster="lambda expression", file="LeanDataTests.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto", span="149-150"];
m25_96 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="149-150"];
m25_98 [cluster="lambda expression", file="LeanDataTests.cs", label="x.Key", span="167-167"];
m25_99 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="167-167"];
m25_101 [cluster="lambda expression", file="LeanDataTests.cs", label="x.SecurityType", span="167-167"];
m25_102 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="167-167"];
m25_104 [cluster="lambda expression", file="LeanDataTests.cs", label="x.Key", span="167-167"];
m25_105 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="167-167"];
m25_107 [cluster="lambda expression", file="LeanDataTests.cs", label="y.First().ID.Market", span="167-167"];
m25_108 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="167-167"];
m25_112 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="177-177"];
m25_116 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="178-178"];
m25_119 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="179-179"];
m25_121 [cluster="lambda expression", file="LeanDataTests.cs", label="x.Resolution", span="181-181"];
m25_122 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="181-181"];
m25_10 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="LeanDataTests.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="302-302"];
m25_91 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m25_79 [cluster="Unk.ContainsKey", file="LeanDataTests.cs", label="Entry Unk.ContainsKey", span=""];
m25_88 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m25_84 [cluster="Unk.GetSymbolProperties", file="LeanDataTests.cs", label="Entry Unk.GetSymbolProperties", span=""];
m25_137 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanDataTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m25_90 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m25_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m25_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="string market", span="238-238"];
m25_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="!markets.TryGetValue(securityType, out market)", span="239-239"];
m25_133 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="market = marketMap[securityType]", span="241-241"];
m25_134 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="return QuantConnect.Symbol.Create(crypto, securityType, market);", span="244-244"];
m25_135 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="236-236"];
m25_8 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanDataTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m25_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m25_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="LeanDataTests.cs", label=_locker, span="119-119"];
m25_26 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="LeanDataTests.cs", label="Amount = amount", span="121-121"];
m25_27 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m25_80 [cluster="Unk.Add", file="LeanDataTests.cs", label="Entry Unk.Add", span=""];
m25_9 [cluster="string.ToUpper()", file="LeanDataTests.cs", label="Entry string.ToUpper()", span="0-0"];
m25_89 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m25_129 [cluster="System.Math.Round(decimal, int)", file="LeanDataTests.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m25_86 [cluster="Exception.cstr", file="LeanDataTests.cs", label="Entry Exception.cstr", span=""];
m25_77 [cluster="Unk.GroupBy", file="LeanDataTests.cs", label="Entry Unk.GroupBy", span=""];
m25_113 [cluster="Unk.CreateSymbol", file="LeanDataTests.cs", label="Entry Unk.CreateSymbol", span=""];
m25_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m25_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="symbol == null || symbol.Length != 3", span="72-72"];
m25_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="Amount = amount", span="76-76"];
m25_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="ConversionRate = conversionRate", span="77-77"];
m25_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="Symbol = symbol.ToUpper()", span="78-78"];
m25_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="74-74"];
m25_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(Symbol)", span="79-79"];
m25_7 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m25_93 [cluster="string.Format(string, object, object)", file="LeanDataTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_109 [cluster="Unk.First", file="LeanDataTests.cs", label="Entry Unk.First", span=""];
m25_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="196-196"];
m25_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m25_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Symbol == CashBook.AccountCurrency", span="138-138"];
m25_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="149-150"];
m25_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var markets = securities.Select(x => x.Key).GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="167-167"];
m25_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="177-179"];
m25_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="181-181"];
m25_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="189-189"];
m25_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="191-191"];
m25_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="195-195"];
m25_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="198-198"];
m25_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="securities.Add(config.Symbol, security)", span="214-214"];
m25_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="140-140"];
m25_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="147-147"];
m25_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="_isBaseCurrency = true", span="141-141"];
m25_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="ConversionRate = 1.0m", span="142-142"];
m25_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="return null;", span="143-143"];
m25_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="148-148"];
m25_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="config.Symbol.Value == normal", span="152-152"];
m25_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="symbol.Value == normal || symbol.Value == invert", span="185-185"];
m25_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="config.Symbol.Value == invert", span="157-157"];
m25_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="_invertRealTimePrice = symbol.Value == invert", span="187-187"];
m25_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="SecuritySymbol = config.Symbol", span="154-154"];
m25_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="SecuritySymbol = config.Symbol", span="159-159"];
m25_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="return null;", span="155-155"];
m25_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="_invertRealTimePrice = true", span="160-160"];
m25_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="return null;", span="161-161"];
m25_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="168-168"];
m25_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="170-170"];
m25_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="172-172"];
m25_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="174-174"];
m25_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label=potentials, span="183-183"];
m25_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="182-182"];
m25_73 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="221-221"];
m25_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="var securityType = symbol.ID.SecurityType", span="188-188"];
m25_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.Value);", span="193-193"];
m25_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="215-215"];
m25_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="securityType == SecurityType.Cfd", span="202-202"];
m25_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="securityType == SecurityType.Crypto", span="206-206"];
m25_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Cash quoteCash", span="190-190"];
m25_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="204-204"];
m25_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="208-208"];
m25_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="212-212"];
m25_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="SecuritySymbol = config.Symbol", span="199-199"];
m25_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Security security", span="201-201"];
m25_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="return security;", span="216-216"];
m25_74 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="136-136"];
m25_76 [cluster="Unk.Select", file="LeanDataTests.cs", label="Entry Unk.Select", span=""];
m25_78 [cluster="Unk.ToDictionary", file="LeanDataTests.cs", label="Entry Unk.ToDictionary", span=""];
m25_82 [cluster="Unk.DefaultIfEmpty", file="LeanDataTests.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m25_138 [file="LeanDataTests.cs", label="QuantConnect.Securities.Cash", span=""];
m25_139 [file="LeanDataTests.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m25_140 [file="LeanDataTests.cs", label=markets, span=""];
m26_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="LeanDataWriter.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m26_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="LeanDataWriter.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m27_34 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="LimitOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m27_15 [cluster="System.Math.Max(decimal, decimal)", file="LimitOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m27_29 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.Clone()", span="115-115"];
m27_30 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="LimitOrder.cs", label="var order = new LimitOrder {LimitPrice = LimitPrice}", span="117-117"];
m27_31 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="LimitOrder.cs", label="CopyTo(order)", span="118-118"];
m27_32 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="LimitOrder.cs", label="return order;", span="119-119"];
m27_33 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.Clone()", span="115-115"];
m27_26 [cluster="QuantConnect.Orders.Order.ToString()", file="LimitOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m27_16 [cluster="System.Math.Min(decimal, decimal)", file="LimitOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m27_28 [cluster="string.Format(string, object, object)", file="LimitOrder.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m27_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m27_2 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m27_3 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="LimitOrder.cs", label="LimitPrice = limitPrice", prediction=114, span="56-56"];
m27_4 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="LimitOrder.cs", label="tag == ''''", span="58-58"];
m27_5 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="LimitOrder.cs", label="Tag = ''Limit Price: '' + limitPrice.ToString(''C'')", span="61-61"];
m27_6 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m27_8 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m27_9 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="Quantity < 0", span="72-72"];
m27_10 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="74-74"];
m27_12 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="80-80"];
m27_11 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="Quantity > 0", span="78-78"];
m27_13 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="return 0m;", span="83-83"];
m27_14 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m27_17 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m27_18 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="92-92"];
m27_19 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="request.LimitPrice.HasValue", span="93-93"];
m27_20 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="LimitPrice = request.LimitPrice.Value", span="95-95"];
m27_21 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m27_0 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m27_1 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m27_23 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="LimitOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.ToString()", span="106-106"];
m27_24 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="LimitOrder.cs", label="return string.Format(''{0} at limit {1}'', base.ToString(), LimitPrice.SmartRounding());", span="108-108"];
m27_25 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="LimitOrder.cs", label="Exit QuantConnect.Orders.LimitOrder.ToString()", span="106-106"];
m27_7 [cluster="decimal.ToString(string)", file="LimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m27_27 [cluster="decimal.SmartRounding()", file="LimitOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m27_35 [file="LimitOrder.cs", label="QuantConnect.Orders.LimitOrder", span=""];
m28_25 [cluster="Unk.Where", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Where", span=""];
m28_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m28_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="ScheduledEvent scheduledEvent", span="182-182"];
m28_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="183-183"];
m28_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m28_88 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m28_28 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="74-78"];
m28_29 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date)", span="77-77"];
m28_31 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="84-84"];
m28_30 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="74-78"];
m28_32 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="!x.IsInternalFeed()", span="84-84"];
m28_33 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="84-84"];
m28_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m28_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m28_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m28_26 [cluster="Unk.EverySecurityEndOfDay", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.EverySecurityEndOfDay", span=""];
m28_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m28_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource.Cancel()", span="211-211"];
m28_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m28_54 [cluster="System.Convert.ToInt32(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m28_59 [cluster="System.Exception.Exception(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m28_53 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m28_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m28_61 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="date = date.Date", span="149-149"];
m28_62 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values", span="152-152"];
m28_63 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var marketHours = _api.MarketToday(date, security.Symbol)", span="154-154"];
m28_64 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="155-155"];
m28_65 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="156-156"];
m28_66 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="157-158"];
m28_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m28_68 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m28_56 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m28_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m28_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m28_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="108-108"];
m28_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var time = DateTime.UtcNow", span="111-111"];
m28_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="114-114"];
m28_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="115-115"];
m28_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.Scan(time)", span="123-123"];
m28_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="116-116"];
m28_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="119-119"];
m28_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=ScheduledEventException, span="125-125"];
m28_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="127-127"];
m28_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Error(errorMessage)", span="129-129"];
m28_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_resultHandler.RuntimeError(errorMessage)", span="131-131"];
m28_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="135-135"];
m28_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="141-141"];
m28_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m28_69 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m28_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m28_27 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m28_55 [cluster="System.Threading.Thread.Sleep(int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m28_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m28_21 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m28_34 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m28_20 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m28_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m28_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m28_22 [cluster="ScheduledEvent.cstr", file="LiveTradingRealTimeHandler.cs", label="Entry ScheduledEvent.cstr", span=""];
m28_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m28_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_api = api", span="59-59"];
m28_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_algorithm = algorithm", span="60-60"];
m28_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_resultHandler = resultHandler", span="61-61"];
m28_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="93-93"];
m28_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m28_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m28_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m28_7 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="70-72"];
m28_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.AlgorithmEndOfDayDelta, DateTime.UtcNow))", span="81-81"];
m28_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", span="87-87"];
m28_8 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", span="74-78"];
m28_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed())", span="84-84"];
m28_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="90-90"];
m28_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="95-95"];
m28_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m28_70 [cluster="Unk.Format", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Format", span=""];
m28_23 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m28_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_algorithm != null", span="168-168"];
m28_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="170-170"];
m28_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="173-173"];
m28_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m28_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m28_19 [cluster="System.DateTime.AddDays(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m28_24 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m28_52 [cluster="System.TimeSpan.FromSeconds(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m28_58 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m28_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m28_89 [file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m29_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m29_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m29_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m29_7 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m29_8 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="var order = new MarketOnCloseOrder()", span="67-67"];
m29_9 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="CopyTo(order)", span="68-68"];
m29_10 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="return order;", span="69-69"];
m29_11 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m29_4 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m29_5 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m29_6 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m29_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m29_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m29_13 [file="MarketOnCloseOrder.cs", label="QuantConnect.Orders.MarketOnCloseOrder", span=""];
m30_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m30_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m30_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m30_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m30_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m30_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m30_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m30_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="var order = new MarketOnOpenOrder()", span="67-67"];
m30_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="CopyTo(order)", span="68-68"];
m30_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="return order;", span="69-69"];
m30_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m30_2 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m30_3 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m30_13 [file="MarketOnOpenOrder.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m31_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="MarketOrder.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m31_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", file="MarketOrder.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>)", span="31-31"];
m33_28 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m33_44 [cluster="System.Text.Encoding.GetByteCount(string)", file="OptionExerciseOrder.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m33_45 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="OptionExerciseOrder.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m33_5 [cluster="int.ToString()", file="OptionExerciseOrder.cs", label="Entry int.ToString()", span="0-0"];
m33_48 [cluster="System.Text.StringBuilder.ToString()", file="OptionExerciseOrder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m33_33 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Api.ApiConnection.SHA256(string)", span="125-125"];
m33_34 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="var crypt = new SHA256Managed()", span="127-127"];
m33_36 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="129-129"];
m33_35 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="var hash = new StringBuilder()", span="128-128"];
m33_38 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="hash.Append(theByte.ToString(''x2''))", span="132-132"];
m33_39 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="return hash.ToString();", span="134-134"];
m33_37 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label=crypto, span="130-130"];
m33_40 [cluster="QuantConnect.Api.ApiConnection.SHA256(string)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Api.ApiConnection.SHA256(string)", span="125-125"];
m33_6 [cluster="RestClient.cstr", file="OptionExerciseOrder.cs", label="Entry RestClient.cstr", span=""];
m33_22 [cluster="QuantConnect.Time.TimeStamp()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Time.TimeStamp()", span="166-166"];
m33_25 [cluster="HttpBasicAuthenticator.cstr", file="OptionExerciseOrder.cs", label="Entry HttpBasicAuthenticator.cstr", span=""];
m33_27 [cluster="Unk.>", file="OptionExerciseOrder.cs", label="Entry Unk.>", span=""];
m33_7 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", span="75-75"];
m33_8 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="var timestamp = (int)Time.TimeStamp()", span="83-83"];
m33_10 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="request.AddHeader(''Timestamp'', timestamp.ToString())", span="85-85"];
m33_12 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="var restsharpResponse = Client.Execute(request)", span="89-89"];
m33_9 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="var hash = CreateSecureHash(timestamp)", span="84-84"];
m33_11 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="Client.Authenticator = new HttpBasicAuthenticator(_userId, hash)", span="86-86"];
m33_13 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="result = JsonConvert.DeserializeObject<T>(restsharpResponse.Content)", span="92-92"];
m33_14 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="!result.Success", span="93-93"];
m33_15 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="return false;", span="96-96"];
m33_16 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label=Exception, span="99-99"];
m33_20 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="return true;", span="105-105"];
m33_17 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="Log.Error(err, ''Api.ApiConnection() Failed to make REST request.'')", span="101-101"];
m33_18 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="result = null", span="102-102"];
m33_19 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="return false;", span="103-103"];
m33_21 [cluster="QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Api.ApiConnection.TryRequest<T>(RestRequest, out T)", span="75-75"];
m33_24 [cluster="Unk.AddHeader", file="OptionExerciseOrder.cs", label="Entry Unk.AddHeader", span=""];
m33_47 [cluster="System.Text.StringBuilder.Append(string)", file="OptionExerciseOrder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m33_26 [cluster="Unk.Execute", file="OptionExerciseOrder.cs", label="Entry Unk.Execute", span=""];
m33_42 [cluster="System.Text.StringBuilder.StringBuilder()", file="OptionExerciseOrder.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m33_43 [cluster="System.Text.Encoding.GetBytes(string)", file="OptionExerciseOrder.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m33_0 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Api.ApiConnection.ApiConnection(int, string)", span="44-44"];
m33_1 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="OptionExerciseOrder.cs", label="_token = token", span="46-46"];
m33_2 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="OptionExerciseOrder.cs", label="_userId = userId.ToString()", span="47-47"];
m33_3 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="OptionExerciseOrder.cs", label="Client = new RestClient(''https://www.quantconnect.com/api/v2/'')", span="48-48"];
m33_4 [cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Api.ApiConnection.ApiConnection(int, string)", span="44-44"];
m33_32 [cluster="string.Format(string, object, object)", file="OptionExerciseOrder.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m33_41 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="OptionExerciseOrder.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m33_46 [cluster="byte.ToString(string)", file="OptionExerciseOrder.cs", label="Entry byte.ToString(string)", span="0-0"];
m33_23 [cluster="QuantConnect.Api.ApiConnection.CreateSecureHash(int)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Api.ApiConnection.CreateSecureHash(int)", span="112-112"];
m33_29 [cluster="QuantConnect.Api.ApiConnection.CreateSecureHash(int)", file="OptionExerciseOrder.cs", label="var data = string.Format(''{0}:{1}'', _token, timestamp)", span="116-116"];
m33_30 [cluster="QuantConnect.Api.ApiConnection.CreateSecureHash(int)", file="OptionExerciseOrder.cs", label="return SHA256(data);", span="117-117"];
m33_31 [cluster="QuantConnect.Api.ApiConnection.CreateSecureHash(int)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Api.ApiConnection.CreateSecureHash(int)", span="112-112"];
m33_49 [file="OptionExerciseOrder.cs", label="QuantConnect.Api.ApiConnection", span=""];
m34_87 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Order.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="121-121"];
m34_111 [cluster="System.Math.Abs(decimal)", file="Order.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m34_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="370-370"];
m34_160 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Order queued", span="372-372"];
m34_161 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="373-373"];
m34_162 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_orders[order.Id] = order", span="375-375"];
m34_163 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="!_brokerage.CancelOrder(order)", span="377-377"];
m34_164 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Invalid", span="380-380"];
m34_165 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="385-385"];
m34_166 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="370-370"];
m34_117 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="Order.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m34_89 [cluster="Unk.Where", file="Order.cs", label="Entry Unk.Where", span=""];
m34_142 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="384-384"];
m34_156 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="358-358"];
m34_158 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Order.cs", label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="360-363"];
m34_159 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="358-358"];
m34_157 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="89-89"];
m34_186 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="281-281"];
m34_56 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="Order.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m34_182 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="Order.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="329-329"];
m34_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="239-239"];
m34_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="241-241"];
m34_98 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="var balances = _brokerage.GetCashBalance()", span="243-243"];
m34_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label=balances, span="244-244"];
m34_100 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Cash cash", span="246-246"];
m34_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="_syncedLiveBrokerageCashToday = true", span="260-260"];
m34_101 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="247-247"];
m34_102 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="var delta = cash.Quantity - balance.Quantity", span="250-250"];
m34_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balance.Symbol, delta.ToString(''0.00''))", span="254-254"];
m34_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Quantity, balance.ConversionRate)", span="257-257"];
m34_103 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Math.Abs(delta) > _algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)", span="251-251"];
m34_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="239-239"];
m34_110 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Order.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="221-221"];
m34_116 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="Order.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m34_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="Order.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m34_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="436-436"];
m34_187 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Order.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Quantity - account.CashBalance", span="439-439"];
m34_189 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Order.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="442-442"];
m34_188 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Order.cs", label="delta != 0", span="440-440"];
m34_190 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="436-436"];
m34_118 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="264-279"];
m34_17 [cluster="lambda expression", file="Order.cs", label="HandleOrderEvent(fill)", span="82-82"];
m34_21 [cluster="lambda expression", file="Order.cs", label="HandleSecurityHoldingUpdated(holding)", span="87-87"];
m34_25 [cluster="lambda expression", file="Order.cs", label="HandleAccountChanged(account)", span="92-92"];
m34_16 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="80-83"];
m34_18 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="80-83"];
m34_20 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="85-88"];
m34_22 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="85-88"];
m34_24 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="90-93"];
m34_26 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="90-93"];
m34_91 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="227-227"];
m34_95 [cluster="lambda expression", file="Order.cs", label="x.Key <= lowestOrderIdToKeep", span="229-229"];
m34_94 [cluster="lambda expression", file="Order.cs", label="Entry lambda expression", span="229-229"];
m34_92 [cluster="lambda expression", file="Order.cs", label="x.Key", span="227-227"];
m34_93 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="227-227"];
m34_96 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="229-229"];
m34_119 [cluster="lambda expression", file="Order.cs", label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="267-267"];
m34_122 [cluster="lambda expression", file="Order.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="276-276"];
m34_121 [cluster="lambda expression", file="Order.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="272-272"];
m34_123 [cluster="lambda expression", file="Order.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="277-277"];
m34_124 [cluster="lambda expression", file="Order.cs", label="Exit lambda expression", span="264-279"];
m34_58 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Order.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m34_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="122-122"];
m34_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="!_exitTriggered", span="124-124"];
m34_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Order order", span="128-128"];
m34_53 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="179-179"];
m34_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="!_orderQueue.TryDequeue(out order)", span="129-129"];
m34_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="_algorithm.ProcessingOrder = false", span="131-131"];
m34_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="_algorithm.ProcessingOrder = true", span="136-136"];
m34_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="order.Direction == OrderDirection.Hold", span="139-139"];
m34_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="141-141"];
m34_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="!_orders.TryAdd(order.Id, order)", span="144-144"];
m34_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="146-146"];
m34_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="order.Status", span="152-152"];
m34_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="HandleNewOrder(order)", span="155-155"];
m34_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="HandleUpdatedOrder(order)", span="159-159"];
m34_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="HandleCancelledOrder(order)", span="163-163"];
m34_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="172-172"];
m34_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Thread.Sleep(1)", span="132-132"];
m34_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.New", span="154-154"];
m34_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.Update", span="158-158"];
m34_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.Canceled", span="162-162"];
m34_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.None", span="167-167"];
m34_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.Invalid", span="168-168"];
m34_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.PartiallyFilled", span="169-169"];
m34_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.Filled", span="170-170"];
m34_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="OrderStatus.Submitted", span="171-171"];
m34_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="ProcessAsynchronousEvents()", span="176-176"];
m34_54 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="IsActive = false", span="180-180"];
m34_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="122-122"];
m34_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="Order.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="455-455"];
m34_125 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="285-285"];
m34_126 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Order.cs", label="_exitTriggered = true", span="287-287"];
m34_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="285-285"];
m34_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Order.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m34_59 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Order.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m34_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="335-335"];
m34_148 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Order queued", span="337-337"];
m34_149 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_orders.TryGetValue(order.Id, out queued) && CanUpdateOrder(queued)", span="338-338"];
m34_150 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_orders[order.Id] = order", span="340-340"];
m34_151 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="!_brokerage.UpdateOrder(order)", span="341-341"];
m34_152 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Invalid", span="344-344"];
m34_153 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="349-349"];
m34_154 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="335-335"];
m34_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="194-194"];
m34_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="!_algorithm.LiveMode", span="198-198"];
m34_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="return;", span="198-198"];
m34_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_syncedLiveBrokerageCashToday && DateTime.Now.Date != LastSyncDate", span="201-201"];
m34_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_syncedLiveBrokerageCashToday = false", span="203-203"];
m34_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && DateTime.Now.TimeOfDay >= _liveBrokerageCashSyncTime", span="207-207"];
m34_72 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="212-212"];
m34_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="int maxOrdersToKeep = 10000", span="224-224"];
m34_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="PerformCashSync()", span="214-214"];
m34_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label=Exception, span="217-217"];
m34_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="Log.Error(err, ''Updating cash balances'')", span="219-219"];
m34_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_orders.Count < maxOrdersToKeep + 1", span="225-225"];
m34_80 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="228-228"];
m34_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="return;", span="225-225"];
m34_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="int max = _orders.Max(x => x.Key)", span="227-227"];
m34_81 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="229-229"];
m34_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="Order value", span="231-231"];
m34_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="_orders.TryRemove(item.Key, out value)", span="232-232"];
m34_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="194-194"];
m34_90 [cluster="Unk.TryRemove", file="Order.cs", label="Entry Unk.TryRemove", span=""];
m34_147 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="82-82"];
m34_183 [cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="Order.cs", label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0"];
m34_144 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="Order.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="248-248"];
m34_155 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Order.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m34_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="294-294"];
m34_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_orders.TryAdd(order.Id, order)", span="296-296"];
m34_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="299-299"];
m34_130 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Invalid", span="301-301"];
m34_131 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="302-302"];
m34_133 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="!_brokerage.CanProcessOrder(order)", span="307-307"];
m34_134 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Invalid", span="310-310"];
m34_135 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Brokerage {1} is unable to process order for {2} - {3}.'', order.Id, _brokerage.Name, order.SecurityType, order.Symbol))", span="311-311"];
m34_137 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="_brokerage.PlaceOrder(order)", span="316-316"];
m34_138 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Submitted", span="318-318"];
m34_139 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = OrderStatus.Invalid", span="322-322"];
m34_140 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="327-327"];
m34_132 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="return;", span="303-303"];
m34_136 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="return;", span="312-312"];
m34_141 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="294-294"];
m34_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="186-186"];
m34_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="186-186"];
m34_184 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="477-477"];
m34_57 [cluster="System.Threading.Thread.Sleep(int)", file="Order.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m34_114 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="Order.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="65-65"];
m34_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="209-209"];
m34_112 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="Order.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="114-114"];
m34_146 [cluster="string.Format(string, params object[])", file="Order.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m34_197 [cluster="string.Format(string, object, object, object)", file="Order.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m34_145 [cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="103-103"];
m34_143 [cluster="string.Format(string, object, object)", file="Order.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m34_167 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="96-96"];
m34_23 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="454-454"];
m34_191 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="var securityHolding = _algorithm.Portfolio[holding.Symbol]", span="457-457"];
m34_192 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="var deltaQuantity = securityHolding.Quantity - holding.Quantity", span="458-458"];
m34_193 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="var deltaAvgPrice = securityHolding.AveragePrice - holding.AveragePrice", span="459-459"];
m34_195 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleSecurityHoldingUpdated(): {0} DeltaQuantity: {1} DeltaAvgPrice: {2}'', holding.Symbol, deltaQuantity, deltaAvgPrice))", span="462-462"];
m34_194 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="deltaQuantity != 0 || deltaAvgPrice != 0", span="460-460"];
m34_196 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="454-454"];
m34_64 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Order.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m34_19 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="389-389"];
m34_168 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="392-392"];
m34_170 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="395-395"];
m34_172 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="order.Status = fill.Status", span="400-400"];
m34_173 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="408-408"];
m34_175 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="411-411"];
m34_176 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="fill.Status != OrderStatus.None", span="415-415"];
m34_177 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="418-418"];
m34_178 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="_algorithm.OnOrderEvent(fill)", span="422-422"];
m34_169 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="order == null", span="393-393"];
m34_171 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="return;", span="396-396"];
m34_174 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.Now.Ticks)", span="410-410"];
m34_179 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label=Exception, span="424-424"];
m34_180 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="426-426"];
m34_181 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="389-389"];
m34_85 [cluster="System.TimeSpan.FromSeconds(double)", file="Order.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m34_113 [cluster="decimal.ToString(string)", file="Order.cs", label="Entry decimal.ToString(string)", span="0-0"];
m34_109 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="Order.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75"];
m34_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="68-68"];
m34_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="brokerage == null", span="70-70"];
m34_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_brokerage = brokerage", span="79-79"];
m34_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_orders = algorithm.Transactions.Orders", span="100-100"];
m34_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", span="101-101"];
m34_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="throw new ArgumentNullException(''brokerage'');", span="72-72"];
m34_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_syncedLiveBrokerageCashToday = true", span="76-76"];
m34_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="77-77"];
m34_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="80-83"];
m34_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_brokerage.SecurityHoldingUpdated += (sender, holding) =>\r\n            {\r\n                HandleSecurityHoldingUpdated(holding);\r\n            }", span="85-88"];
m34_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="90-93"];
m34_14 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Order.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="68-68"];
m34_198 [file="Order.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m34_199 [file="Order.cs", label=lowestOrderIdToKeep, span=""];
m35_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="93-93"];
m35_25 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="IsAssignment = false", span="159-159"];
m35_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m35_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="OrderEvent.cs", label="ScheduledEvent scheduledEvent", span="182-182"];
m35_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="OrderEvent.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="183-183"];
m35_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m35_88 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="OrderEvent.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m35_28 [cluster="QuantConnect.Orders.OrderEvent.ToString()", color=green, community=1, file="OrderEvent.cs", label="var message = FillQuantity == 0\r\n                ? string.Format(''Time: {0} OrderID: {1} Symbol: {2} Status: {3}'', UtcTime, OrderId, Symbol.Value, Status)\r\n                : string.Format(''Time: {0} OrderID: {1} Symbol: {2} Status: {3} Quantity: {4} FillPrice: {5} {6}'', UtcTime, OrderId, Symbol.Value, Status, FillQuantity, FillPrice.SmartRounding(), FillPriceCurrency)", prediction=115, span="171-173"];
m35_29 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="OrderFee != 0m", span="176-176"];
m35_31 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="!string.IsNullOrEmpty(Message)", span="179-179"];
m35_30 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="message += string.Format('' OrderFee: {0} {1}'', OrderFee, CashBook.AccountCurrency)", span="176-176"];
m35_32 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="message += string.Format('' Message: {0}'', Message)", span="181-181"];
m35_33 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="return message;", span="184-184"];
m35_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="OrderEvent.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m35_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m35_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m35_26 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m35_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m35_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="_api = api", span="59-59"];
m35_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="_algorithm = algorithm", span="60-60"];
m35_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="_resultHandler = resultHandler", span="61-61"];
m35_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m35_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m35_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m35_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed())", span="84-84"];
m35_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="OrderEvent.cs", label=_scheduledEvents, span="90-90"];
m35_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m35_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="OrderEvent.cs", label="_cancellationTokenSource.Cancel()", span="211-211"];
m35_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m35_54 [cluster="System.Convert.ToInt32(double)", file="OrderEvent.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m35_59 [cluster="System.Exception.Exception(string)", file="OrderEvent.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m35_53 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="OrderEvent.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m35_18 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Direction = order.Direction", span="149-149"];
m35_61 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="OrderEvent.cs", label="date = date.Date", span="149-149"];
m35_62 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="OrderEvent.cs", label="_algorithm.Securities.Values", span="152-152"];
m35_63 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="OrderEvent.cs", label="var marketHours = _api.MarketToday(date, security.Symbol)", span="154-154"];
m35_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m35_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="scheduledEvent.Value.Scan(time)", span="123-123"];
m35_68 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="OrderEvent.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m35_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="115-115"];
m35_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=green, community=0, file="OrderEvent.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", prediction=116, span="116-116"];
m35_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label=_scheduledEvents, span="119-119"];
m35_56 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="OrderEvent.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m35_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="OrderEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m35_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="_isActive = true", span="105-105"];
m35_35 [cluster="string.Format(string, params object[])", file="OrderEvent.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m35_37 [cluster="string.Format(string, object, object)", file="OrderEvent.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m35_38 [cluster="string.IsNullOrEmpty(string)", file="OrderEvent.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m35_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="_isActive = false", span="140-140"];
m35_39 [cluster="string.Format(string, object)", file="OrderEvent.cs", label="Entry string.Format(string, object)", span="0-0"];
m35_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="QuantConnect.Orders.OrderEvent", span=""];
m35_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="127-127"];
m35_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="Log.Error(errorMessage)", span="129-129"];
m35_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="_resultHandler.RuntimeError(errorMessage)", span="131-131"];
m35_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="135-135"];
m35_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="141-141"];
m35_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m35_69 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m35_16 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Symbol = order.Symbol", span="147-147"];
m35_27 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m35_55 [cluster="System.Threading.Thread.Sleep(int)", file="OrderEvent.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m35_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="OrderEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m35_21 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillPriceCurrency = order.PriceCurrency", span="154-154"];
m35_34 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m35_20 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillPrice = 0", span="153-153"];
m35_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m35_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m35_22 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="UtcTime = utcTime", span="156-156"];
m35_14 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m35_15 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="OrderId = order.Id", span="146-146"];
m35_70 [cluster="Unk.Format", file="OrderEvent.cs", label="Entry Unk.Format", span=""];
m35_23 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="OrderFee = Math.Abs(orderFee)", span="157-157"];
m35_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="OrderEvent.cs", label="_algorithm != null", span="168-168"];
m35_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="OrderEvent.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="170-170"];
m35_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="OrderEvent.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="173-173"];
m35_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="OrderEvent.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m35_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OrderEvent.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m35_19 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillQuantity = 0", span="152-152"];
m35_24 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Message = message", span="158-158"];
m35_52 [cluster="System.TimeSpan.FromSeconds(double)", file="OrderEvent.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m35_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="OrderEvent.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m35_58 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="OrderEvent.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m35_89 [file="OrderEvent.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m37_98 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m37_114 [cluster="Unk.Where", file="OrderJsonConverterTests.cs", label="Entry Unk.Where", span=""];
m37_22 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138"];
m37_23 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverterTests.cs", label="factory = new BacktestingBrokerageFactory()", span="140-140"];
m37_25 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverterTests.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="142-142"];
m37_24 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverterTests.cs", label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="141-141"];
m37_26 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138"];
m37_4 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m37_5 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="string error", span="120-120"];
m37_7 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(60), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="124-124"];
m37_8 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="125-125"];
m37_6 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="IAlgorithm algorithm", span="121-121"];
m37_9 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="!complete", span="126-126"];
m37_10 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="126-126"];
m37_11 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="return algorithm;", span="128-128"];
m37_12 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m37_76 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="266-266"];
m37_99 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="var derivativeSubscriptions = subscriptionManager.Subscriptions\r\n                .Where(x => x.Symbol.IsCanonical())\r\n                .Select(x => controls.GetLimit(x.Resolution))\r\n                .Sum()", span="269-272"];
m37_100 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="var universeSubscriptions = universeManager.Values\r\n                // use max limit for universes without explicitly added securities\r\n                .Select(u => u.Members.Count == 0 ? controls.GetLimit(u.UniverseSettings.Resolution) : u.Members.Count)\r\n                .Sum()", span="275-278"];
m37_103 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="var jobDays = (finish - start).TotalDays", span="283-283"];
m37_101 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="var subscriptionCount = derivativeSubscriptions + universeSubscriptions", span="280-280"];
m37_102 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="double maxRunTime = 0", span="282-282"];
m37_104 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="maxRunTime = 10 * subscriptionCount * jobDays", span="285-285"];
m37_109 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="299-299"];
m37_105 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="(maxRunTime / 3600) > 12", span="288-288"];
m37_107 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="maxRunTime < 60", span="293-293"];
m37_112 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="return TimeSpan.FromSeconds(maxRunTime);", span="307-307"];
m37_106 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="maxRunTime = 3600 * 12", span="291-291"];
m37_108 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="maxRunTime = 60", span="296-296"];
m37_110 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="OS.IsWindows", span="302-302"];
m37_111 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="maxRunTime = 24 * 60 * 60", span="304-304"];
m37_113 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="266-266"];
m37_3 [cluster="System.Collections.Generic.List<T>.List()", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m37_67 [cluster="object.GetType()", file="OrderJsonConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m37_92 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530"];
m37_75 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309"];
m37_121 [cluster="QuantConnect.Symbol.IsCanonical()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m37_126 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="277-277"];
m37_18 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="124-124"];
m37_17 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="124-124"];
m37_19 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="124-124"];
m37_82 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="algorithm.SetParameters(job.Parameters)", span="187-187"];
m37_83 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="algorithm.SetLiveMode(false)", span="190-190"];
m37_84 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="193-193"];
m37_85 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="196-196"];
m37_86 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="algorithm.Initialize()", span="199-199"];
m37_81 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="182-206"];
m37_87 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label=Exception, span="201-201"];
m37_90 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="182-206"];
m37_88 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Log.Error(err)", span="203-203"];
m37_89 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="204-204"];
m37_123 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="controls.GetLimit(x.Resolution)", span="271-271"];
m37_127 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="u.Members.Count == 0 ? controls.GetLimit(u.UniverseSettings.Resolution) : u.Members.Count", span="277-277"];
m37_118 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="270-270"];
m37_122 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Entry lambda expression", span="271-271"];
m37_119 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="x.Symbol.IsCanonical()", span="270-270"];
m37_120 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="270-270"];
m37_124 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="271-271"];
m37_128 [cluster="lambda expression", file="OrderJsonConverterTests.cs", label="Exit lambda expression", span="277-277"];
m37_15 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m37_73 [cluster="System.TimeSpan.FromMinutes(double)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m37_129 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85"];
m37_72 [cluster="QuantConnect.Isolator.Isolator()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m37_16 [cluster="System.Exception.Exception(string)", file="OrderJsonConverterTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m37_91 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323"];
m37_97 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303"];
m37_125 [cluster="Unk.GetLimit", file="OrderJsonConverterTests.cs", label="Entry Unk.GetLimit", span=""];
m37_74 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m37_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="547-547"];
m37_66 [cluster="System.ArgumentException.ArgumentException(string)", file="OrderJsonConverterTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m37_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m37_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27"];
m37_0 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m37_1 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="OrderJsonConverterTests.cs", label="Errors = new List<string>()", span="109-109"];
m37_2 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m37_130 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m37_131 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m37_30 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155"];
m37_31 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="var job = baseJob as BacktestNodePacket", span="157-157"];
m37_33 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="160-160"];
m37_35 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="algorithm == null", span="165-165"];
m37_38 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="algorithm.Name = job.GetAlgorithmName()", span="171-171"];
m37_44 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromMinutes(5), () =>\r\n            {\r\n                try\r\n                {\r\n                    //Set our parameters\r\n                    algorithm.SetParameters(job.Parameters);\r\n\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n\r\n                    //Set the source impl for the event scheduling\r\n                    algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                    // set the option chain provider\r\n                    algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()));\r\n\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(err);\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err);\r\n                }\r\n            }, controls.RamAllocation)", span="182-206"];
m37_47 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job.PeriodStart = algorithm.StartDate", span="212-212"];
m37_48 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job.PeriodFinish = algorithm.EndDate", span="213-213"];
m37_49 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="algorithm.PostInitialize()", span="215-215"];
m37_50 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager, algorithm.UniverseManager, baseJob.Controls)", span="218-218"];
m37_53 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_startingCaptial = algorithm.Portfolio.Cash", span="227-227"];
m37_58 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="algorithm.SetMaximumOrders(_maxOrders)", span="241-241"];
m37_32 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job == null", span="158-158"];
m37_34 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="163-163"];
m37_39 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job.PeriodStart == default(DateTime)", span="174-174"];
m37_42 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="var controls = job.Controls", span="180-180"];
m37_51 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job.Language == Language.Python", span="221-221"];
m37_54 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="job.UserPlan == UserPlan.Free", span="230-230"];
m37_59 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_startingDate = job.PeriodStart", span="244-244"];
m37_60 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="247-247"];
m37_61 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="248-248"];
m37_36 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Errors.Add(''Could not create instance of algorithm'')", span="167-167"];
m37_37 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="return false;", span="168-168"];
m37_40 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Errors.Add(''Algorithm start date was never set'')", span="176-176"];
m37_41 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="return false;", span="177-177"];
m37_43 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="var isolator = new Isolator()", span="181-181"];
m37_45 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="!initializeComplete", span="209-209"];
m37_64 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="return initializeComplete;", span="254-254"];
m37_46 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="return false;", span="209-209"];
m37_52 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_maxRuntime = _maxRuntime.Add(TimeSpan.FromSeconds(_maxRuntime.TotalSeconds * 9))", span="223-223"];
m37_55 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_maxOrders = 10000", span="232-232"];
m37_56 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_maxOrders = int.MaxValue", span="236-236"];
m37_57 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="_maxRuntime += _maxRuntime", span="237-237"];
m37_62 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Errors.Count > 0", span="250-250"];
m37_63 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="initializeComplete = false", span="252-252"];
m37_65 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="OrderJsonConverterTests.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155"];
m37_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69"];
m37_116 [cluster="Unk.Sum", file="OrderJsonConverterTests.cs", label="Entry Unk.Sum", span=""];
m37_94 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m37_68 [cluster="string.Format(string, params object[])", file="OrderJsonConverterTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m37_14 [cluster="System.TimeSpan.FromSeconds(double)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m37_117 [cluster="System.Math.Round(double)", file="OrderJsonConverterTests.cs", label="Entry System.Math.Round(double)", span="0-0"];
m37_70 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m37_79 [cluster="System.DateTime.ToShortDateString()", file="OrderJsonConverterTests.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m37_96 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586"];
m37_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m37_93 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m37_21 [cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="OrderJsonConverterTests.cs", label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="867-867"];
m37_69 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m37_77 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="OrderJsonConverterTests.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m37_28 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34"];
m37_115 [cluster="Unk.Select", file="OrderJsonConverterTests.cs", label="Entry Unk.Select", span=""];
m37_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m37_80 [cluster="decimal.ToString(string)", file="OrderJsonConverterTests.cs", label="Entry decimal.ToString(string)", span="0-0"];
m37_71 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="OrderJsonConverterTests.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m37_132 [file="OrderJsonConverterTests.cs", label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span=""];
m37_133 [file="OrderJsonConverterTests.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m37_134 [file="OrderJsonConverterTests.cs", label=job, span=""];
m37_135 [file="OrderJsonConverterTests.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m37_136 [file="OrderJsonConverterTests.cs", label="QuantConnect.Packets.Controls", span=""];
m39_35 [cluster="System.Threading.Tasks.Task.Run(System.Action, System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action, System.Threading.CancellationToken)", span="0-0"];
m39_14 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="ParallelRunner.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m39_66 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="ParallelRunner.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m39_82 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="ParallelRunner.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m39_64 [cluster="System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="0-0"];
m39_67 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerController.Dispose()", span="148-148"];
m39_68 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label=_sync, span="150-150"];
m39_69 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_holdQueue != null", span="152-152"];
m39_70 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_holdQueue.Dispose()", span="152-152"];
m39_71 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_processQueue != null", span="153-153"];
m39_72 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_processQueue.Dispose()", span="153-153"];
m39_73 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="Thread.Sleep(10000)", span="156-156"];
m39_74 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_processQueueThread != null && _processQueueThread.IsAlive", span="158-158"];
m39_75 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_processQueueThread.Abort()", span="158-158"];
m39_76 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label=_workers, span="160-160"];
m39_78 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_waitHandle != null", span="165-165"];
m39_79 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_waitHandle.Set()", span="167-167"];
m39_80 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="_waitHandle.Dispose()", span="168-168"];
m39_81 [cluster="QuantConnect.Util.ParallelRunnerController.Dispose()", file="ParallelRunner.cs", label="Exit QuantConnect.Util.ParallelRunnerController.Dispose()", span="148-148"];
m39_31 [cluster="QuantConnect.Util.ParallelRunnerWorker.ParallelRunnerWorker(QuantConnect.Util.ParallelRunnerController, System.Collections.Concurrent.BlockingCollection<QuantConnect.Util.IParallelRunnerWorkItem>)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerWorker.ParallelRunnerWorker(QuantConnect.Util.ParallelRunnerController, System.Collections.Concurrent.BlockingCollection<QuantConnect.Util.IParallelRunnerWorkItem>)", span="48-48"];
m39_34 [cluster="Unk.ToArray", file="ParallelRunner.cs", label="Entry Unk.ToArray", span=""];
m39_50 [cluster="lambda expression", file="ParallelRunner.cs", label="Entry lambda expression", span="106-106"];
m39_51 [cluster="lambda expression", file="ParallelRunner.cs", label="ProcessHoldQueue(token)", span="106-106"];
m39_38 [cluster="lambda expression", file="ParallelRunner.cs", label="Entry lambda expression", span="91-91"];
m39_42 [cluster="lambda expression", file="ParallelRunner.cs", label="WaitHandle.WaitAll(waitHandles)", span="96-96"];
m39_41 [cluster="lambda expression", file="ParallelRunner.cs", label="Entry lambda expression", span="94-104"];
m39_39 [cluster="lambda expression", file="ParallelRunner.cs", label="x.WaitHandle", span="91-91"];
m39_40 [cluster="lambda expression", file="ParallelRunner.cs", label="Exit lambda expression", span="91-91"];
m39_43 [cluster="lambda expression", file="ParallelRunner.cs", label="_waitHandle.Set()", span="97-97"];
m39_45 [cluster="lambda expression", color=green, community=0, file="ParallelRunner.cs", label="worker.Dispose()", prediction=117, span="101-101"];
m39_46 [cluster="lambda expression", file="ParallelRunner.cs", label="Exit lambda expression", span="94-104"];
m39_52 [cluster="lambda expression", file="ParallelRunner.cs", label="Exit lambda expression", span="106-106"];
m39_47 [cluster="System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])", file="ParallelRunner.cs", label="Entry System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])", span="0-0"];
m39_7 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="ParallelRunner.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m39_8 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="ParallelRunner.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m39_49 [cluster="QuantConnect.Util.ParallelRunnerWorker.Dispose()", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerWorker.Dispose()", span="110-110"];
m39_65 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T, System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T, System.Threading.CancellationToken)", span="0-0"];
m39_36 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ParallelRunner.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m39_37 [cluster="System.Threading.Thread.Start()", file="ParallelRunner.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m39_0 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", span="54-54"];
m39_1 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="_threadCount = threadCount", span="56-56"];
m39_3 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="_workers = new ParallelRunnerWorker[threadCount]", span="58-58"];
m39_2 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="_waitHandle = new ManualResetEvent(false)", span="57-57"];
m39_4 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="_holdQueue = new BlockingCollection<IParallelRunnerWorkItem>()", span="59-59"];
m39_5 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="_processQueue = new BlockingCollection<IParallelRunnerWorkItem>()", span="60-60"];
m39_6 [cluster="QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", file="ParallelRunner.cs", label="Exit QuantConnect.Util.ParallelRunnerController.ParallelRunnerController(int)", span="54-54"];
m39_9 [cluster="QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", span="67-67"];
m39_10 [cluster="QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", file="ParallelRunner.cs", label="workItem.IsReady", span="69-69"];
m39_11 [cluster="QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", file="ParallelRunner.cs", label="_processQueue.Add(workItem)", span="69-69"];
m39_12 [cluster="QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", file="ParallelRunner.cs", label="_holdQueue.Add(workItem)", span="70-70"];
m39_13 [cluster="QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", file="ParallelRunner.cs", label="Exit QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)", span="67-67"];
m39_53 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", span="115-115"];
m39_54 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_holdQueue.GetConsumingEnumerable(token)", span="119-119"];
m39_56 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_processQueue.Add(workItem, token)", span="123-123"];
m39_57 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_holdQueue.Add(workItem, token)", span="127-127"];
m39_59 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="!token.IsCancellationRequested", span="133-133"];
m39_55 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="workItem.IsReady", span="121-121"];
m39_58 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label=OperationCanceledException, span="131-131"];
m39_61 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label=Exception, span="138-138"];
m39_60 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Log.Error(err)", span="135-135"];
m39_62 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Log.Error(err)", span="140-140"];
m39_63 [cluster="QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Exit QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)", span="115-115"];
m39_84 [cluster="System.Threading.Thread.Abort()", file="ParallelRunner.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m39_83 [cluster="System.Threading.Thread.Sleep(int)", file="ParallelRunner.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m39_48 [cluster="System.Threading.EventWaitHandle.Set()", file="ParallelRunner.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m39_85 [cluster="System.Threading.WaitHandle.Dispose()", file="ParallelRunner.cs", label="Entry System.Threading.WaitHandle.Dispose()", span="0-0"];
m39_33 [cluster="Unk.Select", file="ParallelRunner.cs", label="Entry Unk.Select", span=""];
m39_15 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", span="78-78"];
m39_16 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="WaitHandle[] waitHandles", span="80-80"];
m39_23 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="worker.Start(token)", span="87-87"];
m39_28 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_processQueueThread = new Thread(() => ProcessHoldQueue(token)) { IsBackground = true }", span="106-106"];
m39_17 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label=_sync, span="81-81"];
m39_18 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_workers[0] != null", span="83-83"];
m39_19 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="return;", span="83-83"];
m39_20 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="int i = 0", span="84-84"];
m39_21 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="i < _threadCount", span="84-84"];
m39_24 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_workers[i] = worker", span="88-88"];
m39_25 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="i++", span="84-84"];
m39_22 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="var worker = new ParallelRunnerWorker(this, _processQueue)", span="86-86"];
m39_26 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="waitHandles = _workers.Select(x => x.WaitHandle).ToArray()", span="91-91"];
m39_27 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", color=green, community=0, file="ParallelRunner.cs", label="Task.Run(() =>\r\n            {\r\n                WaitHandle.WaitAll(waitHandles);\r\n                _waitHandle.Set();\r\n\r\n                foreach (var worker in _workers)\r\n                {\r\n                    worker.Dispose();\r\n                }\r\n\r\n            }, CancellationToken.None)", prediction=118, span="94-104"];
m39_29 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="_processQueueThread.Start()", span="107-107"];
m39_30 [cluster="QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Exit QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)", span="78-78"];
m39_32 [cluster="QuantConnect.Util.ParallelRunnerWorker.Start(System.Threading.CancellationToken)", file="ParallelRunner.cs", label="Entry QuantConnect.Util.ParallelRunnerWorker.Start(System.Threading.CancellationToken)", span="60-60"];
m39_86 [file="ParallelRunner.cs", label="QuantConnect.Util.ParallelRunnerController", span=""];
m39_87 [file="ParallelRunner.cs", label=waitHandles, span=""];
m39_88 [file="ParallelRunner.cs", label="System.Threading.CancellationToken", span=""];
m40_40 [cluster="System.Math.Abs(decimal)", file="PortfolioStatistics.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m40_14 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="totalLosses++", span="158-158"];
m40_15 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="runningCapital += tradeProfitLoss", span="161-161"];
m40_48 [cluster="Unk.Variance", file="PortfolioStatistics.cs", label="Entry Unk.Variance", span=""];
m40_52 [cluster="Unk.Sqrt", file="PortfolioStatistics.cs", label="Entry Unk.Sqrt", span=""];
m40_47 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", span="251-251"];
m40_76 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="return (decimal)performance.Average() * tradingDaysPerYear;", span="253-253"];
m40_77 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", span="251-251"];
m40_50 [cluster="Unk.Covariance", file="PortfolioStatistics.cs", label="Entry Unk.Covariance", span=""];
m40_0 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m40_19 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="WinRate = profitLoss.Count == 0 ? 0 : (decimal) totalWins / profitLoss.Count", prediction=119, span="168-168"];
m40_6 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48"];
m40_12 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m40_18 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="ProfitLossRatio = AverageLossRate == 0 ? 0 : AverageWinRate / Math.Abs(AverageLossRate)", span="166-166"];
m40_20 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="LossRate = profitLoss.Count == 0 ? 0 : (decimal) totalLosses / profitLoss.Count", prediction=120, span="169-169"];
m40_7 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48"];
m40_21 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="Expectancy = WinRate * ProfitLossRatio - LossRate", span="170-170"];
m40_22 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="startingCapital != 0", prediction=121, span="172-172"];
m40_23 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="TotalNetProfit = equity.Values.LastOrDefault() / startingCapital - 1", prediction=122, span="174-174"];
m40_24 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="var fractionOfYears = (decimal) (equity.Keys.LastOrDefault() - equity.Keys.FirstOrDefault()).TotalDays / 365", prediction=123, span="177-177"];
m40_25 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="CompoundingAnnualReturn = CompoundingAnnualPerformance(startingCapital, equity.Values.LastOrDefault(), fractionOfYears)", span="178-178"];
m40_32 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="Beta = benchmarkVariance.IsNaNOrZero() ? 0 : (decimal) (listPerformance.Covariance(listBenchmark) / benchmarkVariance)", prediction=124, span="189-189"];
m40_31 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="var benchmarkVariance = listBenchmark.Variance()", span="188-188"];
m40_33 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="Alpha = Beta == 0 ? 0 : annualPerformance - (RiskFreeRate + Beta * (GetAnnualPerformance(listBenchmark, tradingDaysPerYear) - RiskFreeRate))", span="191-191"];
m40_28 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", color=green, community=0, file="PortfolioStatistics.cs", label="AnnualStandardDeviation = (decimal) Math.Sqrt((double) AnnualVariance)", prediction=125, span="183-183"];
m40_27 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="AnnualVariance = GetAnnualVariance(listPerformance, tradingDaysPerYear)", span="182-182"];
m40_29 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="var annualPerformance = GetAnnualPerformance(listPerformance, tradingDaysPerYear)", span="185-185"];
m40_16 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="AverageWinRate = totalWins == 0 ? 0 : totalProfit / totalWins", span="164-164"];
m40_17 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="AverageLossRate = totalLosses == 0 ? 0 : totalLoss / totalLosses", span="165-165"];
m40_26 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="Drawdown = DrawdownPercent(equity, 3)", span="180-180"];
m40_30 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="SharpeRatio = AnnualStandardDeviation == 0 ? 0 : (annualPerformance - RiskFreeRate) / AnnualStandardDeviation", span="186-186"];
m40_36 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="TrackingError = correlation.IsNaNOrZero() || benchmarkAnnualVariance.IsNaNOrZero() ? 0 :\r\n                (decimal)Math.Sqrt((double)AnnualVariance - 2 * correlation * (double)AnnualStandardDeviation * Math.Sqrt(benchmarkAnnualVariance) + benchmarkAnnualVariance)", span="195-196"];
m40_37 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="InformationRatio = TrackingError == 0 ? 0 : (annualPerformance - GetAnnualPerformance(listBenchmark, tradingDaysPerYear)) / TrackingError", span="198-198"];
m40_38 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="TreynorRatio = Beta == 0 ? 0 : (annualPerformance - RiskFreeRate) / Beta", span="200-200"];
m40_1 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m40_3 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m40_8 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m40_34 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="var correlation = Correlation.Pearson(listPerformance, listBenchmark)", span="193-193"];
m40_35 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="var benchmarkAnnualVariance = benchmarkVariance * tradingDaysPerYear", span="194-194"];
m40_5 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="41-41"];
m40_11 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="71-71"];
m40_13 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m40_4 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="41-41"];
m40_2 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m40_9 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m40_10 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="71-71"];
m40_39 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", span="131-131"];
m40_72 [cluster="System.Collections.Generic.List<T>.List()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
m40_57 [cluster="System.Math.Pow(double, double)", file="PortfolioStatistics.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m40_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m40_74 [cluster="System.Collections.Generic.IEnumerable<decimal>.Min()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.IEnumerable<decimal>.Min()", span="0-0"];
m40_45 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", span="263-263"];
m40_80 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="return variance.IsNaNOrZero() ? 0 : (decimal)variance * tradingDaysPerYear;", span="266-266"];
m40_79 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="var variance = performance.Variance()", span="265-265"];
m40_81 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", span="263-263"];
m40_58 [cluster="double.SafeDecimalCast()", file="PortfolioStatistics.cs", label="Entry double.SafeDecimalCast()", span="227-227"];
m40_46 [cluster="System.Math.Sqrt(double)", file="PortfolioStatistics.cs", label="Entry System.Math.Sqrt(double)", span="0-0"];
m40_51 [cluster="Unk.Pearson", file="PortfolioStatistics.cs", label="Entry Unk.Pearson", span=""];
m40_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m40_78 [cluster="System.Collections.Generic.IEnumerable<double>.Average()", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.IEnumerable<double>.Average()", span="0-0"];
m40_75 [cluster="System.Math.Round(decimal, int)", file="PortfolioStatistics.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m40_44 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="228-228"];
m40_69 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="return Math.Round(Math.Abs(drawdowns.Min()), rounding);", span="241-241"];
m40_59 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="var prices = equityOverTime.Values.ToList()", span="230-230"];
m40_64 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label=prices, span="235-235"];
m40_62 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="var drawdowns = new List<decimal>()", span="233-233"];
m40_61 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="return 0;", span="231-231"];
m40_60 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="prices.Count == 0", span="231-231"];
m40_63 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="var high = prices[0]", span="234-234"];
m40_68 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="drawdowns.Add(price / high - 1)", span="238-238"];
m40_67 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="high > 0", span="238-238"];
m40_65 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="price > high", span="237-237"];
m40_66 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="high = price", span="237-237"];
m40_70 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="228-228"];
m40_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PortfolioStatistics.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m40_49 [cluster="Unk.IsNaNOrZero", file="PortfolioStatistics.cs", label="Entry Unk.IsNaNOrZero", span=""];
m40_43 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="PortfolioStatistics.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="217-217"];
m40_55 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="PortfolioStatistics.cs", label="return (years == 0 ? 0d : Math.Pow((double)finalCapital / (double)startingCapital, 1 / (double)years) - 1).SafeDecimalCast();", span="219-219"];
m40_56 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="PortfolioStatistics.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="217-217"];
m40_82 [file="PortfolioStatistics.cs", label="QuantConnect.Statistics.PortfolioStatistics", span=""];
m42_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m42_140 [cluster="System.Type.GetMethods()", file="QCAlgorithm.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m42_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m42_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label=_locked, span="853-853"];
m42_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="timeZone == null", span="858-858"];
m42_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="859-859"];
m42_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860"];
m42_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863"];
m42_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855"];
m42_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''timeZone'');", span="858-858"];
m42_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m42_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m42_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Name = GetType().Name", span="92-92"];
m42_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m42_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="IsWarmingUp = true", span="96-96"];
m42_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m42_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m42_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m42_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m42_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m42_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m42_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m42_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m42_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=green, community=0, file="QCAlgorithm.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", prediction=126, span="118-118"];
m42_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m42_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m42_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_runMode = RunMode.Series", span="123-123"];
m42_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_locked = false", span="126-126"];
m42_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m42_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m42_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m42_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m42_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m42_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m42_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m42_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m42_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m42_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m42_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m42_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m42_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m42_29 [cluster="object.GetType()", file="QCAlgorithm.cs", label="Entry object.GetType()", span="0-0"];
m42_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m42_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="return _locked;", span="1224-1224"];
m42_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m42_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m42_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="DateTimeZone tz", span="834-834"];
m42_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837"];
m42_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841"];
m42_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label=DateTimeZoneNotFoundException, span="839-839"];
m42_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="SetTimeZone(tz)", span="844-844"];
m42_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m42_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m42_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m42_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526"];
m42_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m42_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m42_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label=availableDataTypes, span="558-558"];
m42_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560"];
m42_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m42_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m42_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622"];
m42_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m42_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614"];
m42_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617"];
m42_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618"];
m42_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1624-1624"];
m42_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m42_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m42_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="return SymbolCache.GetSymbol(ticker);", span="1712-1712"];
m42_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m42_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m42_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1011-1011"];
m42_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m42_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m42_199 [cluster="string.Format(string, object)", file="QCAlgorithm.cs", label="Entry string.Format(string, object)", span="0-0"];
m42_536 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m42_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m42_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="var end = new DateTime(year, month, day)", span="1100-1100"];
m42_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103"];
m42_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="SetEndDate(end)", span="1105-1105"];
m42_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1107-1107"];
m42_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109"];
m42_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m42_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m42_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m42_476 [cluster="Unk.Any", file="QCAlgorithm.cs", label="Entry Unk.Any", span=""];
m42_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m42_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="BrokerageModel = model", span="897-897"];
m42_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901"];
m42_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="!_userSetSecurityInitializer", span="898-898"];
m42_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Securities.Values", span="904-904"];
m42_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="var leverage = security.Leverage", span="909-909"];
m42_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer.Initialize(security, false)", span="912-912"];
m42_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="security.SetLeverage(leverage)", span="915-915"];
m42_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m42_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m42_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1022-1022"];
m42_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m42_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m42_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1178-1178"];
m42_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182"];
m42_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end < _startDate", span="1190-1190"];
m42_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197"];
m42_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1178-1178"];
m42_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184"];
m42_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate != new DateTime()", span="1188-1188"];
m42_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192"];
m42_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1200-1200"];
m42_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate = end", span="1202-1202"];
m42_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206"];
m42_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m42_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m42_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m42_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m42_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m42_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m42_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder = tradeBuilder", span="1251-1251"];
m42_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252"];
m42_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m42_554 [cluster="Unk.CreateSymbol", file="QCAlgorithm.cs", label="Entry Unk.CreateSymbol", span=""];
m42_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m42_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m42_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m42_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Debug(''Quit(): '' + message)", span="1685-1685"];
m42_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1686-1686"];
m42_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m42_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m42_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m42_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Security security", span="1536-1536"];
m42_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.TryGetValue(symbol, out security)", span="1537-1537"];
m42_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548"];
m42_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var ret = universe.Remove(symbol)", span="1551-1551"];
m42_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="symbol == _benchmarkSymbol", span="1554-1554"];
m42_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.Remove(symbol)", span="1556-1556"];
m42_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540"];
m42_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return false;", span="1567-1567"];
m42_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Cache.Reset()", span="1543-1543"];
m42_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Invested", span="1546-1546"];
m42_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Liquidate(security.Symbol)", span="1546-1546"];
m42_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="universe != null", span="1549-1549"];
m42_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562"];
m42_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return ret;", span="1564-1564"];
m42_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="1558-1558"];
m42_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1559-1559"];
m42_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m42_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m42_85 [cluster="Unk.AddEquity", file="QCAlgorithm.cs", label="Entry Unk.AddEquity", span=""];
m42_141 [cluster="Unk.Where", file="QCAlgorithm.cs", label="Entry Unk.Where", span=""];
m42_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m42_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m42_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m42_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m42_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m42_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="string value", span="530-530"];
m42_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531"];
m42_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m42_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m42_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="!_locked", span="1050-1050"];
m42_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052"];
m42_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056"];
m42_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m42_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m42_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m42_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="mode != RunMode.Parallel", span="875-875"];
m42_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="return;", span="875-875"];
m42_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876"];
m42_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m42_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m42_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="OptionChainProvider = optionChainProvider", span="599-599"];
m42_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m42_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m42_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584"];
m42_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m42_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m42_484 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m42_87 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="499-499"];
m42_88 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value", span="499-499"];
m42_89 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="499-499"];
m42_120 [cluster="lambda expression", file="QCAlgorithm.cs", label="securityInitializer(security)", span="590-590"];
m42_119 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="590-590"];
m42_121 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="590-590"];
m42_148 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="624-624"];
m42_151 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="625-625"];
m42_154 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="626-626"];
m42_158 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="627-627"];
m42_149 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Name == ''OnData''", span="624-624"];
m42_150 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="624-624"];
m42_152 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625"];
m42_153 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="625-625"];
m42_155 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters().Length == 1", span="626-626"];
m42_156 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="626-626"];
m42_159 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627"];
m42_160 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="627-627"];
m42_252 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Key.Value == symbol", span="967-967"];
m42_251 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="967-967"];
m42_253 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="967-967"];
m42_478 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Members.ContainsKey(symbol)", span="1548-1548"];
m42_477 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1548-1548"];
m42_481 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m42_479 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1548-1548"];
m42_482 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562"];
m42_483 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m42_485 [cluster="lambda expression", file="QCAlgorithm.cs", label="y.IsCustomData", span="1562-1562"];
m42_486 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m42_145 [cluster="Unk.Call", file="QCAlgorithm.cs", label="Entry Unk.Call", span=""];
m42_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m42_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m42_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m42_30 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m42_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m42_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m42_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m42_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m42_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="historyProvider == null", span="1773-1773"];
m42_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="HistoryProvider = historyProvider", span="1777-1777"];
m42_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775"];
m42_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m42_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m42_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m42_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="string market = Market.USA", span="948-948"];
m42_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950"];
m42_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952"];
m42_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m42_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m42_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="symbol = symbol.ToUpper()", span="966-966"];
m42_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967"];
m42_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970"];
m42_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m42_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m42_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635"];
m42_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_debugMessages.Enqueue(message)", span="1636-1636"];
m42_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_previousDebugMessage = message", span="1637-1637"];
m42_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="return;", span="1635-1635"];
m42_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m42_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m42_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825"];
m42_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m42_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m42_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m42_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="!_liveMode && message == ''''", span="1648-1648"];
m42_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="_logMessages.Enqueue(message)", span="1649-1649"];
m42_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="return;", span="1648-1648"];
m42_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m42_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m42_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m42_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m42_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m42_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="989-989"];
m42_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m42_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m42_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m42_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m42_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m42_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="_benchmarkSymbol = symbol", span="979-979"];
m42_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m42_314 [cluster="System.DateTime.DateTime()", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m42_82 [cluster="Unk.Select", file="QCAlgorithm.cs", label="Entry Unk.Select", span=""];
m42_31 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m42_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m42_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581"];
m42_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m42_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m42_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="QCAlgorithm.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m42_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m42_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m42_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m42_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m42_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m42_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m42_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m42_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m42_57 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m42_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m42_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660"];
m42_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1661-1661"];
m42_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1662-1662"];
m42_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="return;", span="1660-1660"];
m42_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m42_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m42_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m42_84 [cluster="Unk.TryGetValue", file="QCAlgorithm.cs", label="Entry Unk.TryGetValue", span=""];
m42_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m42_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="_algorithmId = algorithmId", span="1120-1120"];
m42_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m42_174 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m42_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m42_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280"];
m42_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m42_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m42_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Status = status", span="1800-1800"];
m42_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m42_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m42_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m42_209 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m42_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="QCAlgorithm.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m42_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m42_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347"];
m42_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m42_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m42_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="var start = new DateTime(year, month, day)", span="1075-1075"];
m42_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="start = start.Date", span="1078-1078"];
m42_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="SetStartDate(start)", span="1080-1080"];
m42_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1082-1082"];
m42_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084"];
m42_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m42_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m42_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark == null", span="475-475"];
m42_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478"];
m42_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499"];
m42_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480"];
m42_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security security", span="486-486"];
m42_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487"];
m42_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="490-490"];
m42_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark = new SecurityBenchmark(security)", span="495-495"];
m42_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="491-491"];
m42_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="501-501"];
m42_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506"];
m42_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="option.Underlying = equity", span="510-510"];
m42_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security equity", span="502-502"];
m42_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="503-503"];
m42_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="513-513"];
m42_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516"];
m42_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="int periods = 30", span="515-515"];
m42_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m42_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m42_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471"];
m42_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="1474-1474"];
m42_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478"];
m42_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="option.Underlying = equity", span="1480-1480"];
m42_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(option)", span="1482-1482"];
m42_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return option;", span="1484-1484"];
m42_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Security equity", span="1475-1475"];
m42_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476"];
m42_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m42_198 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m42_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m42_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m42_157 [cluster="Unk.GetParameters", file="QCAlgorithm.cs", label="Entry Unk.GetParameters", span=""];
m42_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m42_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m42_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="OnEndOfDay(symbol.ToString())", span="763-763"];
m42_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m42_46 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m42_142 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m42_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m42_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m42_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Resolution resolution", span="1747-1747"];
m42_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label=_liveMode, span="1748-1748"];
m42_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = Resolution.Second", span="1750-1750"];
m42_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760"];
m42_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762"];
m42_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764"];
m42_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m42_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m42_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m42_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="!_locked", span="1232-1232"];
m42_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_liveMode = live", span="1234-1234"];
m42_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Notify = new NotificationManager(live)", span="1235-1235"];
m42_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(live)", span="1236-1236"];
m42_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label=live, span="1238-1238"];
m42_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_startDate = DateTime.Today", span="1240-1240"];
m42_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241"];
m42_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m42_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m42_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="_parameters = parameters.ToDictionary()", span="541-541"];
m42_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544"];
m42_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label=Exception, span="546-546"];
m42_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="548-548"];
m42_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m42_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m42_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887"];
m42_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m42_294 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m42_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m42_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m42_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465"];
m42_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m42_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m42_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1721-1721"];
m42_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723"];
m42_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725"];
m42_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730"];
m42_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732"];
m42_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736"];
m42_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbol", span="1729-1729"];
m42_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1737-1737"];
m42_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return (T)security;", span="1738-1738"];
m42_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m42_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m42_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m42_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m42_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m42_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="_userSetSecurityInitializer = true", span="571-571"];
m42_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="SecurityInitializer = securityInitializer", span="572-572"];
m42_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m42_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m42_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="!_locked", span="1032-1032"];
m42_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(startingCash)", span="1034-1034"];
m42_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038"];
m42_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m42_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m42_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265"];
m42_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m42_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m42_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m42_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m42_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m42_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m42_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="!_checkedForOnDataSlice", span="619-619"];
m42_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice(slice)", span="643-643"];
m42_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_checkedForOnDataSlice = true", span="621-621"];
m42_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice != null", span="641-641"];
m42_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627"];
m42_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="method == null", span="629-629"];
m42_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var call = Expression.Call(self, method, parameter)", span="636-636"];
m42_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="return;", span="631-631"];
m42_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var self = Expression.Constant(this)", span="634-634"];
m42_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635"];
m42_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637"];
m42_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice = lambda.Compile()", span="638-638"];
m42_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m42_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380"];
m42_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m42_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1361-1361"];
m42_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''?'' + underlying", span="1370-1370"];
m42_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373"];
m42_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376"];
m42_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377"];
m42_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388"];
m42_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363"];
m42_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1369-1369"];
m42_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365"];
m42_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371"];
m42_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386"];
m42_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390"];
m42_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1381-1381"];
m42_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1382-1382"];
m42_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389"];
m42_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1393-1393"];
m42_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1385-1385"];
m42_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m42_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m42_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m42_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m42_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m42_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="exception == null", span="1786-1786"];
m42_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="RunTimeError = exception", span="1791-1791"];
m42_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788"];
m42_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m42_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m42_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m42_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m42_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453"];
m42_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(future)", span="1455-1455"];
m42_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return future;", span="1457-1457"];
m42_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m42_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m42_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m42_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426"];
m42_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m42_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1407-1407"];
m42_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''/'' + symbol", span="1416-1416"];
m42_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419"];
m42_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422"];
m42_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423"];
m42_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434"];
m42_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409"];
m42_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1415-1415"];
m42_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411"];
m42_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417"];
m42_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432"];
m42_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436"];
m42_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1427-1427"];
m42_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1428-1428"];
m42_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435"];
m42_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1439-1439"];
m42_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1431-1431"];
m42_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m42_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="QCAlgorithm.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m42_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m42_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m42_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m42_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m42_329 [cluster="System.DateTime.AddTicks(long)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m42_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m42_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Option", span="1296-1296"];
m42_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298"];
m42_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Future", span="1301-1301"];
m42_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m42_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1308-1308"];
m42_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310"];
m42_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312"];
m42_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317"];
m42_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319"];
m42_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323"];
m42_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbolObject", span="1316-1316"];
m42_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1325-1325"];
m42_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return security;", span="1326-1326"];
m42_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label=Exception, span="1328-1328"];
m42_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330"];
m42_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return null;", span="1331-1331"];
m42_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m42_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m42_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m42_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m42_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m42_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599"];
m42_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m42_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m42_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m42_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m42_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498"];
m42_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m42_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m42_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m42_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label=quit, span="1697-1697"];
m42_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1699-1699"];
m42_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m42_83 [cluster="Unk.>", file="QCAlgorithm.cs", label="Entry Unk.>", span=""];
m42_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m42_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m42_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512"];
m42_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m42_250 [cluster="string.ToUpper()", file="QCAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m42_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m42_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590"];
m42_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m42_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m42_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m42_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m42_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m42_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="handler == null", span="929-929"];
m42_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="BrokerageMessageHandler = handler", span="934-934"];
m42_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''handler'');", span="931-931"];
m42_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m42_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m42_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1132-1132"];
m42_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start < (new DateTime(1900, 01, 01))", span="1136-1136"];
m42_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start > _endDate", span="1144-1144"];
m42_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151"];
m42_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1132-1132"];
m42_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138"];
m42_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate != new DateTime()", span="1142-1142"];
m42_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146"];
m42_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1154-1154"];
m42_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate = start", span="1159-1159"];
m42_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!LiveMode", span="1157-1157"];
m42_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165"];
m42_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160"];
m42_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m42_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m42_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m42_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="var message = error.Message", span="1673-1673"];
m42_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674"];
m42_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1675-1675"];
m42_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1676-1676"];
m42_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="return;", span="1674-1674"];
m42_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m42_122 [cluster="System.Action<T>.Invoke(T)", file="QCAlgorithm.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m42_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m42_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m42_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m42_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m42_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m42_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="_locked = true", span="1216-1216"];
m42_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m42_474 [cluster="Unk.Remove", file="QCAlgorithm.cs", label="Entry Unk.Remove", span=""];
m42_568 [file="QCAlgorithm.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m42_569 [file="QCAlgorithm.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m42_570 [file="QCAlgorithm.cs", label=string, span=""];
m42_571 [file="QCAlgorithm.cs", label="QuantConnect.Symbol", span=""];
m43_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m43_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="171-171"];
m43_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m43_261 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m43_50 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m43_192 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m43_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m43_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupBarCount = null", span="53-53"];
m43_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = timeSpan", span="54-54"];
m43_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m43_194 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="108-108"];
m43_267 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m43_197 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m43_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount)", span="88-88"];
m43_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m43_190 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m43_33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m43_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m43_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="return History(new[] {request}).Memoize();", span="414-414"];
m43_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="412-412"];
m43_193 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m43_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m43_187 [cluster="QuantConnect.Symbol.IsCanonical()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m43_196 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m43_269 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="598-598"];
m43_59 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="193-193"];
m43_60 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="194-194"];
m43_61 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="195-195"];
m43_54 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="187-196"];
m43_69 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="198-198"];
m43_55 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="189-189"];
m43_56 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="190-190"];
m43_57 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="191-191"];
m43_58 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="191-191"];
m43_62 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="187-196"];
m43_70 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="198-198"];
m43_71 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="198-198"];
m43_80 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="219-219"];
m43_75 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="213-220"];
m43_82 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="222-222"];
m43_76 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="215-215"];
m43_77 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="216-216"];
m43_78 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="config == null", span="217-217"];
m43_79 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return null;", span="217-217"];
m43_81 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="213-220"];
m43_83 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x != null", span="222-222"];
m43_84 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="222-222"];
m43_116 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="280-280"];
m43_117 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="280-280"];
m43_118 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="280-280"];
m43_130 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="305-305"];
m43_131 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="305-305"];
m43_132 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="305-305"];
m43_230 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="541-541"];
m43_231 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="544-544"];
m43_232 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="fillForward.HasValue", span="545-545"];
m43_233 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="545-545"];
m43_234 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="extendedMarket.HasValue", span="546-546"];
m43_235 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="546-546"];
m43_223 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="534-534"];
m43_226 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="534-552"];
m43_224 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="534-534"];
m43_225 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="534-534"];
m43_227 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var requests = new List<HistoryRequest>()", span="536-536"];
m43_228 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="538-538"];
m43_236 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="requests.Add(request)", span="548-548"];
m43_237 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return requests;", span="551-551"];
m43_229 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="GetMatchingSubscriptions(security, typeof(BaseData))", span="539-539"];
m43_238 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="534-552"];
m43_248 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Resolution? res = resolution ?? security.Resolution", span="563-563"];
m43_249 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="564-564"];
m43_251 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));", span="567-568"];
m43_254 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="568-568"];
m43_243 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="560-560"];
m43_246 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="560-569"];
m43_244 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="560-560"];
m43_245 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="560-560"];
m43_247 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var security = Securities[x]", span="562-562"];
m43_250 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="565-565"];
m43_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="560-569"];
m43_253 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="568-568"];
m43_255 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="568-568"];
m43_270 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="598-598"];
m43_271 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="598-598"];
m43_51 [cluster="Unk.History", file="QCAlgorithm.History.cs", label="Entry Unk.History", span=""];
m43_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="589-589"];
m43_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="592-592"];
m43_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="589-589"];
m43_115 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m43_195 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="640-640"];
m43_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m43_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="399-399"];
m43_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="400-400"];
m43_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="403-403"];
m43_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="404-404"];
m43_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="402-402"];
m43_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m43_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m43_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="273-273"];
m43_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="274-274"];
m43_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="281-281"];
m43_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="284-284"];
m43_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="285-285"];
m43_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="273-273"];
m43_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="276-276"];
m43_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="277-277"];
m43_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="280-280"];
m43_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="278-278"];
m43_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m43_188 [cluster="System.Math.Max(int, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m43_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m43_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="96-96"];
m43_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m43_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m43_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = null", span="75-75"];
m43_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupBarCount = barCount", span="76-76"];
m43_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m43_98 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m43_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m43_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="142-142"];
m43_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m43_67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m43_114 [cluster="ArgumentException.cstr", file="QCAlgorithm.History.cs", label="Entry ArgumentException.cstr", span=""];
m43_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="492-492"];
m43_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="494-494"];
m43_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="499-499"];
m43_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="500-500"];
m43_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="497-497"];
m43_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="492-492"];
m43_52 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m43_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m43_111 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m43_268 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m43_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m43_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="361-361"];
m43_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m43_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m43_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="595-595"];
m43_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                where type.IsAssignableFrom(sub.Type)\r\n                select sub;", span="598-600"];
m43_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="595-595"];
m43_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m43_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="187-196"];
m43_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="198-198"];
m43_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m43_129 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m43_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m43_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="129-129"];
m43_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m43_113 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m43_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m43_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="249-249"];
m43_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250"];
m43_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="252-252"];
m43_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="258-258"];
m43_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="253-253"];
m43_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or Crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="255-255"];
m43_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m43_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m43_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="322-322"];
m43_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="328-328"];
m43_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="323-323"];
m43_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="325-325"];
m43_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="320-320"];
m43_198 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m43_162 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m43_28 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="QCAlgorithm.History.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m43_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m43_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="341-341"];
m43_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="347-347"];
m43_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="342-342"];
m43_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD or cyrpto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="344-344"];
m43_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m43_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m43_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156"];
m43_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m43_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m43_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236"];
m43_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m43_199 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m43_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m43_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="391-391"];
m43_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m43_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="532-532"];
m43_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                var security = Securities[x];\r\n                foreach (var config in GetMatchingSubscriptions(security, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    Resolution? res = resolution ?? security.Resolution;\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="534-552"];
m43_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="532-532"];
m43_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m43_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupBarCount.HasValue", span="105-105"];
m43_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", span="107-107"];
m43_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="_warmupTimeSpan.HasValue", span="109-109"];
m43_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="111-111"];
m43_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return Enumerable.Empty<HistoryRequest>();", span="116-116"];
m43_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end);", span="112-112"];
m43_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="103-103"];
m43_219 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m43_65 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m43_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m43_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="return History(requests, TimeZone).Memoize();", span="424-424"];
m43_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="422-422"];
m43_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m43_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="375-375"];
m43_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="376-376"];
m43_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="375-375"];
m43_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m43_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="503-503"];
m43_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var sentMessage = false", span="505-505"];
m43_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var reqs = requests.ToList()", span="506-506"];
m43_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="526-526"];
m43_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="!sentMessage", span="517-517"];
m43_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label=reqs, span="507-507"];
m43_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc > UtcTime", span="510-510"];
m43_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc = UtcTime", span="512-512"];
m43_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="513-513"];
m43_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="515-515"];
m43_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="sentMessage = true", span="519-519"];
m43_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Debug(''Request for future history modified to end now.'')", span="520-520"];
m43_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="503-503"];
m43_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m43_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="435-435"];
m43_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="441-441"];
m43_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="443-443"];
m43_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="448-448"];
m43_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, dataType)", span="454-454"];
m43_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="463-476"];
m43_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="437-437"];
m43_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="444-444"];
m43_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="450-450"];
m43_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="459-459"];
m43_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="460-460"];
m43_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = typeof(BaseData)", span="447-447"];
m43_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="457-457"];
m43_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="478-478"];
m43_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="480-480"];
m43_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="482-482"];
m43_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="485-485"];
m43_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m43_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="558-558"];
m43_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="560-569"];
m43_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="558-558"];
m43_240 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m43_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="63-63"];
m43_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m43_53 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m43_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m43_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="299-299"];
m43_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="306-306"];
m43_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="309-309"];
m43_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="310-310"];
m43_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="301-301"];
m43_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="302-302"];
m43_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="305-305"];
m43_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="303-303"];
m43_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m43_222 [cluster="Unk.SelectMany", file="QCAlgorithm.History.cs", label="Entry Unk.SelectMany", span=""];
m43_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m43_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="213-220"];
m43_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="222-222"];
m43_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="210-210"];
m43_191 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m43_161 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m43_66 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m43_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="572-572"];
m43_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? security.Resolution", span="574-574"];
m43_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="577-577"];
m43_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="579-584"];
m43_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="586-586"];
m43_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="572-572"];
m43_49 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m43_200 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m43_112 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m43_26 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m43_272 [file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m43_273 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m43_274 [file="QCAlgorithm.History.cs", label=int, span=""];
m43_275 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m43_276 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m43_277 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m43_278 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m43_279 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m43_280 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m43_281 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m43_282 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m43_283 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m43_284 [file="QCAlgorithm.History.cs", label=int, span=""];
m43_285 [file="QCAlgorithm.History.cs", label=security, span=""];
m43_286 [file="QCAlgorithm.History.cs", label=start, span=""];
m43_287 [file="QCAlgorithm.History.cs", label=end, span=""];
m44_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Plotting.cs", label="stream.Write(buffer, 0, sourceBytes)", span="128-128"];
m44_56 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="var entry = zipStream.GetNextEntry()", span="168-168"];
m44_63 [cluster="QuantConnect.Compression.UnzipData(byte[])", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="return data;", prediction=127, span="192-192"];
m44_52 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="232-232"];
m44_55 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label=true, span="165-165"];
m44_57 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="entry != null", span="170-170"];
m44_62 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="Log.Error(''Data.UnzipData(): '' + err.Message)", span="190-190"];
m44_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="return str;", span="244-244"];
m44_53 [cluster="System.Math.Round(double, int)", file="QCAlgorithm.Plotting.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m44_60 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="data.Add(entry.Name, buffer.GetString())", span="177-177"];
m44_54 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="QuantConnect.Algorithm.Framework.Alphas.Insight", span=""];
m44_61 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label=Exception, span="188-188"];
m44_58 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="var buffer = new byte[entry.Size]", span="173-173"];
m44_59 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="174-174"];
m44_64 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="153-153"];
m44_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", span="177-177"];
m44_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Plotting.cs", label="sourceBytes > 0", span="130-130"];
m44_38 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m44_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="Magnitude.HasValue", span="235-235"];
m44_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="serializedInsight.ScoreDirection != 0", span="220-220"];
m44_39 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242"];
m44_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="var str = $''{Id}: {Symbol} {Type} {Direction} within {Period}''", span="234-234"];
m44_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="str += $'' by {Magnitude.Value}%''", span="237-237"];
m44_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="return insight;", span="226-226"];
m44_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="217-217"];
m44_41 [cluster="System.TimeSpan.FromSeconds(double)", file="QCAlgorithm.Plotting.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m44_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="insight.Score.Finalize(insight.CloseTimeUtc)", span="211-211"];
m44_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="222-222"];
m44_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", span="101-101"];
m44_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="232-232"];
m44_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="188-188"];
m44_40 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.SecurityIdentifier.Parse(string)", span="557-557"];
m44_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="Confidence.HasValue", span="239-239"];
m44_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="serializedInsight.ScoreMagnitude != 0", span="215-215"];
m44_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="QCAlgorithm.Plotting.cs", label="str += $'' with {Math.Round(100 * Confidence.Value, 1)}% confidence''", span="241-241"];
m44_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="QCAlgorithm.Plotting.cs", label="var direction = (InsightDirection) Math.Sign(magnitude)", span="179-179"];
m44_67 [cluster="Unk.GetNextEntry", file="QCAlgorithm.Plotting.cs", label="Entry Unk.GetNextEntry", span=""];
m44_78 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="stream.PutNextEntry(entry)", span="216-216"];
m44_72 [cluster="QuantConnect.Compression.Zip(string, bool)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="var zipPath = ''''", prediction=128, span="204-204"];
m44_71 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="202-202"];
m44_73 [cluster="QuantConnect.Compression.Zip(string, bool)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="var buffer = new byte[4096]", prediction=129, span="208-208"];
m44_74 [cluster="QuantConnect.Compression.Zip(string, bool)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="zipPath = textPath.Replace(''.csv'', ''.zip'')", prediction=130, span="209-209"];
m44_75 [cluster="QuantConnect.Compression.Zip(string, bool)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", prediction=131, span="210-210"];
m44_81 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="223-223"];
m44_82 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="stream.Write(buffer, 0, sourceBytes)", span="224-224"];
m44_76 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="212-212"];
m44_90 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="return zipPath;", span="239-239"];
m44_77 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="var entry = new ZipEntry(Path.GetFileName(textPath))", span="215-215"];
m44_79 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="var fs = File.OpenRead(textPath)", span="218-218"];
m44_86 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label=deleteOriginal, span="233-233"];
m44_87 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="File.Delete(textPath)", span="233-233"];
m44_80 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="int sourceBytes", span="220-220"];
m44_83 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="sourceBytes > 0", span="226-226"];
m44_84 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="stream.Finish()", span="229-229"];
m44_85 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="stream.Close()", span="230-230"];
m44_89 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="Log.Error(''QC.Data.Zip(): '' + err.Message)", span="237-237"];
m44_88 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label=Exception, span="235-235"];
m44_91 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="202-202"];
m44_151 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m44_154 [cluster="ZipFile.cstr", file="QCAlgorithm.Plotting.cs", label="Entry ZipFile.cstr", span=""];
m44_169 [cluster="System.IO.Stream.Close()", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m44_13 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Plotting.cs", label="stream.Finish()", span="85-85"];
m44_153 [cluster="string.Substring(int, int)", file="QCAlgorithm.Plotting.cs", label="Entry string.Substring(int, int)", span="0-0"];
m44_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="210-210"];
m44_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", file="QCAlgorithm.Plotting.cs", label="return new Insight(symbol, InsightType.Price, direction, period, magnitude, confidence);", span="180-180"];
m44_159 [cluster="Unk.Copy", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Copy", span=""];
m44_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Direction = direction", span="125-125"];
m44_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="CloseTimeUtc = generatedTimeUtc + period", span="149-149"];
m44_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118"];
m44_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Id = Guid.NewGuid()", span="120-120"];
m44_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Period = period", span="126-126"];
m44_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="GeneratedTimeUtc = generatedTimeUtc", span="148-148"];
m44_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145"];
m44_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Symbol = symbol", span="123-123"];
m44_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118"];
m44_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Confidence = confidence", span="130-130"];
m44_12 [cluster="System.Guid.NewGuid()", file="QCAlgorithm.Plotting.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m44_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m44_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Score = new InsightScore()", span="121-121"];
m44_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145"];
m44_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Type = type", span="124-124"];
m44_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="QCAlgorithm.Plotting.cs", label="Magnitude = magnitude", span="129-129"];
m44_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m44_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m44_152 [cluster="string.LastIndexOf(char)", file="QCAlgorithm.Plotting.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m44_97 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="248-248"];
m44_110 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="273-273"];
m44_112 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="Log.Error(''Data.UnZip(3): '' + filename + '' >> '' + err.Message)", span="278-278"];
m44_107 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="Log.Error(''QC.Data.Unzip(1): '' + err.Message)", span="267-267"];
m44_100 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="File.Exists(filename)", span="254-254"];
m44_111 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label=Exception, span="276-276"];
m44_113 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="return reader;", span="280-280"];
m44_106 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label=Exception, span="265-265"];
m44_108 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="reader != null", span="268-268"];
m44_101 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="var zip1 = Ionic.Zip.ZipFile.Read(filename)", span="258-258"];
m44_98 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="StreamReader reader = null", span="250-250"];
m44_99 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="var ms = new MemoryStream()", span="251-251"];
m44_105 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="reader = new StreamReader(ms)", span="262-262"];
m44_109 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="reader.Close()", span="268-268"];
m44_102 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="var e = zip1[0]", span="260-260"];
m44_103 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="e.Extract(ms)", span="261-261"];
m44_104 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="ms.Position = 0", span="261-261"];
m44_114 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="248-248"];
m44_94 [cluster="System.IO.File.OpenRead(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m44_170 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="394-394"];
m44_171 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="var inStream = File.OpenRead(source)", span="396-396"];
m44_176 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="gzipStream.Close()", span="401-401"];
m44_175 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="tarArchive.Close()", span="400-400"];
m44_172 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="var gzipStream = new GZipInputStream(inStream)", span="397-397"];
m44_177 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="inStream.Close()", span="402-402"];
m44_174 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="tarArchive.ExtractContents(destination)", span="399-399"];
m44_173 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="398-398"];
m44_178 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="394-394"];
m44_25 [cluster="System.Math.Sign(double)", file="QCAlgorithm.Plotting.cs", label="Entry System.Math.Sign(double)", span="0-0"];
m44_160 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="379-379"];
m44_161 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="var inStream = File.OpenRead(source)", span="381-381"];
m44_164 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="tarArchive.Close()", span="384-384"];
m44_162 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="382-382"];
m44_165 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="inStream.Close()", span="385-385"];
m44_163 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="tarArchive.ExtractContents(destination)", span="383-383"];
m44_166 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="379-379"];
m44_69 [cluster="byte[].GetString()", file="QCAlgorithm.Plotting.cs", label="Entry byte[].GetString()", span="92-92"];
m44_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="188-188"];
m44_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="QCAlgorithm.Plotting.cs", label="var insight = new Insight(\r\n                Time.UnixTimeStampToDateTime(serializedInsight.GeneratedTime),\r\n                new Symbol(SecurityIdentifier.Parse(serializedInsight.Symbol), serializedInsight.Ticker),\r\n                serializedInsight.Type,\r\n                serializedInsight.Direction,\r\n                TimeSpan.FromSeconds(serializedInsight.Period),\r\n                serializedInsight.Magnitude,\r\n                serializedInsight.Confidence\r\n            )\r\n            {\r\n                Id = Guid.Parse(serializedInsight.Id),\r\n                CloseTimeUtc = Time.UnixTimeStampToDateTime(serializedInsight.CloseTime),\r\n                EstimatedValue = serializedInsight.EstimatedValue,\r\n                ReferenceValue = serializedInsight.ReferenceValue\r\n            }", span="190-204"];
m44_70 [cluster="Unk.Add", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Add", span=""];
m44_96 [cluster="System.IO.File.Delete(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m44_66 [cluster="ZipInputStream.cstr", file="QCAlgorithm.Plotting.cs", label="Entry ZipInputStream.cstr", span=""];
m44_168 [cluster="Unk.ExtractContents", file="QCAlgorithm.Plotting.cs", label="Entry Unk.ExtractContents", span=""];
m44_28 [cluster="Unk.Finish", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Finish", span=""];
m44_29 [cluster="Unk.Close", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Close", span=""];
m44_20 [cluster="ZipOutputStream.cstr", file="QCAlgorithm.Plotting.cs", label="Entry ZipOutputStream.cstr", span=""];
m44_92 [cluster="string.Replace(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry string.Replace(string, string)", span="0-0"];
m44_68 [cluster="Unk.Read", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Read", span=""];
m44_116 [cluster="System.IO.File.Exists(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m44_179 [cluster="GZipInputStream.cstr", file="QCAlgorithm.Plotting.cs", label="Entry GZipInputStream.cstr", span=""];
m44_24 [cluster="Unk.PutNextEntry", file="QCAlgorithm.Plotting.cs", label="Entry Unk.PutNextEntry", span=""];
m44_120 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287"];
m44_130 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="Log.Error(''Data.UnZip(): Stream >> '' + err.Message)", span="312-312"];
m44_127 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="file = new MemoryStream(buffer)", span="304-304"];
m44_123 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="var zipStream = new ZipInputStream(zipstream)", span="296-296"];
m44_124 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="var entry = zipStream.GetNextEntry()", span="299-299"];
m44_129 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label=Exception, span="310-310"];
m44_131 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="return reader;", span="315-315"];
m44_126 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="301-301"];
m44_125 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="var buffer = new byte[entry.Size]", span="300-300"];
m44_128 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="reader = new StreamReader(file)", span="308-308"];
m44_122 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="MemoryStream file", span="293-293"];
m44_121 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="StreamReader reader = null", span="289-289"];
m44_132 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287"];
m44_157 [cluster="System.IO.Path.Combine(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m44_118 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m44_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m44_95 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m44_158 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m44_119 [cluster="System.IO.StreamReader.Close()", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m44_117 [cluster="Unk.Extract", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Extract", span=""];
m44_167 [cluster="Unk.CreateInputTarArchive", file="QCAlgorithm.Plotting.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m44_156 [cluster="Unk.GetInputStream", file="QCAlgorithm.Plotting.cs", label="Entry Unk.GetInputStream", span=""];
m44_140 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="!zipEntry.IsFile", span="339-339"];
m44_147 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var streamWriter = File.Create(fullZipToPath)", span="356-356"];
m44_137 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var fs = File.OpenRead(zipFile)", span="333-333"];
m44_146 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="files.Add(fullZipToPath)", span="352-352"];
m44_145 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="349-349"];
m44_148 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="358-358"];
m44_133 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="324-324"];
m44_136 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="ZipFile zf = null", span="329-329"];
m44_138 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="zf = new ZipFile(fs)", span="334-334"];
m44_134 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var files = new List<string>()", span="327-327"];
m44_135 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var outFolder = zipFile.Substring(0, zipFile.LastIndexOf(Path.DirectorySeparatorChar))", span="328-328"];
m44_144 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="346-346"];
m44_141 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="342-342"];
m44_143 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="var buffer = new byte[4096]", span="345-345"];
m44_139 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label=zf, span="336-336"];
m44_149 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="return files;", span="370-370"];
m44_142 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="entryFileName == null", span="343-343"];
m44_150 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="324-324"];
m44_155 [cluster="Unk.GetFileName", file="QCAlgorithm.Plotting.cs", label="Entry Unk.GetFileName", span=""];
m44_115 [cluster="System.IO.MemoryStream.MemoryStream()", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m44_93 [cluster="System.IO.Path.GetFileName(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m45_56 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="var entry = zipStream.GetNextEntry()", span="168-168"];
m45_51 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.UnzipData(byte[])", span="153-153"];
m45_52 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="var data = new Dictionary<string, string>()", span="156-156"];
m45_53 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="var ms = new MemoryStream(zipData)", span="160-160"];
m45_60 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="data.Add(entry.Name, buffer.GetString())", span="177-177"];
m45_63 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="return data;", span="192-192"];
m45_54 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="var zipStream = new ZipInputStream(ms)", span="163-163"];
m45_55 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label=true, span="165-165"];
m45_59 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="174-174"];
m45_61 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label=Exception, span="188-188"];
m45_57 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="entry != null", span="170-170"];
m45_58 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="var buffer = new byte[entry.Size]", span="173-173"];
m45_62 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="Log.Error(''Data.UnzipData(): '' + err.Message)", span="190-190"];
m45_64 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="153-153"];
m45_21 [cluster="System.IO.File.Create(string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.File.Create(string)", span="0-0"];
m45_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var entry = new ZipEntry(filename)", span="117-117"];
m45_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", span="104-104"];
m45_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var success = true", span="106-106"];
m45_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="112-112"];
m45_35 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="filenamesAndData.Keys", span="114-114"];
m45_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var file = filenamesAndData[filename]", span="119-119"];
m45_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var buffer = new byte[4096]", span="107-107"];
m45_41 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="127-127"];
m45_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="stream.Write(buffer, 0, sourceBytes)", span="128-128"];
m45_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="stream.PutNextEntry(entry)", span="120-120"];
m45_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="stream.Finish()", span="135-135"];
m45_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="stream.Close()", span="136-136"];
m45_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="var ms = new MemoryStream(file)", span="122-122"];
m45_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="int sourceBytes", span="124-124"];
m45_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="sourceBytes > 0", span="130-130"];
m45_46 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label=Exception, span="139-139"];
m45_49 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="return success;", span="144-144"];
m45_47 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="Log.Error(''QC.Data.ZipData(): '' + err.Message)", span="141-141"];
m45_48 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="success = false", span="142-142"];
m45_50 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IReadOnlyDictionary<string, byte[]>)", span="104-104"];
m45_22 [cluster="ZipEntry.cstr", file="QCAlgorithm.Python.cs", label="Entry ZipEntry.cstr", span=""];
m45_67 [cluster="Unk.GetNextEntry", file="QCAlgorithm.Python.cs", label="Entry Unk.GetNextEntry", span=""];
m45_78 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="stream.PutNextEntry(entry)", span="216-216"];
m45_71 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="202-202"];
m45_72 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="var zipPath = ''''", span="204-204"];
m45_74 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="zipPath = textPath.Replace(''.csv'', ''.zip'')", span="209-209"];
m45_77 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="var entry = new ZipEntry(Path.GetFileName(textPath))", span="215-215"];
m45_79 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="var fs = File.OpenRead(textPath)", span="218-218"];
m45_86 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label=deleteOriginal, span="233-233"];
m45_87 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="File.Delete(textPath)", span="233-233"];
m45_73 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="var buffer = new byte[4096]", span="208-208"];
m45_81 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="223-223"];
m45_82 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="stream.Write(buffer, 0, sourceBytes)", span="224-224"];
m45_75 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="zipPath = zipPath.Replace(''.txt'', ''.zip'')", span="210-210"];
m45_76 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="212-212"];
m45_90 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="return zipPath;", span="239-239"];
m45_84 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="stream.Finish()", span="229-229"];
m45_85 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="stream.Close()", span="230-230"];
m45_80 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="int sourceBytes", span="220-220"];
m45_83 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="sourceBytes > 0", span="226-226"];
m45_88 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label=Exception, span="235-235"];
m45_89 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="Log.Error(''QC.Data.Zip(): '' + err.Message)", span="237-237"];
m45_91 [cluster="QuantConnect.Compression.Zip(string, bool)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="202-202"];
m45_151 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m45_154 [cluster="ZipFile.cstr", file="QCAlgorithm.Python.cs", label="Entry ZipFile.cstr", span=""];
m45_169 [cluster="System.IO.Stream.Close()", file="QCAlgorithm.Python.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m45_153 [cluster="string.Substring(int, int)", file="QCAlgorithm.Python.cs", label="Entry string.Substring(int, int)", span="0-0"];
m45_30 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m45_23 [cluster="string.GetBytes()", file="QCAlgorithm.Python.cs", label="Entry string.GetBytes()", span="66-66"];
m45_159 [cluster="Unk.Copy", file="QCAlgorithm.Python.cs", label="Entry Unk.Copy", span=""];
m45_5 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var entry = new ZipEntry(filename)", span="67-67"];
m45_0 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="54-54"];
m45_1 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var success = true", span="56-56"];
m45_3 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="62-62"];
m45_4 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="filenamesAndData.Keys", span="64-64"];
m45_6 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var file = filenamesAndData[filename].GetBytes()", span="69-69"];
m45_2 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var buffer = new byte[4096]", span="57-57"];
m45_10 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="77-77"];
m45_11 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="stream.Write(buffer, 0, sourceBytes)", span="78-78"];
m45_7 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="stream.PutNextEntry(entry)", span="70-70"];
m45_13 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="stream.Finish()", span="85-85"];
m45_14 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="stream.Close()", span="86-86"];
m45_8 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="var ms = new MemoryStream(file)", span="72-72"];
m45_9 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="int sourceBytes", span="74-74"];
m45_12 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="sourceBytes > 0", span="80-80"];
m45_15 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label=Exception, span="89-89"];
m45_18 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="return success;", span="94-94"];
m45_16 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="Log.Error(''QC.Data.ZipData(): '' + err.Message)", span="91-91"];
m45_17 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="success = false", span="92-92"];
m45_19 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="54-54"];
m45_152 [cluster="string.LastIndexOf(char)", file="QCAlgorithm.Python.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m45_97 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="248-248"];
m45_98 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="StreamReader reader = null", span="250-250"];
m45_100 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="File.Exists(filename)", span="254-254"];
m45_101 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="var zip1 = Ionic.Zip.ZipFile.Read(filename)", span="258-258"];
m45_110 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="273-273"];
m45_112 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="Log.Error(''Data.UnZip(3): '' + filename + '' >> '' + err.Message)", span="278-278"];
m45_99 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="var ms = new MemoryStream()", span="251-251"];
m45_113 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="return reader;", span="280-280"];
m45_103 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="e.Extract(ms)", span="261-261"];
m45_104 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="ms.Position = 0", span="261-261"];
m45_105 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="reader = new StreamReader(ms)", span="262-262"];
m45_102 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="var e = zip1[0]", span="260-260"];
m45_106 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label=Exception, span="265-265"];
m45_111 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label=Exception, span="276-276"];
m45_108 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="reader != null", span="268-268"];
m45_109 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="reader.Close()", span="268-268"];
m45_107 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="Log.Error(''QC.Data.Unzip(1): '' + err.Message)", span="267-267"];
m45_114 [cluster="QuantConnect.Compression.Unzip(string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="248-248"];
m45_94 [cluster="System.IO.File.OpenRead(string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m45_170 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="394-394"];
m45_171 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="var inStream = File.OpenRead(source)", span="396-396"];
m45_174 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="tarArchive.ExtractContents(destination)", span="399-399"];
m45_172 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="var gzipStream = new GZipInputStream(inStream)", span="397-397"];
m45_177 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="inStream.Close()", span="402-402"];
m45_173 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="398-398"];
m45_176 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="gzipStream.Close()", span="401-401"];
m45_175 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="tarArchive.Close()", span="400-400"];
m45_178 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="394-394"];
m45_25 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="QCAlgorithm.Python.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m45_160 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="379-379"];
m45_161 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="var inStream = File.OpenRead(source)", span="381-381"];
m45_163 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="tarArchive.ExtractContents(destination)", span="383-383"];
m45_162 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="382-382"];
m45_165 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="inStream.Close()", span="385-385"];
m45_164 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="tarArchive.Close()", span="384-384"];
m45_166 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="379-379"];
m45_69 [cluster="byte[].GetString()", file="QCAlgorithm.Python.cs", label="Entry byte[].GetString()", span="92-92"];
m45_26 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="QCAlgorithm.Python.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m45_27 [cluster="Unk.Write", file="QCAlgorithm.Python.cs", label="Entry Unk.Write", span=""];
m45_70 [cluster="Unk.Add", file="QCAlgorithm.Python.cs", label="Entry Unk.Add", span=""];
m45_96 [cluster="System.IO.File.Delete(string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m45_66 [cluster="ZipInputStream.cstr", file="QCAlgorithm.Python.cs", label="Entry ZipInputStream.cstr", span=""];
m45_168 [cluster="Unk.ExtractContents", file="QCAlgorithm.Python.cs", label="Entry Unk.ExtractContents", span=""];
m45_92 [cluster="string.Replace(string, string)", file="QCAlgorithm.Python.cs", label="Entry string.Replace(string, string)", span="0-0"];
m45_116 [cluster="System.IO.File.Exists(string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m45_29 [cluster="Unk.Close", file="QCAlgorithm.Python.cs", label="Entry Unk.Close", span=""];
m45_68 [cluster="Unk.Read", file="QCAlgorithm.Python.cs", label="Entry Unk.Read", span=""];
m45_179 [cluster="GZipInputStream.cstr", file="QCAlgorithm.Python.cs", label="Entry GZipInputStream.cstr", span=""];
m45_124 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="var entry = zipStream.GetNextEntry()", span="299-299"];
m45_120 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287"];
m45_121 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="StreamReader reader = null", span="289-289"];
m45_123 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="var zipStream = new ZipInputStream(zipstream)", span="296-296"];
m45_122 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="MemoryStream file", span="293-293"];
m45_126 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="301-301"];
m45_125 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="var buffer = new byte[entry.Size]", span="300-300"];
m45_127 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="file = new MemoryStream(buffer)", span="304-304"];
m45_128 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="reader = new StreamReader(file)", span="308-308"];
m45_129 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label=Exception, span="310-310"];
m45_131 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="return reader;", span="315-315"];
m45_130 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="Log.Error(''Data.UnZip(): Stream >> '' + err.Message)", span="312-312"];
m45_132 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287"];
m45_157 [cluster="System.IO.Path.Combine(string, string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m45_118 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="QCAlgorithm.Python.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m45_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_95 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="QCAlgorithm.Python.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m45_24 [cluster="Unk.PutNextEntry", file="QCAlgorithm.Python.cs", label="Entry Unk.PutNextEntry", span=""];
m45_158 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m45_20 [cluster="ZipOutputStream.cstr", file="QCAlgorithm.Python.cs", label="Entry ZipOutputStream.cstr", span=""];
m45_119 [cluster="System.IO.StreamReader.Close()", file="QCAlgorithm.Python.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m45_117 [cluster="Unk.Extract", file="QCAlgorithm.Python.cs", label="Entry Unk.Extract", span=""];
m45_167 [cluster="Unk.CreateInputTarArchive", file="QCAlgorithm.Python.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m45_156 [cluster="Unk.GetInputStream", file="QCAlgorithm.Python.cs", label="Entry Unk.GetInputStream", span=""];
m45_141 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="342-342"];
m45_133 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="324-324"];
m45_134 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var files = new List<string>()", span="327-327"];
m45_135 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var outFolder = zipFile.Substring(0, zipFile.LastIndexOf(Path.DirectorySeparatorChar))", span="328-328"];
m45_137 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var fs = File.OpenRead(zipFile)", span="333-333"];
m45_146 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="files.Add(fullZipToPath)", span="352-352"];
m45_149 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="return files;", span="370-370"];
m45_136 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="ZipFile zf = null", span="329-329"];
m45_145 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="349-349"];
m45_138 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="zf = new ZipFile(fs)", span="334-334"];
m45_139 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label=zf, span="336-336"];
m45_144 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="346-346"];
m45_140 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="!zipEntry.IsFile", span="339-339"];
m45_142 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="entryFileName == null", span="343-343"];
m45_143 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var buffer = new byte[4096]", span="345-345"];
m45_148 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="358-358"];
m45_147 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="var streamWriter = File.Create(fullZipToPath)", span="356-356"];
m45_150 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="324-324"];
m45_155 [cluster="Unk.GetFileName", file="QCAlgorithm.Python.cs", label="Entry Unk.GetFileName", span=""];
m45_115 [cluster="System.IO.MemoryStream.MemoryStream()", file="QCAlgorithm.Python.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m45_28 [cluster="Unk.Finish", file="QCAlgorithm.Python.cs", label="Entry Unk.Finish", span=""];
m45_93 [cluster="System.IO.Path.GetFileName(string)", file="QCAlgorithm.Python.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m46_0 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26"];
m46_1 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="26-26"];
m46_2 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30"];
m46_3 [cluster="QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.NullExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="30-30"];
m48_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="703-703"];
m48_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m48_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="703-703"];
m48_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m48_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m48_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m48_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m48_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m48_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m48_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m48_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m48_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m48_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m48_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="714-714"];
m48_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="715-715"];
m48_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="716-716"];
m48_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m48_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m48_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m48_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m48_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m48_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m48_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m48_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m48_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m48_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m48_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m48_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m48_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m48_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m48_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m48_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m48_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m48_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m48_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m48_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m48_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.53%''},\r\n                {''Average Loss'', ''-2.00%''},\r\n                {''Compounding Annual Return'', ''65.652%''},\r\n                {''Drawdown'', ''5.000%''},\r\n                {''Expectancy'', ''-0.158''},\r\n                {''Net Profit'', ''0.555%''},\r\n                {''Sharpe Ratio'', ''0.731''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.26''},\r\n                {''Alpha'', ''-1.237''},\r\n                {''Beta'', ''1.189''},\r\n                {''Annual Standard Deviation'', ''0.544''},\r\n                {''Annual Variance'', ''0.296''},\r\n                {''Information Ratio'', ''-8.473''},\r\n                {''Tracking Error'', ''0.115''},\r\n                {''Treynor Ratio'', ''0.335''},\r\n                {''Total Fees'', ''$2023.72''}\r\n            }", span="594-615"];
m48_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m48_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m48_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m48_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m48_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m48_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m48_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m48_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m48_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m49_12 [cluster="System.Net.WebRequest.GetSystemWebProxy()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.Net.WebRequest.GetSystemWebProxy()", span="0-0"];
m49_9 [cluster="string.GetExtension()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry string.GetExtension()", span="410-410"];
m49_11 [cluster="System.Net.WebClient.WebClient()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m49_22 [cluster="System.IDisposable.Dispose()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m49_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41"];
m49_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="37-37"];
m49_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="var filename = Guid.NewGuid() + source.GetExtension()", span="40-40"];
m49_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="var destination = Path.Combine(downloadDirectory, filename)", span="41-41"];
m49_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="client.DownloadFile(source, destination)", span="46-46"];
m49_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", color=green, community=0, file="RemoteFileSubscriptionStreamReader.cs", label="_streamReader = new LocalFileSubscriptionStreamReader(dataCacheProvider, destination)", prediction=132, span="50-50"];
m49_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="var client = new WebClient()", span="43-43"];
m49_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="client.Proxy = WebRequest.GetSystemWebProxy()", span="45-45"];
m49_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="37-37"];
m49_13 [cluster="System.Net.WebClient.DownloadFile(string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.Net.WebClient.DownloadFile(string, string)", span="0-0"];
m49_10 [cluster="System.IO.Path.Combine(string, string)", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m49_8 [cluster="System.Guid.NewGuid()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m49_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.Dispose()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.Dispose()", span="80-80"];
m49_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.Dispose()", file="RemoteFileSubscriptionStreamReader.cs", label="_streamReader.Dispose()", span="82-82"];
m49_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.Dispose()", file="RemoteFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.Dispose()", span="80-80"];
m49_18 [cluster="QuantConnect.Interfaces.IStreamReader.ReadLine()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Interfaces.IStreamReader.ReadLine()", span="38-38"];
m49_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.ReadLine()", file="RemoteFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.ReadLine()", span="72-72"];
m49_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.ReadLine()", file="RemoteFileSubscriptionStreamReader.cs", label="return _streamReader.ReadLine();", span="74-74"];
m49_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.ReadLine()", file="RemoteFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.ReadLine()", span="72-72"];
m49_23 [file="RemoteFileSubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader", span=""];
m50_0 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32"];
m50_1 [cluster="QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.IExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="32-32"];
m52_23 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m52_24 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="return string.Format(''{0} at stop {1}'', base.ToString(), StopPrice.SmartRounding());", span="108-108"];
m52_25 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m52_8 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m52_9 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="Quantity < 0", span="72-72"];
m52_10 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="return Quantity*Math.Max(StopPrice, security.Price);", span="74-74"];
m52_12 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="return Quantity*Math.Min(StopPrice, security.Price);", span="80-80"];
m52_11 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="Quantity > 0", span="78-78"];
m52_13 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="return 0m;", span="83-83"];
m52_14 [cluster="QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="69-69"];
m52_29 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m52_30 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="var order = new StopMarketOrder {StopPrice = StopPrice}", span="117-117"];
m52_31 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="CopyTo(order)", span="118-118"];
m52_32 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="return order;", span="119-119"];
m52_33 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m52_34 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m52_15 [cluster="System.Math.Max(decimal, decimal)", file="StopMarketOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m52_26 [cluster="QuantConnect.Orders.Order.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m52_16 [cluster="System.Math.Min(decimal, decimal)", file="StopMarketOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m52_28 [cluster="string.Format(string, object, object)", file="StopMarketOrder.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m52_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m52_2 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m52_3 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="StopPrice = stopPrice", span="56-56"];
m52_4 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="tag == ''''", span="58-58"];
m52_5 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="61-61"];
m52_6 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m52_17 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m52_18 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="92-92"];
m52_19 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="request.StopPrice.HasValue", span="93-93"];
m52_20 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="StopPrice = request.StopPrice.Value", span="95-95"];
m52_21 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m52_0 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m52_1 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m52_7 [cluster="decimal.ToString(string)", file="StopMarketOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m52_27 [cluster="decimal.SmartRounding()", file="StopMarketOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m52_35 [file="StopMarketOrder.cs", label="QuantConnect.Orders.StopMarketOrder", span=""];
m53_553 [cluster="QuantConnect.Holding.Holding()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Holding.Holding()", span="78-78"];
m53_146 [cluster="IB.ExecutionFilter.cstr", file="SubmitOrderRequest.cs", label="Entry IB.ExecutionFilter.cstr", span=""];
m53_246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", span="549-549"];
m53_247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="IB.ContractDetails details = null", span="551-551"];
m53_250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestID) return;\r\n                details = args.ContractDetails;\r\n                _contractDetails.TryAdd(contract.Symbol, details);\r\n                manualResetEvent.Set();\r\n            }", span="557-564"];
m53_252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="_client.RequestContractDetails(requestID, contract)", span="569-569"];
m53_248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="var requestID = GetNextRequestID()", span="552-552"];
m53_249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="554-554"];
m53_253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="manualResetEvent.WaitOne(1000)", span="572-572"];
m53_251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="_client.ContractDetails += clientOnContractDetails", span="566-566"];
m53_254 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="_client.ContractDetails -= clientOnContractDetails", span="575-575"];
m53_255 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return details;", span="577-577"];
m53_256 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Krs.Ats.IBNet.Contract)", span="549-549"];
m53_147 [cluster="Unk.Connect", file="SubmitOrderRequest.cs", label="Entry Unk.Connect", span=""];
m53_96 [cluster="Unk.ToArray", file="SubmitOrderRequest.cs", label="Entry Unk.ToArray", span=""];
m53_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="474-474"];
m53_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SubmitOrderRequest.cs", label="_client != null", span="476-476"];
m53_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SubmitOrderRequest.cs", label="_client.Disconnect()", span="478-478"];
m53_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SubmitOrderRequest.cs", label="_client.Dispose()", span="479-479"];
m53_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="474-474"];
m53_413 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="848-848"];
m53_414 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Order order", span="855-855"];
m53_415 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="var mappedSymbol = MapSymbol(contract)", span="856-856"];
m53_416 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="var orderType = ConvertOrderType(ibOrder.OrderType)", span="857-857"];
m53_419 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="861-864"];
m53_421 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="867-871"];
m53_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        new DateTime()\r\n                        )", span="874-878"];
m53_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        ibOrder.TotalQuantity,\r\n                        ibOrder.AuxPrice,\r\n                        ibOrder.LimitPrice,\r\n                        new DateTime()\r\n                        )", span="881-886"];
m53_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order.SecurityType = ConvertSecurityType(contract.SecurityType)", span="892-892"];
m53_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="order.BrokerId.Add(ibOrder.OrderId)", span="893-893"];
m53_417 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label=orderType, span="858-858"];
m53_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="889-889"];
m53_418 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="OrderType.Market", span="860-860"];
m53_420 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="OrderType.Limit", span="866-866"];
m53_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="OrderType.StopMarket", span="873-873"];
m53_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="OrderType.StopLimit", span="880-880"];
m53_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return order;", span="895-895"];
m53_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(Krs.Ats.IBNet.Order, Krs.Ats.IBNet.Contract)", span="848-848"];
m53_592 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m53_294 [cluster="System.Collections.ObjectModel.Collection<T>.Collection()", file="SubmitOrderRequest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Collection()", span="0-0"];
m53_525 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", span="1045-1045"];
m53_526 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label=type, span="1047-1047"];
m53_527 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Stock", span="1049-1049"];
m53_529 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Option", span="1052-1052"];
m53_531 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Commodity", span="1055-1055"];
m53_533 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Cash", span="1058-1058"];
m53_535 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Future", span="1061-1061"];
m53_537 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Index", span="1065-1065"];
m53_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1075-1075"];
m53_528 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Equity;", span="1050-1050"];
m53_530 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Option;", span="1053-1053"];
m53_532 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Commodity;", span="1056-1056"];
m53_534 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Forex;", span="1059-1059"];
m53_536 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Future;", span="1062-1062"];
m53_538 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.FutureOption", span="1066-1066"];
m53_539 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Bag", span="1067-1067"];
m53_540 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Bond", span="1068-1068"];
m53_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Warrant", span="1069-1069"];
m53_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Bill", span="1070-1070"];
m53_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="IB.SecurityType.Undefined", span="1071-1071"];
m53_544 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="return SecurityType.Base;", span="1072-1072"];
m53_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(Krs.Ats.IBNet.SecurityType)", span="1045-1045"];
m53_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="691-691"];
m53_339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="_disconnected1100Fired && !IsWithinScheduledServerResetTimes()", span="695-695"];
m53_340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, ''Connection with Interactive Brokers lost. '' +\r\n                    ''This could be because of internet connectivity issues or a log in from another location.''\r\n                    ))", span="698-700"];
m53_341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="_disconnected1100Fired && IsWithinScheduledServerResetTimes()", span="702-702"];
m53_342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="704-704"];
m53_343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="706-706"];
m53_344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="691-691"];
m53_595 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m53_94 [cluster="Unk.ToList", file="SubmitOrderRequest.cs", label="Entry Unk.ToList", span=""];
m53_203 [cluster="Unk.Disconnect", file="SubmitOrderRequest.cs", label="Entry Unk.Disconnect", span=""];
m53_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string)", span="105-105"];
m53_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string)", span="105-105"];
m53_112 [cluster="Unk.Substring", file="SubmitOrderRequest.cs", label="Entry Unk.Substring", span=""];
m53_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="1119-1119"];
m53_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="SubmitOrderRequest.cs", label="_nextValidID == 0", span="1123-1123"];
m53_560 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="SubmitOrderRequest.cs", label="Thread.Yield()", span="1123-1123"];
m53_561 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="SubmitOrderRequest.cs", label="return Interlocked.Increment(ref _nextValidID);", span="1125-1125"];
m53_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderID()", span="1119-1119"];
m53_232 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m53_257 [cluster="Unk.RequestContractDetails", file="SubmitOrderRequest.cs", label="Entry Unk.RequestContractDetails", span=""];
m53_412 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="941-941"];
m53_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label=type, span="943-943"];
m53_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="950-950"];
m53_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="OrderType.Market", span="945-945"];
m53_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="OrderType.Limit", span="946-946"];
m53_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="OrderType.StopMarket", span="947-947"];
m53_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="OrderType.StopLimit", span="948-948"];
m53_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="return IB.OrderType.Market;", span="945-945"];
m53_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="return IB.OrderType.Limit;", span="946-946"];
m53_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="return IB.OrderType.Stop;", span="947-947"];
m53_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="return IB.OrderType.StopLimit;", span="948-948"];
m53_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="941-941"];
m53_554 [cluster="Unk.MapSymbol", file="SubmitOrderRequest.cs", label="Entry Unk.MapSymbol", span=""];
m53_158 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m53_547 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="SubmitOrderRequest.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m53_325 [cluster="Unk.Format", file="SubmitOrderRequest.cs", label="Entry Unk.Format", span=""];
m53_82 [cluster="Unk.ConvertOrder", file="SubmitOrderRequest.cs", label="Entry Unk.ConvertOrder", span=""];
m53_436 [cluster="StopMarketOrder.cstr", file="SubmitOrderRequest.cs", label="Entry StopMarketOrder.cstr", span=""];
m53_359 [cluster="Unk.Parse", file="SubmitOrderRequest.cs", label="Entry Unk.Parse", span=""];
m53_121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="320-320"];
m53_122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="SubmitOrderRequest.cs", label="return _cashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="322-322"];
m53_123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="320-320"];
m53_409 [cluster="IB.Order.cstr", file="SubmitOrderRequest.cs", label="Entry IB.Order.cstr", span=""];
m53_77 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="SubmitOrderRequest.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m53_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="738-738"];
m53_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="update.Status == IB.OrderStatus.PreSubmitted\r\n                 || update.Status == IB.OrderStatus.PendingSubmit", span="742-743"];
m53_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="var status = ConvertOrderStatus(update.Status)", span="748-748"];
m53_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ERROR -- '' + update.OrderId)", span="761-761"];
m53_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="var order = _orderMapping.GetOrderByBrokerageId(update.OrderId)", span="764-764"];
m53_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="767-767"];
m53_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? update.Filled : -update.Filled", span="772-772"];
m53_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="var orderEvent = new OrderEvent(order, ''Interactive Brokers Fill Event'')\r\n                {\r\n                    Status = status,\r\n                    FillPrice = update.AverageFillPrice,\r\n                    FillQuantity = fillQuantity\r\n                }", span="773-778"];
m53_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="update.Remaining != 0", span="779-779"];
m53_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="orderEvent.Message += '' - '' + update.Remaining + '' remaining''", span="781-781"];
m53_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="_recentOrderEvents.Add(orderEvent.ToString() + update.Remaining)", span="786-786"];
m53_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to resolve executions for BrokerageID: '' + update.OrderId + '' - '' + err.Message)", span="793-793"];
m53_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="return;", span="745-745"];
m53_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="status != OrderStatus.PartiallyFilled &&\r\n                    status != OrderStatus.Filled &&\r\n                    status != OrderStatus.Canceled &&\r\n                    status != OrderStatus.Submitted &&\r\n                    status != OrderStatus.Invalid", span="749-753"];
m53_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Status: '' + status)", span="755-755"];
m53_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="status == OrderStatus.Invalid", span="759-759"];
m53_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="return;", span="756-756"];
m53_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="order == null", span="765-765"];
m53_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="return;", span="768-768"];
m53_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="OnOrderEvent(orderEvent)", span="788-788"];
m53_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label=InvalidOperationException, span="791-791"];
m53_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label=Exception, span="795-795"];
m53_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err.Message)", span="797-797"];
m53_386 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, Krs.Ats.IBNet.OrderStatusEventArgs)", span="738-738"];
m53_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="957-957"];
m53_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label=type, span="959-959"];
m53_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="966-966"];
m53_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="IB.OrderType.Market", span="961-961"];
m53_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="IB.OrderType.Limit", span="962-962"];
m53_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="IB.OrderType.Stop", span="963-963"];
m53_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="IB.OrderType.StopLimit", span="964-964"];
m53_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="return OrderType.Market;", span="961-961"];
m53_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="return OrderType.Limit;", span="962-962"];
m53_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="return OrderType.StopMarket;", span="963-963"];
m53_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="return OrderType.StopLimit;", span="964-964"];
m53_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(Krs.Ats.IBNet.OrderType)", span="957-957"];
m53_324 [cluster="Unk.Replace", file="SubmitOrderRequest.cs", label="Entry Unk.Replace", span=""];
m53_432 [cluster="Unk.ConvertOrderType", file="SubmitOrderRequest.cs", label="Entry Unk.ConvertOrderType", span=""];
m53_113 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="SubmitOrderRequest.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m53_411 [cluster="System.Math.Abs(int)", file="SubmitOrderRequest.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m53_387 [cluster="Unk.ConvertOrderStatus", file="SubmitOrderRequest.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m53_95 [cluster="Unk.Where", file="SubmitOrderRequest.cs", label="Entry Unk.Where", span=""];
m53_332 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m53_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="1201-1201"];
m53_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="_hash.Add(item)", span="1203-1203"];
m53_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="_queue.Enqueue(item)", span="1205-1205"];
m53_590 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="return false;", span="1213-1213"];
m53_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="_queue.Count > _size", span="1206-1206"];
m53_588 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="_hash.Remove(_queue.Dequeue())", span="1209-1209"];
m53_589 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="return true;", span="1211-1211"];
m53_591 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.Add(T)", span="1201-1201"];
m53_74 [cluster="System.Collections.Generic.List<T>.List()", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m53_295 [cluster="Unk.RequestMarketData", file="SubmitOrderRequest.cs", label="Entry Unk.RequestMarketData", span=""];
m53_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="1141-1141"];
m53_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="SubmitOrderRequest.cs", label="return Interlocked.Increment(ref _nextClientID);", span="1143-1143"];
m53_570 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientID()", span="1141-1141"];
m53_350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="713-713"];
m53_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="_accountProperties[e.Currency + '':'' + e.Key] = e.Value", span="719-719"];
m53_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="e.Key == AccountValueKeys.NetLiquidationByCurrency && e.Currency != ''BASE''", span="722-722"];
m53_353 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="var cashBalance = decimal.Parse(e.Value)", span="724-724"];
m53_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="_cashBalances.AddOrUpdate(e.Currency, cashBalance)", span="725-725"];
m53_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="726-726"];
m53_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label=Exception, span="729-729"];
m53_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err.Message)", span="731-731"];
m53_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, Krs.Ats.IBNet.UpdateAccountValueEventArgs)", span="713-713"];
m53_234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="815-815"];
m53_400 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="var ibOrder = new IB.Order\r\n            {\r\n                ClientId = _clientID,\r\n                OrderId = ibOrderID,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="817-828"];
m53_401 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="var limitOrder = order as LimitOrder", span="830-830"];
m53_402 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="var stopMarketOrder = order as StopMarketOrder", span="831-831"];
m53_404 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="ibOrder.LimitPrice = limitOrder.LimitPrice", span="834-834"];
m53_406 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="ibOrder.AuxPrice = stopMarketOrder.StopPrice", span="838-838"];
m53_407 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="return ibOrder;", span="845-845"];
m53_403 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="limitOrder != null", span="832-832"];
m53_405 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="stopMarketOrder != null", span="836-836"];
m53_408 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, int)", span="815-815"];
m53_347 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="706-706"];
m53_22 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="_nextValidID = e.OrderId", span="146-146"];
m53_24 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId)", span="149-149"];
m53_20 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="141-150"];
m53_21 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="_nextValidID == 0", span="144-144"];
m53_23 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="_waitForNextValidID.Set()", span="147-147"];
m53_25 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="141-150"];
m53_80 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="255-255"];
m53_85 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="manualResetEvent.Set()", span="260-260"];
m53_79 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="252-256"];
m53_81 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="252-256"];
m53_84 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="257-261"];
m53_86 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="257-261"];
m53_98 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="287-287"];
m53_102 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="290-309"];
m53_118 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="309-309"];
m53_99 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="(Holding) ObjectActivator.Clone(x.Value)", span="287-287"];
m53_100 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="287-287"];
m53_103 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="local.Type != SecurityType.Forex", span="293-293"];
m53_104 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="local.ConversionRate = 1m", span="296-296"];
m53_106 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="string currency = local.Symbol.Substring(3)", span="300-300"];
m53_108 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="local.ConversionRate = 1m", span="303-303"];
m53_110 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="308-308"];
m53_105 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="return null;", span="297-297"];
m53_107 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="currency == ''USD''", span="301-301"];
m53_115 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="308-308"];
m53_109 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="return null;", span="304-304"];
m53_111 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="290-309"];
m53_114 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="308-308"];
m53_116 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="308-308"];
m53_119 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="x != null", span="309-309"];
m53_120 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="309-309"];
m53_124 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="322-322"];
m53_125 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="322-322"];
m53_126 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="322-322"];
m53_156 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="details.Add(args)", span="358-358"];
m53_152 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="manualResetEvent.Set()", span="354-354"];
m53_151 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="args.RequestId == requestID", span="354-354"];
m53_155 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="args.RequestId == requestID", span="358-358"];
m53_150 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="352-355"];
m53_153 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="352-355"];
m53_154 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="356-359"];
m53_157 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="356-359"];
m53_192 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.AccountDownloadEnd(): Finished account download for '' + args.AccountName)", span="426-426"];
m53_196 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="firstAccountUpdateReceived.Set()", span="436-436"];
m53_191 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="424-428"];
m53_193 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="_accountHoldingsResetEvent.Set()", span="427-427"];
m53_194 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="424-428"];
m53_195 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="434-437"];
m53_197 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="434-437"];
m53_262 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="_contractDetails.TryAdd(contract.Symbol, details)", span="562-562"];
m53_259 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="args.RequestId != requestID", span="560-560"];
m53_263 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="manualResetEvent.Set()", span="563-563"];
m53_261 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="details = args.ContractDetails", span="561-561"];
m53_258 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="557-564"];
m53_260 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="return;", span="560-560"];
m53_264 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="557-564"];
m53_297 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="x == invertedSymbol || x == normalSymbol", span="594-594"];
m53_296 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="594-594"];
m53_300 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="args.TickerId == ticker && args.TickType == IB.TickType.AskPrice", span="618-618"];
m53_302 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="manualResetEvent.Set()", span="621-621"];
m53_301 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="rate = args.Price", span="620-620"];
m53_298 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="594-594"];
m53_299 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="616-623"];
m53_303 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="616-623"];
m53_335 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Entry lambda expression", span="666-666"];
m53_336 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="TryWaitForReconnect()", span="666-666"];
m53_337 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="666-666"];
m53_348 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="TryWaitForReconnect()", span="706-706"];
m53_349 [cluster="lambda expression", file="SubmitOrderRequest.cs", label="Exit lambda expression", span="706-706"];
m53_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="187-187"];
m53_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="191-191"];
m53_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="IBPlaceOrder(order, false)", span="193-193"];
m53_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label=Exception, span="195-195"];
m53_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return true;", span="200-200"];
m53_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err.Message)", span="197-197"];
m53_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return false;", span="198-198"];
m53_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="187-187"];
m53_331 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="103-103"];
m53_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="973-973"];
m53_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label=status, span="975-975"];
m53_508 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''status'', (int)status, typeof(IB.OrderStatus));", span="1008-1008"];
m53_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.ApiPending", span="977-977"];
m53_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.ApiCancelled", span="982-982"];
m53_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.Submitted", span="987-987"];
m53_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.Filled", span="990-990"];
m53_499 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.PartiallyFilled", span="993-993"];
m53_501 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.Error", span="996-996"];
m53_503 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.Inactive", span="999-999"];
m53_506 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.None", span="1003-1003"];
m53_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.PendingSubmit", span="978-978"];
m53_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.PreSubmitted", span="979-979"];
m53_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.New;", span="980-980"];
m53_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.PendingCancel", span="983-983"];
m53_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="IB.OrderStatus.Canceled", span="984-984"];
m53_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.Canceled;", span="985-985"];
m53_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.Submitted;", span="988-988"];
m53_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.Filled;", span="991-991"];
m53_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.PartiallyFilled;", span="994-994"];
m53_502 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.Invalid;", span="997-997"];
m53_504 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1000-1000"];
m53_505 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.None;", span="1001-1001"];
m53_507 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="return OrderStatus.None;", span="1004-1004"];
m53_509 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(Krs.Ats.IBNet.OrderStatus)", span="973-973"];
m53_75 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="SubmitOrderRequest.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m53_333 [cluster="BrokerageMessageEvent.cstr", file="SubmitOrderRequest.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m53_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1146-1146"];
m53_571 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="var time = DateTime.Now.TimeOfDay", span="1149-1149"];
m53_572 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="var result = time > new TimeSpan(11, 30, 0) || time < new TimeSpan(1, 0, 0)", span="1150-1150"];
m53_573 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerRestTimes(): '' + result)", span="1152-1152"];
m53_574 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="return result;", span="1154-1154"];
m53_575 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="1146-1146"];
m53_292 [cluster="Unk.CreateContract", file="SubmitOrderRequest.cs", label="Entry Unk.CreateContract", span=""];
m53_431 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="1105-1105"];
m53_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="contract.SecurityType == IB.SecurityType.Cash", span="1107-1107"];
m53_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return contract.Symbol + contract.Currency;", span="1110-1110"];
m53_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return contract.Symbol;", span="1112-1112"];
m53_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Krs.Ats.IBNet.Contract)", span="1105-1105"];
m53_326 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m53_83 [cluster="Unk.Add", file="SubmitOrderRequest.cs", label="Entry Unk.Add", span=""];
m53_433 [cluster="MarketOrder.cstr", file="SubmitOrderRequest.cs", label="Entry MarketOrder.cstr", span=""];
m53_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="464-464"];
m53_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SubmitOrderRequest.cs", label="!IsConnected", span="466-466"];
m53_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SubmitOrderRequest.cs", label="return;", span="466-466"];
m53_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SubmitOrderRequest.cs", label="_client.Disconnect()", span="468-468"];
m53_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="464-464"];
m53_209 [cluster="Unk.Dispose", file="SubmitOrderRequest.cs", label="Entry Unk.Dispose", span=""];
m53_361 [cluster="AccountEvent.cstr", file="SubmitOrderRequest.cs", label="Entry AccountEvent.cstr", span=""];
m53_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="235-235"];
m53_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return order.SecurityType != SecurityType.Base;", span="238-238"];
m53_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="235-235"];
m53_362 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="148-148"];
m53_564 [cluster="System.Threading.Interlocked.Increment(ref int)", file="SubmitOrderRequest.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m53_127 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m53_437 [cluster="StopLimitOrder.cstr", file="SubmitOrderRequest.cs", label="Entry StopLimitOrder.cstr", span=""];
m53_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m53_434 [cluster="System.DateTime.DateTime()", file="SubmitOrderRequest.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m53_93 [cluster="Unk.Select", file="SubmitOrderRequest.cs", label="Entry Unk.Select", span=""];
m53_188 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SubmitOrderRequest.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m53_78 [cluster="System.TimeoutException.TimeoutException(string)", file="SubmitOrderRequest.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m53_26 [cluster="System.Threading.EventWaitHandle.Set()", file="SubmitOrderRequest.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m53_577 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="1191-1191"];
m53_578 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="SubmitOrderRequest.cs", label="_size = size", span="1193-1193"];
m53_579 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="SubmitOrderRequest.cs", label="_queue = new Queue<T>(size)", span="1194-1194"];
m53_580 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="SubmitOrderRequest.cs", label="_hash = new HashSet<T>()", span="1195-1195"];
m53_581 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>.FixedHashQueue(int)", span="1191-1191"];
m53_563 [cluster="System.Threading.Thread.Yield()", file="SubmitOrderRequest.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m53_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="285-285"];
m53_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="var holdings = _accountHoldings.Select(x => (Holding) ObjectActivator.Clone(x.Value)).ToList()", span="287-287"];
m53_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                string currency = local.Symbol.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="290-309"];
m53_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="return holdings;", span="313-313"];
m53_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="Task.WaitAll(tasks, 5000)", span="311-311"];
m53_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="285-285"];
m53_329 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="SubmitOrderRequest.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m53_388 [cluster="Unk.Error", file="SubmitOrderRequest.cs", label="Entry Unk.Error", span=""];
m53_27 [cluster="Unk.Trace", file="SubmitOrderRequest.cs", label="Entry Unk.Trace", span=""];
m53_438 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="SubmitOrderRequest.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m53_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="584-584"];
m53_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="currency == ''USD''", span="586-586"];
m53_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="string invertedSymbol = ''USD'' + currency", span="592-592"];
m53_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="string normalSymbol = currency + ''USD''", span="593-593"];
m53_277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): Unable to resolve conversion for currency: '' + currency)", span="606-606"];
m53_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="return 1m;", span="588-588"];
m53_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="var currencyPair = Forex.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="594-594"];
m53_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="bool inverted = invertedSymbol == currencyPair", span="601-601"];
m53_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="currencyPair == null", span="595-595"];
m53_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="var contract = CreateContract(currencyPair, SecurityType.Forex)", span="602-602"];
m53_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="return 1m;", span="597-597"];
m53_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label=inverted, span="631-631"];
m53_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="var details = GetContractDetails(contract)", span="603-603"];
m53_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="_client.RequestMarketData(ticker, contract, priceTick, true, false)", span="627-627"];
m53_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="details == null", span="604-604"];
m53_279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="int ticker = GetNextTickerID()", span="609-609"];
m53_278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="return 1m;", span="607-607"];
m53_280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="decimal rate = 1m", span="610-610"];
m53_283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == ticker && args.TickType == IB.TickType.AskPrice)\r\n                {\r\n                    rate = args.Price;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="616-623"];
m53_281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="611-611"];
m53_282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="var priceTick = new Collection<IB.GenericTickType>()", span="613-613"];
m53_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="manualResetEvent.WaitOne(2500)", span="629-629"];
m53_284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="_client.TickPrice += clientOnTickPrice", span="625-625"];
m53_288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="return 1/rate;", span="633-633"];
m53_289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="return rate;", span="635-635"];
m53_290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="584-584"];
m53_293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", span="1133-1133"];
m53_567 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="SubmitOrderRequest.cs", label="return Interlocked.Increment(ref _nextTickerID);", span="1135-1135"];
m53_568 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerID()", span="1133-1133"];
m53_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1015-1015"];
m53_510 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label=type, span="1017-1017"];
m53_523 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1038-1038"];
m53_511 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Equity", span="1019-1019"];
m53_513 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Option", span="1022-1022"];
m53_515 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Commodity", span="1025-1025"];
m53_517 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Forex", span="1028-1028"];
m53_519 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Future", span="1031-1031"];
m53_521 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="SecurityType.Base", span="1034-1034"];
m53_512 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="return IB.SecurityType.Stock;", span="1020-1020"];
m53_514 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="return IB.SecurityType.Option;", span="1023-1023"];
m53_516 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="return IB.SecurityType.Commodity;", span="1026-1026"];
m53_518 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="return IB.SecurityType.Cash;", span="1029-1029"];
m53_520 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="return IB.SecurityType.Future;", span="1032-1032"];
m53_522 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1035-1035"];
m53_524 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1015-1015"];
m53_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="208-208"];
m53_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="212-212"];
m53_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="order.BrokerId", span="215-215"];
m53_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err.Message)", span="224-224"];
m53_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="_client.CancelOrder((int) id)", span="217-217"];
m53_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label=Exception, span="222-222"];
m53_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return true;", span="227-227"];
m53_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return false;", span="225-225"];
m53_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="208-208"];
m53_245 [cluster="Unk.TryGetValue", file="SubmitOrderRequest.cs", label="Entry Unk.TryGetValue", span=""];
m53_330 [cluster="Unk.GetOrderByBrokerageId", file="SubmitOrderRequest.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m53_396 [cluster="System.Threading.EventWaitHandle.Reset()", file="SubmitOrderRequest.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m53_583 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m53_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="486-486"];
m53_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="SubmitOrderRequest.cs", label="return new Dictionary<string, string>(_accountProperties);", span="488-488"];
m53_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountValues()", span="486-486"];
m53_594 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m53_360 [cluster="Unk.AddOrUpdate", file="SubmitOrderRequest.cs", label="Entry Unk.AddOrUpdate", span=""];
m53_582 [cluster="System.Collections.Generic.Queue<T>.Queue(int)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(int)", span="0-0"];
m53_233 [cluster="System.ArgumentException.ArgumentException(string)", file="SubmitOrderRequest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m53_291 [cluster="Unk.FirstOrDefault", file="SubmitOrderRequest.cs", label="Entry Unk.FirstOrDefault", span=""];
m53_334 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="167-167"];
m53_452 [cluster="string.Substring(int)", file="SubmitOrderRequest.cs", label="Entry string.Substring(int)", span="0-0"];
m53_76 [cluster="Unk.RequestOpenOrders", file="SubmitOrderRequest.cs", label="Entry Unk.RequestOpenOrders", span=""];
m53_265 [cluster="Unk.TryAdd", file="SubmitOrderRequest.cs", label="Entry Unk.TryAdd", span=""];
m53_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="497-497"];
m53_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="Connect()", span="500-500"];
m53_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="var contract = CreateContract(order.Symbol, order.SecurityType, exchange)", span="507-507"];
m53_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label=needsNewID, span="510-510"];
m53_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="order.BrokerId.Add(id)", span="514-514"];
m53_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="order.BrokerId.Any()", span="517-517"];
m53_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="ibOrderID = (int)order.BrokerId[0]", span="520-520"];
m53_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="var ibOrder = ConvertOrder(order, ibOrderID)", span="527-527"];
m53_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="!IsConnected", span="502-502"];
m53_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="504-504"];
m53_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="int ibOrderID = 0", span="509-509"];
m53_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="_client.PlaceOrder(ibOrder.OrderId, contract, ibOrder)", span="528-528"];
m53_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="int id = GetNextBrokerageOrderID()", span="513-513"];
m53_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="ibOrderID = id", span="515-515"];
m53_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="524-524"];
m53_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="497-497"];
m53_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="123-123"];
m53_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_orderMapping = orderMapping", span="126-126"];
m53_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_account = account", span="127-127"];
m53_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_host = host", span="128-128"];
m53_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_port = port", span="129-129"];
m53_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_agentDescription = agentDescription", span="131-131"];
m53_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_clientID = IncrementClientID()", span="130-130"];
m53_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client = new IB.IBClient()", span="132-132"];
m53_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="135-135"];
m53_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="136-136"];
m53_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="137-137"];
m53_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client.Error += HandleError", span="138-138"];
m53_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="_client.NextValidId += (sender, e) =>\r\n            {\r\n                // only grab this id when we initialize, and we'll manually increment it here to avoid threading issues\r\n                if (_nextValidID == 0)\r\n                {\r\n                    _nextValidID = e.OrderId;\r\n                    _waitForNextValidID.Set();\r\n                }\r\n                Log.Trace(''InteractiveBrokersBrokerage.HandleNextValidID(): '' + e.OrderId);\r\n            }", span="141-150"];
m53_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping, string, string, int, Krs.Ats.IBNet.AgentDescription)", span="123-123"];
m53_97 [cluster="Unk.WaitAll", file="SubmitOrderRequest.cs", label="Entry Unk.WaitAll", span=""];
m53_593 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m53_390 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="804-804"];
m53_391 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="_accountHoldingsResetEvent.Reset()", span="806-806"];
m53_392 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="var holding = CreateHolding(e)", span="807-807"];
m53_394 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="OnPortfolioChanged(new SecurityEvent(holding.Symbol, e.Position, e.AverageCost))", span="809-809"];
m53_393 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="_accountHoldings[holding.Symbol] = holding", span="808-808"];
m53_395 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="804-804"];
m53_213 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SubmitOrderRequest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m53_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="245-245"];
m53_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="var orders = new List<Order>()", span="247-247"];
m53_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="249-249"];
m53_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="252-256"];
m53_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="return orders;", span="278-278"];
m53_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="EventHandler<EventArgs> clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="257-261"];
m53_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="!manualResetEvent.WaitOne(5000)", span="269-269"];
m53_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="_client.OpenOrder += clientOnOpenOrder", span="263-263"];
m53_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="275-275"];
m53_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="264-264"];
m53_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="_client.OpenOrderEnd -= clientOnOpenOrderEnd", span="276-276"];
m53_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="_client.RequestOpenOrders()", span="266-266"];
m53_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 1 second.'');", span="271-271"];
m53_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="245-245"];
m53_28 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="166-166"];
m53_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.PlaceOrder(): Symbol: '' + order.Symbol + '' Quantity: '' + order.Quantity)", span="170-170"];
m53_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="IBPlaceOrder(order, true)", span="172-172"];
m53_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return true;", span="173-173"];
m53_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label=Exception, span="175-175"];
m53_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err.Message)", span="177-177"];
m53_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="return false;", span="178-178"];
m53_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="166-166"];
m53_128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="329-329"];
m53_129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="var filter = new IB.ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientID,\r\n                Exchange = exchange,\r\n                SecurityType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = timeSince ?? DateTime.MinValue,\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="331-340"];
m53_130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="var details = new List<IB.ExecDetailsEventArgs>()", span="342-342"];
m53_139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.RequestExecutions(requestID, filter)", span="365-365"];
m53_131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="var client = new IB.IBClient()", span="343-343"];
m53_136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="EventHandler<IB.ExecDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) details.Add(args);\r\n                }", span="356-359"];
m53_144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="return details;", span="377-377"];
m53_132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.Connect(_host, _port, IncrementClientID())", span="345-345"];
m53_137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.ExecDetails += clientOnExecDetails", span="361-361"];
m53_133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="347-347"];
m53_134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="int requestID = GetNextRequestID()", span="349-349"];
m53_135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="EventHandler<IB.ExecutionDataEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == requestID) manualResetEvent.Set();\r\n                }", span="352-355"];
m53_140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="!manualResetEvent.WaitOne(5000)", span="367-367"];
m53_138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.ExecutionDataEnd += clientOnExecutionDataEnd", span="362-362"];
m53_143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.ExecutionDataEnd -= clientOnExecutionDataEnd", span="374-374"];
m53_142 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="client.ExecDetails -= clientOnExecDetails", span="373-373"];
m53_141 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 1 second.'');", span="369-369"];
m53_145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="329-329"];
m53_190 [cluster="Unk.RequestAccountUpdates", file="SubmitOrderRequest.cs", label="Entry Unk.RequestAccountUpdates", span=""];
m53_235 [cluster="Unk.PlaceOrder", file="SubmitOrderRequest.cs", label="Entry Unk.PlaceOrder", span=""];
m53_328 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="SubmitOrderRequest.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m53_451 [cluster="string.Substring(int, int)", file="SubmitOrderRequest.cs", label="Entry string.Substring(int, int)", span="0-0"];
m53_397 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="1082-1082"];
m53_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="string currencySymbol", span="1084-1084"];
m53_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="!Forex.CurrencySymbols.TryGetValue(e.Contract.Currency, out currencySymbol)", span="1085-1085"];
m53_551 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="return new Holding\r\n            {\r\n                Symbol = MapSymbol(e.Contract),\r\n                Type = ConvertSecurityType(e.Contract.SecurityType),\r\n                Quantity = e.Position,\r\n                AveragePrice = e.AverageCost,\r\n                MarketPrice = e.MarketPrice,\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol =  currencySymbol\r\n            };", span="1090-1099"];
m53_550 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="currencySymbol = ''$''", span="1087-1087"];
m53_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(Krs.Ats.IBNet.UpdatePortfolioEventArgs)", span="1082-1082"];
m53_38 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m53_435 [cluster="LimitOrder.cstr", file="SubmitOrderRequest.cs", label="Entry LimitOrder.cstr", span=""];
m53_398 [cluster="SecurityEvent.cstr", file="SubmitOrderRequest.cs", label="Entry SecurityEvent.cstr", span=""];
m53_327 [cluster="System.TimeSpan.FromMinutes(double)", file="SubmitOrderRequest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m53_410 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="926-926"];
m53_453 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label=direction, span="928-928"];
m53_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="934-934"];
m53_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="OrderDirection.Buy", span="930-930"];
m53_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="OrderDirection.Sell", span="931-931"];
m53_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="OrderDirection.Hold", span="932-932"];
m53_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="return IB.ActionSide.Buy;", span="930-930"];
m53_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="return IB.ActionSide.Sell;", span="931-931"];
m53_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="return IB.ActionSide.Undefined;", span="932-932"];
m53_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="926-926"];
m53_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="383-383"];
m53_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label=IsConnected, span="385-385"];
m53_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="return;", span="385-385"];
m53_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_accountHoldings.Clear()", span="388-388"];
m53_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_accountProperties.Clear()", span="389-389"];
m53_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="int attempt = 1", span="391-391"];
m53_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label=true, span="392-392"];
m53_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ('' + attempt + ''/10) ...'')", span="396-396"];
m53_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="attempt++ < 10", span="405-405"];
m53_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="!_waitForNextValidID.WaitOne(5000)", span="418-418"];
m53_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.Connect(_host, _port, _clientID)", span="399-399"];
m53_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label=Exception, span="402-402"];
m53_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Thread.Sleep(5000)", span="407-407"];
m53_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Log.Error(''InteractiveBrokersBrokerage.Connect(): '' + err.Message)", span="412-412"];
m53_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="throw;", span="413-413"];
m53_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 5 seconds.'');", span="420-420"];
m53_175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.AccountDownloadEnd(): Finished account download for '' + args.AccountName);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="424-428"];
m53_176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="429-429"];
m53_185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="457-457"];
m53_177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="433-433"];
m53_178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="434-437"];
m53_181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="445-445"];
m53_179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="439-439"];
m53_186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="458-458"];
m53_180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="_client.RequestAccountUpdates(true, _account)", span="442-442"];
m53_182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Thread.Sleep(2500)", span="449-449"];
m53_183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="!_accountHoldingsResetEvent.WaitOne(5000)", span="451-451"];
m53_184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetAccountHoldings(): Operation took longer than 5 seconds.'');", span="453-453"];
m53_187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="383-383"];
m53_399 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.SecurityEvent)", span="129-129"];
m53_304 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="641-641"];
m53_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="e.ErrorMsg = e.ErrorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="646-646"];
m53_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="647-647"];
m53_308 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="ErrorCodes.Contains((int) e.ErrorCode)", span="651-651"];
m53_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="WarningCodes.Contains((int) e.ErrorCode)", span="655-655"];
m53_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="(int) e.ErrorCode == 1100 && !_disconnected1100Fired", span="661-661"];
m53_315 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="(int) e.ErrorCode == 1102", span="668-668"];
m53_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="InvalidatingCodes.Contains((int)e.ErrorCode)", span="674-674"];
m53_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="Log.Trace(string.Format(''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): Order: {0} ErrorCode: {1} - {2}'', e.TickerId, e.ErrorCode, e.ErrorMsg))", span="676-676"];
m53_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="var order = _orderMapping.GetOrderByBrokerageId(e.TickerId)", span="679-679"];
m53_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, (int) e.ErrorCode, e.ErrorMsg))", span="684-684"];
m53_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="650-650"];
m53_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="653-653"];
m53_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="657-657"];
m53_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="_disconnected1100Fired = true", span="663-663"];
m53_314 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(task => TryWaitForReconnect())", span="666-666"];
m53_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="_disconnected1100Fired = false", span="671-671"];
m53_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="var orderEvent = new OrderEvent(order) {Status = OrderStatus.Invalid}", span="680-680"];
m53_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="OnOrderEvent(orderEvent)", span="681-681"];
m53_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, Krs.Ats.IBNet.ErrorEventArgs)", span="641-641"];
m53_101 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="111-111"];
m53_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", span="531-531"];
m53_237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="IB.ContractDetails details", span="533-533"];
m53_238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="_contractDetails.TryGetValue(contract.Symbol, out details)", span="534-534"];
m53_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="details = GetContractDetails(contract)", span="539-539"];
m53_239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return details.Summary.PrimaryExchange;", span="536-536"];
m53_241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="details == null", span="540-540"];
m53_243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return details.Summary.PrimaryExchange;", span="546-546"];
m53_242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="return null;", span="543-543"];
m53_244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Krs.Ats.IBNet.Contract)", span="531-531"];
m53_56 [cluster="Unk.CancelOrder", file="SubmitOrderRequest.cs", label="Entry Unk.CancelOrder", span=""];
m53_439 [cluster="Unk.ConvertSecurityType", file="SubmitOrderRequest.cs", label="Entry Unk.ConvertSecurityType", span=""];
m53_19 [cluster="IB.IBClient.cstr", file="SubmitOrderRequest.cs", label="Entry IB.IBClient.cstr", span=""];
m53_229 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SubmitOrderRequest.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m53_148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", span="1128-1128"];
m53_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="SubmitOrderRequest.cs", label="return Interlocked.Increment(ref _nextRequestID);", span="1130-1130"];
m53_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestID()", span="1128-1128"];
m53_189 [cluster="System.Threading.Thread.Sleep(int)", file="SubmitOrderRequest.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m53_149 [cluster="Unk.RequestExecutions", file="SubmitOrderRequest.cs", label="Entry Unk.RequestExecutions", span=""];
m53_576 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="SubmitOrderRequest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m53_346 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m53_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", span="905-905"];
m53_440 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="var securityType = ConvertSecurityType(type)", span="907-907"];
m53_441 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="var contract = new IB.Contract(symbol, exchange ?? ''Smart'', securityType, ''USD'')", span="908-908"];
m53_442 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="type == SecurityType.Forex", span="909-909"];
m53_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="contract.Symbol = symbol.Substring(0, 3)", span="913-913"];
m53_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="contract.Currency = symbol.Substring(3)", span="914-914"];
m53_443 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="contract.Exchange = ''IDEALPRO''", span="912-912"];
m53_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="contract.PrimaryExchange = GetPrimaryExchange(contract)", span="918-918"];
m53_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="return contract;", span="920-920"];
m53_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(string, QuantConnect.SecurityType, string)", span="905-905"];
m53_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", span="89-89"];
m53_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", span="89-89"];
m53_389 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="122-122"];
m53_450 [cluster="IB.Contract.cstr", file="SubmitOrderRequest.cs", label="Entry IB.Contract.cstr", span=""];
m53_596 [file="SubmitOrderRequest.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m53_597 [file="SubmitOrderRequest.cs", label=orders, span=""];
m53_598 [file="SubmitOrderRequest.cs", label=manualResetEvent, span=""];
m53_599 [file="SubmitOrderRequest.cs", label="?", span=""];
m53_600 [file="SubmitOrderRequest.cs", label=currency, span=""];
m53_601 [file="SubmitOrderRequest.cs", label=requestID, span=""];
m53_602 [file="SubmitOrderRequest.cs", label=manualResetEvent, span=""];
m53_603 [file="SubmitOrderRequest.cs", label=details, span=""];
m53_604 [file="SubmitOrderRequest.cs", label=firstAccountUpdateReceived, span=""];
m53_605 [file="SubmitOrderRequest.cs", label=requestID, span=""];
m53_606 [file="SubmitOrderRequest.cs", label="Krs.Ats.IBNet.Contract", span=""];
m53_607 [file="SubmitOrderRequest.cs", label=manualResetEvent, span=""];
m53_608 [file="SubmitOrderRequest.cs", label=invertedSymbol, span=""];
m53_609 [file="SubmitOrderRequest.cs", label=normalSymbol, span=""];
m53_610 [file="SubmitOrderRequest.cs", label=ticker, span=""];
m53_611 [file="SubmitOrderRequest.cs", label=manualResetEvent, span=""];
m53_612 [file="SubmitOrderRequest.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", span=""];
m54_43 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="SubscriptionManager.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m54_38 [cluster="Unk.Where", file="SubscriptionManager.cs", label="Entry Unk.Where", span=""];
m54_63 [cluster="Unk.IsAssignableFrom", file="SubscriptionManager.cs", label="Entry Unk.IsAssignableFrom", span=""];
m54_8 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m54_9 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="var dataType = typeof(TradeBar)", span="94-94"];
m54_12 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="var tickType = LeanData.GetCommonTickTypeForCommonDataTypes(dataType, symbol.SecurityType)", span="99-99"];
m54_13 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="return Add(dataType, tickType, symbol, resolution, timeZone, exchangeTimeZone, isCustomData, fillDataForward, extendedMarketHours);", span="100-100"];
m54_11 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="dataType = typeof(Tick)", span="97-97"];
m54_14 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m54_77 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m54_90 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m54_15 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m54_47 [cluster="QuantConnect.Symbol.IsCanonical()", file="SubscriptionManager.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m54_37 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m54_87 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="237-237"];
m54_44 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="144-144"];
m54_48 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="145-145"];
m54_45 [cluster="lambda expression", file="SubscriptionManager.cs", label="!x.Symbol.IsCanonical()", span="144-144"];
m54_46 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="144-144"];
m54_49 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Symbol.Value", span="145-145"];
m54_50 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="145-145"];
m54_69 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Symbol == symbol", span="172-172"];
m54_68 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="172-172"];
m54_71 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="194-194"];
m54_70 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="172-172"];
m54_72 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Type.Name", span="194-194"];
m54_73 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="194-194"];
m54_88 [cluster="lambda expression", file="SubscriptionManager.cs", label="new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)", span="237-237"];
m54_89 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="237-237"];
m54_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m54_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m54_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m54_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="dataTimeZone == null", span="121-121"];
m54_19 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="exchangeTimeZone == null", span="125-125"];
m54_21 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var newConfig = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, fillDataForward, extendedMarketHours, isInternalFeed, isCustomData, isFilteredSubscription: isFilteredSubscription, tickType: tickType)", span="131-131"];
m54_29 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="_timeKeeper.AddTimeZone(exchangeTimeZone)", span="156-156"];
m54_30 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="HasCustomData = HasCustomData || isCustomData", span="159-159"];
m54_18 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''dataTimeZone'', ''DataTimeZone is a required parameter for new subscriptions.  Set to the time zone the raw data is time stamped in.'');", span="123-123"];
m54_20 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''exchangeTimeZone'', ''ExchangeTimeZone is a required parameter for new subscriptions.  Set to the time zone the security exchange resides in.'');", span="127-127"];
m54_22 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Contains(newConfig)", span="134-134"];
m54_23 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Log.Trace(''SubscriptionManager.Add(): subscription already added: '' + newConfig)", span="136-136"];
m54_24 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="137-137"];
m54_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m54_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="161-161"];
m54_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m54_27 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="uniqueCount > _algorithmSettings.DataSubscriptionLimit", span="147-147"];
m54_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m54_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m54_39 [cluster="Unk.DistinctBy", file="SubscriptionManager.cs", label="Entry Unk.DistinctBy", span=""];
m54_41 [cluster="System.Exception.Exception(string)", file="SubscriptionManager.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m54_78 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m54_79 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="return AvailableDataTypes[securityType];", span="220-220"];
m54_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m54_61 [cluster="Unk.ToList", file="SubscriptionManager.cs", label="Entry Unk.ToList", span=""];
m54_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m54_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m54_62 [cluster="System.ArgumentException.ArgumentException(string)", file="SubscriptionManager.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m54_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m54_64 [cluster="Unk.Add", file="SubscriptionManager.cs", label="Entry Unk.Add", span=""];
m54_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="234-234"];
m54_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m54_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label=isCanonical, span="232-232"];
m54_84 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return AvailableDataTypes[symbolSecurityType].Select(tickType => new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)).ToList();", span="237-237"];
m54_85 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m54_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m54_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m54_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m54_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m54_4 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="AvailableDataTypes = DefaultDataTypes()", span="65-65"];
m54_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m54_42 [cluster="string.Format(string, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m54_51 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m54_52 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="var subscriptions = Subscriptions.Where(x => x.Symbol == symbol).ToList()", span="172-172"];
m54_54 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="throw new ArgumentException(''Please subscribe to this symbol before adding a consolidator for it. Symbol: '' + symbol.Value);", span="177-177"];
m54_56 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="consolidator.InputType.IsAssignableFrom(subscription.Type)", span="183-183"];
m54_57 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="subscription.Consolidators.Add(consolidator)", span="185-185"];
m54_53 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="subscriptions.Count == 0", span="174-174"];
m54_55 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label=subscriptions, span="180-180"];
m54_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="return;", span="186-186"];
m54_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m54_66 [cluster="Unk.Join", file="SubscriptionManager.cs", label="Entry Unk.Join", span=""];
m54_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m54_67 [cluster="string.Format(string, object, object, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m54_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m54_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SubscriptionManager.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m54_65 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m54_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m54_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m54_91 [file="SubscriptionManager.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m54_92 [file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m54_93 [file="SubscriptionManager.cs", label="QuantConnect.Resolution", span=""];
m56_8 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="Symbol.cs", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="81-81"];
m56_21 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", span="107-107"];
m56_22 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Fast.Reset()", span="109-109"];
m56_23 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Slow.Reset()", span="110-110"];
m56_24 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Signal.Reset()", span="111-111"];
m56_25 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Histogram.Reset()", span="112-112"];
m56_26 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="base.Reset()", span="113-113"];
m56_27 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", file="Symbol.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.Reset()", span="107-107"];
m56_9 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="Symbol.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m56_19 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="Symbol.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m56_2 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="75-75"];
m56_3 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Fast = type.AsIndicator(name + ''_Fast'', fastPeriod)", span="78-78"];
m56_4 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Slow = type.AsIndicator(name + ''_Slow'', slowPeriod)", span="79-79"];
m56_5 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Signal = type.AsIndicator(name + ''_Signal'', signalPeriod)", span="80-80"];
m56_6 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Histogram = new Identity(name + ''_Histogram'')", span="81-81"];
m56_7 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="75-75"];
m56_10 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="89-89"];
m56_11 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Fast.Update(input)", span="91-91"];
m56_12 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Slow.Update(input)", span="92-92"];
m56_15 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Signal.Update(input.Time, macd)", span="97-97"];
m56_16 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Histogram.Update(input.Time, macd - Signal)", span="100-100"];
m56_13 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="var macd = Fast - Slow", span="94-94"];
m56_17 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="return macd;", span="101-101"];
m56_18 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="Symbol.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="89-89"];
m56_28 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="Symbol.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="121-121"];
m56_0 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="62-62"];
m56_1 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="Symbol.cs", label="Exit QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="62-62"];
m56_20 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="Symbol.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m56_29 [file="Symbol.cs", label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", span=""];
m57_67 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="order = new MarketOrder()", span="151-151"];
m57_74 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="OrderType.MarketOnOpen", span="173-173"];
m57_75 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="order = new MarketOnOpenOrder()", span="174-174"];
m57_84 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="SymbolRepresentation.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m57_76 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="OrderType.MarketOnClose", span="177-177"];
m57_77 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="order = new MarketOnCloseOrder()", span="178-178"];
m57_78 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="OrderType.OptionExercise", span="181-181"];
m57_79 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="order = new OptionExerciseOrder()", span="182-182"];
m57_80 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="throw new ArgumentOutOfRangeException();", span="186-186"];
m57_81 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="return order;", span="188-188"];
m57_82 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="145-145"];
m57_85 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="SymbolRepresentation.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m57_55 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="rows = LoadHourlyOrDailyFile(outputFile)", span="150-150"];
m57_47 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="return order;", span="139-139"];
m57_57 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="rows[kvp.Key] = kvp.Value", span="153-153"];
m57_14 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m57_15 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label=_resolution, span="75-75"];
m57_18 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="WriteDailyOrHour(source)", span="79-79"];
m57_22 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var order = CreateOrder(orderType, jObject)", span="92-92"];
m57_16 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="Resolution.Daily", span="77-77"];
m57_19 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="Resolution.Minute", span="82-82"];
m57_17 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="Resolution.Hour", span="78-78"];
m57_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m57_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="91-91"];
m57_23 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Id = jObject[''Id''].Value<int>()", span="95-95"];
m57_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Symbol = Symbol.Create(ticker, securityType, market)", span="132-132"];
m57_101 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="Compression.Zip(data, tempFilePath, LeanData.GenerateZipEntryName(_symbol.Value, _securityType, date, _resolution, _dataType))", span="226-226"];
m57_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="136-136"];
m57_95 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="var tempFilePath = filePath + ''.tmp''", span="213-213"];
m57_96 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="data = data.TrimEnd()", span="215-215"];
m57_97 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="File.Exists(filePath)", span="216-216"];
m57_98 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="File.Delete(filePath)", span="218-218"];
m57_99 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="Log.Trace(''LeanDataWriter.Write(): Existing deleted: '' + filePath)", span="219-219"];
m57_100 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="Directory.CreateDirectory(Path.GetDirectoryName(filePath))", span="223-223"];
m57_102 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="File.Move(tempFilePath, filePath)", span="229-229"];
m57_103 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="Log.Trace(''LeanDataWriter.Write(): Created: '' + filePath)", span="231-231"];
m57_104 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", file="SymbolRepresentation.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteFile(string, string, System.DateTime)", span="211-211"];
m57_61 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="sb.Length > 0", span="170-170"];
m57_68 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="OrderType.Limit", prediction=133, span="154-154"];
m57_71 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="order = new StopMarketOrder\r\n                    {\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", prediction=134, span="159-162"];
m57_69 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="order = new LimitOrder {LimitPrice = jObject[''LimitPrice''].Value<decimal>()}", prediction=135, span="155-155"];
m57_70 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="OrderType.StopMarket", prediction=136, span="158-158"];
m57_72 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="OrderType.StopLimit", prediction=137, span="165-165"];
m57_73 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", color=green, community=0, file="SymbolRepresentation.cs", label="order = new StopLimitOrder\r\n                    {\r\n                        LimitPrice = jObject[''LimitPrice''].Value<decimal>(),\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", prediction=138, span="166-170"];
m57_62 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="WriteFile(outputFile, sb.ToString(), lastTime)", span="172-172"];
m57_63 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="135-135"];
m57_93 [cluster="string.Substring(int, int)", file="SymbolRepresentation.cs", label="Entry string.Substring(int, int)", span="0-0"];
m57_111 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m57_59 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label=rows, span="163-163"];
m57_92 [cluster="System.IO.StreamReader.ReadLine()", file="SymbolRepresentation.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m57_64 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="Order order", span="147-147"];
m57_13 [cluster="System.Exception.Exception(string)", file="SymbolRepresentation.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m57_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="97-97"];
m57_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="98-98"];
m57_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Quantity = jObject[''Quantity''].Value<decimal>()", span="101-101"];
m57_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Quantity = jObject[''Quantity''].Value<int>()", span="100-100"];
m57_33 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="string market = Market.USA", span="108-108"];
m57_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var suppliedMarket = jObject.SelectTokens(''Symbol.ID.Market'')", span="111-111"];
m57_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="market = suppliedMarket.Single().Value<string>()", span="114-114"];
m57_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="new DefaultBrokerageModel().DefaultMarkets.TryGetValue(securityType, out market)", span="119-119"];
m57_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="124-124"];
m57_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="103-103"];
m57_31 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.BrokerId = jObject[''BrokerId''].Select(x => x.Value<string>()).ToList()", span="105-105"];
m57_32 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.ContingentId = jObject[''ContingentId''].Value<int>()", span="106-106"];
m57_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="jObject.SelectTokens(''Symbol.ID'').Any()", span="122-122"];
m57_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="suppliedMarket.Any()", span="112-112"];
m57_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="104-104"];
m57_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="125-125"];
m57_60 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="sb.Append(kvp.Value + Environment.NewLine)", span="166-166"];
m57_112 [cluster="System.IO.File.Move(string, string)", file="SymbolRepresentation.cs", label="Entry System.IO.File.Move(string, string)", span="0-0"];
m57_110 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m57_52 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="var newRows = new SortedDictionary<DateTime, string>(source.ToDictionary(x => x.Time, x => LeanData.GenerateLine(x, _securityType, _resolution)))", span="144-144"];
m57_109 [cluster="System.IO.Directory.CreateDirectory(string)", file="SymbolRepresentation.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m57_49 [cluster="QuantConnect.ToolBox.LeanDataWriter.WriteDailyOrHour(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SymbolRepresentation.cs", label="var sb = new StringBuilder()", span="137-137"];
m57_12 [cluster="string.ToLower()", file="SymbolRepresentation.cs", label="Entry string.ToLower()", span="0-0"];
m57_105 [cluster="string.TrimEnd(params char[])", file="SymbolRepresentation.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m57_115 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m57_0 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m57_1 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_securityType = symbol.ID.SecurityType", span="50-50"];
m57_2 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_dataDirectory = dataDirectory", span="51-51"];
m57_3 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_resolution = resolution", span="52-52"];
m57_4 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_symbol = symbol", span="53-53"];
m57_5 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_market = symbol.ID.Market.ToLower()", span="54-54"];
m57_6 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_dataType = dataType", span="55-55"];
m57_7 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_securityType == SecurityType.Forex || _securityType == SecurityType.Cfd", span="57-57"];
m57_8 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_dataType = TickType.Quote", span="59-59"];
m57_9 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="_securityType != SecurityType.Equity && _securityType != SecurityType.Forex && _securityType != SecurityType.Cfd && _securityType != SecurityType.Crypto", span="63-63"];
m57_10 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="throw new Exception(''Sorry this security type is not yet supported by the LEAN data writer: '' + _securityType);", span="65-65"];
m57_11 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SymbolRepresentation.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m57_94 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="SymbolRepresentation.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m57_106 [cluster="System.IO.File.Delete(string)", file="SymbolRepresentation.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m57_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="96-96"];
m57_51 [cluster="Unk.Select", file="SymbolRepresentation.cs", label="Entry Unk.Select", span=""];
m57_54 [cluster="Unk.Any", file="SymbolRepresentation.cs", label="Entry Unk.Any", span=""];
m57_53 [cluster="Unk.SelectTokens", file="SymbolRepresentation.cs", label="Entry Unk.SelectTokens", span=""];
m57_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m57_58 [cluster="Unk.Parse", file="SymbolRepresentation.cs", label="Entry Unk.Parse", span=""];
m57_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="137-137"];
m57_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="131-131"];
m57_113 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="SymbolRepresentation.cs", label="return LeanData.GenerateZipFilePath(baseDirectory, _symbol.Value, _securityType, _market, time, _resolution);", span="242-242"];
m57_114 [cluster="QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", file="SymbolRepresentation.cs", label="Exit QuantConnect.ToolBox.LeanDataWriter.GetZipOutputFileName(string, System.DateTime)", span="240-240"];
m57_66 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="SymbolRepresentation.cs", label="OrderType.Market", span="150-150"];
m57_48 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="SymbolRepresentation.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m57_87 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="SymbolRepresentation.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="37-37"];
m57_90 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SymbolRepresentation.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m57_108 [cluster="System.IO.Path.GetDirectoryName(string)", file="SymbolRepresentation.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m57_86 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="SymbolRepresentation.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m57_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="SymbolRepresentation.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m57_42 [cluster="System.DateTime.DateTime()", file="SymbolRepresentation.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m57_88 [cluster="System.IO.MemoryStream.MemoryStream()", file="SymbolRepresentation.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m57_89 [cluster="Unk.Extract", file="SymbolRepresentation.cs", label="Entry Unk.Extract", span=""];
m57_91 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SymbolRepresentation.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m57_65 [cluster="Unk.ToDictionary", file="SymbolRepresentation.cs", label="Entry Unk.ToDictionary", span=""];
m57_107 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SymbolRepresentation.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m57_116 [file="SymbolRepresentation.cs", label="QuantConnect.ToolBox.LeanDataWriter", span=""];
m58_46 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", span="82-82"];
m58_47 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", file="SymbolRepresentationTests.cs", label="var result = SymbolRepresentation.ParseFutureTicker(''invalid'')", span="84-84"];
m58_48 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result, null)", span="85-85"];
m58_49 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.ParseInvalidFuturesTickers()", span="82-82"];
m58_32 [cluster="QuantConnect.Extensions.ToMD5(string)", file="SymbolRepresentationTests.cs", label="builder.Append(t.ToString(''x2''))", span="110-110"];
m58_33 [cluster="QuantConnect.Extensions.ToMD5(string)", file="SymbolRepresentationTests.cs", label="return builder.ToString();", span="112-112"];
m58_34 [cluster="QuantConnect.Extensions.ToMD5(string)", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Extensions.ToMD5(string)", span="104-104"];
m58_36 [cluster="System.Security.Cryptography.MD5.Create()", file="SymbolRepresentationTests.cs", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
m58_35 [cluster="System.Text.StringBuilder.StringBuilder()", file="SymbolRepresentationTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m58_37 [cluster="System.Text.Encoding.GetBytes(string)", file="SymbolRepresentationTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m58_38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="SymbolRepresentationTests.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
m58_31 [cluster="QuantConnect.Extensions.ToMD5(string)", file="SymbolRepresentationTests.cs", label=data, span="110-110"];
m58_41 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", file="SymbolRepresentationTests.cs", label="string expected = @''EDZ16''", span="74-74"];
m58_5 [cluster="System.DateTime.DateTime(int, int, int)", file="SymbolRepresentationTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m58_8 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", span="22-22"];
m58_9 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", file="SymbolRepresentationTests.cs", label="string expected = @''ABCDEF 060318C00047500''", span="24-24"];
m58_10 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", file="SymbolRepresentationTests.cs", label="var symbol = SymbolRepresentation.GenerateOptionTickerOSI(''ABCDEF'', OptionRight.Call, 47.50m, new DateTime(2006, 03, 18))", span="25-25"];
m58_11 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(expected, symbol)", span="26-26"];
m58_12 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasAddsPaddingSpaceForSixOrMoreCharacterSymbols()", span="22-22"];
m58_40 [cluster="System.Text.StringBuilder.Append(string)", file="SymbolRepresentationTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m58_42 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", file="SymbolRepresentationTests.cs", label="var result = SymbolRepresentation.ParseFutureTicker(expected)", span="75-75"];
m58_44 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(ticker, expected)", span="78-78"];
m58_43 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", file="SymbolRepresentationTests.cs", label="var ticker = SymbolRepresentation.GenerateFutureTicker(result.Underlying, new DateTime(2000 + result.ExpirationYearShort, result.ExpirationMonth, 1))", span="76-76"];
m58_45 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.GenerateFuturesTickersBackAndForth()", span="72-72"];
m58_7 [cluster="Unk.AreEqual", file="SymbolRepresentationTests.cs", label="Entry Unk.AreEqual", span=""];
m58_0 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", span="14-14"];
m58_1 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", file="SymbolRepresentationTests.cs", label="string expected = @''MSFT  060318C00047500''", span="16-16"];
m58_2 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", file="SymbolRepresentationTests.cs", label="var result = SymbolRepresentation.GenerateOptionTickerOSI(''MSFT'', OptionRight.Call, 47.50m, new DateTime(2006, 03, 18))", span="17-17"];
m58_3 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(expected, result)", span="18-18"];
m58_4 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.OptionSymbolAliasMatchesOSI()", span="14-14"];
m58_27 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.Underlying, ''ABC'')", span="52-52"];
m58_28 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", color=green, community=0, file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.ExpirationYearShort, 1)", prediction=139, span="53-53"];
m58_29 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.ExpirationMonth, 12)", span="54-54"];
m58_30 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", span="42-42"];
m58_39 [cluster="byte.ToString(string)", file="SymbolRepresentationTests.cs", label="Entry byte.ToString(string)", span="0-0"];
m58_6 [cluster="QuantConnect.SymbolRepresentation.GenerateOptionTickerOSI(string, QuantConnect.OptionRight, decimal, System.DateTime)", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.SymbolRepresentation.GenerateOptionTickerOSI(string, QuantConnect.OptionRight, decimal, System.DateTime)", span="150-150"];
m58_20 [cluster="QuantConnect.SymbolRepresentation.ParseOptionTickerIQFeed(string)", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.SymbolRepresentation.ParseOptionTickerIQFeed(string)", span="162-162"];
m58_13 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", span="30-30"];
m58_14 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", file="SymbolRepresentationTests.cs", label="var result = SymbolRepresentation.ParseOptionTickerIQFeed(''MSFT1615D30'')", span="33-33"];
m58_15 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.Underlying, ''MSFT'')", span="35-35"];
m58_16 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.OptionRight, OptionRight.Call)", span="36-36"];
m58_19 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", file="SymbolRepresentationTests.cs", label="Exit QuantConnect.Tests.Common.SymbolRepresentationTests.ParseOptionIQFeedTicker()", span="30-30"];
m58_21 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Entry QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", span="42-42"];
m58_22 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="var result = SymbolRepresentation.ParseFutureTicker(''EDX20'')", span="45-45"];
m58_23 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.Underlying, ''ED'')", span="46-46"];
m58_24 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.ExpirationYearShort, 20)", span="47-47"];
m58_25 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="Assert.AreEqual(result.ExpirationMonth, 11)", span="48-48"];
m58_26 [cluster="QuantConnect.Tests.Common.SymbolRepresentationTests.ParseFuturesTickers()", file="SymbolRepresentationTests.cs", label="result = SymbolRepresentation.ParseFutureTicker(''ABCZ1'')", span="51-51"];
m60_12 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="Time.cs", label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48"];
m60_15 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Time.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m60_13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Time.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="598-598"];
m60_0 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Run()", span="50-50"];
m60_1 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="!_exitTriggered", span="52-52"];
m60_2 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="AlgorithmManager.AlgorithmId != '''' && AlgorithmManager.QuitState == false", span="54-54"];
m60_3 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="var state = Engine.Api.GetAlgorithmStatus(AlgorithmManager.AlgorithmId)", span="59-59"];
m60_10 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="Thread.Sleep(500)", span="76-76"];
m60_4 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="AlgorithmManager.SetStatus(state.Status)", span="62-62"];
m60_5 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="Engine.ResultHandler.SetChartSubscription(state.ChartSubscription)", span="65-65"];
m60_6 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label=ThreadAbortException, span="67-67"];
m60_8 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label=Exception, span="71-71"];
m60_7 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="return;", span="69-69"];
m60_9 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="Log.Error(''StateCheck.Run(): Error in state check: '' + err.Message)", span="73-73"];
m60_11 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Run()", file="Time.cs", label="Exit QuantConnect.Lean.Engine.StateCheck.Ping.Run()", span="50-50"];
m60_16 [cluster="System.Threading.Thread.Sleep(int)", file="Time.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m60_17 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Time.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83"];
m60_18 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Time.cs", label="_exitTriggered = true", span="85-85"];
m60_19 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Time.cs", label="Exit QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83"];
m60_14 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", file="Time.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetChartSubscription(string)", span="196-196"];
m62_9 [cluster="Unk.IsFalse", file="WebSocketWrapper.cs", label="Entry Unk.IsFalse", span=""];
m62_29 [cluster="System.TimeSpan.FromHours(double)", file="WebSocketWrapper.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m62_0 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="24-24"];
m62_2 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="24-24"];
m62_20 [cluster="System.TimeSpan.FromDays(double)", file="WebSocketWrapper.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m62_22 [cluster="Unk.AreEqual", file="WebSocketWrapper.cs", label="Entry Unk.AreEqual", span=""];
m62_5 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="30-30"];
m62_6 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="WebSocketWrapper.cs", label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<int>)))", span="32-32"];
m62_7 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="WebSocketWrapper.cs", label="Assert.IsFalse(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<bool>)))", span="33-33"];
m62_8 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="30-30"];
m62_10 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="37-37"];
m62_11 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="WebSocketWrapper.cs", label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<>)))", span="39-39"];
m62_12 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", color=green, community=0, file="WebSocketWrapper.cs", label="Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Super<>)))", prediction=140, span="40-40"];
m62_13 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="37-37"];
m62_19 [cluster="System.DateTime.DateTime(int, int, int)", file="WebSocketWrapper.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m62_3 [cluster="System.Type.IsSubclassOfGeneric(System.Type)", file="WebSocketWrapper.cs", label="Entry System.Type.IsSubclassOfGeneric(System.Type)", span="357-357"];
m62_4 [cluster="Unk.IsTrue", file="WebSocketWrapper.cs", label="Entry Unk.IsTrue", span=""];
m62_23 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="52-52"];
m62_25 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="WebSocketWrapper.cs", label="var timespan = input.ConvertTo<TimeSpan>()", span="55-55"];
m62_26 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="WebSocketWrapper.cs", label="Assert.AreEqual(TimeSpan.FromHours(16), timespan)", span="56-56"];
m62_27 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="52-52"];
m62_28 [cluster="string.ConvertTo<T>()", file="WebSocketWrapper.cs", label="Entry string.ConvertTo<T>()", span="410-410"];
m62_21 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="WebSocketWrapper.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="279-279"];
m62_14 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="44-44"];
m62_15 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="WebSocketWrapper.cs", label="var date = new DateTime(2000, 01, 01)", span="46-46"];
m62_16 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="WebSocketWrapper.cs", label="var rounded = date.RoundDown(TimeSpan.FromDays(1))", span="47-47"];
m62_17 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="WebSocketWrapper.cs", label="Assert.AreEqual(date, rounded)", span="48-48"];
m62_18 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="44-44"];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m3_19 -> m3_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m3_22 -> m3_40  [color=darkseagreen4, key=1, label=chain, style=dashed];
m3_23 -> m3_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_23 -> m3_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=atmStraddle, style=dashed];
m3_28 -> m3_28  [color=darkseagreen4, key=1, label=kpv, style=dashed];
m3_51 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_51 -> m3_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionStrategyAlgorithm", style=dashed];
m3_52 -> m3_40  [color=darkseagreen4, key=1, label=chain, style=dashed];
m5_129 -> m5_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_129 -> m5_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_26 -> m5_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m5_26 -> m5_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_26 -> m5_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_26 -> m5_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_26 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m5_26 -> m5_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m5_34 -> m5_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_34 -> m5_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_42 -> m5_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_42 -> m5_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_42 -> m5_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_42 -> m5_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_42 -> m5_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_47 -> m5_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_50  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m5_48 -> m5_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_54 -> m5_56  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m5_60 -> m5_68  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_32 -> m5_35  [color=darkseagreen4, key=1, label=normal, style=dashed];
m5_32 -> m5_51  [color=darkseagreen4, key=1, label=normal, style=dashed];
m5_33 -> m5_38  [color=darkseagreen4, key=1, label=invert, style=dashed];
m5_33 -> m5_51  [color=darkseagreen4, key=1, label=invert, style=dashed];
m5_50 -> m5_69  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_53 -> m5_63  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m5_53 -> m5_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m5_64 -> m5_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_66 -> m5_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_67 -> m5_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_137 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_137 -> m5_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m5_138 -> m5_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_138 -> m5_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_138 -> m5_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m5_139 -> m5_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_139 -> m5_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m5_139 -> m5_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m7_1 -> m7_9  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m7_4 -> m7_9  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m7_7 -> m7_9  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m7_23 -> m7_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.TradierBrokerageModel", style=dashed];
m8_18 -> m8_33  [color=green, key=1, label="QuantConnect.Data.Slice", style=dashed];
m8_18 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m8_34 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_34 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_22 -> m8_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m8_31 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel", style=dashed];
m8_31 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel", style=dashed];
m8_31 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel", style=dashed];
m8_31 -> m8_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel", style=dashed];
m8_23 -> m8_25  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_23 -> m8_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Algorithm.Framework.Alphas.Insight>", style=dashed];
m8_0 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=targets, style=dashed];
m8_1 -> m8_9  [color=darkseagreen4, key=1, label=targets, style=dashed];
m8_1 -> m8_10  [color=darkseagreen4, key=1, label=targets, style=dashed];
m8_3 -> m8_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_8  [color=green, key=1, label=equity, style=dashed];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m8_7 -> m8_9  [color=darkseagreen4, key=1, label=percent, style=dashed];
m8_63 -> m8_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_8  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_33  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m9_11 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m9_14 -> m9_1  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory", style=dashed];
m9_14 -> m9_2  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.UserDefinedUniverseSubscriptionEnumeratorFactory", style=dashed];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m9_0 -> m9_2  [color=green, key=1, label="QuantConnect.Securities.MarketHoursDatabase", style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m9_0 -> m9_4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m9_5 -> m9_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_21 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper", style=dashed];
m9_21 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper", style=dashed];
m10_32 -> m10_34  [color=green, key=1, label=errorHandlerWasInvoked, style=dashed];
m10_41 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_41 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_41 -> m10_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_41 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_41 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_25 -> m10_27  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m10_29 -> m10_31  [color=green, key=1, label=disposable, style=dashed];
m10_9 -> m10_11  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m10_33 -> m10_35  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m10_8 -> m10_11  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m10_17 -> m10_19  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=errorHandlerWasInvoked, style=dashed];
m10_18 -> m10_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_51 -> m10_42  [color=green, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m10_51 -> m10_43  [color=green, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m10_51 -> m10_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m10_51 -> m10_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.DisposableExtensionsTests.Disposable", style=dashed];
m11_3 -> m11_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_14 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m12_281 -> m12_283  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_281 -> m12_284  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_284 -> m12_284  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_157 -> m12_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_158 -> m12_163  [color=darkseagreen4, key=1, label=value, style=dashed];
m12_161 -> m12_163  [color=darkseagreen4, key=1, label=value, style=dashed];
m12_159 -> m12_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_162 -> m12_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
m12_1 -> m12_5  [color=darkseagreen4, key=1, label=oItem, style=dashed];
m12_4 -> m12_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_53 -> m12_58  [color=darkseagreen4, key=1, label=V, style=dashed];
m12_54 -> m12_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_400 -> m12_400  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_258 -> m12_260  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_258 -> m12_262  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_261 -> m12_264  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m12_263 -> m12_264  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m12_124 -> m12_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_129 -> m12_135  [color=darkseagreen4, key=1, label=length, style=dashed];
m12_132 -> m12_145  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
m12_136 -> m12_140  [color=darkseagreen4, key=1, label=ch, style=dashed];
m12_126 -> m12_142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m12_126 -> m12_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m12_143 -> m12_145  [color=darkseagreen4, key=1, label=lo, style=dashed];
m12_127 -> m12_145  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
m12_142 -> m12_142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m12_142 -> m12_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m12_128 -> m12_130  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_128 -> m12_131  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_128 -> m12_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_128 -> m12_135  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_131 -> m12_131  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_131 -> m12_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_131 -> m12_135  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_134 -> m12_134  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_138 -> m12_145  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
m12_139 -> m12_145  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
m12_16 -> m12_18  [color=darkseagreen4, key=1, label="System.Collections.Concurrent.ConcurrentQueue<T>", style=dashed];
m12_44 -> m12_47  [color=darkseagreen4, key=1, label=hash, style=dashed];
m12_44 -> m12_48  [color=darkseagreen4, key=1, label=hash, style=dashed];
m12_234 -> m12_236  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_234 -> m12_237  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_237 -> m12_237  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_317 -> m12_320  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_317 -> m12_322  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_115 -> m12_118  [color=darkseagreen4, key=1, label=double, style=dashed];
m12_115 -> m12_120  [color=darkseagreen4, key=1, label=double, style=dashed];
m12_338 -> m12_340  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_339 -> m12_344  [color=darkseagreen4, key=1, label=name, style=dashed];
m12_343 -> m12_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_69 -> m12_73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m12_267 -> m12_269  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_267 -> m12_271  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_270 -> m12_273  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m12_272 -> m12_273  [color=darkseagreen4, key=1, label=rounded, style=dashed];
m12_406 -> m12_408  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m12_421 -> m12_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_422 -> m12_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_213 -> m12_215  [color=darkseagreen4, key=1, label=ext, style=dashed];
m12_213 -> m12_217  [color=darkseagreen4, key=1, label=ext, style=dashed];
m12_149 -> m12_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_150 -> m12_155  [color=darkseagreen4, key=1, label=value, style=dashed];
m12_153 -> m12_155  [color=darkseagreen4, key=1, label=value, style=dashed];
m12_151 -> m12_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_154 -> m12_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_60 -> m12_66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m12_60 -> m12_70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m12_60 -> m12_73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m12_61 -> m12_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_435 -> m12_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_435 -> m12_457  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_435 -> m12_458  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m12_98 -> m12_102  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_222 -> m12_225  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_223 -> m12_228  [color=darkseagreen4, key=1, label=stream, style=dashed];
m12_224 -> m12_226  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_245 -> m12_247  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_245 -> m12_248  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_248 -> m12_248  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_107 -> m12_109  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_302 -> m12_304  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_302 -> m12_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_251 -> m12_254  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m12_165 -> m12_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_165 -> m12_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_165 -> m12_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_165 -> m12_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_166 -> m12_171  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_166 -> m12_173  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_166 -> m12_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_166 -> m12_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_167 -> m12_173  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_167 -> m12_178  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_167 -> m12_179  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_168 -> m12_170  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_168 -> m12_173  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_168 -> m12_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_174 -> m12_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_174 -> m12_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_175 -> m12_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_28 -> m12_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_28 -> m12_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_326 -> m12_329  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_326 -> m12_332  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_403 -> m12_403  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m12_87 -> m12_91  [color=darkseagreen4, key=1, label=double, style=dashed];
m12_9 -> m12_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_10 -> m12_12  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m12_76 -> m12_78  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
m12_76 -> m12_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
m12_76 -> m12_81  [color=darkseagreen4, key=1, label=TElement, style=dashed];
m12_79 -> m12_81  [color=darkseagreen4, key=1, label=list, style=dashed];
m12_378 -> m12_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_378 -> m12_381  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_378 -> m12_382  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_378 -> m12_387  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_411 -> m12_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_415 -> m12_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_196  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_185 -> m12_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_186 -> m12_196  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_186 -> m12_200  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_186 -> m12_201  [color=darkseagreen4, key=1, label=csv, style=dashed];
m12_187 -> m12_196  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_187 -> m12_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_187 -> m12_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_189 -> m12_191  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_189 -> m12_196  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_189 -> m12_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_193 -> m12_195  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
m12_197 -> m12_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_197 -> m12_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m12_198 -> m12_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_311 -> m12_313  [color=darkseagreen4, key=1, label="System.Timers.Timer", style=dashed];
m12_21 -> m12_24  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m12_286 -> m12_288  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_286 -> m12_289  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_286 -> m12_290  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_286 -> m12_291  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_464 -> m12_58  [color=darkseagreen4, key=1, label=V, style=dashed];
m12_465 -> m12_66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m12_466 -> m12_66  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue>", style=dashed];
m12_467 -> m12_70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m12_467 -> m12_73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
m12_468 -> m12_73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m12_469 -> m12_73  [color=darkseagreen4, key=1, label="System.Lazy<TValue>", style=dashed];
m12_470 -> m12_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_125 -> m16_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m16_83 -> m16_112  [color=darkseagreen4, key=1, label=list, style=dashed];
m16_109 -> m16_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_0 -> m16_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_0 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_0 -> m16_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_0 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_0 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_0 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_2 -> m16_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m16_2 -> m16_12  [color=darkseagreen4, key=1, label=req, style=dashed];
m16_3 -> m16_11  [color=darkseagreen4, key=1, label=payload, style=dashed];
m16_13 -> m16_17  [color=darkseagreen4, key=1, label=response, style=dashed];
m16_20 -> m16_22  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m16_20 -> m16_23  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m16_63 -> m16_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_64 -> m16_69  [color=darkseagreen4, key=1, label=success, style=dashed];
m16_64 -> m16_70  [color=darkseagreen4, key=1, label=success, style=dashed];
m16_70 -> m16_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_162 -> m16_164  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m16_163 -> m16_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m16_169 -> m16_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m16_137 -> m16_139  [color=darkseagreen4, key=1, label=item, style=dashed];
m16_156 -> m16_158  [color=darkseagreen4, key=1, label=copy, style=dashed];
m16_172 -> m16_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_172 -> m16_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m16_173 -> m16_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m17_95 -> m17_100  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m17_97 -> m17_99  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
m17_97 -> m17_100  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
m17_98 -> m17_100  [color=darkseagreen4, key=1, label=initialMarginRequiredForOrder, style=dashed];
m17_64 -> m17_68  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_93 -> m17_93  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m17_20 -> m17_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m17_20 -> m17_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m17_21 -> m17_25  [color=darkseagreen4, key=1, label=id, style=dashed];
m17_21 -> m17_26  [color=darkseagreen4, key=1, label=id, style=dashed];
m17_45 -> m17_50  [color=darkseagreen4, key=1, label=order, style=dashed];
m17_79 -> m17_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_79 -> m17_83  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_79 -> m17_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_80 -> m17_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_80 -> m17_82  [color=darkseagreen4, key=1, label=order, style=dashed];
m17_83 -> m17_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_10 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m17_10 -> m17_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m17_111 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_111 -> m17_109  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m17_113 -> m17_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_113 -> m17_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_22 -> m20_33  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m20_5 -> m20_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_7 -> m20_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_8 -> m20_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1253 -> m20_1285  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_1253 -> m20_1274  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m20_1253 -> m20_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1277 -> m20_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1277 -> m20_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1277 -> m20_1285  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1270 -> m20_1298  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_1270 -> m20_1300  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_1276 -> m20_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m20_1276 -> m20_1296  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m20_1272 -> m20_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m20_1272 -> m20_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m20_1279 -> m20_1309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m20_1280 -> m20_1317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m20_1281 -> m20_1321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m20_1281 -> m20_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m20_1281 -> m20_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m20_1273 -> m20_1285  [color=darkseagreen4, key=1, label=useRegularTradingHours, style=dashed];
m20_1286 -> m20_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m20_1269 -> m20_1294  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m20_1269 -> m20_1295  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m20_1271 -> m20_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m20_1297 -> m20_1326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1288 -> m20_1292  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m20_613 -> m20_621  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_775 -> m20_861  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m20_775 -> m20_864  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m20_331 -> m20_788  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m20_331 -> m20_792  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m20_331 -> m20_794  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m20_331 -> m20_801  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m20_331 -> m20_804  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_787 -> m20_808  [color=green, key=1, label=contract, style=dashed];
m20_791 -> m20_808  [color=green, key=1, label=contract, style=dashed];
m20_793 -> m20_808  [color=green, key=1, label=contract, style=dashed];
m20_800 -> m20_808  [color=green, key=1, label=contract, style=dashed];
m20_355 -> m20_357  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_359 -> m20_362  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_665 -> m20_889  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_747 -> m20_849  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m20_151 -> m20_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_750 -> m20_770  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m20_768 -> m20_771  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_755 -> m20_769  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m20_1044 -> m20_1049  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1044 -> m20_1052  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1045 -> m20_1049  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_1045 -> m20_1052  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_1033 -> m20_1037  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1033 -> m20_1041  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1033 -> m20_1036  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1033 -> m20_1039  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1033 -> m20_1042  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1033 -> m20_1052  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_354 -> m20_380  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_375 -> m20_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_375 -> m20_380  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_378 -> m20_389  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m20_373 -> m20_381  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m20_373 -> m20_382  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m20_377 -> m20_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_377 -> m20_381  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_260 -> m20_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs", style=dashed];
m20_262 -> m20_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m20_262 -> m20_266  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m20_46 -> m20_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.NextValidIdEventArgs", style=dashed];
m20_138 -> m20_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_154 -> m20_154  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m20_183 -> m20_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m20_514 -> m20_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_514 -> m20_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_514 -> m20_517  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_391 -> m20_393  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_391 -> m20_384  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_391 -> m20_396  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_392 -> m20_395  [color=darkseagreen4, key=1, label=uniqueKey, style=dashed];
m20_124 -> m20_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m20_529 -> m20_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m20_529 -> m20_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m20_1320 -> m20_1323  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m20_1322 -> m20_1293  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m20_1322 -> m20_1325  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m20_512 -> m20_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_519 -> m20_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m20_1310 -> m20_1313  [color=darkseagreen4, key=1, label=bar, style=dashed];
m20_62 -> m20_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_748 -> m20_987  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_748 -> m20_988  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m20_1006 -> m20_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1008 -> m20_1010  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_1149 -> m20_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m20_1149 -> m20_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m20_1149 -> m20_1160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m20_1151 -> m20_1163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1151 -> m20_1169  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1151 -> m20_1176  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1151 -> m20_1182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1151 -> m20_1183  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1153 -> m20_1163  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1153 -> m20_1169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1153 -> m20_1190  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1153 -> m20_1158  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1153 -> m20_1189  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_669 -> m20_697  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_669 -> m20_703  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_702 -> m20_705  [color=green, key=1, label=orderEvent, style=dashed];
m20_1106 -> m20_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_1106 -> m20_1116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_1106 -> m20_1119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_1108 -> m20_1123  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1108 -> m20_1129  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1114 -> m20_1116  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_1111 -> m20_1139  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1111 -> m20_1138  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1095 -> m20_1098  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_1095 -> m20_1100  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_1096 -> m20_1101  [color=darkseagreen4, key=1, label=time, style=dashed];
m20_1099 -> m20_1101  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m20_953 -> m20_955  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_338 -> m20_729  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_728 -> m20_742  [color=green, key=1, label=ibOrder, style=dashed];
m20_730 -> m20_742  [color=green, key=1, label=ibOrder, style=dashed];
m20_731 -> m20_734  [color=green, key=1, label=limitOrder, style=dashed];
m20_732 -> m20_736  [color=green, key=1, label=stopMarketOrder, style=dashed];
m20_733 -> m20_738  [color=green, key=1, label=stopLimitOrder, style=dashed];
m20_1143 -> m20_1146  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_1143 -> m20_1147  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_113 -> m20_130  [color=green, key=1, label="lambda expression", style=dashed];
m20_113 -> m20_146  [color=green, key=1, label="lambda expression", style=dashed];
m20_112 -> m20_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_112 -> m20_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_112 -> m20_115  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m20_157 -> m20_439  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_157 -> m20_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_157 -> m20_492  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_157 -> m20_444  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_157 -> m20_452  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_447 -> m20_449  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_447 -> m20_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_447 -> m20_481  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_456 -> m20_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m20_456 -> m20_461  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m20_471 -> m20_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_471 -> m20_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_471 -> m20_481  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_470 -> m20_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m20_454 -> m20_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_454 -> m20_462  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_454 -> m20_469  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_454 -> m20_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_454 -> m20_482  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_455 -> m20_463  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m20_455 -> m20_483  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m20_455 -> m20_462  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m20_455 -> m20_482  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m20_458 -> m20_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_458 -> m20_513  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m20_458 -> m20_465  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_458 -> m20_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_473 -> m20_520  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m20_473 -> m20_521  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m20_474 -> m20_524  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m20_475 -> m20_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m20_475 -> m20_484  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m20_475 -> m20_496  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m20_467 -> m20_486  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m20_467 -> m20_485  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m20_487 -> m20_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_440 -> m20_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m20_491 -> m20_497  [color=darkseagreen4, key=1, label=rate, style=dashed];
m20_442 -> m20_459  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m20_442 -> m20_476  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m20_442 -> m20_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_442 -> m20_490  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m20_445 -> m20_497  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m20_441 -> m20_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m20_810 -> m20_904  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m20_70 -> m20_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_70 -> m20_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_73 -> m20_75  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m20_972 -> m20_975  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_972 -> m20_977  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_972 -> m20_978  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_972 -> m20_982  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_972 -> m20_983  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_973 -> m20_977  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m20_973 -> m20_982  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m20_973 -> m20_983  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m20_974 -> m20_977  [color=darkseagreen4, key=1, label=market, style=dashed];
m20_974 -> m20_982  [color=darkseagreen4, key=1, label=market, style=dashed];
m20_974 -> m20_983  [color=darkseagreen4, key=1, label=market, style=dashed];
m20_979 -> m20_982  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
m20_980 -> m20_982  [color=darkseagreen4, key=1, label=right, style=dashed];
m20_816 -> m20_824  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_364 -> m20_366  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_368 -> m20_371  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_535 -> m20_540  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_535 -> m20_542  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_535 -> m20_560  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_541 -> m20_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m20_541 -> m20_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m20_536 -> m20_548  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_552  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_565  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_542  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_544  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_546  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_551  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_556  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_536 -> m20_558  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m20_545 -> m20_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_545 -> m20_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_547 -> m20_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_547 -> m20_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_538 -> m20_552  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m20_538 -> m20_565  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m20_538 -> m20_542  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m20_543 -> m20_552  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_543 -> m20_565  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m20_1021 -> m20_1023  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m20_1023 -> m20_1025  [color=darkseagreen4, key=1, label=tick, style=dashed];
m20_1026 -> m20_1028  [color=darkseagreen4, key=1, label=underlyingTick, style=dashed];
m20_1056 -> m20_1089  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_1087 -> m20_1091  [color=darkseagreen4, key=1, label=market, style=dashed];
m20_1088 -> m20_1091  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m20_671 -> m20_680  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m20_671 -> m20_687  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m20_678 -> m20_687  [color=green, key=1, label=order, style=dashed];
m20_678 -> m20_688  [color=green, key=1, label=order, style=dashed];
m20_684 -> m20_687  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m20_684 -> m20_688  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m20_682 -> m20_688  [color=green, key=1, label=currentQuantityFilled, style=dashed];
m20_683 -> m20_688  [color=green, key=1, label=totalQuantityFilled, style=dashed];
m20_685 -> m20_688  [color=darkseagreen4, key=1, label=price, style=dashed];
m20_686 -> m20_688  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_61 -> m20_325  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_312  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_316  [color=darkseagreen4, key=1, label=bool, style=dashed];
m20_61 -> m20_318  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_320  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_61 -> m20_324  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_314 -> m20_325  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_314 -> m20_327  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_315 -> m20_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m20_319 -> m20_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m20_321 -> m20_325  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m20_624 -> m20_628  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m20_624 -> m20_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m20_624 -> m20_626  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m20_627 -> m20_629  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m20_86 -> m20_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs", style=dashed];
m20_84 -> m20_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m20_84 -> m20_95  [color=darkseagreen4, key=1, label=orders, style=dashed];
m20_85 -> m20_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_85 -> m20_91  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_53 -> m20_55  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m20_53 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_53 -> m20_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledEventsAlgorithm", style=dashed];
m20_159 -> m20_168  [color=green, key=1, label=filter, style=dashed];
m20_160 -> m20_185  [color=green, key=1, label=details, style=dashed];
m20_160 -> m20_173  [color=green, key=1, label=details, style=dashed];
m20_161 -> m20_181  [color=green, key=1, label=manualResetEvent, style=dashed];
m20_161 -> m20_169  [color=green, key=1, label=manualResetEvent, style=dashed];
m20_165 -> m20_184  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m20_165 -> m20_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m20_162 -> m20_168  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_162 -> m20_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_162 -> m20_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_164 -> m20_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs", style=dashed];
m20_637 -> m20_646  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m20_637 -> m20_654  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m20_653 -> m20_655  [color=green, key=1, label=price, style=dashed];
m20_652 -> m20_654  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m20_652 -> m20_655  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m20_644 -> m20_654  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_644 -> m20_655  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_644 -> m20_656  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_644 -> m20_657  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_644 -> m20_658  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_644 -> m20_659  [color=darkseagreen4, key=1, label=order, style=dashed];
m20_648 -> m20_655  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_648 -> m20_656  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_648 -> m20_658  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_648 -> m20_659  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_648 -> m20_660  [color=darkseagreen4, key=1, label=status, style=dashed];
m20_650 -> m20_655  [color=darkseagreen4, key=1, label=currentQuantityFilled, style=dashed];
m20_651 -> m20_655  [color=darkseagreen4, key=1, label=totalQuantityFilled, style=dashed];
m20_745 -> m20_834  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m20_227 -> m20_227  [color=green, key=1, label=attempt, style=dashed];
m20_193 -> m20_227  [color=green, key=1, label=attempt, style=dashed];
m20_193 -> m20_197  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_193 -> m20_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_193 -> m20_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_194 -> m20_227  [color=green, key=1, label=maxAttempts, style=dashed];
m20_194 -> m20_197  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m20_194 -> m20_210  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m20_194 -> m20_219  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m20_210 -> m20_227  [color=green, key=1, label=attempt, style=dashed];
m20_210 -> m20_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_210 -> m20_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_219 -> m20_227  [color=green, key=1, label=attempt, style=dashed];
m20_219 -> m20_219  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m20_195 -> m20_224  [color=green, key=1, label=existingSessionDetected, style=dashed];
m20_208 -> m20_224  [color=green, key=1, label=existingSessionDetected, style=dashed];
m20_202 -> m20_254  [color=green, key=1, label=error, style=dashed];
m20_200 -> m20_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m20_1228 -> m20_1238  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1228 -> m20_1240  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1228 -> m20_1236  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1228 -> m20_1242  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1231 -> m20_1236  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_1246 -> m20_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_1249 -> m20_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1234 -> m20_1236  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m20_1247 -> m20_1249  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m20_1247 -> m20_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m20_1248 -> m20_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m20_1245 -> m20_1249  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_1245 -> m20_1255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1245 -> m20_1258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1245 -> m20_1261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_23 -> m20_44  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_23 -> m20_48  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_595 -> m20_599  [color=darkseagreen4, key=1, label=subscribedSymbols, style=dashed];
m20_403 -> m20_424  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_416 -> m20_424  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_419 -> m20_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m20_419 -> m20_429  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m20_418 -> m20_421  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_418 -> m20_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_418 -> m20_425  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_415 -> m20_426  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m20_415 -> m20_425  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m20_420 -> m20_432  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m20_344 -> m20_346  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m20_348 -> m20_351  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_399 -> m20_401  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m20_400 -> m20_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m20_401 -> m20_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_401 -> m20_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1192 -> m20_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m20_1192 -> m20_1199  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m20_1195 -> m20_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m20_1197 -> m20_1202  [color=darkseagreen4, key=1, label=contract, style=dashed];
m20_1201 -> m20_1203  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m20_1205 -> m20_1207  [color=darkseagreen4, key=1, label=filteredResults, style=dashed];
m20_1205 -> m20_1218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1205 -> m20_1221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1205 -> m20_1224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1196 -> m20_1205  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m20_1196 -> m20_1215  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_1196 -> m20_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m20_1069 -> m20_1072  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1069 -> m20_1077  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1069 -> m20_1078  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1069 -> m20_1080  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_1062 -> m20_1067  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1062 -> m20_1069  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1062 -> m20_1065  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_1062 -> m20_1066  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m20_668 -> m20_715  [color=green, key=1, label=int, style=dashed];
m20_668 -> m20_712  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_668 -> m20_713  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_668 -> m20_717  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_1341 -> m20_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m20_1340 -> m20_1343  [color=darkseagreen4, key=1, label=lines, style=dashed];
m20_1342 -> m20_1355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1343 -> m20_1358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1330 -> m20_1333  [color=darkseagreen4, key=1, label=files, style=dashed];
m20_1332 -> m20_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m20_1337 -> m20_1338  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m20_1331 -> m20_1335  [color=darkseagreen4, key=1, label=lastLogUpdateTime, style=dashed];
m20_1368 -> m20_30  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_285  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_286  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_287  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_673  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_674  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_675  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_705  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_723  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_75  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_90  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_168  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_251  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_216  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_222  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_280  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_288  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_299  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_306  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_325  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_327  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_346  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_357  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_366  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_393  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_380  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_424  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_449  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_461  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_481  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_540  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_550  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_552  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_564  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_565  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_578  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_584  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_586  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_587  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_596  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_597  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_598  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_599  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_604  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_610  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_611  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_613  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_628  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_629  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_639  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_640  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_641  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_654  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_655  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_687  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_688  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_712  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_717  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_977  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_982  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_983  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_991  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_993  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_997  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_999  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1020  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1022  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1025  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1034  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1035  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1037  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1041  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1047  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1049  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1063  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1064  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1067  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1069  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1070  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1072  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1074  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1077  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1078  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1080  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1098  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1129  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1188  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1193  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1229  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1368 -> m20_1364  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m20_1375 -> m20_185  [color=darkseagreen4, key=1, label=details, style=dashed];
m20_1374 -> m20_181  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1369 -> m20_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m20_1373 -> m20_184  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_1373 -> m20_180  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_1376 -> m20_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m20_1402 -> m20_1356  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m20_1387 -> m20_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_1378 -> m20_389  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m20_1380 -> m20_394  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1381 -> m20_412  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m20_1386 -> m20_513  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m20_1389 -> m20_520  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1389 -> m20_524  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1391 -> m20_1215  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m20_1392 -> m20_1215  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m20_1396 -> m20_1309  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1396 -> m20_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m20_1382 -> m20_432  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m20_1390 -> m20_521  [color=darkseagreen4, key=1, label=data, style=dashed];
m20_1399 -> m20_1313  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m20_1370 -> m20_108  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1377 -> m20_283  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m20_1383 -> m20_435  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1388 -> m20_516  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1388 -> m20_525  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m20_1401 -> m20_1318  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m20_1401 -> m20_1324  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m20_1400 -> m20_1314  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m20_1393 -> m20_1225  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m20_1394 -> m20_1267  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m20_1395 -> m20_1267  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m20_1397 -> m20_1311  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m20_1384 -> m20_510  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m20_1385 -> m20_510  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m21_243 -> m21_249  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_243 -> m21_254  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_245 -> m21_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_245 -> m21_251  [color=darkseagreen4, key=1, label=filled, style=dashed];
m21_245 -> m21_255  [color=darkseagreen4, key=1, label=filled, style=dashed];
m21_247 -> m21_249  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_247 -> m21_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_466 -> m21_472  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_466 -> m21_479  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_466 -> m21_482  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_475 -> m21_479  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m21_468 -> m21_479  [color=darkseagreen4, key=1, label=tenMinutes, style=dashed];
m21_267 -> m21_271  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_267 -> m21_274  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_277 -> m21_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_266 -> m21_275  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_266 -> m21_287  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_268 -> m21_284  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_268 -> m21_286  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_269 -> m21_271  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_269 -> m21_274  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_269 -> m21_290  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_265 -> m21_285  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m21_265 -> m21_272  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m21_104 -> m21_109  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_104 -> m21_110  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_104 -> m21_111  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_104 -> m21_112  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_107 -> m21_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_106 -> m21_108  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m21_113 -> m21_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_497 -> m21_501  [color=green, key=1, label=string, style=dashed];
m21_498 -> m21_500  [color=green, key=1, label="lambda expression", style=dashed];
m21_440 -> m21_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_443 -> m21_445  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_158 -> m21_160  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m21_175 -> m21_177  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m21_204 -> m21_208  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m21_442 -> m21_446  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_206 -> m21_208  [color=darkseagreen4, key=1, label=price, style=dashed];
m21_237 -> m21_240  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m21_238 -> m21_240  [color=darkseagreen4, key=1, label=delta, style=dashed];
m21_236 -> m21_222  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m21_236 -> m21_240  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m21_262 -> m21_255  [color=darkseagreen4, key=1, label=filled, style=dashed];
m21_262 -> m21_251  [color=darkseagreen4, key=1, label=filled, style=dashed];
m21_55 -> m21_58  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_308 -> m21_303  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_308 -> m21_308  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_308 -> m21_311  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_283 -> m21_286  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_397 -> m21_403  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_401 -> m21_403  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_398 -> m21_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_398 -> m21_406  [color=darkseagreen4, key=1, label=balance, style=dashed];
m21_405 -> m21_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_399 -> m21_412  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_399 -> m21_404  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_145 -> m21_149  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_147 -> m21_149  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_146 -> m21_157  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_144 -> m21_150  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_144 -> m21_159  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_164 -> m21_168  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_166 -> m21_168  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_165 -> m21_174  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_163 -> m21_169  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_163 -> m21_176  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_36 -> m21_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_35 -> m21_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_26 -> m21_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_26 -> m21_58  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_38 -> m21_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_38 -> m21_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_24 -> m21_32  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_24 -> m21_59  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_24 -> m21_31  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_25 -> m21_57  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m21_116 -> m21_121  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_116 -> m21_122  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_119 -> m21_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_118 -> m21_120  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m21_123 -> m21_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_82 -> m21_84  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_82 -> m21_85  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_82 -> m21_86  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_82 -> m21_87  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_126 -> m21_129  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_126 -> m21_134  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_127 -> m21_129  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_132 -> m21_134  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_132 -> m21_135  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_130 -> m21_135  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m21_212 -> m21_219  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_212 -> m21_226  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_212 -> m21_229  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_217 -> m21_219  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_227 -> m21_229  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_211 -> m21_230  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_211 -> m21_239  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_211 -> m21_220  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_211 -> m21_221  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_224 -> m21_226  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_181 -> m21_188  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_181 -> m21_193  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_181 -> m21_196  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_186 -> m21_188  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_184 -> m21_203  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_194 -> m21_196  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_180 -> m21_197  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_180 -> m21_205  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_180 -> m21_189  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_180 -> m21_190  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_191 -> m21_193  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_92 -> m21_94  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_92 -> m21_96  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_92 -> m21_97  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_92 -> m21_98  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_368 -> m21_379  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_377 -> m21_379  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_369 -> m21_390  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_369 -> m21_380  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_369 -> m21_381  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_370 -> m21_389  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_373 -> m21_393  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m21_372 -> m21_394  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m21_372 -> m21_382  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m21_372 -> m21_383  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m21_375 -> m21_380  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_375 -> m21_382  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_375 -> m21_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_371 -> m21_385  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m21_371 -> m21_393  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m21_374 -> m21_385  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m21_374 -> m21_376  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m21_384 -> m21_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_294 -> m21_300  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_295 -> m21_300  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_299 -> m21_307  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_299 -> m21_308  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_299 -> m21_303  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_298 -> m21_309  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m21_298 -> m21_301  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m21_426 -> m21_428  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_426 -> m21_429  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_426 -> m21_440  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_426 -> m21_443  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_429 -> m21_439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_418 -> m21_423  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_425 -> m21_427  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m21_425 -> m21_428  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m21_421 -> m21_429  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_421 -> m21_440  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_421 -> m21_423  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_419 -> m21_437  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_419 -> m21_424  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_420 -> m21_436  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_351 -> m21_361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_350 -> m21_352  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m21_350 -> m21_355  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m21_352 -> m21_354  [color=darkseagreen4, key=1, label=cash, style=dashed];
m21_355 -> m21_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_313 -> m21_325  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_323 -> m21_325  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_315 -> m21_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_315 -> m21_318  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m21_315 -> m21_331  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m21_321 -> m21_342  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_328 -> m21_332  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m21_328 -> m21_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_328 -> m21_331  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m21_328 -> m21_333  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m21_320 -> m21_343  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m21_320 -> m21_326  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m21_322 -> m21_331  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m21_322 -> m21_333  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m21_319 -> m21_330  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m21_450 -> m21_455  [color=darkseagreen4, key=1, label=ib, style=dashed];
m21_451 -> m21_463  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_451 -> m21_456  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_452 -> m21_462  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m21_453 -> m21_455  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_154 -> m21_488  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m21_154 -> m21_489  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_154 -> m21_498  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_488 -> m21_490  [color=green, key=1, label=openOrder, style=dashed];
m21_489 -> m21_497  [color=green, key=1, label="lambda expression", style=dashed];
m21_526 -> m21_498  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m21_527 -> m21_501  [color=green, key=1, label=string, style=dashed];
m21_503 -> m21_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_30  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_128  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_133  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_148  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_192  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_218  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_225  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_228  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_248  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_296  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_324  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_378  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_402  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_422  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_503 -> m21_454  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m21_522 -> m21_440  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_523 -> m21_440  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_523 -> m21_443  [color=darkseagreen4, key=1, label=executions, style=dashed];
m21_506 -> m21_159  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_507 -> m21_176  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_508 -> m21_205  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_509 -> m21_239  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m21_524 -> m21_446  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_518 -> m21_393  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m21_521 -> m21_437  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_511 -> m21_287  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_512 -> m21_290  [color=darkseagreen4, key=1, label=order, style=dashed];
m21_525 -> m21_463  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_505 -> m21_59  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m21_504 -> m21_57  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m21_513 -> m21_308  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_513 -> m21_311  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m21_517 -> m21_390  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m21_510 -> m21_285  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m21_514 -> m21_309  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m21_516 -> m21_343  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m21_519 -> m21_394  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m21_520 -> m21_412  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m24_37 -> m24_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m24_37 -> m24_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_37 -> m24_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m24_37 -> m24_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_37 -> m24_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_38 -> m24_42  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m24_38 -> m24_44  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m24_38 -> m24_45  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m24_39 -> m24_42  [color=darkseagreen4, key=1, label=added, style=dashed];
m24_45 -> m24_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_46 -> m24_48  [color=darkseagreen4, key=1, label=removed, style=dashed];
m24_46 -> m24_49  [color=darkseagreen4, key=1, label=removed, style=dashed];
m24_46 -> m24_50  [color=darkseagreen4, key=1, label=removed, style=dashed];
m24_46 -> m24_51  [color=darkseagreen4, key=1, label=removed, style=dashed];
m24_48 -> m24_51  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_97 -> m24_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m24_62 -> m24_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_64 -> m24_64  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_80 -> m24_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m24_30 -> m24_67  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_30 -> m24_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m24_30 -> m24_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m24_66 -> m24_69  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m24_66 -> m24_72  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m24_55 -> m24_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_90 -> m24_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m24_90 -> m24_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m24_9 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m24_13 -> m24_17  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m24_13 -> m24_22  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m24_11 -> m24_25  [color=darkseagreen4, key=1, label=target, style=dashed];
m24_12 -> m24_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m24_12 -> m24_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m24_15 -> m24_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m24_20 -> m24_22  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m24_59 -> m24_80  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_76 -> m24_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_102 -> m24_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_102 -> m24_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m24_103 -> m24_80  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_104 -> m24_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m24_104 -> m24_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m24_104 -> m24_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m25_98 -> m25_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m25_130 -> m25_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_130 -> m25_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_28 -> m25_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m25_28 -> m25_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_28 -> m25_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_28 -> m25_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_28 -> m25_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m25_28 -> m25_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m25_36 -> m25_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_36 -> m25_40  [color=darkseagreen4, key=1, label=config, style=dashed];
m25_44 -> m25_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_44 -> m25_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_44 -> m25_48  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_44 -> m25_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_44 -> m25_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_44 -> m25_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_49 -> m25_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_49 -> m25_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_49 -> m25_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_49 -> m25_52  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m25_50 -> m25_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_56 -> m25_58  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m25_56 -> m25_59  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m25_62 -> m25_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m25_34 -> m25_37  [color=darkseagreen4, key=1, label=normal, style=dashed];
m25_34 -> m25_53  [color=darkseagreen4, key=1, label=normal, style=dashed];
m25_35 -> m25_40  [color=darkseagreen4, key=1, label=invert, style=dashed];
m25_35 -> m25_53  [color=darkseagreen4, key=1, label=invert, style=dashed];
m25_52 -> m25_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m25_52 -> m25_71  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m25_55 -> m25_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m25_55 -> m25_67  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m25_66 -> m25_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m25_68 -> m25_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m25_69 -> m25_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m25_138 -> m25_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_115  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_138 -> m25_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m25_139 -> m25_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_139 -> m25_115  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_139 -> m25_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m25_140 -> m25_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_140 -> m25_115  [color=darkseagreen4, key=1, label=markets, style=dashed];
m25_140 -> m25_118  [color=darkseagreen4, key=1, label=markets, style=dashed];
m27_30 -> m27_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m27_2 -> m27_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_8 -> m27_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m27_8 -> m27_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m27_17 -> m27_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_35 -> m27_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m27_35 -> m27_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m28_76 -> m28_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_61 -> m28_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_62 -> m28_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m28_62 -> m28_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m28_38 -> m28_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m28_43 -> m28_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m28_45 -> m28_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m28_0 -> m28_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m28_13 -> m28_13  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m28_5 -> m28_7  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m28_5 -> m28_9  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m28_5 -> m28_11  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m28_7 -> m28_7  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_8 -> m28_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_10 -> m28_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_23 -> m28_72  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m28_23 -> m28_73  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m28_89 -> m28_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m28_89 -> m28_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m29_8 -> m29_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m29_13 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m29_13 -> m29_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m30_8 -> m30_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m30_13 -> m30_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m30_13 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m33_35 -> m33_38  [color=darkseagreen4, key=1, label=hash, style=dashed];
m33_35 -> m33_39  [color=darkseagreen4, key=1, label=hash, style=dashed];
m33_7 -> m33_10  [color=darkseagreen4, key=1, label=RestRequest, style=dashed];
m33_8 -> m33_10  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m33_18 -> m33_21  [color=darkseagreen4, key=1, label="out T", style=dashed];
m33_49 -> m33_30  [color=darkseagreen4, key=1, label="QuantConnect.Api.ApiConnection", style=dashed];
m34_62 -> m34_161  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_62 -> m34_163  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_62 -> m34_165  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_161 -> m34_161  [color=darkseagreen4, key=1, label=queued, style=dashed];
m34_99 -> m34_101  [color=darkseagreen4, key=1, label=balance, style=dashed];
m34_99 -> m34_104  [color=darkseagreen4, key=1, label=balance, style=dashed];
m34_99 -> m34_105  [color=darkseagreen4, key=1, label=balance, style=dashed];
m34_101 -> m34_103  [color=darkseagreen4, key=1, label=cash, style=dashed];
m34_102 -> m34_104  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_27 -> m34_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m34_187 -> m34_189  [color=darkseagreen4, key=1, label=delta, style=dashed];
m34_95 -> m34_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m34_92 -> m34_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m34_31 -> m34_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_37  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_39  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_43  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_31 -> m34_51  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_61 -> m34_149  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_61 -> m34_151  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_61 -> m34_153  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_149 -> m34_149  [color=darkseagreen4, key=1, label=queued, style=dashed];
m34_80 -> m34_95  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m34_79 -> m34_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_81 -> m34_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_81 -> m34_83  [color=darkseagreen4, key=1, label=item, style=dashed];
m34_60 -> m34_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_60 -> m34_131  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_60 -> m34_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_60 -> m34_135  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_60 -> m34_137  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m34_23 -> m34_195  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m34_192 -> m34_194  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m34_192 -> m34_195  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m34_193 -> m34_195  [color=darkseagreen4, key=1, label=deltaAvgPrice, style=dashed];
m34_19 -> m34_170  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_19 -> m34_173  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_19 -> m34_175  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_19 -> m34_176  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_19 -> m34_177  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_19 -> m34_178  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_6 -> m34_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m34_7 -> m34_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m34_8 -> m34_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m34_198 -> m34_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_135  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_149  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_151  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_163  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_174  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_175  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_178  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_198 -> m34_180  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m34_199 -> m34_95  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m35_13 -> m35_13  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m35_76 -> m35_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_28 -> m35_33  [color=green, key=1, label=message, style=dashed];
m35_30 -> m35_33  [color=darkseagreen4, key=1, label=message, style=dashed];
m35_0 -> m35_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_0 -> m35_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_0 -> m35_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m35_10 -> m35_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_43 -> m35_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m35_38 -> m35_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m35_44 -> m35_41  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_44 -> m35_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_44 -> m35_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_44 -> m35_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_44 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_44 -> m35_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m35_45 -> m35_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m35_14 -> m35_14  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m35_14 -> m35_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m35_23 -> m35_72  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m35_23 -> m35_73  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m35_89 -> m35_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m35_89 -> m35_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m37_22 -> m37_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_23 -> m37_26  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m37_7 -> m37_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m37_8 -> m37_10  [color=darkseagreen4, key=1, label=error, style=dashed];
m37_8 -> m37_11  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m37_76 -> m37_123  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m37_76 -> m37_127  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m37_99 -> m37_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_99 -> m37_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_100 -> m37_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_103 -> m37_109  [color=darkseagreen4, key=1, label=jobDays, style=dashed];
m37_104 -> m37_107  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m37_104 -> m37_109  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m37_104 -> m37_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m37_106 -> m37_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m37_108 -> m37_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m37_30 -> m37_33  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m37_30 -> m37_35  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_84  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_30 -> m37_58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_31 -> m37_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_31 -> m37_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_44 -> m37_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_44 -> m37_64  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m37_132 -> m37_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_132 -> m37_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_132 -> m37_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_132 -> m37_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_132 -> m37_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_132 -> m37_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m37_133 -> m37_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_133 -> m37_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_133 -> m37_84  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_133 -> m37_85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_133 -> m37_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m37_134 -> m37_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m37_135 -> m37_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m37_136 -> m37_123  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m37_136 -> m37_127  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m39_9 -> m39_11  [color=darkseagreen4, key=1, label="QuantConnect.Util.IParallelRunnerWorkItem", style=dashed];
m39_9 -> m39_12  [color=darkseagreen4, key=1, label="QuantConnect.Util.IParallelRunnerWorkItem", style=dashed];
m39_53 -> m39_56  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_53 -> m39_57  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_53 -> m39_59  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_54 -> m39_56  [color=darkseagreen4, key=1, label=workItem, style=dashed];
m39_54 -> m39_57  [color=darkseagreen4, key=1, label=workItem, style=dashed];
m39_59 -> m39_59  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_15 -> m39_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_15 -> m39_51  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m39_20 -> m39_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_25 -> m39_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_26 -> m39_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_26 -> m39_42  [color=darkseagreen4, key=1, label=waitHandles, style=dashed];
m39_27 -> m39_41  [color=green, key=1, label="lambda expression", style=dashed];
m39_86 -> m39_11  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_12  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_17  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_18  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_21  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_27  [color=green, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_43  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_51  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_29  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_54  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_56  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_57  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_68  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_69  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_70  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_71  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_72  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_74  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_75  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_76  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_78  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_79  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_86 -> m39_80  [color=darkseagreen4, key=1, label="QuantConnect.Util.ParallelRunnerController", style=dashed];
m39_87 -> m39_42  [color=darkseagreen4, key=1, label=waitHandles, style=dashed];
m39_88 -> m39_51  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m40_14 -> m40_14  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
m40_0 -> m40_22  [color=green, key=1, label=decimal, style=dashed];
m40_0 -> m40_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_0 -> m40_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
m40_6 -> m40_12  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
m40_12 -> m40_12  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
m40_7 -> m40_14  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
m40_3 -> m40_11  [color=darkseagreen4, key=1, label=runningCapital, style=dashed];
m40_3 -> m40_13  [color=darkseagreen4, key=1, label=runningCapital, style=dashed];
m40_5 -> m40_13  [color=darkseagreen4, key=1, label=totalLoss, style=dashed];
m40_11 -> m40_11  [color=darkseagreen4, key=1, label=totalProfit, style=dashed];
m40_13 -> m40_13  [color=darkseagreen4, key=1, label=totalLoss, style=dashed];
m40_4 -> m40_11  [color=darkseagreen4, key=1, label=totalProfit, style=dashed];
m40_9 -> m40_11  [color=darkseagreen4, key=1, label=tradeProfitLoss, style=dashed];
m40_9 -> m40_13  [color=darkseagreen4, key=1, label=tradeProfitLoss, style=dashed];
m40_9 -> m40_9  [color=darkseagreen4, key=1, label=pair, style=dashed];
m40_45 -> m40_80  [color=darkseagreen4, key=1, label=int, style=dashed];
m40_44 -> m40_69  [color=darkseagreen4, key=1, label=int, style=dashed];
m40_59 -> m40_64  [color=darkseagreen4, key=1, label=prices, style=dashed];
m40_64 -> m40_68  [color=darkseagreen4, key=1, label=price, style=dashed];
m40_62 -> m40_69  [color=darkseagreen4, key=1, label=drawdowns, style=dashed];
m40_62 -> m40_68  [color=darkseagreen4, key=1, label=drawdowns, style=dashed];
m40_63 -> m40_65  [color=darkseagreen4, key=1, label=high, style=dashed];
m40_63 -> m40_67  [color=darkseagreen4, key=1, label=high, style=dashed];
m40_63 -> m40_68  [color=darkseagreen4, key=1, label=high, style=dashed];
m40_66 -> m40_68  [color=darkseagreen4, key=1, label=high, style=dashed];
m42_200 -> m42_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m42_200 -> m42_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m42_200 -> m42_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m42_191 -> m42_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_227 -> m42_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_227 -> m42_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_228 -> m42_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m42_296 -> m42_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_296 -> m42_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_320 -> m42_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_452 -> m42_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_452 -> m42_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_452 -> m42_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_452 -> m42_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_454 -> m42_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_454 -> m42_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_454 -> m42_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_459 -> m42_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_461 -> m42_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m42_466 -> m42_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_90 -> m42_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_92 -> m42_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m42_273 -> m42_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_88 -> m42_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m42_252 -> m42_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m42_482 -> m42_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_239 -> m42_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_246 -> m42_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_247 -> m42_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_218 -> m42_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_508 -> m42_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_103 -> m42_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_67 -> m42_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_68 -> m42_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m42_71 -> m42_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m42_70 -> m42_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m42_434 -> m42_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m42_434 -> m42_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m42_435 -> m42_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m42_336 -> m42_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_336 -> m42_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m42_95 -> m42_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m42_381 -> m42_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_381 -> m42_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_381 -> m42_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_543 -> m42_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_264 -> m42_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m42_126 -> m42_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m42_129 -> m42_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_129 -> m42_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_129 -> m42_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_129 -> m42_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_391 -> m42_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m42_391 -> m42_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m42_388 -> m42_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_388 -> m42_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_387 -> m42_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_387 -> m42_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_429 -> m42_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m42_417 -> m42_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m42_417 -> m42_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m42_414 -> m42_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_414 -> m42_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_413 -> m42_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_413 -> m42_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m42_356 -> m42_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_356 -> m42_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_356 -> m42_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_356 -> m42_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_356 -> m42_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_356 -> m42_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m42_356 -> m42_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_367 -> m42_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m42_116 -> m42_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m42_117 -> m42_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m42_286 -> m42_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_286 -> m42_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m42_519 -> m42_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m42_568 -> m42_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_568 -> m42_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m42_569 -> m42_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m42_570 -> m42_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_571 -> m42_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_59 -> m43_61  [color=darkseagreen4, key=1, label=res, style=dashed];
m43_55 -> m43_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_56 -> m43_61  [color=darkseagreen4, key=1, label=config, style=dashed];
m43_76 -> m43_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_77 -> m43_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m43_230 -> m43_236  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_227 -> m43_236  [color=darkseagreen4, key=1, label=requests, style=dashed];
m43_227 -> m43_237  [color=darkseagreen4, key=1, label=requests, style=dashed];
m43_249 -> m43_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m43_249 -> m43_254  [color=darkseagreen4, key=1, label=start, style=dashed];
m43_251 -> m43_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_247 -> m43_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_247 -> m43_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_250 -> m43_254  [color=darkseagreen4, key=1, label=end, style=dashed];
m43_155 -> m43_159  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_99 -> m43_107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_99 -> m43_109  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_102 -> m43_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_103 -> m43_107  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m43_106 -> m43_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_189 -> m43_204  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m43_265 -> m43_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_265 -> m43_265  [color=darkseagreen4, key=1, label=sub, style=dashed];
m43_45 -> m43_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_46 -> m43_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_47 -> m43_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_89 -> m43_95  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_90 -> m43_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_91 -> m43_95  [color=darkseagreen4, key=1, label=start, style=dashed];
m43_133 -> m43_137  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_140 -> m43_144  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_27 -> m43_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m43_27 -> m43_234  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m43_220 -> m43_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_220 -> m43_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_37 -> m43_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m43_167 -> m43_216  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m43_206 -> m43_213  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m43_207 -> m43_216  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m43_208 -> m43_211  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_168 -> m43_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m43_182 -> m43_184  [color=darkseagreen4, key=1, label=history, style=dashed];
m43_25 -> m43_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_25 -> m43_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_241 -> m43_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_241 -> m43_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_88 -> m43_124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_88 -> m43_126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_120 -> m43_124  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m43_123 -> m43_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_44 -> m43_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_72 -> m43_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_73 -> m43_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_272 -> m43_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_136  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_163  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_215  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_272 -> m43_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_273 -> m43_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_275 -> m43_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_276 -> m43_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_277 -> m43_80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_281 -> m43_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m43_282 -> m43_234  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m43_283 -> m43_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_283 -> m43_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m43_285 -> m43_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_286 -> m43_254  [color=darkseagreen4, key=1, label=start, style=dashed];
m43_287 -> m43_254  [color=darkseagreen4, key=1, label=end, style=dashed];
m44_56 -> m44_60  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_56 -> m44_59  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_52 -> m44_63  [color=green, key=1, label=data, style=dashed];
m44_52 -> m44_60  [color=darkseagreen4, key=1, label=data, style=dashed];
m44_51 -> m44_53  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m44_54 -> m44_59  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m44_54 -> m44_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m44_54 -> m44_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m44_58 -> m44_60  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m44_21 -> m44_23  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m44_34 -> m44_42  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_34 -> m44_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_34 -> m44_44  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_34 -> m44_45  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_39 -> m44_41  [color=darkseagreen4, key=1, label=ms, style=dashed];
m44_46 -> m44_51  [color=darkseagreen4, key=1, label=str, style=dashed];
m44_48 -> m44_51  [color=darkseagreen4, key=1, label=str, style=dashed];
m44_36 -> m44_38  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_33 -> m44_42  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m44_33 -> m44_41  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m44_41 -> m44_43  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m44_31 -> m44_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, byte[]>", style=dashed];
m44_31 -> m44_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, byte[]>", style=dashed];
m44_35 -> m44_37  [color=darkseagreen4, key=1, label=filename, style=dashed];
m44_37 -> m44_39  [color=darkseagreen4, key=1, label=file, style=dashed];
m44_71 -> m44_86  [color=darkseagreen4, key=1, label=bool, style=dashed];
m44_71 -> m44_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_73 -> m44_82  [color=green, key=1, label=buffer, style=dashed];
m44_75 -> m44_90  [color=green, key=1, label=zipPath, style=dashed];
m44_81 -> m44_83  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m44_76 -> m44_82  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_76 -> m44_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_76 -> m44_84  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_76 -> m44_85  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_3 -> m44_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_3 -> m44_13  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_3 -> m44_14  [color=darkseagreen4, key=1, label=stream, style=dashed];
m44_2 -> m44_11  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m44_10 -> m44_12  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m44_97 -> m44_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_97 -> m44_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_97 -> m44_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_98 -> m44_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_99 -> m44_103  [color=darkseagreen4, key=1, label=ms, style=dashed];
m44_105 -> m44_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_105 -> m44_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_170 -> m44_174  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_171 -> m44_177  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m44_172 -> m44_176  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m44_173 -> m44_175  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m44_160 -> m44_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_161 -> m44_165  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m44_162 -> m44_164  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m44_26 -> m44_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_26 -> m44_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m44_27 -> m44_29  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_27 -> m44_30  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_27 -> m44_31  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_27 -> m44_33  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_27 -> m44_35  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_27 -> m44_36  [color=darkseagreen4, key=1, label=insight, style=dashed];
m44_123 -> m44_126  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m44_124 -> m44_126  [color=darkseagreen4, key=1, label=entry, style=dashed];
m44_134 -> m44_146  [color=darkseagreen4, key=1, label=files, style=dashed];
m44_134 -> m44_149  [color=darkseagreen4, key=1, label=files, style=dashed];
m44_144 -> m44_148  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m44_143 -> m44_148  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m45_56 -> m45_59  [color=darkseagreen4, key=1, label=entry, style=dashed];
m45_56 -> m45_60  [color=darkseagreen4, key=1, label=entry, style=dashed];
m45_52 -> m45_60  [color=darkseagreen4, key=1, label=data, style=dashed];
m45_52 -> m45_63  [color=darkseagreen4, key=1, label=data, style=dashed];
m45_54 -> m45_59  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m45_58 -> m45_60  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m45_36 -> m45_38  [color=darkseagreen4, key=1, label=entry, style=dashed];
m45_31 -> m45_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, byte[]>", style=dashed];
m45_34 -> m45_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_34 -> m45_42  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_34 -> m45_44  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_34 -> m45_45  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_33 -> m45_42  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m45_41 -> m45_43  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m45_71 -> m45_86  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_71 -> m45_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_73 -> m45_82  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m45_81 -> m45_83  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m45_75 -> m45_90  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m45_76 -> m45_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_76 -> m45_82  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_76 -> m45_84  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_76 -> m45_85  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_5 -> m45_7  [color=darkseagreen4, key=1, label=entry, style=dashed];
m45_0 -> m45_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m45_3 -> m45_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_3 -> m45_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_3 -> m45_13  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_3 -> m45_14  [color=darkseagreen4, key=1, label=stream, style=dashed];
m45_2 -> m45_11  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m45_10 -> m45_12  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m45_97 -> m45_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_97 -> m45_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_97 -> m45_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_98 -> m45_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m45_99 -> m45_103  [color=darkseagreen4, key=1, label=ms, style=dashed];
m45_105 -> m45_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m45_105 -> m45_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m45_170 -> m45_174  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_171 -> m45_177  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m45_172 -> m45_176  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m45_173 -> m45_175  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m45_160 -> m45_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_161 -> m45_165  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m45_162 -> m45_164  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m45_124 -> m45_126  [color=darkseagreen4, key=1, label=entry, style=dashed];
m45_123 -> m45_126  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m45_134 -> m45_146  [color=darkseagreen4, key=1, label=files, style=dashed];
m45_134 -> m45_149  [color=darkseagreen4, key=1, label=files, style=dashed];
m45_144 -> m45_148  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m45_143 -> m45_148  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m48_0 -> m48_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m48_0 -> m48_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m49_0 -> m49_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_2 -> m49_5  [color=darkseagreen4, key=1, label=destination, style=dashed];
m49_3 -> m49_5  [color=darkseagreen4, key=1, label=client, style=dashed];
m49_23 -> m49_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader", style=dashed];
m49_23 -> m49_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader", style=dashed];
m52_8 -> m52_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m52_8 -> m52_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m52_30 -> m52_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m52_2 -> m52_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m52_17 -> m52_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m52_35 -> m52_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m52_35 -> m52_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m53_246 -> m53_262  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_246 -> m53_252  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_250 -> m53_259  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ContractDetailsEventArgs", style=dashed];
m53_248 -> m53_259  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_248 -> m53_252  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_249 -> m53_263  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_249 -> m53_253  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_413 -> m53_428  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Order", style=dashed];
m53_416 -> m53_426  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m53_425 -> m53_428  [color=darkseagreen4, key=1, label=order, style=dashed];
m53_425 -> m53_429  [color=darkseagreen4, key=1, label=order, style=dashed];
m53_343 -> m53_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_412 -> m53_471  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m53_122 -> m53_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_363 -> m53_371  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m53_363 -> m53_374  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m53_363 -> m53_378  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m53_363 -> m53_380  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m53_363 -> m53_383  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatusEventArgs", style=dashed];
m53_366 -> m53_368  [color=darkseagreen4, key=1, label=status, style=dashed];
m53_366 -> m53_370  [color=darkseagreen4, key=1, label=status, style=dashed];
m53_377 -> m53_380  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m53_377 -> m53_381  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m53_473 -> m53_483  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderType", style=dashed];
m53_584 -> m53_586  [color=darkseagreen4, key=1, label=T, style=dashed];
m53_350 -> m53_352  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m53_350 -> m53_354  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m53_350 -> m53_355  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdateAccountValueEventArgs", style=dashed];
m53_353 -> m53_355  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m53_400 -> m53_407  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m53_401 -> m53_403  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m53_402 -> m53_405  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m53_20 -> m53_24  [color=darkseagreen4, key=1, label="?", style=dashed];
m53_99 -> m53_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m53_110 -> m53_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_125 -> m53_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m53_154 -> m53_156  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m53_261 -> m53_255  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_261 -> m53_264  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_301 -> m53_288  [color=darkseagreen4, key=1, label=rate, style=dashed];
m53_301 -> m53_289  [color=darkseagreen4, key=1, label=rate, style=dashed];
m53_301 -> m53_303  [color=darkseagreen4, key=1, label=rate, style=dashed];
m53_39 -> m53_41  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_485 -> m53_508  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OrderStatus", style=dashed];
m53_572 -> m53_574  [color=darkseagreen4, key=1, label=result, style=dashed];
m53_431 -> m53_556  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_431 -> m53_557  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_88 -> m53_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_88 -> m53_91  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m53_89 -> m53_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_89 -> m53_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_117 -> m53_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m53_268 -> m53_297  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m53_269 -> m53_297  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m53_270 -> m53_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_273 -> m53_287  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m53_274 -> m53_285  [color=darkseagreen4, key=1, label=contract, style=dashed];
m53_279 -> m53_300  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m53_279 -> m53_285  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m53_283 -> m53_300  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.TickPriceEventArgs", style=dashed];
m53_283 -> m53_288  [color=darkseagreen4, key=1, label=rate, style=dashed];
m53_283 -> m53_289  [color=darkseagreen4, key=1, label=rate, style=dashed];
m53_281 -> m53_302  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_281 -> m53_286  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_282 -> m53_285  [color=darkseagreen4, key=1, label=priceTick, style=dashed];
m53_449 -> m53_523  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m53_47 -> m53_49  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_47 -> m53_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_37 -> m53_219  [color=darkseagreen4, key=1, label=bool, style=dashed];
m53_37 -> m53_221  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_37 -> m53_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_217 -> m53_227  [color=darkseagreen4, key=1, label=contract, style=dashed];
m53_16 -> m53_24  [color=darkseagreen4, key=1, label="?", style=dashed];
m53_390 -> m53_394  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m53_392 -> m53_394  [color=darkseagreen4, key=1, label=holding, style=dashed];
m53_61 -> m53_80  [color=darkseagreen4, key=1, label=orders, style=dashed];
m53_61 -> m53_72  [color=darkseagreen4, key=1, label=orders, style=dashed];
m53_62 -> m53_85  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_62 -> m53_68  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_63 -> m53_80  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.OpenOrderEventArgs", style=dashed];
m53_28 -> m53_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m53_129 -> m53_139  [color=darkseagreen4, key=1, label=filter, style=dashed];
m53_130 -> m53_156  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_130 -> m53_144  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_136 -> m53_155  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m53_136 -> m53_156  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecDetailsEventArgs", style=dashed];
m53_133 -> m53_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_133 -> m53_140  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_134 -> m53_151  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_134 -> m53_155  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_134 -> m53_139  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_135 -> m53_151  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ExecutionDataEndEventArgs", style=dashed];
m53_397 -> m53_549  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.UpdatePortfolioEventArgs", style=dashed];
m53_410 -> m53_460  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m53_164 -> m53_166  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m53_164 -> m53_169  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m53_169 -> m53_169  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m53_175 -> m53_192  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.AccountDownloadEndEventArgs", style=dashed];
m53_177 -> m53_196  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m53_177 -> m53_181  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m53_305 -> m53_308  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_310  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_312  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_315  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_317  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_318  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_305 -> m53_322  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.ErrorEventArgs", style=dashed];
m53_307 -> m53_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m53_309 -> m53_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m53_311 -> m53_322  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m53_314 -> m53_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_236 -> m53_238  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_240 -> m53_243  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_230 -> m53_442  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m53_596 -> m53_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_50  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_122  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_163  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_173  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_193  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_215  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_262  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_312  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_314  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_336  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_321  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_322  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_339  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_340  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_341  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_343  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_348  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_354  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_355  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_380  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_381  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_391  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_394  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_559  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_561  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_565  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_596 -> m53_567  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m53_597 -> m53_80  [color=darkseagreen4, key=1, label=orders, style=dashed];
m53_598 -> m53_85  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_601 -> m53_151  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_601 -> m53_155  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_602 -> m53_152  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_603 -> m53_156  [color=darkseagreen4, key=1, label=details, style=dashed];
m53_604 -> m53_196  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m53_605 -> m53_259  [color=darkseagreen4, key=1, label=requestID, style=dashed];
m53_606 -> m53_262  [color=darkseagreen4, key=1, label="Krs.Ats.IBNet.Contract", style=dashed];
m53_607 -> m53_263  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_608 -> m53_297  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m53_609 -> m53_297  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m53_610 -> m53_300  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m53_611 -> m53_302  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m53_612 -> m53_585  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m53_612 -> m53_586  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m53_612 -> m53_587  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m53_612 -> m53_588  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FixedHashQueue<T>", style=dashed];
m54_8 -> m54_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m54_9 -> m54_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m54_11 -> m54_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m54_16 -> m54_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m54_16 -> m54_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m54_21 -> m54_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m54_21 -> m54_24  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m54_21 -> m54_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m54_21 -> m54_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m54_26 -> m54_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_26 -> m54_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_81 -> m54_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m54_81 -> m54_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m54_84 -> m54_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_51 -> m54_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m54_51 -> m54_54  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m54_51 -> m54_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m54_51 -> m54_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m54_52 -> m54_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_52 -> m54_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m54_55 -> m54_57  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m54_91 -> m54_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_91 -> m54_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m54_92 -> m54_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m54_93 -> m54_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m56_10 -> m56_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m56_10 -> m56_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m56_10 -> m56_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m56_13 -> m56_15  [color=darkseagreen4, key=1, label=macd, style=dashed];
m56_13 -> m56_16  [color=darkseagreen4, key=1, label=macd, style=dashed];
m56_13 -> m56_17  [color=darkseagreen4, key=1, label=macd, style=dashed];
m56_29 -> m56_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_15  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_22  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_23  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_24  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_25  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m56_29 -> m56_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageConvergenceDivergence", style=dashed];
m57_74 -> m57_84  [color=darkseagreen4, key=1, label=rows, style=dashed];
m57_76 -> m57_78  [color=darkseagreen4, key=1, label=stream, style=dashed];
m57_79 -> m57_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m57_55 -> m57_59  [color=darkseagreen4, key=1, label=rows, style=dashed];
m57_14 -> m57_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m57_22 -> m57_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m57_22 -> m57_47  [color=darkseagreen4, key=1, label=order, style=dashed];
m57_20 -> m57_38  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m57_20 -> m57_42  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m57_45 -> m57_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_45 -> m57_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_45 -> m57_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_45 -> m57_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_45 -> m57_101  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m57_45 -> m57_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_45 -> m57_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_95 -> m57_101  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m57_95 -> m57_102  [color=darkseagreen4, key=1, label=tempFilePath, style=dashed];
m57_96 -> m57_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_26 -> m57_37  [color=darkseagreen4, key=1, label=sb, style=dashed];
m57_28 -> m57_35  [color=darkseagreen4, key=1, label=data, style=dashed];
m57_27 -> m57_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m57_39 -> m57_41  [color=darkseagreen4, key=1, label=sid, style=dashed];
m57_31 -> m57_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m57_35 -> m57_38  [color=darkseagreen4, key=1, label=lastTime, style=dashed];
m57_30 -> m57_37  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m57_60 -> m57_60  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m57_52 -> m57_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m57_52 -> m57_56  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m57_52 -> m57_58  [color=darkseagreen4, key=1, label=newRows, style=dashed];
m57_49 -> m57_60  [color=darkseagreen4, key=1, label=sb, style=dashed];
m57_49 -> m57_61  [color=darkseagreen4, key=1, label=sb, style=dashed];
m57_49 -> m57_62  [color=darkseagreen4, key=1, label=sb, style=dashed];
m57_51 -> m57_54  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m57_51 -> m57_62  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m57_116 -> m57_7  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_9  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_10  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_15  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_38  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_51  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_72  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m57_116 -> m57_113  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataWriter", style=dashed];
m58_33 -> m58_36  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m58_41 -> m58_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m58_9 -> m58_11  [color=darkseagreen4, key=1, label=expected, style=dashed];
m58_1 -> m58_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m58_27 -> m58_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_28 -> m58_32  [color=green, key=1, label=builder, style=dashed];
m58_28 -> m58_33  [color=green, key=1, label=builder, style=dashed];
m58_14 -> m58_16  [color=darkseagreen4, key=1, label=result, style=dashed];
m58_22 -> m58_24  [color=darkseagreen4, key=1, label=result, style=dashed];
m58_22 -> m58_25  [color=darkseagreen4, key=1, label=result, style=dashed];
m58_26 -> m58_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m58_26 -> m58_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m60_3 -> m60_5  [color=darkseagreen4, key=1, label=state, style=dashed];
m62_15 -> m62_17  [color=darkseagreen4, key=1, label=date, style=dashed];
}
