digraph  {
m1_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m1_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m1_15 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnData(QuantConnect.Data.Slice)", span="48-48"];
m1_16 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnData(QuantConnect.Data.Slice)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnData(QuantConnect.Data.Slice)", span="48-48"];
m1_17 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m1_18 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="changes.RemovedSecurities", span="54-54"];
m1_21 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="changes.AddedSecurities", span="62-62"];
m1_22 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="SetHoldings(added.Symbol, 1/(decimal)changes.AddedSecurities.Count)", span="64-64"];
m1_19 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="removed.Invested", span="56-56"];
m1_20 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="Liquidate(removed.Symbol)", span="58-58"];
m1_23 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m1_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m1_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298"];
m1_14 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultBrokerageModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m1_0 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", span="33-33"];
m1_1 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="UniverseSettings.Resolution = Resolution.Hour", span="35-35"];
m1_2 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="SetStartDate(2015, 01, 01)", span="37-37"];
m1_3 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="SetEndDate(2015, 12, 01)", span="38-38"];
m1_4 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="AddUniverse(''my-universe-name'', Resolution.Hour, time =>\r\n            {\r\n                var hour = time.Hour;\r\n                var index = hour%Symbols.Count;\r\n                return new List<string> {Symbols[index]};\r\n            })", span="40-45"];
m1_5 [cluster="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm.Initialize()", span="33-33"];
m1_9 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="40-45"];
m1_10 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="var hour = time.Hour", span="42-42"];
m1_11 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="var index = hour%Symbols.Count", span="43-43"];
m1_12 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="return new List<string> {Symbols[index]};", span="44-44"];
m1_13 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Exit lambda expression", span="40-45"];
m1_26 [file="DefaultBrokerageModel.cs", label="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm", span=""];
m2_22 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", file="DefaultExerciseModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", span="106-106"];
m2_20 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="DefaultExerciseModel.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m2_23 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="DefaultExerciseModel.cs", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m2_0 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="Entry QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="36-36"];
m2_1 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var utcTime = option.LocalTime.ConvertToUtc(option.Exchange.TimeZone)", span="38-38"];
m2_2 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var optionQuantity = order.Quantity", span="40-40"];
m2_3 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var assignment = order.Quantity < 0", span="41-41"];
m2_4 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var underlying = option.Underlying", span="42-42"];
m2_5 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var exercisePrice = order.Price", span="43-43"];
m2_6 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var fillQuantity = option.GetExerciseQuantity(order.Quantity)", span="44-44"];
m2_7 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var exerciseQuantity =\r\n                    option.Symbol.ID.OptionRight == OptionRight.Call ? fillQuantity : -fillQuantity", span="45-46"];
m2_8 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var exerciseDirection = assignment? \r\n                    (option.Symbol.ID.OptionRight == OptionRight.Call ? OrderDirection.Sell : OrderDirection.Buy):\r\n                    (option.Symbol.ID.OptionRight == OptionRight.Call ? OrderDirection.Buy : OrderDirection.Sell)", span="47-49"];
m2_9 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var orderFee = option.FeeModel.GetOrderFee(option, order)", span="51-51"];
m2_11 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var addUnderlyingEvent = new OrderEvent(order.Id,\r\n                            underlying.Symbol,\r\n                            utcTime,\r\n                            OrderStatus.Filled,\r\n                            exerciseDirection,\r\n                            exercisePrice,\r\n                            exerciseQuantity,\r\n                            0.0m,\r\n                            ''Option Exercise/Assignment'')", span="55-63"];
m2_12 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="var optionRemoveEvent = new OrderEvent(order.Id,\r\n                            option.Symbol,\r\n                            utcTime,\r\n                            OrderStatus.Filled,\r\n                            assignment ? OrderDirection.Buy : OrderDirection.Sell,\r\n                            0.0m,\r\n                            -optionQuantity,\r\n                            orderFee,\r\n                            ''Adjusting(or removing) the exercised/assigned option'')", span="65-73"];
m2_15 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="option.ExerciseSettlement == SettlementType.PhysicalDelivery &&\r\n                option.IsAutoExercised(underlying.Close)", span="80-81"];
m2_16 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="return new[] { optionRemoveEvent, addUnderlyingEvent };", span="83-83"];
m2_13 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="optionRemoveEvent.FillQuantity > 0", span="75-75"];
m2_14 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="optionRemoveEvent.IsAssignment = true", span="77-77"];
m2_17 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="return new[] { optionRemoveEvent };", span="86-86"];
m2_18 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="DefaultExerciseModel.cs", label="Exit QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="36-36"];
m2_21 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultExerciseModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m2_19 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="DefaultExerciseModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577"];
m3_0 [cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", span="32-32"];
m3_1 [cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="FxcmVolumeDownloader.cs", label="System.IO.File.Delete(''regression.log'')", span="35-35"];
m3_2 [cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="FxcmVolumeDownloader.cs", label="Exit QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", span="32-32"];
m3_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FxcmVolumeDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_45 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42"];
m3_44 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="106-106"];
m3_38 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m3_40 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m3_53 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="Entry lambda expression", span="73-79"];
m3_55 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="76-76"];
m3_57 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="engine.Run(job, algorithmManager, algorithmPath)", span="78-78"];
m3_54 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="string algorithmPath", span="75-75"];
m3_56 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="var algorithmManager = new AlgorithmManager(false)", span="77-77"];
m3_58 [cluster="lambda expression", file="FxcmVolumeDownloader.cs", label="Exit lambda expression", span="73-79"];
m3_37 [cluster="QuantConnect.Util.Composer.Reset()", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Util.Composer.Reset()", span="198-198"];
m3_49 [cluster="System.Threading.Tasks.Task.Wait()", file="FxcmVolumeDownloader.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m3_61 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m3_42 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", span="38-38"];
m3_43 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="178-178"];
m3_60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
m3_3 [cluster="System.IO.File.Delete(string)", file="FxcmVolumeDownloader.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m3_52 [cluster="Unk.AreEqual", file="FxcmVolumeDownloader.cs", label="Entry Unk.AreEqual", span=""];
m3_39 [cluster="System.Enum.ToString()", file="FxcmVolumeDownloader.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_46 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m3_59 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36"];
m3_41 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", span="38-38"];
m3_50 [cluster="QuantConnect.Logging.ILogHandler.Error(string, params object[])", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Logging.ILogHandler.Error(string, params object[])", span="30-30"];
m3_36 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FxcmVolumeDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_48 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="FxcmVolumeDownloader.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m3_47 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m3_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m3_5 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var statistics = new Dictionary<string, string>()", span="40-40"];
m3_7 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''algorithm-type-name'', algorithm)", span="47-47"];
m3_14 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''algorithm-language'', language.ToString())", span="54-54"];
m3_15 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''algorithm-location'', ''QuantConnect.Algorithm.'' + language + ''.dll'')", span="55-55"];
m3_23 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.LogHandler.Trace(''{0}: Running '' + algorithm + ''...'', DateTime.UtcNow)", span="67-67"];
m3_32 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label=expectedStatistics, span="92-92"];
m3_6 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Composer.Instance.Reset()", span="42-42"];
m3_8 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''live-mode'', ''false'')", span="48-48"];
m3_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''environment'', '''')", span="49-49"];
m3_10 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="50-50"];
m3_11 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="51-51"];
m3_12 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="52-52"];
m3_13 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Config.Set(''result-handler'', ''QuantConnect.Lean.Engine.Results.BacktestingResultHandler'')", span="53-53"];
m3_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var debugEnabled = Log.DebuggingEnabled", span="57-57"];
m3_17 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var logHandlers = new ILogHandler[] {new ConsoleLogHandler(), new FileLogHandler(''regression.log'', false)}", span="59-59"];
m3_29 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.DebuggingEnabled = debugEnabled", span="84-84"];
m3_18 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.LogHandler = new CompositeLogHandler(logHandlers)", span="60-60"];
m3_19 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="61-61"];
m3_20 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="62-62"];
m3_25 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="72-72"];
m3_27 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="var backtestingResultHandler = (BacktestingResultHandler)algorithmHandlers.Results", span="81-81"];
m3_21 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.DebuggingEnabled = true", span="64-64"];
m3_26 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Task.Factory.StartNew(() =>\r\n                    {\r\n                        string algorithmPath;\r\n                        var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                        var algorithmManager = new AlgorithmManager(false);\r\n                        engine.Run(job, algorithmManager, algorithmPath);\r\n                    }).Wait()", span="73-79"];
m3_22 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.LogHandler.Trace('''')", span="66-66"];
m3_24 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.LogHandler.Trace('''')", span="68-68"];
m3_28 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="statistics = backtestingResultHandler.FinalStatistics", span="82-82"];
m3_33 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="94-94"];
m3_34 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Assert.AreEqual(stat.Value, statistics[stat.Key], ''Failed on '' + stat.Key)", span="95-95"];
m3_30 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label=Exception, span="87-87"];
m3_31 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Log.LogHandler.Error(''{0} {1}'', ex.Message, ex.StackTrace)", span="89-89"];
m3_35 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="FxcmVolumeDownloader.cs", label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m3_62 [file="FxcmVolumeDownloader.cs", label=systemHandlers, span=""];
m3_63 [file="FxcmVolumeDownloader.cs", label=engine, span=""];
m4_43 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var sb = new StringBuilder()", span="74-74"];
m4_0 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", span="17-17"];
m4_1 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="_symbol = symbol", span="19-19"];
m4_2 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="_resolution = resolution", span="20-20"];
m4_3 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="_dataDirectory = dataDirectory", span="21-21"];
m4_4 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="_market = _symbol.ID.Market", span="22-22"];
m4_8 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="FxcmVolumeWriter.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", span="17-17"];
m4_42 [cluster="System.Text.StringBuilder.ToString()", file="FxcmVolumeWriter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_46 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=green, community=0, file="FxcmVolumeWriter.cs", label="sb.AppendLine(string.Format(''{0:yyyyMMdd HH:mm},{1},{2}'', obs.Time, obs.Value,\r\n                    obs.Transactions))", prediction=0, span="79-80"];
m4_47 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var filename = _symbol.Value.ToLower() + ''_volume''", span="83-83"];
m4_48 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var zipFilePath = Path.Combine(FolderPath, filename + ''.zip'')", span="84-84"];
m4_11 [cluster="System.IO.Path.Combine(params string[])", file="FxcmVolumeWriter.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m4_21 [cluster="System.IO.Directory.CreateDirectory(string)", file="FxcmVolumeWriter.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m4_9 [cluster="string.ToLower()", file="FxcmVolumeWriter.cs", label="Entry string.ToLower()", span="0-0"];
m4_22 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="sb.AppendLine(string.Format(''{0},{1},{2}'', obs.Time.TimeOfDay.TotalMilliseconds, obs.Value,\r\n                        obs.Transactions))", span="60-61"];
m4_24 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var sb = new StringBuilder()", span="45-45"];
m4_25 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var volData = data.Cast<FxcmVolume>()", span="46-46"];
m4_29 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="sb.AppendLine(string.Format(''{0},{1},{2}'', obs.Time.TimeOfDay.TotalMilliseconds, obs.Value,\r\n                        obs.Transactions))", span="52-53"];
m4_32 [cluster="string.Format(string, object, object, object)", file="FxcmVolumeWriter.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_34 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="sb.Clear()", span="60-60"];
m4_26 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var dataByDay = volData.GroupBy(o => o.Time.Date)", span="47-47"];
m4_27 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label=dataByDay, span="48-48"];
m4_28 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label=dayOfData, span="50-50"];
m4_30 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="FxcmVolumeWriter.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m4_33 [cluster="System.Text.StringBuilder.AppendLine(string)", file="FxcmVolumeWriter.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m4_35 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeWriter.WriteMinuteData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="43-43"];
m4_45 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=green, community=0, file="FxcmVolumeWriter.cs", label=volData, prediction=1, span="77-77"];
m4_41 [cluster="string.Format(string, object)", file="FxcmVolumeWriter.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_10 [cluster="System.Enum.ToString()", file="FxcmVolumeWriter.cs", label="Entry System.Enum.ToString()", span="0-0"];
m4_20 [cluster="System.IO.Directory.Exists(string)", file="FxcmVolumeWriter.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m4_13 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="30-30"];
m4_17 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="WriteMinuteData(data)", span="35-35"];
m4_18 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="WriteHourAndDailyData(data)", span="39-39"];
m4_16 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="72-72"];
m4_19 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="30-30"];
m4_12 [cluster="System.IO.Path.Combine(string, string)", file="FxcmVolumeWriter.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_36 [cluster="System.Text.StringBuilder.StringBuilder()", file="FxcmVolumeWriter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_44 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=green, community=0, file="FxcmVolumeWriter.cs", label="var volData = data.Cast<FxcmVolume>()", prediction=2, span="76-76"];
m4_23 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="64-64"];
m4_49 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Compression.ZipCreateAppendData(zipFilePath, filename + ''.csv'', sb.ToString())", span="86-86"];
m4_50 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="var volData = data.Cast<FxcmVolume>()", span="68-68"];
m4_52 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="FxcmVolumeWriter.cs", label="Entry QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="161-161"];
m4_51 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label=volData, span="69-69"];
m4_57 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="FxcmVolumeWriter.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeWriter.WriteHourAndDailyData(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="64-64"];
m4_37 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="FxcmVolumeWriter.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m4_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="FxcmVolumeWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_39 [cluster="string.Format(string, object, object, object)", file="FxcmVolumeWriter.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_40 [cluster="System.Text.StringBuilder.AppendLine(string)", file="FxcmVolumeWriter.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m4_58 [file="FxcmVolumeWriter.cs", label="QuantConnect.ToolBox.FxcmVolumeWriter", span=""];
m5_0 [cluster="QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="InteractiveBrokersSymbolMapper.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="46-46"];
m5_1 [cluster="QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="InteractiveBrokersSymbolMapper.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="46-46"];
m6_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m6_38 [cluster="Unk.>", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry Unk.>", span=""];
m6_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", span="41-41"];
m6_15 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var mapper = new InteractiveBrokersSymbolMapper()", span="43-43"];
m6_16 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var symbol = Symbol.Create(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="45-45"];
m6_17 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var brokerageSymbol = mapper.GetBrokerageSymbol(symbol)", span="46-46"];
m6_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="brokerageSymbol = mapper.GetBrokerageSymbol(symbol)", span="50-50"];
m6_18 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(''EURUSD'', brokerageSymbol)", span="47-47"];
m6_19 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="symbol = Symbol.Create(''AAPL'', SecurityType.Equity, Market.USA)", span="49-49"];
m6_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(''AAPL'', brokerageSymbol)", span="51-51"];
m6_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectBrokerageSymbol()", span="41-41"];
m6_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", span="25-25"];
m6_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var mapper = new InteractiveBrokersSymbolMapper()", span="27-27"];
m6_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var symbol = mapper.GetLeanSymbol(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="29-29"];
m6_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="symbol = mapper.GetLeanSymbol(''AAPL'', SecurityType.Equity, Market.USA)", span="34-34"];
m6_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(''EURUSD'', symbol.Value)", span="30-30"];
m6_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(SecurityType.Forex, symbol.ID.SecurityType)", span="31-31"];
m6_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(Market.FXCM, symbol.ID.Market)", span="32-32"];
m6_7 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(''AAPL'', symbol.Value)", span="35-35"];
m6_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(SecurityType.Equity, symbol.ID.SecurityType)", span="36-36"];
m6_9 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.AreEqual(Market.USA, symbol.ID.Market)", span="37-37"];
m6_10 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ReturnsCorrectLeanSymbol()", span="25-25"];
m6_13 [cluster="Unk.AreEqual", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry Unk.AreEqual", span=""];
m6_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="101-101"];
m6_23 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m6_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper()", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper()", span="35-35"];
m6_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", span="55-55"];
m6_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", color=green, community=0, file="InteractiveBrokersSymbolMapperTests.cs", label="var mapper = new InteractiveBrokersSymbolMapper()", prediction=3, span="57-57"];
m6_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", color=green, community=0, file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetLeanSymbol(null, SecurityType.Forex, Market.FXCM))", prediction=4, span="59-59"];
m6_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetLeanSymbol('''', SecurityType.Forex, Market.FXCM))", span="61-61"];
m6_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetBrokerageSymbol(symbol))", span="64-64"];
m6_32 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetBrokerageSymbol(symbol))", span="67-67"];
m6_34 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetBrokerageSymbol(symbol))", span="70-70"];
m6_36 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Assert.Throws<ArgumentException>(() => mapper.GetBrokerageSymbol(symbol))", span="73-73"];
m6_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="var symbol = Symbol.Empty", span="63-63"];
m6_31 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="symbol = null", span="66-66"];
m6_33 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="symbol = Symbol.Create('''', SecurityType.Forex, Market.FXCM)", span="69-69"];
m6_35 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="symbol = Symbol.Create(''ABC_XYZ'', SecurityType.Forex, Market.FXCM)", span="72-72"];
m6_37 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapperTests.ThrowsOnNullOrEmptyOrInvalidSymbol()", span="55-55"];
m6_54 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="73-73"];
m6_40 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetLeanSymbol(null, SecurityType.Forex, Market.FXCM)", prediction=3, span="59-59"];
m6_43 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetLeanSymbol('''', SecurityType.Forex, Market.FXCM)", span="61-61"];
m6_46 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetBrokerageSymbol(symbol)", span="64-64"];
m6_49 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetBrokerageSymbol(symbol)", span="67-67"];
m6_52 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetBrokerageSymbol(symbol)", span="70-70"];
m6_55 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="mapper.GetBrokerageSymbol(symbol)", span="73-73"];
m6_39 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="59-59"];
m6_42 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="61-61"];
m6_45 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="64-64"];
m6_48 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="67-67"];
m6_51 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Entry lambda expression", span="70-70"];
m6_41 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="59-59"];
m6_44 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="61-61"];
m6_47 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="64-64"];
m6_50 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="67-67"];
m6_53 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="70-70"];
m6_56 [cluster="lambda expression", file="InteractiveBrokersSymbolMapperTests.cs", label="Exit lambda expression", span="73-73"];
m6_57 [file="InteractiveBrokersSymbolMapperTests.cs", label=mapper, span=""];
m6_58 [file="InteractiveBrokersSymbolMapperTests.cs", label=symbol, span=""];
m7_54 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m7_25 [cluster="Unk.Where", file="LeanData.cs", label="Entry Unk.Where", span=""];
m7_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="171-171"];
m7_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LeanData.cs", label="ScheduledEvent scheduledEvent", span="173-173"];
m7_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LeanData.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="174-174"];
m7_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="171-171"];
m7_83 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="LeanData.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m7_31 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="84-84"];
m7_28 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="74-78"];
m7_29 [cluster="lambda expression", file="LeanData.cs", label="RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date)", span="77-77"];
m7_30 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="74-78"];
m7_32 [cluster="lambda expression", file="LeanData.cs", label="x.IsInternalFeed()", span="84-84"];
m7_33 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="84-84"];
m7_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="191-191"];
m7_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="191-191"];
m7_26 [cluster="Unk.EverySecurityEndOfDay", file="LeanData.cs", label="Entry Unk.EverySecurityEndOfDay", span=""];
m7_80 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="200-200"];
m7_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LeanData.cs", label="_cancellationTokenSource.Cancel()", span="202-202"];
m7_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="200-200"];
m7_51 [cluster="System.Convert.ToInt32(double)", file="LeanData.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m7_50 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="LeanData.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="528-528"];
m7_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="138-138"];
m7_56 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="date = date.Date", span="140-140"];
m7_57 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="_algorithm.Securities.Values", span="143-143"];
m7_58 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="var marketHours = _api.MarketToday(date, security.Symbol)", span="145-145"];
m7_59 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="146-146"];
m7_60 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="147-147"];
m7_61 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="148-149"];
m7_62 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="138-138"];
m7_63 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m7_53 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m7_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="LeanData.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m7_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m7_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="_isActive = true", span="105-105"];
m7_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="108-108"];
m7_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="var time = DateTime.UtcNow", span="112-112"];
m7_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="115-115"];
m7_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="116-116"];
m7_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="117-117"];
m7_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label=_scheduledEvents, span="120-120"];
m7_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="scheduledEvent.Value.Scan(time)", span="122-122"];
m7_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label=Exception, span="125-125"];
m7_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="Log.Error(err)", span="127-127"];
m7_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="_isActive = false", span="131-131"];
m7_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="132-132"];
m7_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m7_64 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m7_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="LeanData.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_27 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m7_52 [cluster="System.Threading.Thread.Sleep(int)", file="LeanData.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_70 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="LeanData.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m7_21 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577"];
m7_34 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m7_20 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="233-233"];
m7_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="181-181"];
m7_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="181-181"];
m7_22 [cluster="ScheduledEvent.cstr", file="LeanData.cs", label="Entry ScheduledEvent.cstr", span=""];
m7_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m7_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="_api = api", span="59-59"];
m7_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="_algorithm = algorithm", span="60-60"];
m7_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="_resultHandler = resultHandler", span="61-61"];
m7_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m7_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m7_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m7_7 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="70-72"];
m7_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", span="87-87"];
m7_8 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", span="74-78"];
m7_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="_algorithm.Securities.Values.Where(x => x.IsInternalFeed())", span="84-84"];
m7_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label=_scheduledEvents, span="90-90"];
m7_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="95-95"];
m7_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m7_65 [cluster="Unk.Format", file="LeanData.cs", label="Entry Unk.Format", span=""];
m7_23 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="157-157"];
m7_66 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LeanData.cs", label="_algorithm != null", span="159-159"];
m7_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LeanData.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="161-161"];
m7_68 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LeanData.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="164-164"];
m7_69 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="157-157"];
m7_55 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m7_19 [cluster="System.DateTime.AddDays(double)", file="LeanData.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m7_24 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m7_49 [cluster="System.TimeSpan.FromSeconds(double)", file="LeanData.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="565-565"];
m7_84 [file="LeanData.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m8_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", file="MassIndex.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", span="31-31"];
m8_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", file="MassIndex.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", span="31-31"];
m8_3 [cluster="System.NotImplementedException.NotImplementedException(string)", file="MassIndex.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m8_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="MassIndex.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="47-47"];
m8_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="MassIndex.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="47-47"];
m8_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="MassIndex.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="39-39"];
m8_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="MassIndex.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="39-39"];
m9_3 [cluster="QuantConnect.Indicators.MassIndex.MassIndex(int, int)", file="MassIndexTests.cs", label="Entry QuantConnect.Indicators.MassIndex.MassIndex(int, int)", span="38-38"];
m9_0 [cluster="QuantConnect.Tests.Indicators.MassIndexTests.CreateIndicator()", file="MassIndexTests.cs", label="Entry QuantConnect.Tests.Indicators.MassIndexTests.CreateIndicator()", span="11-11"];
m9_2 [cluster="QuantConnect.Tests.Indicators.MassIndexTests.CreateIndicator()", file="MassIndexTests.cs", label="Exit QuantConnect.Tests.Indicators.MassIndexTests.CreateIndicator()", span="11-11"];
m10_11 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", file="Option.cs", label="Entry QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", span="26-26"];
m10_15 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m10_16 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="97-97"];
m10_21 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="_symbolProperties = symbolProperties", span="102-102"];
m10_17 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="98-98"];
m10_18 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="99-99"];
m10_19 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="100-100"];
m10_20 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Holdings = new OptionHolding(this)", span="101-101"];
m10_22 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="103-103"];
m10_23 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m10_56 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="Option.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m10_43 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324"];
m10_54 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="Option.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(universe =>\r\n            {\r\n                var optionUniverse = universe as OptionFilterUniverse;\r\n                var result = universeFunc(optionUniverse);\r\n                return result.ApplyOptionTypesFilter();\r\n            })", span="326-331"];
m10_55 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324"];
m10_33 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m10_34 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="Option.cs", label="return Math.Max(0.0m, GetPayOff(underlyingPrice));", span="205-205"];
m10_35 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m10_40 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="294-294"];
m10_41 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="Option.cs", label="SetFilter(universe => universe.Strikes(minStrike, maxStrike))", span="296-296"];
m10_42 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="294-294"];
m10_57 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="326-331"];
m10_45 [cluster="lambda expression", file="Option.cs", label="universe.Strikes(minStrike, maxStrike)", span="296-296"];
m10_44 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="296-296"];
m10_46 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="296-296"];
m10_51 [cluster="lambda expression", file="Option.cs", label="universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry)", span="315-317"];
m10_50 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="315-317"];
m10_52 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="315-317"];
m10_59 [cluster="lambda expression", file="Option.cs", label="var result = universeFunc(optionUniverse)", span="329-329"];
m10_58 [cluster="lambda expression", file="Option.cs", label="var optionUniverse = universe as OptionFilterUniverse", span="328-328"];
m10_60 [cluster="lambda expression", file="Option.cs", label="return result.ApplyOptionTypesFilter();", span="330-330"];
m10_61 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="326-331"];
m10_10 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", file="Option.cs", label="Entry QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", span="29-29"];
m10_63 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="Option.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119"];
m10_30 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m10_31 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="Option.cs", label="return GetIntrinsicValue(underlyingPrice) >= 0.01m;", span="197-197"];
m10_32 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m10_53 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="Option.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271"];
m10_24 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m10_25 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="Option.cs", label="return StrikePrice * ContractMultiplier;", span="179-179"];
m10_26 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m10_68 [cluster="System.ArgumentException.ArgumentException(string)", file="Option.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m10_47 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="Option.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199"];
m10_27 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m10_28 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", color=green, community=0, file="Option.cs", label="return quantity * ContractUnitOfTrade / ContractMultiplier;", prediction=6, span="189-189"];
m10_29 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m10_13 [cluster="System.TimeSpan.FromDays(double)", file="Option.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m10_14 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m10_48 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="Option.cs", label="SetFilter(universe => universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry))", span="315-317"];
m10_49 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m10_9 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="337-337"];
m10_64 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="mode != DataNormalizationMode.Raw", span="339-339"];
m10_66 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="base.SetDataNormalizationMode(mode)", span="344-344"];
m10_65 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="throw new ArgumentException(''DataNormalizationMode.Raw must be used with options'');", span="341-341"];
m10_67 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="337-337"];
m10_62 [cluster="System.Func<T, TResult>.Invoke(T)", file="Option.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m10_37 [cluster="System.Math.Max(decimal, decimal)", file="Option.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m10_0 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m10_1 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="64-64"];
m10_6 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="_symbolProperties = symbolProperties", span="69-69"];
m10_2 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="65-65"];
m10_3 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="66-66"];
m10_4 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="67-67"];
m10_5 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Holdings = new OptionHolding(this)", span="68-68"];
m10_7 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="70-70"];
m10_8 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m10_36 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="Option.cs", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m10_38 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="Option.cs", label="return Right == OptionRight.Call ? underlyingPrice - StrikePrice : StrikePrice - underlyingPrice;", span="214-214"];
m10_39 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="Option.cs", label="Exit QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m10_12 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", file="Option.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", span="29-29"];
m10_69 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Option.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="664-664"];
m10_70 [file="Option.cs", label="QuantConnect.Securities.Option.Option", span=""];
m10_71 [file="Option.cs", label=int, span=""];
m10_72 [file="Option.cs", label=int, span=""];
m10_73 [file="Option.cs", label=int, span=""];
m10_74 [file="Option.cs", label=int, span=""];
m10_75 [file="Option.cs", label="System.TimeSpan", span=""];
m10_76 [file="Option.cs", label="System.TimeSpan", span=""];
m10_77 [file="Option.cs", label="System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>", span=""];
m11_9 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="62-62"];
m11_10 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="ContractMultiplier = multiplier", span="64-64"];
m11_11 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="62-62"];
m11_0 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="40-40"];
m11_1 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = (int)contractMultiplier", span="43-43"];
m11_2 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="40-40"];
m11_6 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="58-58"];
m11_7 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = unitOfTrade", span="60-60"];
m11_8 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="58-58"];
m11_3 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="48-48"];
m11_4 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="ContractUnitOfTrade = (int)properties.ContractMultiplier", span="55-55"];
m11_5 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSymbolProperties.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="48-48"];
m11_12 [file="OptionSymbolProperties.cs", label="QuantConnect.Securities.Option.OptionSymbolProperties", span=""];
m12_39 [cluster="System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", file="Program.cs", label="Entry System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m12_32 [cluster="string.ToLower()", file="Program.cs", label="Entry string.ToLower()", span="0-0"];
m12_56 [cluster="System.Type.GetMethods()", file="Program.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m12_43 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone(object)", span="103-103"];
m12_46 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="_cloneMethodsByType.TryGetValue(type, out func)", span="107-107"];
m12_44 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="var type = instanceToClone.GetType()", span="105-105"];
m12_45 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="MethodInvoker func", span="106-106"];
m12_47 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="return func(null, instanceToClone);", span="109-109"];
m12_48 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="var method = typeof (CloneFactory).GetMethods().FirstOrDefault(x => x.Name == ''GetClone'' && x.GetParameters().Length == 1)", span="113-113"];
m12_49 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="method = method.MakeGenericMethod(type)", span="114-114"];
m12_51 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="_cloneMethodsByType[type] = func", span="116-116"];
m12_52 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="return func(null, instanceToClone);", span="117-117"];
m12_50 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="func = method.DelegateForCallMethod()", span="115-115"];
m12_53 [cluster="QuantConnect.Util.ObjectActivator.Clone(object)", file="Program.cs", label="Exit QuantConnect.Util.ObjectActivator.Clone(object)", span="103-103"];
m12_34 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Program.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m12_38 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="Program.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m12_31 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="Program.cs", label="Exit QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m12_54 [cluster="object.GetType()", file="Program.cs", label="Entry object.GetType()", span="0-0"];
m12_4 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Console.WriteLine(''RESOLUTION = Minute/Hour/Daily/All'')", span="18-18"];
m12_29 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", color=green, community=0, file="Program.cs", label="_activatorsByType.Add(dataType, factory)", prediction=7, span="92-92"];
m12_60 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="113-113"];
m12_61 [cluster="lambda expression", file="Program.cs", label="x.Name == ''GetClone'' && x.GetParameters().Length == 1", span="113-113"];
m12_62 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="113-113"];
m12_26 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="Program.cs", label="var newExp = Expression.New(ctor, argsExp)", span="87-87"];
m12_42 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Program.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_37 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Program.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m12_63 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="123-123"];
m12_64 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="var clone = Clone((object)instanceToClone) as T", span="125-125"];
m12_66 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="throw new Exception(''Unable to clone instance of type '' + instanceToClone.GetType().Name + '' to '' + typeof(T).Name);", span="128-128"];
m12_65 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="clone == null", span="126-126"];
m12_67 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="return clone;", span="130-130"];
m12_68 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="Program.cs", label="Exit QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="123-123"];
m12_69 [cluster="System.Exception.Exception(string)", file="Program.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m12_28 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="Program.cs", label="factory = (Func<object[], object>) lambda.Compile()", span="89-89"];
m12_58 [cluster="Unk.MakeGenericMethod", file="Program.cs", label="Entry Unk.MakeGenericMethod", span=""];
m12_59 [cluster="Unk.DelegateForCallMethod", file="Program.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m12_33 [cluster="System.Type.GetConstructor(System.Type[])", file="Program.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m12_36 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="Program.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m12_57 [cluster="Unk.FirstOrDefault", file="Program.cs", label="Entry Unk.FirstOrDefault", span=""];
m12_40 [cluster="System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="Program.cs", label="Entry System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m12_41 [cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="Program.cs", label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0"];
m12_30 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="Program.cs", label="return factory;", span="94-94"];
m12_35 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Program.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m12_5 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Console.WriteLine(''FROMDATE = yyyymmdd'')", span="19-19"];
m12_8 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Log.DebuggingEnabled = true", span="26-26"];
m12_16 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var endDate = DateTime.ParseExact(args[3], ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="43-43"];
m12_21 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label=resolutions, span="52-52"];
m12_20 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var symbol = Symbol.Create(ticker, SecurityType.Base, Market.FXCM)", span="51-51"];
m12_23 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label=Exception, span="58-58"];
m12_6 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Console.WriteLine(''TODATE = yyyymmdd'')", span="20-20"];
m12_7 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Environment.Exit(exitCode: 1)", span="21-21"];
m12_10 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var tickers = args[0].Split(',')", span="30-30"];
m12_12 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="args[1].ToLower() == ''all''", span="33-33"];
m12_9 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Log.LogHandler = new CompositeLogHandler(new ConsoleLogHandler(), new FileLogHandler(''FxcmFxVolumeDownloader.log'', useTimestampPrefix: false))", span="27-27"];
m12_13 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="resolutions = new[] { Resolution.Daily, Resolution.Hour, Resolution.Minute }", span="35-35"];
m12_27 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m12_15 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var startDate = DateTime.ParseExact(args[2], ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="42-42"];
m12_17 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var dataDirectory = Config.Get(''data-directory'', ''../../../Data'')", span="47-47"];
m12_18 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var downloader = new FxcmVolumeDownloader(dataDirectory)", span="48-48"];
m12_19 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label=tickers, span="49-49"];
m12_24 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Log.Error(err)", span="60-60"];
m12_11 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="var resolutions = new[] { Resolution.Daily }", span="31-31"];
m12_14 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="resolutions[0] = (Resolution)Enum.Parse(typeof(Resolution), args[1])", span="39-39"];
m12_25 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Exit QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", span="9-9"];
m12_0 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", span="9-9"];
m12_1 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", color=green, community=0, file="Program.cs", label="args.Length != 4", prediction=8, span="11-11"];
m12_2 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", color=green, community=0, file="Program.cs", label="Console.WriteLine(''Usage: FxcmVolumeDownloader SYMBOLS RESOLUTION FROMDATE TODATE'')", prediction=9, span="13-13"];
m12_3 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.Program.Main(string[])", file="Program.cs", label="Console.WriteLine(''SYMBOLS = eg EURUSD,USDJPY\n'' +\r\n                                  ''\tAvailable pairs:\n'' +\r\n                                  ''\tEURUSD, USDJPY, GBPUSD, USDCHF, EURCHF, AUDUSD, USDCAD,\n'' +\r\n                                  ''\tNZDUSD, EURGBP, EURJPY, GBPJPY, EURAUD, EURCAD, AUDJPY'')", span="14-17"];
m12_55 [cluster="Unk.func", file="Program.cs", label="Entry Unk.func", span=""];
m13_324 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="454-454"];
m13_41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="192-192"];
m13_42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="198-198"];
m13_43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Stream(job, algorithm, feed, results, token)", span="199-199"];
m13_258 [cluster="Unk.DelegateForCallMethod", file="QCAlgorithm.History.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m13_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="561-561"];
m13_191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.QuoteBars.Count > 0", span="573-573"];
m13_317 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="253-253"];
m13_329 [cluster="System.Reflection.MethodBase.GetParameters()", file="QCAlgorithm.History.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m13_264 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41"];
m13_251 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="561-561"];
m13_128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="nextMarginCallTime = time + marginCallFrequency", span="415-415"];
m13_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="504-504"];
m13_164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="506-506"];
m13_283 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label=start, span=""];
m13_323 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m13_452 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m13_308 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m13_99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="ProcessDelistedSymbols(algorithm, delistings)", span="352-352"];
m13_102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError != null", span="360-360"];
m13_108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="marginCallOrders.Count != 0", span="373-373"];
m13_109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var executingMarginCall = false", span="375-375"];
m13_100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Status == AlgorithmStatus.Stopped", span="355-355"];
m13_103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="362-362"];
m13_104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="363-363"];
m13_106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="bool issueMarginCallWarning", span="371-371"];
m13_105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="368-368"];
m13_107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="372-372"];
m13_101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="357-357"];
m13_110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.OnMarginCall(marginCallOrders)", span="379-379"];
m13_448 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m13_325 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="187-187"];
m13_438 [cluster="Unk.ToList", file="QCAlgorithm.History.cs", label="Entry Unk.ToList", span=""];
m13_544 [cluster="decimal.SmartRounding()", file="QCAlgorithm.History.cs", label="Entry decimal.SmartRounding()", span="205-205"];
m13_322 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
m13_318 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="396-396"];
m13_265 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m13_290 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="376-376"];
m13_293 [cluster="string.Format(string, object)", file="QCAlgorithm.History.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="transactions.ProcessSynchronousEvents()", span="611-611"];
m13_300 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m13_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="consolidator.Scan(localTime)", span="500-500"];
m13_28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="162-162"];
m13_441 [cluster="Unk.Any", file="QCAlgorithm.History.cs", label="Entry Unk.Any", span=""];
m13_195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="580-580"];
m13_27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="161-161"];
m13_217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_currentTimeStepTime = DateTime.MinValue", span="621-621"];
m13_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="624-624"];
m13_536 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m13_301 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m13_292 [cluster="string.Format(string, params object[])", file="QCAlgorithm.History.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m13_237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="661-661"];
m13_445 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_449 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="358-358"];
m13_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.OnEndOfAlgorithm()", span="627-627"];
m13_433 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="532-532"];
m13_269 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m13_44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_currentTimeStepTime = DateTime.UtcNow", span="202-202"];
m13_72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(logMessage)", span="270-270"];
m13_73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SystemDebugMessage(logMessage)", span="271-271"];
m13_74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="SampleBenchmark(algorithm, results, time)", span="278-278"];
m13_336 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m13_196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="581-581"];
m13_447 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="556-556"];
m13_444 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m13_267 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="591-591"];
m13_282 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label=security, span=""];
m13_50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="commands.GetCommands()", span="219-219"];
m13_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? security.Resolution", span="567-567"];
m13_296 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="352-352"];
m13_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="106-106"];
m13_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.History.cs", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n                \r\n                return null;\r\n            }", span="108-116"];
m13_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.History.cs", label="_liveMode = liveMode", span="117-117"];
m13_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="106-106"];
m13_266 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="591-591"];
m13_194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="580-580"];
m13_249 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="553-562"];
m13_320 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="515-515"];
m13_193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="577-577"];
m13_184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="553-553"];
m13_298 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m13_437 [cluster="Unk.Min", file="QCAlgorithm.History.cs", label="Entry Unk.Min", span=""];
m13_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m13_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="63-63"];
m13_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m13_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m13_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = null", span="75-75"];
m13_331 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.DeclaringType == algorithm.GetType()", span="169-169"];
m13_326 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="168-168"];
m13_330 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="169-169"];
m13_334 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Status.IsOpen() && x.Symbol == symbol", span="303-303"];
m13_333 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="303-303"];
m13_338 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="460-460"];
m13_337 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="460-460"];
m13_340 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="575-575"];
m13_327 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="168-168"];
m13_328 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="168-168"];
m13_332 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="169-169"];
m13_335 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="303-303"];
m13_339 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="460-460"];
m13_341 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Key.ID.SecurityType == SecurityType.Forex", span="575-575"];
m13_342 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="575-575"];
m13_454 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="721-721"];
m13_457 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="730-730"];
m13_460 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="731-731"];
m13_463 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="746-746"];
m13_466 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="748-748"];
m13_469 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="748-748"];
m13_472 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="749-749"];
m13_475 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="837-837"];
m13_455 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="721-721"];
m13_456 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="721-721"];
m13_458 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsInternalFeed", span="730-730"];
m13_459 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="730-730"];
m13_461 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Resolution", span="731-731"];
m13_462 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="731-731"];
m13_464 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.FillForwardResolution.HasValue", span="746-746"];
m13_465 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="746-746"];
m13_467 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.FillForwardResolution.HasValue", span="748-748"];
m13_468 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="748-748"];
m13_470 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.FillForwardResolution.Value", span="748-748"];
m13_471 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="748-748"];
m13_473 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.FillForwardResolution.HasValue", span="749-749"];
m13_474 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="749-749"];
m13_476 [cluster="lambda expression", file="QCAlgorithm.History.cs", label=x, span="837-837"];
m13_477 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="837-837"];
m13_510 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="933-933"];
m13_509 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="933-933"];
m13_511 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="933-933"];
m13_55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="228-228"];
m13_60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var time = timeSlice.Time", span="239-239"];
m13_61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_dataPointCount += timeSlice.DataPointCount", span="240-240"];
m13_76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="realtime.ScanPastEvents(time)", span="288-288"];
m13_80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="298-298"];
m13_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="638-638"];
m13_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="643-643"];
m13_244 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="676-676"];
m13_246 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="132-132"];
m13_247 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_248 [cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithm.History.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="634-634"];
m13_54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="result = command.Run(algorithm)", span="226-226"];
m13_56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(err)", span="230-230"];
m13_59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.Messages.Enqueue(result)", span="236-236"];
m13_62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=backtestMode, span="245-245"];
m13_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="264-264"];
m13_75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=backtestMode, span="286-286"];
m13_77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.SetDateTime(time)", span="292-292"];
m13_78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="294-294"];
m13_81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="300-300"];
m13_82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="303-303"];
m13_220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="629-629"];
m13_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="633-633"];
m13_226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="641-641"];
m13_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Liquidate()", span="644-644"];
m13_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="646-646"];
m13_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="652-652"];
m13_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.LogMessage(''Algorithm Stopped'')", span="653-653"];
m13_240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SampleRange(algorithm.GetChartUpdates())", span="669-669"];
m13_243 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="portfolioValue == 0m", span="674-674"];
m13_245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, \r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="680-681"];
m13_250 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="911-911"];
m13_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="654-654"];
m13_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="645-645"];
m13_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status == AlgorithmStatus.Stopped", span="650-650"];
m13_57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Error(string.Format(''{0} Error: {1}'', command.GetType().Name, err.Message))", span="231-231"];
m13_58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="result = new CommandResultPacket(command, false)", span="232-232"];
m13_71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="269-269"];
m13_70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="portfolioValue <= 0", span="267-267"];
m13_79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=hasOnDataSymbolChangedEvents, span="296-296"];
m13_84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="310-310"];
m13_83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="305-305"];
m13_116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="392-392"];
m13_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="421-421"];
m13_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="632-632"];
m13_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="631-631"];
m13_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status == AlgorithmStatus.Deleted", span="658-658"];
m13_242 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="671-671"];
m13_241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="670-670"];
m13_118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="394-394"];
m13_117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="393-393"];
m13_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="427-427"];
m13_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="nextSettlementScanTime = time + settlementScanFrequency", span="423-423"];
m13_268 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="370-370"];
m13_491 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m13_51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="command == null", span="221-221"];
m13_284 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.History.cs", label=end, span=""];
m13_450 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="526-526"];
m13_533 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m13_545 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="171-171"];
m13_306 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="522-522"];
m13_114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="387-387"];
m13_294 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="381-381"];
m13_299 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m13_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="585-585"];
m13_215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_previousTime = time", span="614-614"];
m13_236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="660-660"];
m13_262 [cluster="string.Format(string, object, object)", file="QCAlgorithm.History.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_263 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m13_45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status != AlgorithmStatus.Running", span="205-205"];
m13_46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="207-207"];
m13_47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="token.IsCancellationRequested", span="212-212"];
m13_48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="214-214"];
m13_277 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m13_271 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label=int, span=""];
m13_537 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1007-1007"];
m13_539 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="1011-1011"];
m13_538 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label=Exception, span="1009-1009"];
m13_540 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1012-1012"];
m13_541 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label="Log.Error(err)", span="1013-1013"];
m13_542 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1002-1002"];
m13_276 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m13_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="431-431"];
m13_136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="436-436"];
m13_137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="437-437"];
m13_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="435-435"];
m13_134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="433-433"];
m13_138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="438-438"];
m13_274 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m13_281 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label=int, span=""];
m13_273 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m13_17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="142-142"];
m13_18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var nextSettlementScanTime = DateTime.MinValue", span="143-143"];
m13_19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var delistings = new List<Delisting>()", span="145-145"];
m13_20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithmId = job.AlgorithmId", span="148-148"];
m13_21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.Running", span="149-149"];
m13_22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_previousTime = algorithm.StartDate.Date", span="150-150"];
m13_23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="155-155"];
m13_24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="156-156"];
m13_216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.ProcessSynchronousEvents()", span="617-617"];
m13_443 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m13_65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="253-253"];
m13_307 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="571-571"];
m13_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="469-469"];
m13_165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="507-507"];
m13_166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="508-508"];
m13_37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="186-186"];
m13_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="467-467"];
m13_148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="464-464"];
m13_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="466-466"];
m13_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="468-468"];
m13_167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="509-509"];
m13_205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="589-589"];
m13_206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="590-590"];
m13_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="604-604"];
m13_212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="605-605"];
m13_204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="588-588"];
m13_207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.HasData", span="595-595"];
m13_210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="603-603"];
m13_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="587-587"];
m13_202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="585-585"];
m13_209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="601-601"];
m13_208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.OnData(timeSlice.Slice)", span="598-598"];
m13_213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="606-606"];
m13_315 [cluster="Unk.Collapse", file="QCAlgorithm.History.cs", label="Entry Unk.Collapse", span=""];
m13_316 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="346-346"];
m13_319 [cluster="System.Exception.Exception(string, System.Exception)", file="QCAlgorithm.History.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m13_188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="560-560"];
m13_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="582-582"];
m13_321 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120"];
m13_49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="215-215"];
m13_435 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m13_279 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.History.cs", label="bool?", span=""];
m13_26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="158-158"];
m13_309 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559"];
m13_453 [cluster="Unk.Subtract", file="QCAlgorithm.History.cs", label="Entry Unk.Subtract", span=""];
m13_311 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="return;", span="561-561"];
m13_288 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="953-953"];
m13_512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var i = delistings.Count - 1", span="955-955"];
m13_514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var security = algorithm.Securities[delistings[i].Symbol]", span="958-958"];
m13_516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var delistingTime = delistings[i].Time", span="962-962"];
m13_522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var underlying = algorithm.Securities[security.Symbol.Underlying]", span="973-973"];
m13_525 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="978-979"];
m13_526 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option assignment on expiration'')", span="983-984"];
m13_527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="989-990"];
m13_528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="algorithm.Transactions.ProcessRequest(request)", span="993-993"];
m13_529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="delistings.RemoveAt(i)", span="995-995"];
m13_513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="i >= 0", span="955-955"];
m13_530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="i--", span="955-955"];
m13_515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="security.Holdings.Quantity == 0", span="959-959"];
m13_517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="963-963"];
m13_518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="964-964"];
m13_519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="security.LocalTime < nextMarketClose", span="966-966"];
m13_521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="security.Type == SecurityType.Option", span="971-971"];
m13_523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var option = (Option)security", span="974-974"];
m13_524 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="security.Holdings.Quantity > 0", span="976-976"];
m13_520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="SubmitOrderRequest request", span="969-969"];
m13_531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="953-953"];
m13_534 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m13_313 [cluster="Unk.methodInvoker", file="QCAlgorithm.History.cs", label="Entry Unk.methodInvoker", span=""];
m13_275 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m13_280 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m13_446 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m13_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="_warmupBarCount = barCount", span="76-76"];
m13_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m13_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m13_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount)", span="88-88"];
m13_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m13_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="551-551"];
m13_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m13_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="129-129"];
m13_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m13_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m13_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m13_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m13_67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m13_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="565-565"];
m13_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="236-236"];
m13_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m13_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m13_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1629-1629"];
m13_98 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m13_112 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m13_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="303-303"];
m13_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="306-306"];
m13_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m13_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="341-341"];
m13_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="344-344"];
m13_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="347-347"];
m13_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="339-339"];
m13_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="361-361"];
m13_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m13_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="404-404"];
m13_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="444-444"];
m13_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="450-450"];
m13_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="473-473"];
m13_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="478-478"];
m13_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="485-485"];
m13_190 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m13_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="487-487"];
m13_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="492-492"];
m13_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="485-485"];
m13_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="553-562"];
m13_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="551-551"];
m13_66 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="683-683"];
m13_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m13_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="96-96"];
m13_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="142-142"];
m13_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="437-437"];
m13_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m13_129 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m13_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="490-490"];
m13_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="493-493"];
m13_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", color=green, community=0, file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request })", prediction=10, span="471-471"];
m13_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="475-475"];
m13_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m13_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140"];
m13_33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m13_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m13_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m13_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="156-156"];
m13_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m13_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m13_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="252-252"];
m13_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m13_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="342-342"];
m13_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="391-391"];
m13_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="433-433"];
m13_192 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="638-638"];
m13_52 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m13_53 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m13_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="582-582"];
m13_161 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="390-390"];
m13_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247"];
m13_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="249-249"];
m13_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="250-250"];
m13_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="253-253"];
m13_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling this method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="255-255"];
m13_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="258-258"];
m13_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="302-302"];
m13_111 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_113 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m13_115 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m13_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="299-299"];
m13_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="301-301"];
m13_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="305-305"];
m13_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="309-309"];
m13_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="310-310"];
m13_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="296-296"];
m13_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m13_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var security = Securities[symbol]", span="399-399"];
m13_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="402-402"];
m13_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="403-403"];
m13_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="400-400"];
m13_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="397-397"];
m13_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical()", span="435-435"];
m13_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="441-441"];
m13_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="443-443"];
m13_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, typeof(BaseData))", span="447-447"];
m13_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="452-452"];
m13_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="453-453"];
m13_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="456-469"];
m13_187 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="251-251"];
m13_297 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m13_532 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
m13_492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="913-913"];
m13_494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="916-916"];
m13_493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="newSplitMethodInfo != null", span="914-914"];
m13_496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="return false;", span="919-919"];
m13_495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="return true;", span="917-917"];
m13_497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="911-911"];
m13_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="565-565"];
m13_289 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m13_490 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m13_278 [cluster="Unk.]", file="QCAlgorithm.History.cs", label="bool?", span=""];
m13_451 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m13_261 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m13_348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="bool setStartTime = false", span="703-703"];
m13_391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="yield break;", span="785-785"];
m13_401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="yield return timeSlice;", span="804-804"];
m13_430 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="yield return timeSlice;", span="873-873"];
m13_349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var timeZone = algorithm.TimeZone", span="704-704"];
m13_350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var history = algorithm.HistoryProvider", span="705-705"];
m13_351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.LiveMode", span="708-708"];
m13_352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="ProcessVolatilityHistoryRequirements(algorithm)", span="710-710"];
m13_354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="715-715"];
m13_357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="720-723"];
m13_360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="730-730"];
m13_364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="735-735"];
m13_379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var security = algorithm.Securities[symbol]", span="771-771"];
m13_387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="779-779"];
m13_390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.RunTimeError = err", span="784-784"];
m13_396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Debug(''Algorithm warming up...'')", span="794-794"];
m13_400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="802-802"];
m13_403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="!algorithm.LiveMode || historyRequests.Count == 0", span="811-811"];
m13_404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.SetFinishedWarmingUp()", span="813-813"];
m13_405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="814-814"];
m13_407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="817-817"];
m13_409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=feed, span="822-822"];
m13_413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="829-829"];
m13_417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="840-840"];
m13_422 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.SetFinishedWarmingUp()", span="859-859"];
m13_423 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="860-860"];
m13_424 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="861-861"];
m13_429 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="870-870"];
m13_393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="!setStartTime", span="790-790"];
m13_410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="!setStartTime", span="824-824"];
m13_375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="history.GetHistory(historyRequests, timeZone)", span="762-762"];
m13_353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="DateTime? lastHistoryTimeUtc = null", span="714-714"];
m13_414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="lastHistoryTimeUtc.HasValue", span="833-833"];
m13_355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var start = DateTime.UtcNow.Ticks", span="718-718"];
m13_359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="historyRequests.Count != 0", span="727-727"];
m13_362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=historyRequests, span="732-732"];
m13_368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="746-746"];
m13_369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="748-748"];
m13_370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="749-749"];
m13_372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=historyRequests, span="755-755"];
m13_406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="historyRequests.Count != 0", span="815-815"];
m13_356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="719-719"];
m13_373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="757-757"];
m13_399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="801-801"];
m13_428 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="869-869"];
m13_397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="DateTime.UtcNow > nextStatusTime", span="796-796"];
m13_426 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="DateTime.UtcNow > nextStatusTime", span="864-864"];
m13_358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="725-725"];
m13_421 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="857-857"];
m13_361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="731-731"];
m13_365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="request.Resolution < minResolution", span="737-737"];
m13_366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="request.Resolution = minResolution", span="739-739"];
m13_367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="740-740"];
m13_363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Security security", span="734-734"];
m13_371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = minResolution", span="751-751"];
m13_374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="758-758"];
m13_376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="TimeSlice timeSlice", span="764-764"];
m13_378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="slice.Keys", span="769-769"];
m13_380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var data = slice[symbol]", span="772-772"];
m13_377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var paired = new List<DataFeedPacket>()", span="768-768"];
m13_386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="777-777"];
m13_381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var list = new List<BaseData>()", span="773-773"];
m13_382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var ticks = data as List<Tick>", span="774-774"];
m13_385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="list.Add(data)", span="776-776"];
m13_384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="list.AddRange(ticks)", span="775-775"];
m13_383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="ticks != null", span="775-775"];
m13_388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=Exception, span="781-781"];
m13_392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice != null", span="788-788"];
m13_395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_previousTime = timeSlice.Time", span="793-793"];
m13_402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="lastHistoryTimeUtc = timeSlice.Time", span="805-805"];
m13_389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Error(err)", span="783-783"];
m13_394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="setStartTime = true", span="792-792"];
m13_398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="800-800"];
m13_408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="818-818"];
m13_412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="_previousTime = timeSlice.Time", span="827-827"];
m13_416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="837-837"];
m13_411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="setStartTime = true", span="826-826"];
m13_415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="var hasHistoricalData = false", span="836-836"];
m13_419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label=hasHistoricalData, span="846-846"];
m13_418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="hasHistoricalData = true", span="842-842"];
m13_420 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="lastHistoryTimeUtc = null", span="852-852"];
m13_425 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="862-862"];
m13_427 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="868-868"];
m13_431 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="701-701"];
m13_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="570-570"];
m13_543 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
m13_489 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
m13_272 [cluster="System.Math.Round(decimal, int)", file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m13_303 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.History.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m13_440 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m13_535 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m13_291 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
m13_432 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="877-877"];
m13_478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="879-879"];
m13_479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="algorithm.Securities.Values", span="881-881"];
m13_481 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="885-885"];
m13_482 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="historyReq != null && algorithm.HistoryProvider != null", span="887-887"];
m13_483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="889-889"];
m13_480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="security.VolatilityModel != VolatilityModel.Null", span="883-883"];
m13_486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="slice.Bars.ContainsKey(security.Symbol)", span="894-894"];
m13_487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="895-895"];
m13_484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="history != null", span="890-890"];
m13_485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label=history, span="892-892"];
m13_488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="877-877"];
m13_343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="688-688"];
m13_344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.History.cs", label=_lock, span="690-690"];
m13_345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.History.cs", label="state != AlgorithmStatus.Running", span="694-694"];
m13_346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.History.cs", label="_algorithm.Status = state", span="696-696"];
m13_347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="688-688"];
m13_310 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m13_314 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="926-926"];
m13_498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="newDelistings.Values", span="928-928"];
m13_500 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="933-933"];
m13_501 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="delistings.Add(delisting)", span="935-935"];
m13_504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="942-942"];
m13_499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="delisting.Type == DelistingType.Warning", span="931-931"];
m13_502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="936-936"];
m13_503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="941-941"];
m13_505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label=cancelledOrders, span="943-943"];
m13_506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="945-945"];
m13_507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="926-926"];
m13_302 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="677-677"];
m13_304 [cluster="System.TimeSpan.FromSeconds(double)", file="QCAlgorithm.History.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_286 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
m13_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="579-579"];
m13_285 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
m13_305 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="470-470"];
m13_295 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m13_439 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m13_287 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="67-67"];
m13_434 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m13_442 [cluster="System.Math.Min(long, long)", file="QCAlgorithm.History.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m13_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="572-577"];
m13_270 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m13_508 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m13_312 [cluster="System.Type.IsInstanceOfType(object)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
m13_436 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m13_546 [file="QCAlgorithm.History.cs", label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
m13_547 [file="QCAlgorithm.History.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m13_548 [file="QCAlgorithm.History.cs", label=symbol, span=""];
m13_549 [file="QCAlgorithm.History.cs", label=split, span=""];
m13_550 [file="QCAlgorithm.History.cs", label=delisting, span=""];
m14_316 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="438-438"];
m14_252 [cluster="System.Type.GetMethods()", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m14_486 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m14_310 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="247-247"];
m14_321 [cluster="System.Reflection.MethodBase.GetParameters()", file="QCAlgorithm.Indicators.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m14_251 [cluster="object.GetType()", file="QCAlgorithm.Indicators.cs", label="Entry object.GetType()", span="0-0"];
m14_281 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m14_264 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41"];
m14_315 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m14_439 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m14_435 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m14_317 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="181-181"];
m14_424 [cluster="Unk.ToList", file="QCAlgorithm.Indicators.cs", label="Entry Unk.ToList", span=""];
m14_495 [cluster="decimal.SmartRounding()", file="QCAlgorithm.Indicators.cs", label="Entry decimal.SmartRounding()", span="174-174"];
m14_314 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="213-213"];
m14_311 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="387-387"];
m14_292 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="367-367"];
m14_295 [cluster="string.Format(string, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_302 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m14_427 [cluster="Unk.Any", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Any", span=""];
m14_287 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m14_303 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m14_294 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m14_431 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_436 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="349-349"];
m14_419 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="495-495"];
m14_269 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38"];
m14_328 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m14_433 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m14_290 [cluster="QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", span="66-66"];
m14_430 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m14_267 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m14_280 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m14_253 [cluster="Unk.Where", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Where", span=""];
m14_298 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="343-343"];
m14_266 [cluster="QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29"];
m14_249 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_300 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="589-589"];
m14_423 [cluster="Unk.Min", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Min", span=""];
m14_463 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="810-810"];
m14_4 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="107-114"];
m14_5 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="109-109"];
m14_6 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="111-111"];
m14_7 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="return null;", span="113-113"];
m14_8 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="107-114"];
m14_323 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.DeclaringType == algorithm.GetType()", span="167-167"];
m14_318 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="166-166"];
m14_322 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="167-167"];
m14_326 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Status.IsOpen() && x.Symbol == symbol", span="285-285"];
m14_325 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="285-285"];
m14_330 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="466-466"];
m14_329 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="466-466"];
m14_319 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="166-166"];
m14_320 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="166-166"];
m14_324 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="167-167"];
m14_327 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="285-285"];
m14_331 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="466-466"];
m14_441 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="694-694"];
m14_445 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="703-703"];
m14_448 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="704-704"];
m14_451 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="719-719"];
m14_454 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="721-721"];
m14_457 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="721-721"];
m14_460 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="722-722"];
m14_442 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="694-694"];
m14_443 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="694-694"];
m14_446 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="!x.IsInternalFeed", span="703-703"];
m14_447 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="703-703"];
m14_449 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Resolution", span="704-704"];
m14_450 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="704-704"];
m14_452 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.FillForwardResolution.HasValue", span="719-719"];
m14_453 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="719-719"];
m14_455 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.FillForwardResolution.HasValue", span="721-721"];
m14_456 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="721-721"];
m14_458 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.FillForwardResolution.Value", span="721-721"];
m14_459 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="721-721"];
m14_461 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.FillForwardResolution.HasValue", span="722-722"];
m14_462 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="722-722"];
m14_464 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label=x, span="810-810"];
m14_465 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="810-810"];
m14_282 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="600-600"];
m14_437 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="489-489"];
m14_283 [cluster="QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="104-104"];
m14_496 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="165-165"];
m14_296 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="372-372"];
m14_301 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="609-609"];
m14_259 [cluster="Unk.Add", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Add", span=""];
m14_275 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="415-415"];
m14_271 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="906-906"];
m14_488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="911-911"];
m14_490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="915-915"];
m14_489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label=Exception, span="913-913"];
m14_491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="916-916"];
m14_492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Log.Error(err)", span="917-917"];
m14_493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="906-906"];
m14_274 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="157-157"];
m14_279 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m14_273 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="149-149"];
m14_429 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="52-52"];
m14_434 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="486-486"];
m14_304 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="59-59"];
m14_309 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="337-337"];
m14_312 [cluster="System.Exception.Exception(string, System.Exception)", file="QCAlgorithm.Indicators.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m14_260 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m14_313 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
m14_421 [cluster="Unk.Select", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Select", span=""];
m14_277 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m14_440 [cluster="Unk.Subtract", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Subtract", span=""];
m14_305 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m14_307 [cluster="Unk.methodInvoker", file="QCAlgorithm.Indicators.cs", label="Entry Unk.methodInvoker", span=""];
m14_432 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m14_278 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258"];
m14_9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="130-130"];
m14_10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_dataPointCount = 0", span="133-133"];
m14_11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm = algorithm", span="134-134"];
m14_12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="135-135"];
m14_13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="136-136"];
m14_20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithmId = job.AlgorithmId", span="146-146"];
m14_22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_previousTime = algorithm.StartDate.Date", span="148-148"];
m14_23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="153-153"];
m14_24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="154-154"];
m14_25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="155-155"];
m14_26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="156-156"];
m14_27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="159-159"];
m14_28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="160-160"];
m14_29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="161-161"];
m14_30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="162-162"];
m14_31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="165-167"];
m14_32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.SubscriptionManager.Subscriptions", span="170-170"];
m14_34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="176-176"];
m14_37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="184-184"];
m14_42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="196-196"];
m14_43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Stream(job, algorithm, feed, results, token)", span="197-197"];
m14_47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="token.IsCancellationRequested", span="210-210"];
m14_50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="commands.GetCommands()", span="217-217"];
m14_54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="result = command.Run(algorithm)", span="224-224"];
m14_57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Error(string.Format(''{0} Error: {1}'', command.GetType().Name, err.Message))", span="229-229"];
m14_59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.Messages.Enqueue(result)", span="234-234"];
m14_64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="248-248"];
m14_65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="251-251"];
m14_67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SamplePerformance(_previousTime.Date, 0)", span="256-256"];
m14_68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="260-260"];
m14_69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="262-262"];
m14_70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="SampleBenchmark(algorithm, results, time)", span="268-268"];
m14_71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.SetDateTime(time)", span="274-274"];
m14_74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="280-280"];
m14_76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="285-285"];
m14_80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="296-296"];
m14_81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Securities.Add(security)", span="299-299"];
m14_90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="324-324"];
m14_91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="realtime.SetTime(timeSlice.Time)", span="328-328"];
m14_92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="transactions.ProcessSynchronousEvents()", span="331-331"];
m14_98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var security = algorithm.Securities[symbol]", span="339-339"];
m14_101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Liquidate(symbol)", span="344-344"];
m14_104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var submitOrderRequest = new SubmitOrderRequest(OrderType.MarketOnClose, security.Type, security.Symbol,\r\n                                -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="351-352"];
m14_105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="ticket = algorithm.Transactions.ProcessRequest(submitOrderRequest)", span="353-353"];
m14_108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Status == AlgorithmStatus.Stopped", span="361-361"];
m14_110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError != null", span="366-366"];
m14_112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="369-369"];
m14_115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="378-378"];
m14_118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.OnMarginCall(marginCallOrders)", span="385-385"];
m14_120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="390-390"];
m14_122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="393-393"];
m14_124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="398-398"];
m14_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.OnMarginCallWarning()", span="410-410"];
m14_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="414-414"];
m14_138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="427-427"];
m14_141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="437-437"];
m14_143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="441-441"];
m14_148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Dividend for {1}'', algorithm.Time, dividend.Symbol.ToString())", span="451-451"];
m14_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Portfolio.ApplyDividend(dividend)", span="452-452"];
m14_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Split for {1}'', algorithm.Time, split.Symbol.ToString())", span="460-460"];
m14_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Portfolio.ApplySplit(split)", span="461-461"];
m14_153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="463-463"];
m14_154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="466-466"];
m14_155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="467-467"];
m14_157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="472-472"];
m14_167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="496-496"];
m14_176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvoker(algorithm, dataPoint)", span="517-517"];
m14_178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="523-523"];
m14_183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="535-535"];
m14_185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="539-539"];
m14_187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="543-543"];
m14_189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="548-548"];
m14_193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="555-555"];
m14_195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="560-560"];
m14_197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="561-561"];
m14_199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="562-562"];
m14_201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="563-563"];
m14_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="567-567"];
m14_208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.OnData(timeSlice.Slice)", span="578-578"];
m14_210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="583-583"];
m14_214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="transactions.ProcessSynchronousEvents()", span="591-591"];
m14_216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.ProcessSynchronousEvents()", span="597-597"];
m14_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.OnEndOfAlgorithm()", span="607-607"];
m14_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="612-612"];
m14_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="618-618"];
m14_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Liquidate()", span="624-624"];
m14_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="625-625"];
m14_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="626-626"];
m14_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.LogMessage(''Algorithm Stopped'')", span="633-633"];
m14_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="634-634"];
m14_237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="641-641"];
m14_238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="642-642"];
m14_66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="portfolioValue == 0m", span="254-254"];
m14_14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="137-137"];
m14_62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=backtestMode, span="243-243"];
m14_15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="138-138"];
m14_35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers.ContainsKey(config.Type)", span="179-179"];
m14_41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="190-190"];
m14_173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="506-506"];
m14_16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var nextMarginCallTime = DateTime.MinValue", span="139-139"];
m14_136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="nextMarginCallTime = time + marginCallFrequency", span="421-421"];
m14_17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="140-140"];
m14_113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="374-374"];
m14_18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var nextSettlementScanTime = DateTime.MinValue", span="141-141"];
m14_139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="nextSettlementScanTime = time + settlementScanFrequency", span="429-429"];
m14_19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var delistings = new List<Delisting>()", span="143-143"];
m14_137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="425-425"];
m14_93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="delistings.Count != 0", span="333-333"];
m14_95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="i < delistings.Count", span="335-335"];
m14_96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var symbol = delistings[i].Symbol", span="337-337"];
m14_97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var ticket = delistings[i].Ticket", span="338-338"];
m14_102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="delistings.RemoveAt(i--)", span="345-345"];
m14_106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="delistings[i].SetOrderTicket(ticket)", span="354-354"];
m14_21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.Running", span="147-147"];
m14_194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="560-560"];
m14_196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="561-561"];
m14_198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="562-562"];
m14_200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="563-563"];
m14_182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="533-533"];
m14_184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="537-537"];
m14_186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="541-541"];
m14_73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=hasOnDataSymbolChangedEvents, span="278-278"];
m14_36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="genericMethod == null && !hasOnDataSlice", span="182-182"];
m14_33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="config.IsCustomData", span="173-173"];
m14_40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="genericMethod != null", span="188-188"];
m14_38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="185-185"];
m14_39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="186-186"];
m14_44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_currentTimeStepTime = DateTime.UtcNow", span="200-200"];
m14_217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_currentTimeStepTime = DateTime.MinValue", span="601-601"];
m14_46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="205-205"];
m14_48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="212-212"];
m14_60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var time = timeSlice.Time", span="237-237"];
m14_61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_dataPointCount += timeSlice.DataPointCount", span="238-238"];
m14_72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="276-276"];
m14_75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="282-282"];
m14_78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="292-292"];
m14_79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.SecurityChanges.AddedSecurities", span="294-294"];
m14_82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.CashBookUpdateData", span="305-305"];
m14_86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.SecuritiesUpdateData", span="315-315"];
m14_140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="433-433"];
m14_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.Dividends.Values", span="449-449"];
m14_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.Splits.Values", span="456-456"];
m14_161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.ConsolidatorUpdateData", span="482-482"];
m14_171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.CustomData", span="503-503"];
m14_207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.HasData", span="575-575"];
m14_45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status != AlgorithmStatus.Running", span="203-203"];
m14_49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="213-213"];
m14_51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="command == null", span="219-219"];
m14_52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Executing {0}'', command)", span="220-220"];
m14_58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="result = new CommandResultPacket(command, false)", span="230-230"];
m14_53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="CommandResultPacket result", span="221-221"];
m14_55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="226-226"];
m14_56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(err)", span="228-228"];
m14_63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_previousTime.Date != time.Date", span="246-246"];
m14_215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_previousTime = time", span="594-594"];
m14_77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="287-287"];
m14_83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var cash = update.Target", span="307-307"];
m14_84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="update.Data", span="308-308"];
m14_85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="cash.Update(data)", span="310-310"];
m14_87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var security = update.Target", span="317-317"];
m14_88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="update.Data", span="318-318"];
m14_89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="security.SetMarketPrice(data)", span="320-320"];
m14_94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="int i = 0", span="335-335"];
m14_107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="i++", span="335-335"];
m14_99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="ticket != null && ticket.Status == OrderStatus.Filled", span="341-341"];
m14_103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="ticket == null && security.Invested", span="349-349"];
m14_100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="security.Invested", span="344-344"];
m14_109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="363-363"];
m14_111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="368-368"];
m14_114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="bool issueMarginCallWarning", span="377-377"];
m14_116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="marginCallOrders.Count != 0", span="379-379"];
m14_129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=issueMarginCallWarning, span="406-406"];
m14_117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var executingMarginCall = false", span="381-381"];
m14_119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="executingMarginCall = true", span="387-387"];
m14_126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="400-400"];
m14_121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=executedTickets, span="391-391"];
m14_123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="396-396"];
m14_125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="399-399"];
m14_127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="401-401"];
m14_128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="402-402"];
m14_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="412-412"];
m14_133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="415-415"];
m14_134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="416-416"];
m14_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="417-417"];
m14_142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="439-439"];
m14_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="442-442"];
m14_145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="443-443"];
m14_146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="444-444"];
m14_156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="470-470"];
m14_158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="473-473"];
m14_159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="474-474"];
m14_160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="475-475"];
m14_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var consolidators = update.Target.Consolidators", span="484-484"];
m14_166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="494-494"];
m14_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="update.Data", span="485-485"];
m14_164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=consolidators, span="487-487"];
m14_165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="consolidator.Update(dataPoint)", span="489-489"];
m14_168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="497-497"];
m14_169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="498-498"];
m14_170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="499-499"];
m14_172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="MethodInvoker methodInvoker", span="505-505"];
m14_174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="update.Data", span="513-513"];
m14_175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="update.DataType.IsInstanceOfType(dataPoint)", span="515-515"];
m14_177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="521-521"];
m14_179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="524-524"];
m14_180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="525-525"];
m14_181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="526-526"];
m14_188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="546-546"];
m14_190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="549-549"];
m14_191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="550-550"];
m14_192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="551-551"];
m14_202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="565-565"];
m14_204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="568-568"];
m14_205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="569-569"];
m14_206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="570-570"];
m14_209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="581-581"];
m14_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="584-584"];
m14_212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="585-585"];
m14_213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="586-586"];
m14_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="604-604"];
m14_220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="609-609"];
m14_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="611-611"];
m14_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="613-613"];
m14_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="return;", span="614-614"];
m14_226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="621-621"];
m14_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="623-623"];
m14_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status == AlgorithmStatus.Stopped", span="630-630"];
m14_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="632-632"];
m14_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status == AlgorithmStatus.Deleted", span="638-638"];
m14_236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="640-640"];
m14_246 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="130-130"];
m14_299 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m14_250 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="858-858"];
m14_466 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="860-860"];
m14_468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="863-863"];
m14_467 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="newSplitMethodInfo != null", span="861-861"];
m14_470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="return false;", span="866-866"];
m14_469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="return true;", span="864-864"];
m14_471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="858-858"];
m14_257 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m14_291 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="536-536"];
m14_258 [cluster="Unk.DelegateForCallMethod", file="QCAlgorithm.Indicators.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m14_276 [cluster="Unk.]", file="QCAlgorithm.Indicators.cs", label="Entry Unk.]", span=""];
m14_438 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m14_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="105-105"];
m14_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Indicators.cs", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n                return null;\r\n            }", span="107-114"];
m14_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Indicators.cs", label="_liveMode = liveMode", span="115-115"];
m14_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="105-105"];
m14_261 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="680-680"];
m14_337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="bool setStartTime = false", span="682-682"];
m14_378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="yield break;", span="758-758"];
m14_388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="yield return timeSlice;", span="777-777"];
m14_417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="yield return timeSlice;", span="846-846"];
m14_338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var timeZone = algorithm.TimeZone", span="683-683"];
m14_339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var history = algorithm.HistoryProvider", span="684-684"];
m14_341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="688-688"];
m14_344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="693-696"];
m14_347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="703-703"];
m14_351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="708-708"];
m14_366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var security = algorithm.Securities[symbol]", span="744-744"];
m14_374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="752-752"];
m14_377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.RunTimeError = err", span="757-757"];
m14_383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Debug(''Algorithm warming up...'')", span="767-767"];
m14_387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="775-775"];
m14_390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="!algorithm.LiveMode || historyRequests.Count == 0", span="784-784"];
m14_391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.SetFinishedWarmingUp()", span="786-786"];
m14_392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="787-787"];
m14_394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="790-790"];
m14_396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=feed, span="795-795"];
m14_400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="802-802"];
m14_404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="813-813"];
m14_409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.SetFinishedWarmingUp()", span="832-832"];
m14_410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="833-833"];
m14_411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="834-834"];
m14_416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="843-843"];
m14_380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="!setStartTime", span="763-763"];
m14_397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="!setStartTime", span="797-797"];
m14_362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="history.GetHistory(historyRequests, timeZone)", span="735-735"];
m14_340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="DateTime? lastHistoryTimeUtc = null", span="687-687"];
m14_401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="lastHistoryTimeUtc.HasValue", span="806-806"];
m14_342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var start = DateTime.UtcNow.Ticks", span="691-691"];
m14_346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="historyRequests.Count != 0", span="700-700"];
m14_349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=historyRequests, span="705-705"];
m14_355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="719-719"];
m14_356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="721-721"];
m14_357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="722-722"];
m14_359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=historyRequests, span="728-728"];
m14_393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="historyRequests.Count != 0", span="788-788"];
m14_343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="692-692"];
m14_360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="730-730"];
m14_386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="774-774"];
m14_415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="842-842"];
m14_384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="DateTime.UtcNow > nextStatusTime", span="769-769"];
m14_413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="DateTime.UtcNow > nextStatusTime", span="837-837"];
m14_345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="698-698"];
m14_408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="830-830"];
m14_348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="704-704"];
m14_352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="request.Resolution < minResolution", span="710-710"];
m14_353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="request.Resolution = minResolution", span="712-712"];
m14_354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="713-713"];
m14_350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Security security", span="707-707"];
m14_358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="request.FillForwardResolution = minResolution", span="724-724"];
m14_361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="731-731"];
m14_363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="TimeSlice timeSlice", span="737-737"];
m14_365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="slice.Keys", span="742-742"];
m14_367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var data = slice[symbol]", span="745-745"];
m14_364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var paired = new List<DataFeedPacket>()", span="741-741"];
m14_373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="750-750"];
m14_368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var list = new List<BaseData>()", span="746-746"];
m14_369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var ticks = data as List<Tick>", span="747-747"];
m14_372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="list.Add(data)", span="749-749"];
m14_371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="list.AddRange(ticks)", span="748-748"];
m14_370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="ticks != null", span="748-748"];
m14_375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=Exception, span="754-754"];
m14_379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice != null", span="761-761"];
m14_382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_previousTime = timeSlice.Time", span="766-766"];
m14_389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="lastHistoryTimeUtc = timeSlice.Time", span="778-778"];
m14_376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Error(err)", span="756-756"];
m14_381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="setStartTime = true", span="765-765"];
m14_385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="773-773"];
m14_395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="791-791"];
m14_399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="_previousTime = timeSlice.Time", span="800-800"];
m14_403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="810-810"];
m14_398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="setStartTime = true", span="799-799"];
m14_402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="var hasHistoricalData = false", span="809-809"];
m14_406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label=hasHistoricalData, span="819-819"];
m14_405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="hasHistoricalData = true", span="815-815"];
m14_407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="lastHistoryTimeUtc = null", span="825-825"];
m14_412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="835-835"];
m14_414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="841-841"];
m14_418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="680-680"];
m14_308 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", span="875-875"];
m14_472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="newDelistings.Values", span="877-877"];
m14_474 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="delistings.Add(delisting)", span="882-882"];
m14_476 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="var security = algorithm.Securities[delisting.Symbol]", span="884-884"];
m14_478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="var submitOrderRequest = new SubmitOrderRequest(OrderType.MarketOnClose, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="886-887"];
m14_479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="var ticket = algorithm.Transactions.ProcessRequest(submitOrderRequest)", span="888-888"];
m14_482 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="894-894"];
m14_473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="delisting.Type == DelistingType.Warning", span="880-880"];
m14_475 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.ID)", span="883-883"];
m14_480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="delisting.SetOrderTicket(ticket)", span="889-889"];
m14_481 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.ID)", span="893-893"];
m14_477 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="security.Holdings.Quantity == 0", span="885-885"];
m14_483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label=cancelledOrders, span="895-895"];
m14_484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="897-897"];
m14_485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>)", span="875-875"];
m14_254 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Indicators.cs", label="Entry Unk.FirstOrDefault", span=""];
m14_265 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m14_494 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
m14_272 [cluster="System.Math.Round(decimal, int)", file="QCAlgorithm.Indicators.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m14_426 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m14_289 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m14_332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="667-667"];
m14_333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label=_lock, span="669-669"];
m14_334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="state != AlgorithmStatus.Running", span="673-673"];
m14_335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="_algorithm.Status = state", span="675-675"];
m14_336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="667-667"];
m14_262 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m14_444 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="582-582"];
m14_284 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
m14_256 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_293 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="51-51"];
m14_263 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m14_248 [cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithm.Indicators.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m14_286 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", span="478-478"];
m14_268 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="361-361"];
m14_288 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m14_297 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="712-712"];
m14_425 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m14_285 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="67-67"];
m14_420 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m14_428 [cluster="System.Math.Min(long, long)", file="QCAlgorithm.Indicators.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m14_247 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_255 [cluster="System.Type.GetMethod(string, System.Type[])", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m14_270 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m14_487 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="173-173"];
m14_306 [cluster="System.Type.IsInstanceOfType(object)", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
m14_422 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.Indicators.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m14_497 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
m14_498 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m14_499 [file="QCAlgorithm.Indicators.cs", label=symbol, span=""];
m14_500 [file="QCAlgorithm.Indicators.cs", label=split, span=""];
m17_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="674-674"];
m17_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="674-674"];
m17_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="674-674"];
m17_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m17_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m17_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m17_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m17_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m17_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m17_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m17_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m17_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m17_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="683-683"];
m17_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="685-685"];
m17_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="686-686"];
m17_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="687-687"];
m17_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="683-683"];
m17_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m17_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m17_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m17_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m17_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="639-674"];
m17_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m17_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m17_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m17_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m17_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m17_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m17_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m17_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m17_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m17_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m17_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m17_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m17_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''127''},\r\n                {''Average Win'', ''3.65%''},\r\n                {''Average Loss'', ''-2.38%''},\r\n                {''Compounding Annual Return'', ''2.295%''},\r\n                {''Drawdown'', ''31.900%''},\r\n                {''Expectancy'', ''0.209''},\r\n                {''Net Profit'', ''28.377%''},\r\n                {''Sharpe Ratio'', ''0.226''},\r\n                {''Loss Rate'', ''52%''},\r\n                {''Win Rate'', ''48%''},\r\n                {''Profit-Loss Ratio'', ''1.54''},\r\n                {''Alpha'', ''-0.006''},\r\n                {''Beta'', ''0.394''},\r\n                {''Annual Standard Deviation'', ''0.108''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''-0.392''},\r\n                {''Tracking Error'', ''0.135''},\r\n                {''Treynor Ratio'', ''0.062''},\r\n                {''Total Fees'', ''$604.31''},\r\n            }", span="364-385"];
m17_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m17_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m17_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m17_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m17_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m17_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=1, file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.20%''},\r\n                {''Compounding Annual Return'', ''-42.722%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.168''},\r\n                {''Net Profit'', ''-0.103%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''1.50''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", prediction=11, span="501-522"];
m17_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="524-545"];
m17_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="547-568"];
m17_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="570-591"];
m17_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''1.29%''},\r\n                {''Average Loss'', ''0.0%''},\r\n                {''Compounding Annual Return'', ''920.568%''},\r\n                {''Drawdown'', ''3.300%''},\r\n                {''Expectancy'', ''-0.333''},\r\n                {''Net Profit'', ''2.578%''},\r\n                {''Sharpe Ratio'', ''3.031''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.001''},\r\n                {''Beta'', ''0.995''},\r\n                {''Annual Standard Deviation'', ''0.451''},\r\n                {''Annual Variance'', ''0.203''},\r\n                {''Information Ratio'', ''-3.42''},\r\n                {''Tracking Error'', ''0.002''},\r\n                {''Treynor Ratio'', ''1.374''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="593-614"];
m17_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="616-637"];
m17_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m17_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m17_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m17_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m17_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m17_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m17_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m18_0 [cluster="QuantConnect.Brokerages.Tradier.TradierQuote.TradierQuote()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierQuote.TradierQuote()", span="218-218"];
m18_1 [cluster="QuantConnect.Brokerages.Tradier.TradierQuote.TradierQuote()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierQuote.TradierQuote()", span="218-218"];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m1_17 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=removed, style=dashed];
m1_4 -> m1_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm", style=dashed];
m1_26 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm", style=dashed];
m1_26 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm", style=dashed];
m1_26 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.UserDefinedUniverseAlgorithm", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m2_0 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m2_4 -> m2_15  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m2_11 -> m2_16  [color=darkseagreen4, key=1, label=addUnderlyingEvent, style=dashed];
m2_12 -> m2_16  [color=darkseagreen4, key=1, label=optionRemoveEvent, style=dashed];
m2_12 -> m2_17  [color=darkseagreen4, key=1, label=optionRemoveEvent, style=dashed];
m3_55 -> m3_57  [color=darkseagreen4, key=1, label=algorithmPath, style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_4 -> m3_14  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m3_4 -> m3_15  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m3_4 -> m3_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_4 -> m3_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m3_25 -> m3_57  [color=darkseagreen4, key=1, label=engine, style=dashed];
m3_26 -> m3_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_33  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m3_28 -> m3_34  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m3_33 -> m3_33  [color=darkseagreen4, key=1, label=stat, style=dashed];
m3_34 -> m3_34  [color=darkseagreen4, key=1, label=stat, style=dashed];
m3_63 -> m3_57  [color=darkseagreen4, key=1, label=engine, style=dashed];
m4_43 -> m4_46  [color=green, key=1, label=sb, style=dashed];
m4_43 -> m4_49  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=filename, style=dashed];
m4_24 -> m4_29  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_24 -> m4_32  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_24 -> m4_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_24 -> m4_22  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_26 -> m4_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label=dayOfData, style=dashed];
m4_30 -> m4_33  [color=darkseagreen4, key=1, label=filename, style=dashed];
m4_13 -> m4_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m4_13 -> m4_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_58 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.FxcmVolumeWriter", style=dashed];
m4_58 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.FxcmVolumeWriter", style=dashed];
m4_58 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.FxcmVolumeWriter", style=dashed];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_6 -> m6_8  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_6 -> m6_9  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_26 -> m6_40  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_28  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_43  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_30  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_46  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_32  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_49  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_34  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_52  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_36  [color=green, key=1, label=mapper, style=dashed];
m6_26 -> m6_55  [color=green, key=1, label=mapper, style=dashed];
m6_27 -> m6_39  [color=green, key=1, label="lambda expression", style=dashed];
m6_28 -> m6_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_32 -> m6_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_34 -> m6_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_36 -> m6_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_29 -> m6_46  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_31 -> m6_49  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_33 -> m6_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_35 -> m6_55  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_57 -> m6_40  [color=green, key=1, label=mapper, style=dashed];
m6_57 -> m6_43  [color=darkseagreen4, key=1, label=mapper, style=dashed];
m6_57 -> m6_46  [color=darkseagreen4, key=1, label=mapper, style=dashed];
m6_57 -> m6_49  [color=darkseagreen4, key=1, label=mapper, style=dashed];
m6_57 -> m6_52  [color=darkseagreen4, key=1, label=mapper, style=dashed];
m6_57 -> m6_55  [color=darkseagreen4, key=1, label=mapper, style=dashed];
m6_58 -> m6_46  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_58 -> m6_49  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_58 -> m6_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_58 -> m6_55  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m7_5 -> m7_11  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m10_40 -> m10_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_41 -> m10_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_14 -> m10_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_48 -> m10_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_9 -> m10_66  [color=darkseagreen4, key=1, label="QuantConnect.DataNormalizationMode", style=dashed];
m10_70 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_28  [color=green, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_70 -> m10_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m10_71 -> m10_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_72 -> m10_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_73 -> m10_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_74 -> m10_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_75 -> m10_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_76 -> m10_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_43 -> m12_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_43 -> m12_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=type, style=dashed];
m12_48 -> m12_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_50 -> m12_52  [color=darkseagreen4, key=1, label=func, style=dashed];
m12_63 -> m12_66  [color=darkseagreen4, key=1, label=T, style=dashed];
m12_64 -> m12_67  [color=darkseagreen4, key=1, label=clone, style=dashed];
m12_28 -> m12_30  [color=darkseagreen4, key=1, label=factory, style=dashed];
m12_5 -> m12_29  [color=green, key=1, label="System.Type", style=dashed];
m12_5 -> m12_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_5 -> m12_12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_8 -> m12_29  [color=green, key=1, label="System.Type", style=dashed];
m12_8 -> m12_12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_16 -> m12_27  [color=darkseagreen4, key=1, label=param, style=dashed];
m12_21 -> m12_23  [color=darkseagreen4, key=1, label=paramType, style=dashed];
m12_10 -> m12_19  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m12_13 -> m12_21  [color=darkseagreen4, key=1, label=resolutions, style=dashed];
m12_15 -> m12_21  [color=darkseagreen4, key=1, label=paramsInfo, style=dashed];
m12_15 -> m12_19  [color=darkseagreen4, key=1, label=paramsInfo, style=dashed];
m12_17 -> m12_24  [color=darkseagreen4, key=1, label=argsExp, style=dashed];
m12_18 -> m12_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_18 -> m12_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_18 -> m12_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_11 -> m12_21  [color=darkseagreen4, key=1, label=resolutions, style=dashed];
m12_25 -> m12_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_0 -> m12_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m13_43 -> m13_46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_78  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_80  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_81  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_84  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_85  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_88  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_97  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_104  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_132  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_133  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_139  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_142  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_153  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_168  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_180  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_181  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_182  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_191  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_192  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_193  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_194  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_195  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_196  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_200  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_201  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_207  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_43 -> m13_208  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_283 -> m13_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m13_99 -> m13_102  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_99 -> m13_108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_102 -> m13_104  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_102 -> m13_106  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_107 -> m13_112  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m13_28 -> m13_181  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m13_27 -> m13_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_27 -> m13_228  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_27 -> m13_229  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_27 -> m13_230  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_27 -> m13_231  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_27 -> m13_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_217 -> m13_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_217 -> m13_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_269 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_163  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_246  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_269 -> m13_251  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_44 -> m13_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_72 -> m13_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_73 -> m13_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_282 -> m13_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_50 -> m13_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m13_50 -> m13_57  [color=darkseagreen4, key=1, label=command, style=dashed];
m13_341 -> m13_341  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
m13_455 -> m13_455  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m13_55 -> m13_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_60 -> m13_63  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_74  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_76  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_77  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_105  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_129  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_60 -> m13_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m13_76 -> m13_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_225 -> m13_227  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_225 -> m13_228  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_227 -> m13_230  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_227 -> m13_232  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_227 -> m13_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_244 -> m13_248  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_244 -> m13_251  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_246 -> m13_248  [color=darkseagreen4, key=1, label=start, style=dashed];
m13_246 -> m13_251  [color=darkseagreen4, key=1, label=start, style=dashed];
m13_247 -> m13_251  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_248 -> m13_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_224 -> m13_233  [color=darkseagreen4, key=1, label=requests, style=dashed];
m13_224 -> m13_234  [color=darkseagreen4, key=1, label=requests, style=dashed];
m13_69 -> m13_243  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_69 -> m13_245  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_77 -> m13_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_81 -> m13_334  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m13_82 -> m13_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_223 -> m13_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_228 -> m13_230  [color=darkseagreen4, key=1, label=res, style=dashed];
m13_243 -> m13_246  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_245 -> m13_247  [color=darkseagreen4, key=1, label=res, style=dashed];
m13_250 -> m13_494  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m13_71 -> m13_73  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m13_284 -> m13_251  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_262 -> m13_262  [color=darkseagreen4, key=1, label=sub, style=dashed];
m13_262 -> m13_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_45 -> m13_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_47 -> m13_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_277 -> m13_227  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_277 -> m13_228  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_276 -> m13_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_133 -> m13_137  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_274 -> m13_80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_281 -> m13_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_273 -> m13_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_18 -> m13_129  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
m13_19 -> m13_99  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m13_19 -> m13_190  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m13_23 -> m13_194  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m13_24 -> m13_196  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
m13_167 -> m13_212  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m13_204 -> m13_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_204 -> m13_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_204 -> m13_208  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_203 -> m13_212  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m13_202 -> m13_209  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m13_279 -> m13_232  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_279 -> m13_231  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_26 -> m13_200  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
m13_288 -> m13_528  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_288 -> m13_529  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m13_512 -> m13_529  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_512 -> m13_530  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_514 -> m13_519  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_514 -> m13_521  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_514 -> m13_524  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_530 -> m13_530  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_275 -> m13_227  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_280 -> m13_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_280 -> m13_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_280 -> m13_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_9 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_9 -> m13_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_331  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_9 -> m13_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_9 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
m13_9 -> m13_57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_74  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m13_9 -> m13_77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m13_9 -> m13_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_87  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_96  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m13_9 -> m13_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m13_9 -> m13_99  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_112  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_114  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_122  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_124  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_133  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_140  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_143  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_144  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_145  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_146  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m13_9 -> m13_147  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_180  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_182  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_190  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_195  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_201  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m13_9 -> m13_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_237  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_9 -> m13_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_240  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_241  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_242  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_9 -> m13_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_9 -> m13_245  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_12 -> m13_66  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_12 -> m13_68  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_12 -> m13_70  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_12 -> m13_243  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_12 -> m13_245  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m13_13 -> m13_62  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m13_13 -> m13_75  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m13_13 -> m13_242  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m13_13 -> m13_244  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m13_13 -> m13_245  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m13_25 -> m13_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_25 -> m13_248  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_25 -> m13_251  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_25 -> m13_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_29 -> m13_183  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
m13_30 -> m13_79  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
m13_31 -> m13_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_31 -> m13_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_31 -> m13_36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
m13_32 -> m13_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_32 -> m13_35  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_32 -> m13_41  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_34 -> m13_36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m13_34 -> m13_40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m13_34 -> m13_41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m13_140 -> m13_144  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_146 -> m13_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_186 -> m13_200  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_238 -> m13_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_238 -> m13_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_14 -> m13_25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_80  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_170  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_180  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_182  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_184  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_195  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_14 -> m13_201  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m13_16 -> m13_105  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m13_85 -> m13_87  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_88 -> m13_126  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_88 -> m13_124  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_92 -> m13_94  [color=darkseagreen4, key=1, label=update, style=dashed];
m13_142 -> m13_144  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_142 -> m13_145  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_142 -> m13_146  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_142 -> m13_338  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_142 -> m13_147  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_153 -> m13_159  [color=darkseagreen4, key=1, label=update, style=dashed];
m13_153 -> m13_161  [color=darkseagreen4, key=1, label=update, style=dashed];
m13_168 -> m13_170  [color=darkseagreen4, key=1, label=update, style=dashed];
m13_192 -> m13_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_89 -> m13_95  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m13_90 -> m13_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_91 -> m13_95  [color=darkseagreen4, key=1, label=start, style=dashed];
m13_93 -> m13_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_93 -> m13_96  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_120 -> m13_124  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m13_123 -> m13_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_154 -> m13_159  [color=darkseagreen4, key=1, label=resolutionTimeSpan, style=dashed];
m13_155 -> m13_159  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_157 -> m13_159  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m13_157 -> m13_160  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m13_156 -> m13_160  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m13_156 -> m13_162  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m13_492 -> m13_494  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m13_278 -> m13_230  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_278 -> m13_229  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m13_261 -> m13_351  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_352  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_364  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_396  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_400  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_261 -> m13_403  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_404  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_405  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_261 -> m13_407  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_409  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m13_261 -> m13_413  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_417  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_422  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_423  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_261 -> m13_424  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_261 -> m13_429  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m13_348 -> m13_393  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m13_348 -> m13_410  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m13_349 -> m13_375  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m13_350 -> m13_375  [color=darkseagreen4, key=1, label=history, style=dashed];
m13_354 -> m13_359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_362  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_368  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_370  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_372  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_375  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_403  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_354 -> m13_406  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m13_357 -> m13_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_360 -> m13_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_364 -> m13_364  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_379 -> m13_386  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_387 -> m13_401  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_409 -> m13_416  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_409 -> m13_421  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_409 -> m13_430  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m13_375 -> m13_378  [color=darkseagreen4, key=1, label=slice, style=dashed];
m13_353 -> m13_414  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m13_353 -> m13_417  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m13_362 -> m13_364  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_362 -> m13_365  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_368 -> m13_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_369 -> m13_466  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_369 -> m13_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_370 -> m13_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_372 -> m13_374  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_356 -> m13_397  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m13_356 -> m13_426  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m13_358 -> m13_421  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m13_361 -> m13_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_361 -> m13_365  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m13_380 -> m13_385  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_377 -> m13_386  [color=darkseagreen4, key=1, label=paired, style=dashed];
m13_381 -> m13_384  [color=darkseagreen4, key=1, label=list, style=dashed];
m13_381 -> m13_385  [color=darkseagreen4, key=1, label=list, style=dashed];
m13_381 -> m13_386  [color=darkseagreen4, key=1, label=list, style=dashed];
m13_382 -> m13_384  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m13_402 -> m13_414  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m13_402 -> m13_417  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m13_394 -> m13_410  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m13_398 -> m13_426  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m13_416 -> m13_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_415 -> m13_419  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
m13_272 -> m13_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_432 -> m13_479  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_432 -> m13_482  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_479 -> m13_486  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_479 -> m13_487  [color=darkseagreen4, key=1, label=security, style=dashed];
m13_483 -> m13_485  [color=darkseagreen4, key=1, label=history, style=dashed];
m13_485 -> m13_487  [color=darkseagreen4, key=1, label=slice, style=dashed];
m13_343 -> m13_345  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m13_314 -> m13_500  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m13_314 -> m13_501  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m13_498 -> m13_500  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m13_498 -> m13_510  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m13_498 -> m13_501  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m13_498 -> m13_502  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m13_498 -> m13_503  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m13_500 -> m13_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_270 -> m13_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m13_546 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_145  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_546 -> m13_352  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m13_547 -> m13_331  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_548 -> m13_334  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m13_549 -> m13_338  [color=darkseagreen4, key=1, label=split, style=dashed];
m13_550 -> m13_510  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m14_442 -> m14_442  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m14_9 -> m14_323  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m14_9 -> m14_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m14_9 -> m14_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
m14_9 -> m14_57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_74  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m14_9 -> m14_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m14_9 -> m14_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m14_9 -> m14_101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_112  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_118  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_122  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_141  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_148  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_149  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_151  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_152  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_176  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_183  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_185  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_187  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_193  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_195  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_197  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_199  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_201  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m14_9 -> m14_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_9 -> m14_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_9 -> m14_237  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m14_9 -> m14_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_12 -> m14_66  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m14_12 -> m14_68  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m14_13 -> m14_62  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m14_23 -> m14_194  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m14_24 -> m14_196  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
m14_25 -> m14_198  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
m14_26 -> m14_200  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
m14_27 -> m14_182  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m14_28 -> m14_184  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m14_29 -> m14_186  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
m14_30 -> m14_73  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
m14_31 -> m14_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_31 -> m14_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_31 -> m14_36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
m14_32 -> m14_35  [color=darkseagreen4, key=1, label=config, style=dashed];
m14_32 -> m14_41  [color=darkseagreen4, key=1, label=config, style=dashed];
m14_34 -> m14_36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m14_34 -> m14_40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m14_34 -> m14_41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m14_43 -> m14_46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_74  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_75  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_78  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_79  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_82  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_86  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_91  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_112  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_140  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_141  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_147  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_150  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_161  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_171  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_182  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_193  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_194  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_195  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_196  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_197  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_198  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_199  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_200  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_201  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_207  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_43 -> m14_208  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_47 -> m14_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m14_50 -> m14_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m14_50 -> m14_57  [color=darkseagreen4, key=1, label=command, style=dashed];
m14_76 -> m14_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_98 -> m14_100  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_98 -> m14_103  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_115 -> m14_118  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m14_115 -> m14_129  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
m14_154 -> m14_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_14 -> m14_35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_74  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_173  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_183  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_185  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_187  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_195  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_197  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_199  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_14 -> m14_201  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m14_173 -> m14_176  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
m14_16 -> m14_113  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m14_18 -> m14_137  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
m14_19 -> m14_93  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m14_19 -> m14_95  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m14_19 -> m14_102  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m14_19 -> m14_106  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m14_19 -> m14_193  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m14_96 -> m14_101  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_97 -> m14_99  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m14_97 -> m14_103  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m14_102 -> m14_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_102 -> m14_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_102 -> m14_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_60 -> m14_63  [color=darkseagreen4, key=1, label=time, style=dashed];
m14_60 -> m14_70  [color=darkseagreen4, key=1, label=time, style=dashed];
m14_60 -> m14_71  [color=darkseagreen4, key=1, label=time, style=dashed];
m14_60 -> m14_113  [color=darkseagreen4, key=1, label=time, style=dashed];
m14_60 -> m14_137  [color=darkseagreen4, key=1, label=time, style=dashed];
m14_75 -> m14_326  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_79 -> m14_81  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_82 -> m14_84  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_86 -> m14_88  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_147 -> m14_149  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m14_150 -> m14_152  [color=darkseagreen4, key=1, label=split, style=dashed];
m14_150 -> m14_153  [color=darkseagreen4, key=1, label=split, style=dashed];
m14_150 -> m14_330  [color=darkseagreen4, key=1, label=split, style=dashed];
m14_150 -> m14_155  [color=darkseagreen4, key=1, label=split, style=dashed];
m14_161 -> m14_163  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_171 -> m14_173  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_171 -> m14_174  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_171 -> m14_175  [color=darkseagreen4, key=1, label=update, style=dashed];
m14_83 -> m14_85  [color=darkseagreen4, key=1, label=cash, style=dashed];
m14_87 -> m14_89  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_87 -> m14_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_94 -> m14_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_94 -> m14_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_94 -> m14_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_107 -> m14_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_162 -> m14_164  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m14_163 -> m14_165  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m14_174 -> m14_176  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m14_250 -> m14_468  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m14_466 -> m14_468  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m14_261 -> m14_351  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_383  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_387  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_261 -> m14_390  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_391  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_392  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_261 -> m14_394  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_396  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m14_261 -> m14_400  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_404  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_409  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_410  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_261 -> m14_411  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_261 -> m14_416  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m14_337 -> m14_380  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m14_337 -> m14_397  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m14_338 -> m14_362  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m14_339 -> m14_362  [color=darkseagreen4, key=1, label=history, style=dashed];
m14_341 -> m14_346  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_349  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_355  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_357  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_362  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_390  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_341 -> m14_393  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m14_344 -> m14_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_347 -> m14_445  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_351 -> m14_351  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_366 -> m14_373  [color=darkseagreen4, key=1, label=security, style=dashed];
m14_374 -> m14_388  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_396 -> m14_403  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_396 -> m14_408  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_396 -> m14_417  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m14_362 -> m14_365  [color=darkseagreen4, key=1, label=slice, style=dashed];
m14_340 -> m14_401  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m14_340 -> m14_404  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m14_349 -> m14_351  [color=darkseagreen4, key=1, label=request, style=dashed];
m14_349 -> m14_352  [color=darkseagreen4, key=1, label=request, style=dashed];
m14_355 -> m14_451  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_356 -> m14_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_356 -> m14_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_357 -> m14_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_359 -> m14_361  [color=darkseagreen4, key=1, label=request, style=dashed];
m14_343 -> m14_384  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m14_343 -> m14_413  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m14_345 -> m14_408  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m14_348 -> m14_448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_348 -> m14_352  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m14_367 -> m14_372  [color=darkseagreen4, key=1, label=data, style=dashed];
m14_364 -> m14_373  [color=darkseagreen4, key=1, label=paired, style=dashed];
m14_368 -> m14_371  [color=darkseagreen4, key=1, label=list, style=dashed];
m14_368 -> m14_372  [color=darkseagreen4, key=1, label=list, style=dashed];
m14_368 -> m14_373  [color=darkseagreen4, key=1, label=list, style=dashed];
m14_369 -> m14_371  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m14_389 -> m14_401  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m14_389 -> m14_404  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m14_381 -> m14_397  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m14_385 -> m14_413  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m14_403 -> m14_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_402 -> m14_406  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
m14_308 -> m14_474  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Data.Market.Delisting>", style=dashed];
m14_472 -> m14_474  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m14_472 -> m14_475  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m14_472 -> m14_480  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m14_472 -> m14_481  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m14_332 -> m14_334  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m14_497 -> m14_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_153  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_497 -> m14_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m14_498 -> m14_323  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_499 -> m14_326  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_500 -> m14_330  [color=darkseagreen4, key=1, label=split, style=dashed];
m17_0 -> m17_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m17_0 -> m17_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m17_11 -> m17_37  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m17_12 -> m17_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m17_37 -> m17_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_13 -> m17_37  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m17_14 -> m17_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m17_15 -> m17_37  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m17_16 -> m17_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m17_17 -> m17_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m17_18 -> m17_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m17_19 -> m17_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m17_20 -> m17_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m17_21 -> m17_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m17_22 -> m17_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m17_23 -> m17_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m17_24 -> m17_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m17_25 -> m17_37  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m17_26 -> m17_37  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m17_27 -> m17_37  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m17_28 -> m17_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m17_29 -> m17_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m17_30 -> m17_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m17_31 -> m17_37  [color=green, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m17_32 -> m17_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m17_33 -> m17_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m17_34 -> m17_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m17_35 -> m17_37  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
}
