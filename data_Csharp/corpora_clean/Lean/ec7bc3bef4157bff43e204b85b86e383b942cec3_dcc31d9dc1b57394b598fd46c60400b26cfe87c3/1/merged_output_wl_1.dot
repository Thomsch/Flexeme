digraph  {
n606 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
n607 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n608 [label=symbol, span=""];
n609 [label=split, span=""];
n610 [label=dataType, span=""];
n611 [label=delisting, span=""];
n612 [label=split, span=""];
n613 [label=security, span=""];
n0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
n1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');\r\n                }\r\n\r\n                return null;\r\n            }", span="110-120"];
n2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="121-121"];
n3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
n4 [cluster="lambda expression", label="Entry lambda expression", span="110-120"];
n5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="112-112"];
n6 [cluster="lambda expression", label="return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');", span="114-116"];
n7 [cluster="lambda expression", label="return null;", span="119-119"];
n8 [cluster="lambda expression", label="Exit lambda expression", span="110-120"];
n9 [cluster="double.ToString()", label="Entry double.ToString()", span="0-0"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="140-140"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="141-141"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="142-142"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="143-143"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="154-154"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="156-156"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="161-161"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="162-162"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="163-163"];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="164-164"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="167-167"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="168-168"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="169-169"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="170-170"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="173-175"];
n329 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="175-175"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="178-178"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="184-184"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="192-192"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="204-204"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Stream(algorithm, feed, results, token)", span="205-205"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="218-218"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="leanManager.Update()", span="225-225"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="238-238"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="241-241"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="246-246"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="250-250"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="252-252"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SystemDebugMessage(logMessage)", span="259-259"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="266-266"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.ScanPastEvents(time)", span="276-276"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="280-280"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="286-286"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="291-291"];
n79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="302-302"];
n80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="305-305"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="320-320"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.CashBook", span="324-324"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="335-335"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="338-338"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="341-341"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ProcessDelistedSymbols(algorithm, delistings)", span="344-344"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ProcessSplitSymbols(algorithm, splitWarnings)", span="347-347"];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="350-350"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="355-355"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="358-358"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.MarginCallModel.GetMarginCallOrders(out issueMarginCallWarning)", span="367-367"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="374-374"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="379-379"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="382-382"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="387-387"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="399-399"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="403-403"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="416-416"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="426-426"];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkSecuritiesChanged(timeSlice.SecurityChanges)", span="427-427"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="431-431"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Dividend for {dividend.Symbol}'')", span="441-441"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="442-442"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Split for {split.Symbol}'')", span="456-456"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="457-457"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="459-459"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="462-462"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="463-463"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="468-468"];
n160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="500-500"];
n169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="521-521"];
n171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="527-527"];
n176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="539-539"];
n178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="543-543"];
n180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="547-547"];
n182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="552-552"];
n186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="559-559"];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="577-577"];
n194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="578-578"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="579-579"];
n198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="580-580"];
n200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="584-584"];
n205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="595-595"];
n206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkData(timeSlice.Slice)", span="596-596"];
n208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="601-601"];
n212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="609-609"];
n214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="615-615"];
n215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="618-618"];
n218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="629-629"];
n221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="634-634"];
n224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="640-640"];
n225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="643-643"];
n226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="646-646"];
n229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="652-652"];
n230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="653-653"];
n231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="654-654"];
n234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="661-661"];
n235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="662-662"];
n238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="669-669"];
n239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="670-670"];
n240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="674-674"];
n241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="677-677"];
n242 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="678-678"];
n243 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="679-679"];
n245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="684-684"];
n246 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="688-689"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="244-244"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue <= 0", span="255-255"];
n244 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="682-682"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="144-144"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="233-233"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="274-274"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="145-145"];
n248 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="187-187"];
n43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="198-198"];
n166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="510-510"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="146-146"];
n249 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="410-410"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="147-147"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="363-363"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="148-148"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="418-418"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var delistings = new List<Delisting>()", span="150-150"];
n125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="414-414"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var splitWarnings = new List<Split>()", span="151-151"];
n250 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="HandleSplitSymbols(timeSlice.Slice.Splits, splitWarnings)", span="562-562"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="155-155"];
n251 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="937-937"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="577-577"];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="578-578"];
n195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="579-579"];
n197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="580-580"];
n175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="537-537"];
n177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="541-541"];
n179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="545-545"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="284-284"];
n252 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n253 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n254 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n255 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
n324 [cluster="lambda expression", label="Entry lambda expression", span="174-174"];
n328 [cluster="lambda expression", label="Entry lambda expression", span="175-175"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="190-190"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="config.IsCustomData", span="181-181"];
n256 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod != null", span="196-196"];
n257 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="193-193"];
n258 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="194-194"];
n259 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n260 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n261 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="208-208"];
n216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="623-623"];
n262 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="709-709"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="213-213"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="220-220"];
n53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="227-227"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="228-228"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="282-282"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="288-288"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="298-298"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="300-300"];
n81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="311-311"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="422-422"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="439-439"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="446-446"];
n151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="478-478"];
n164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="507-507"];
n188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Count > 0", span="570-570"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="572-572"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="574-574"];
n204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="592-592"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status != AlgorithmStatus.Running", span="211-211"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="221-221"];
n264 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n265 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="236-236"];
n157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="493-493"];
n213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="612-612"];
n266 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1114-1114"];
n267 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n268 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
n269 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="257-257"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(logMessage)", span="258-258"];
n271 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
n272 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487"];
n273 [cluster="Unk.]", label="Entry Unk.]", span=""];
n332 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="291-291"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="293-293"];
n274 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
n331 [cluster="lambda expression", label="Entry lambda expression", span="291-291"];
n275 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
n276 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
n277 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
n82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var security = update.Target", span="313-313"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="314-314"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="security.SetMarketPrice(data)", span="316-316"];
n278 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540"];
n279 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var cash = kvp.Value", span="326-326"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var updateData = cash.ConversionRateSecurity?.GetLastData()", span="327-327"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="cash.Update(updateData)", span="330-330"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="updateData != null", span="328-328"];
n280 [cluster="QuantConnect.Securities.Security.GetLastData()", label="Entry QuantConnect.Securities.Security.GetLastData()", span="513-513"];
n281 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="97-97"];
n282 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", span="57-57"];
n283 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
n284 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
n285 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="980-980"];
n286 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1054-1054"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="352-352"];
n99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="357-357"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="366-366"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="368-368"];
n287 [cluster="QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", label="Entry QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", span="32-32"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="395-395"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="370-370"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="executingMarginCall = true", span="376-376"];
n288 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="389-389"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=executedTickets, span="380-380"];
n289 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="51-51"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="385-385"];
n290 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n291 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="388-388"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="390-390"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="391-391"];
n292 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="401-401"];
n293 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="437-437"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="404-404"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="405-405"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="406-406"];
n294 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="672-672"];
n295 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="429-429"];
n296 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="432-432"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="433-433"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="434-434"];
n297 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
n298 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="541-541"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="split.Type != SplitType.SplitOccurred", span="451-451"];
n336 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="462-462"];
n299 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="561-561"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="466-466"];
n335 [cluster="lambda expression", label="Entry lambda expression", span="462-462"];
n300 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n301 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
n148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="469-469"];
n149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="470-470"];
n150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="471-471"];
n152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var consolidators = update.Target.Consolidators", span="480-480"];
n159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="498-498"];
n154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="483-483"];
n155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="486-486"];
n153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=consolidators, span="481-481"];
n156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="488-488"];
n158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Scan(localTime)", span="494-494"];
n302 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1132-1132"];
n303 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
n304 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
n305 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
n161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="501-501"];
n162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="502-502"];
n163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="503-503"];
n165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="509-509"];
n167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="517-517"];
n168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.DataType.IsInstanceOfType(dataPoint)", span="519-519"];
n306 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="525-525"];
n307 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
n308 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
n172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="528-528"];
n173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="529-529"];
n174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="530-530"];
n181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="550-550"];
n183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="553-553"];
n184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="554-554"];
n185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="555-555"];
n309 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="952-952"];
n310 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1032-1032"];
n338 [cluster="lambda expression", label="Entry lambda expression", span="572-572"];
n311 [cluster="Unk.Collapse", label="Entry Unk.Collapse", span=""];
n199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="582-582"];
n201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="585-585"];
n202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="586-586"];
n203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="587-587"];
n207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="599-599"];
n312 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
n313 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
n209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="602-602"];
n210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="603-603"];
n211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="604-604"];
n314 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="200-200"];
n315 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="260-260"];
n263 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n270 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109"];
n217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="626-626"];
n219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="631-631"];
n316 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="452-452"];
n220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="633-633"];
n222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="635-635"];
n317 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="636-636"];
n227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="649-649"];
n228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="651-651"];
n232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="658-658"];
n318 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="577-577"];
n319 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
n320 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226"];
n233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="660-660"];
n236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="666-666"];
n237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="668-668"];
n321 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
n322 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="516-516"];
n323 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
n247 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137"];
n325 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="174-174"];
n326 [cluster="lambda expression", label="Exit lambda expression", span="174-174"];
n327 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n330 [cluster="lambda expression", label="Exit lambda expression", span="175-175"];
n333 [cluster="lambda expression", label="Exit lambda expression", span="291-291"];
n334 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
n337 [cluster="lambda expression", label="Exit lambda expression", span="462-462"];
n339 [cluster="lambda expression", label="x.Key.ID.SecurityType == SecurityType.Forex", span="572-572"];
n340 [cluster="lambda expression", label="Exit lambda expression", span="572-572"];
n341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="696-696"];
n342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="698-698"];
n343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="702-702"];
n344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="704-704"];
n345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="696-696"];
n346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="711-711"];
n395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="811-811"];
n405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="830-830"];
n432 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="897-897"];
n347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="712-712"];
n348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="713-713"];
n349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode", span="716-716"];
n350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ProcessVolatilityHistoryRequirements(algorithm)", span="718-718"];
n352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="723-723"];
n355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="728-731"];
n358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="738-738"];
n362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="743-743"];
n377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="779-779"];
n391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="805-805"];
n394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="810-810"];
n400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="820-820"];
n404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="828-828"];
n407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="837-837"];
n408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="839-839"];
n410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="842-842"];
n412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="847-847"];
n416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="854-854"];
n420 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="865-865"];
n425 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="884-884"];
n426 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="885-885"];
n431 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="894-894"];
n397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="816-816"];
n413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="849-849"];
n373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="770-770"];
n351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="722-722"];
n434 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="901-901"];
n417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="858-858"];
n353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="726-726"];
n435 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="594-594"];
n357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="735-735"];
n360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="740-740"];
n366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="754-754"];
n367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="756-756"];
n368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="757-757"];
n370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="763-763"];
n409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="840-840"];
n354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="727-727"];
n371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="765-765"];
n403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="827-827"];
n430 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="893-893"];
n436 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="822-822"];
n428 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="888-888"];
n356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="733-733"];
n437 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n438 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
n439 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
n458 [cluster="lambda expression", label="Entry lambda expression", span="729-729"];
n424 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="882-882"];
n359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="739-739"];
n440 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n462 [cluster="lambda expression", label="Entry lambda expression", span="738-738"];
n465 [cluster="lambda expression", label="Entry lambda expression", span="739-739"];
n363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="745-745"];
n364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="747-747"];
n365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="748-748"];
n361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="742-742"];
n441 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
n442 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
n443 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n468 [cluster="lambda expression", label="Entry lambda expression", span="754-754"];
n471 [cluster="lambda expression", label="Entry lambda expression", span="756-756"];
n474 [cluster="lambda expression", label="Entry lambda expression", span="756-756"];
n369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="759-759"];
n477 [cluster="lambda expression", label="Entry lambda expression", span="757-757"];
n372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="766-766"];
n444 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
n374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="772-772"];
n445 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
n376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="777-777"];
n378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="780-780"];
n375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<DataFeedPacket>()", span="776-776"];
n390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="paired.Add(new DataFeedPacket(security, config, list))", span="802-802"];
n387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", color=red, community=0, label="0: var config = security.Subscriptions.FirstOrDefault(subscription => dataType.IsAssignableFrom(subscription.Type))", span="796-796"];
n379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="781-781"];
n381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="784-784"];
n385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="792-792"];
n386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="dataType = data.GetType()", span="793-793"];
n380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Type dataType", span="782-782"];
n383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="787-787"];
n382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="785-785"];
n384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="dataType = typeof(Tick)", span="788-788"];
n446 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n447 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n481 [cluster="lambda expression", color=red, community=0, label="0: dataType.IsAssignableFrom(subscription.Type)", span="796-796"];
n389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="throw new Exception($''A data subscription for type '{dataType.Name}' was not found.'');", span="799-799"];
n448 [cluster="Unk.GetType", label="Entry Unk.GetType", span=""];
n388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="config == null", span="797-797"];
n480 [cluster="lambda expression", label="Entry lambda expression", span="796-796"];
n449 [cluster="DataFeedPacket.cstr", label="Entry DataFeedPacket.cstr", span=""];
n392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="807-807"];
n396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="814-814"];
n450 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618"];
n451 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="104-104"];
n399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="819-819"];
n406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="831-831"];
n393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="809-809"];
n452 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="818-818"];
n453 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="414-414"];
n402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="826-826"];
n454 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588"];
n411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="843-843"];
n433 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="709-709"];
n415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="852-852"];
n419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="862-862"];
n414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="851-851"];
n418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="861-861"];
n422 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="871-871"];
n455 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n456 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n484 [cluster="lambda expression", label="Entry lambda expression", span="862-862"];
n421 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="867-867"];
n423 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="877-877"];
n457 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
n427 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="886-886"];
n429 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="892-892"];
n459 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="729-729"];
n460 [cluster="lambda expression", label="Exit lambda expression", span="729-729"];
n461 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
n463 [cluster="lambda expression", label="!x.IsInternalFeed", span="738-738"];
n464 [cluster="lambda expression", label="Exit lambda expression", span="738-738"];
n466 [cluster="lambda expression", label="x.Resolution", span="739-739"];
n467 [cluster="lambda expression", label="Exit lambda expression", span="739-739"];
n469 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="754-754"];
n470 [cluster="lambda expression", label="Exit lambda expression", span="754-754"];
n472 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="756-756"];
n473 [cluster="lambda expression", label="Exit lambda expression", span="756-756"];
n475 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="756-756"];
n476 [cluster="lambda expression", label="Exit lambda expression", span="756-756"];
n478 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="757-757"];
n479 [cluster="lambda expression", label="Exit lambda expression", span="757-757"];
n482 [cluster="lambda expression", label="Exit lambda expression", span="796-796"];
n483 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n485 [cluster="lambda expression", label=x, span="862-862"];
n486 [cluster="lambda expression", label="Exit lambda expression", span="862-862"];
n487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="903-903"];
n488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="algorithm.Securities", span="905-905"];
n491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="911-911"];
n492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="historyReq != null && algorithm.HistoryProvider != null", span="913-913"];
n493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="915-915"];
n489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var security = kvp.Value", span="907-907"];
n498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="901-901"];
n490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel != VolatilityModel.Null", span="909-909"];
n496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="slice.Bars.ContainsKey(security.Symbol)", span="920-920"];
n497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="921-921"];
n499 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
n494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="history != null", span="916-916"];
n495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label=history, span="918-918"];
n500 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
n501 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
n502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="939-939"];
n504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="942-942"];
n503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="940-940"];
n506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="945-945"];
n505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="943-943"];
n507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="937-937"];
n508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="newDelistings.Values", span="954-954"];
n510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="959-959"];
n511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.Add(delisting)", span="961-961"];
n514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="968-968"];
n509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delisting.Type == DelistingType.Warning", span="957-957"];
n517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="952-952"];
n520 [cluster="lambda expression", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="959-959"];
n512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="962-962"];
n513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="967-967"];
n519 [cluster="lambda expression", label="Entry lambda expression", span="959-959"];
n515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label=cancelledOrders, span="969-969"];
n518 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="184-184"];
n516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="971-971"];
n521 [cluster="lambda expression", label="Exit lambda expression", span="959-959"];
n522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var i = delistings.Count - 1", span="982-982"];
n524 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var security = algorithm.Securities[delistings[i].Symbol]", span="985-985"];
n526 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var delistingTime = delistings[i].Time", span="989-989"];
n534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="1004-1005"];
n536 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, message)", span="1013-1014"];
n537 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="1019-1020"];
n538 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="algorithm.Transactions.ProcessRequest(request)", span="1023-1023"];
n539 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.RemoveAt(i)", span="1025-1025"];
n523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i >= 0", span="982-982"];
n540 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i--", span="982-982"];
n541 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="980-980"];
n525 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity == 0", span="986-986"];
n527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="990-990"];
n528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="991-991"];
n529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.LocalTime < nextMarketClose", span="993-993"];
n531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Type == SecurityType.Option", span="998-998"];
n532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var option = (Option)security", span="1000-1000"];
n533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity > 0", span="1002-1002"];
n542 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
n543 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
n530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="SubmitOrderRequest request", span="996-996"];
n535 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var message = option.GetPayOff(option.Underlying.Price) > 0\r\n                            ? ''Automatic option assignment on expiration''\r\n                            : ''Option expiration''", span="1009-1011"];
n545 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214"];
n544 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
n546 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
n547 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n548 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="newSplits.Values", span="1034-1034"];
n552 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="!splitWarnings.Any(x => x.Symbol == split.Symbol && x.Type == SplitType.Warning)", span="1044-1044"];
n553 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="splitWarnings.Add(split)", span="1046-1046"];
n549 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="split.Type != SplitType.Warning", span="1036-1036"];
n554 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1032-1032"];
n550 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Log.Trace($''AlgorithmManager.Run() Security split occurred: {split}'')", span="1038-1038"];
n551 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Log.Trace($''AlgorithmManager.Run() Security split warning: {split}'')", span="1042-1042"];
n556 [cluster="lambda expression", label="x.Symbol == split.Symbol && x.Type == SplitType.Warning", span="1044-1044"];
n555 [cluster="lambda expression", label="Entry lambda expression", span="1044-1044"];
n557 [cluster="lambda expression", label="Exit lambda expression", span="1044-1044"];
n558 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="int i = splitWarnings.Count - 1", span="1060-1060"];
n560 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var split = splitWarnings[i]", span="1062-1062"];
n561 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var security = algorithm.Securities[split.Symbol]", span="1063-1063"];
n566 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var derivatives = algorithm.Securities.Where(kvp => kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock\r\n                )", span="1076-1081"];
n570 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Transactions.CancelOpenOrders(optionContractSymbol, ''Canceled due to impending split. Separate MarketOnClose order submitted to liquidate position.'')", span="1089-1089"];
n571 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var request = new SubmitOrderRequest(OrderType.MarketOnClose, optionContractSecurity.Type, optionContractSymbol,\r\n                        -optionContractSecurity.Holdings.Quantity, 0, 0, algorithm.UtcTime,\r\n                        ''Liquidated due to impending split. Option splits are not currently supported.''\r\n                    )", span="1091-1094"];
n572 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Transactions.AddOrder(request)", span="1097-1097"];
n574 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Debug($''MarktetOnClose order submitted for option contract '{optionContractSymbol}' due to impending {split.Symbol.Value} split event. ''\r\n                        + ''Option splits are not currently supported.'')", span="1102-1103"];
n575 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="splitWarnings.RemoveAt(i)", span="1107-1107"];
n559 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="i >= 0", span="1060-1060"];
n576 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="i--", span="1060-1060"];
n577 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1054-1054"];
n562 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="1065-1065"];
n563 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var highestResolutionSubscription = security.Subscriptions.OrderBy(sub => sub.Resolution).First()", span="1068-1068"];
n564 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var latestMarketOnCloseTimeRoundedDownByResolution = nextMarketClose.Subtract(MarketOnCloseOrder.DefaultSubmissionTimeBuffer)\r\n                    .RoundDownInTimeZone(security.Resolution.ToTimeSpan(), security.Exchange.TimeZone, highestResolutionSubscription.DataTimeZone)", span="1069-1070"];
n565 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="security.LocalTime < latestMarketOnCloseTimeRoundedDownByResolution", span="1073-1073"];
n589 [cluster="lambda expression", label="kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock", span="1076-1080"];
n578 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n579 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n585 [cluster="lambda expression", label="Entry lambda expression", span="1068-1068"];
n580 [cluster="System.DateTime.Subtract(System.TimeSpan)", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
n581 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496"];
n567 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label=derivatives, span="1083-1083"];
n588 [cluster="lambda expression", label="Entry lambda expression", span="1076-1080"];
n568 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var optionContractSymbol = kvp.Key", span="1085-1085"];
n569 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var optionContractSecurity = (Option) kvp.Value", span="1086-1086"];
n573 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="optionContractSecurity.IsTradable = false", span="1100-1100"];
n582 [cluster="Unk.CancelOpenOrders", label="Entry Unk.CancelOpenOrders", span=""];
n583 [cluster="SubmitOrderRequest.cstr", label="Entry SubmitOrderRequest.cstr", span=""];
n584 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
n586 [cluster="lambda expression", label="sub.Resolution", span="1068-1068"];
n587 [cluster="lambda expression", label="Exit lambda expression", span="1068-1068"];
n590 [cluster="lambda expression", label="Exit lambda expression", span="1076-1080"];
n591 [cluster="QuantConnect.Symbol.IsCanonical()", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
n592 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1119-1119"];
n594 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="1123-1123"];
n593 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="1121-1121"];
n597 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1114-1114"];
n598 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
n599 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="208-208"];
n600 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
n595 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1124-1124"];
n596 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="1125-1125"];
n601 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="config.Increment == TimeSpan.Zero", span="1134-1134"];
n603 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1139-1139"];
n604 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return dataPointEndTime == roundedDataPointEndTime;", span="1140-1140"];
n602 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return true;", span="1136-1136"];
n605 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1132-1132"];
m0_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="709-709"];
m0_17 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="38-38"];
m0_18 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Debug(''REALTIME: '' + DateTime.Now.ToString(''o'') + '' DATATIME: '' + data.Time.ToString(''o'') + '' REALTIME DELTA: '' + (DateTime.Now - data.Time).TotalSeconds.ToString(''0.000'') + ''sec  COUNT: '' + data.Count + '' FILLFORWARD: '' + data.Count(x => x.Value.IsFillForward))", span="40-40"];
m0_19 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label=AllSymbols, span="42-42"];
m0_20 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="!Portfolio.ContainsKey(symbol)", span="44-44"];
m0_26 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Time.Second % 15 == 0", span="62-62"];
m0_21 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="!Portfolio[symbol].Invested", span="46-46"];
m0_22 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Order(symbol, 10)", span="49-49"];
m0_24 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="var holdings = Portfolio[symbol].Quantity", span="55-55"];
m0_25 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Order(symbol, holdings * -2)", span="56-56"];
m0_23 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Time.Second % 15 == 0", span="53-53"];
m0_27 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Log(''Time: '' + Time.ToShortTimeString())", span="62-62"];
m0_28 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="38-38"];
m0_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m0_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="722-722"];
m0_30 [cluster="double.ToString(string)", file="AlgorithmPythonWrapper.cs", label="Entry double.ToString(string)", span="0-0"];
m0_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="AlgorithmPythonWrapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_29 [cluster="System.DateTime.ToString(string)", file="AlgorithmPythonWrapper.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
m0_11 [cluster="System.Collections.Generic.List<T>.List()", file="AlgorithmPythonWrapper.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="611-611"];
m0_0 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Stress_Symbols.Initialize()", span="13-13"];
m0_1 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="AllSymbols = new List<string>()", span="15-15"];
m0_2 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="SetStartDate(2014, 01, 01)", span="18-18"];
m0_3 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="SetEndDate(2015, 01, 01)", span="19-19"];
m0_4 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="SetCash(250000)", span="22-22"];
m0_5 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label=StockSymbols, span="24-24"];
m0_6 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="AddSecurity(SecurityType.Equity, symbol, Resolution.Second, true)", span="26-26"];
m0_7 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label=ForexSymbols, span="29-29"];
m0_8 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="AddSecurity(SecurityType.Forex, symbol, Resolution.Second, true)", span="31-31"];
m0_9 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="AllSymbols = StockSymbols.Concat(ForexSymbols)", span="34-34"];
m0_10 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Stress_Symbols.Initialize()", span="13-13"];
m0_35 [cluster="System.DateTime.ToShortTimeString()", file="AlgorithmPythonWrapper.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m0_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
m0_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
m0_33 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="110-110"];
m0_37 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="Entry lambda expression", span="40-40"];
m0_38 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="x.Value.IsFillForward", span="40-40"];
m0_39 [cluster="lambda expression", file="AlgorithmPythonWrapper.cs", label="Exit lambda expression", span="40-40"];
m0_40 [file="AlgorithmPythonWrapper.cs", label="QuantConnect.Stress_Symbols", span=""];
m2_6 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="36-36"];
m2_7 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Entry lambda expression", span="36-36"];
m2_8 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="grouping.ToList()", span="36-36"];
m2_9 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="36-36"];
m2_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_11 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="46-46"];
m2_12 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="AverageTrueRangeTests.cs", label="return enumerable.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);", span="48-48"];
m2_25 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m2_26 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="return new HashSet<T>(enumerable);", span="71-71"];
m2_27 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m2_41 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m2_129 [cluster="System.Collections.IEnumerator.MoveNext()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_42 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="105-105"];
m2_43 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="return enumerable == null || !enumerable.Any();", span="107-107"];
m2_44 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="105-105"];
m2_130 [cluster="System.Collections.Generic.List<T>.List()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_24 [cluster="Unk.IsTrue", file="AverageTrueRangeTests.cs", label="Entry Unk.IsTrue", span=""];
m2_17 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Entry lambda expression", span="48-48"];
m2_18 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="kvp.Value", span="48-48"];
m2_19 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="48-48"];
m2_20 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="58-58"];
m2_21 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="AverageTrueRangeTests.cs", label="return new ReadOnlyDictionary<K, V>(enumerable.ToDictionary());", span="60-60"];
m2_22 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="58-58"];
m2_60 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="138-138"];
m2_61 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="AverageTrueRangeTests.cs", label="return collection.Select(selector).Median();", span="140-140"];
m2_62 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="138-138"];
m2_93 [cluster="QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", span="40-40"];
m2_114 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m2_111 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Entry lambda expression", span="266-266"];
m2_4 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(int, QuantConnect.Indicators.MovingAverageType)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(int, QuantConnect.Indicators.MovingAverageType)", span="78-78"];
m2_5 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, double)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, string, string, double)", span="128-128"];
m2_14 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m2_15 [cluster="QuantConnect.Indicators.AverageTrueRange.Reset()", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.Reset()", span="125-125"];
m2_16 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="370-370"];
m2_39 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="!set.Contains(item)", span="96-96"];
m2_38 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Entry lambda expression", span="96-96"];
m2_40 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="96-96"];
m2_57 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Entry lambda expression", span="127-127"];
m2_58 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label=x, span="127-127"];
m2_59 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="127-127"];
m2_112 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="hash.Add(selector(x))", span="266-266"];
m2_113 [cluster="lambda expression", file="AverageTrueRangeTests.cs", label="Exit lambda expression", span="266-266"];
m2_86 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="207-207"];
m2_87 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="AverageTrueRangeTests.cs", label="return list.BinarySearch(value, comparer.Compare);", span="209-209"];
m2_88 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="207-207"];
m2_23 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m2_0 [cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", span="26-26"];
m2_1 [cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", color=green, community=0, file="AverageTrueRangeTests.cs", label="0: var atr = new AverageTrueRange(14, MovingAverageType.Simple)", span="28-28"];
m2_2 [cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", color=green, community=0, file="AverageTrueRangeTests.cs", label="0: TestHelper.TestIndicator(atr, ''spy_atr.txt'', ''Average True Range 14'')", span="29-29"];
m2_104 [cluster="System.IComparable.CompareTo(object)", file="AverageTrueRangeTests.cs", label="Entry System.IComparable.CompareTo(object)", span="0-0"];
m2_110 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m2_83 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="194-194"];
m2_84 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="AverageTrueRangeTests.cs", label="return BinarySearch(list, value, Comparer<TItem>.Default);", span="196-196"];
m2_85 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="194-194"];
m2_46 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="113-113"];
m2_47 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="AverageTrueRangeTests.cs", label="return enumerable.Select(selector).DefaultIfEmpty(defaultValue);", span="115-115"];
m2_48 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="113-113"];
m2_32 [cluster="HashSet<TResult>.cstr", file="AverageTrueRangeTests.cs", label="Entry HashSet<TResult>.cstr", span=""];
m2_81 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="AverageTrueRangeTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_63 [cluster="Unk.Median", file="AverageTrueRangeTests.cs", label="Entry Unk.Median", span=""];
m2_115 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="278-278"];
m2_116 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="var e = enumerable.GetEnumerator()", span="280-280"];
m2_123 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="yield return list;", span="294-294"];
m2_126 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="yield return list;", span="299-299"];
m2_121 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="grouper(pred, e.Current)", span="288-288"];
m2_117 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="e.MoveNext()", span="282-282"];
m2_118 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="var list = new List<T> {e.Current}", span="284-284"];
m2_119 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="var pred = e.Current", span="285-285"];
m2_120 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="e.MoveNext()", span="286-286"];
m2_122 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="list.Add(e.Current)", span="290-290"];
m2_124 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="list = new List<T> {e.Current}", span="295-295"];
m2_125 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="pred = e.Current", span="297-297"];
m2_127 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="278-278"];
m2_13 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m2_82 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="AverageTrueRangeTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_29 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m2_30 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="AverageTrueRangeTests.cs", label="return new HashSet<TResult>(enumerable.Select(selector));", span="84-84"];
m2_31 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m2_90 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="218-218"];
m2_91 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="return new MemoizingEnumerable<T>(enumerable);", span="220-220"];
m2_92 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="218-218"];
m2_89 [cluster="System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m2_128 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m2_54 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_28 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_3 [cluster="Unk.ToDictionary", file="AverageTrueRangeTests.cs", label="Entry Unk.ToDictionary", span=""];
m2_55 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m2_94 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="233-233"];
m2_95 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="var current = start", span="236-236"];
m2_98 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="yield return current;", span="241-241"];
m2_101 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="yield return current;", span="249-249"];
m2_96 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label=includeEndPoint, span="237-237"];
m2_97 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="current.CompareTo(end) <= 0", span="239-239"];
m2_99 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="current = incrementer(current)", span="242-242"];
m2_100 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="current.CompareTo(end) < 0", span="247-247"];
m2_102 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="current = incrementer(current)", span="250-250"];
m2_103 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="233-233"];
m2_105 [cluster="System.Func<T, TResult>.Invoke(T)", file="AverageTrueRangeTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_131 [cluster="System.Collections.Generic.List<T>.Add(T)", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_34 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="94-94"];
m2_35 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="AverageTrueRangeTests.cs", label="return enumerable.Where(item => !set.Contains(item));", span="96-96"];
m2_36 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="94-94"];
m2_64 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m2_65 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="list == null", span="154-154"];
m2_67 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="comparer == null", span="158-158"];
m2_70 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="var upper = list.Count - 1", span="164-164"];
m2_73 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="var comparisonResult = comparer(value, list[middle])", span="169-169"];
m2_66 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="throw new ArgumentNullException(''list'');", span="156-156"];
m2_68 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="throw new ArgumentNullException(''comparer'');", span="160-160"];
m2_69 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="var lower = 0", span="163-163"];
m2_71 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="lower <= upper", span="166-166"];
m2_72 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="var middle = lower + (upper - lower) / 2", span="168-168"];
m2_79 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="return ~lower;", span="184-184"];
m2_75 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="upper = middle - 1", span="172-172"];
m2_77 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="lower = middle + 1", span="176-176"];
m2_78 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="return middle;", span="180-180"];
m2_74 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="comparisonResult < 0", span="170-170"];
m2_76 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="comparisonResult > 0", span="174-174"];
m2_80 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="152-152"];
m2_106 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="263-263"];
m2_107 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="AverageTrueRangeTests.cs", label="var hash = new HashSet<TPropery>()", span="265-265"];
m2_108 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="AverageTrueRangeTests.cs", label="return enumerable.Where(x => hash.Add(selector(x)));", span="266-266"];
m2_109 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="263-263"];
m2_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="AverageTrueRangeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_50 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="124-124"];
m2_51 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="var collection = enumerable.ToList()", span="126-126"];
m2_52 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="return collection.OrderBy(x => x).Skip(collection.Count/2).First();", span="127-127"];
m2_53 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="AverageTrueRangeTests.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="124-124"];
m2_33 [cluster="Unk.Select", file="AverageTrueRangeTests.cs", label="Entry Unk.Select", span=""];
m2_49 [cluster="Unk.DefaultIfEmpty", file="AverageTrueRangeTests.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m2_132 [file="AverageTrueRangeTests.cs", label="System.Collections.Generic.ISet<T>", span=""];
m2_133 [file="AverageTrueRangeTests.cs", label="System.Func<T, TPropery>", span=""];
m2_134 [file="AverageTrueRangeTests.cs", label=hash, span=""];
m3_57 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", span="177-177"];
m3_58 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="var mappedSymbol = ''''", span="179-179"];
m3_59 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="symbolMapTable.Keys", span="181-181"];
m3_60 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="splitDate < searchDate", span="183-183"];
m3_61 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="mappedSymbol = symbolMapTable[splitDate]", span="184-184"];
m3_62 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="return mappedSymbol;", span="187-187"];
m3_63 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", span="177-177"];
m3_32 [cluster="QuantConnect.Time.ParseDate(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="118-118"];
m3_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m3_30 [cluster="System.IO.StreamReader.ReadLine()", file="CashBuyingPowerModelTests.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m3_7 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", span="75-75"];
m3_8 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="decimal factor = 1", span="77-77"];
m3_9 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="factorTable.Keys.Reverse()", span="79-79"];
m3_10 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="splitDate.Date < searchDate.Date", span="81-81"];
m3_11 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="factor = factorTable[splitDate]", span="82-82"];
m3_12 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="return factor;", span="84-84"];
m3_13 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", span="75-75"];
m3_35 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", span="120-120"];
m3_36 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="var symbolMapTable = new SortedDictionary<DateTime, string>()", span="122-122"];
m3_37 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="var mapFile = File.ReadAllBytes(DataFolder + ''equity/map_files/'' + symbol.ToLower() + ''.csv'')", span="123-123"];
m3_43 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="symbolMapTable.Add(Time.ParseDate(csv[0]), csv[1])", span="134-134"];
m3_44 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="return symbolMapTable;", span="138-138"];
m3_38 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="var stream = new StreamReader(new MemoryStream(mapFile))", span="126-126"];
m3_39 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="!stream.EndOfStream", span="128-128"];
m3_40 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="var line = stream.ReadLine()", span="130-130"];
m3_41 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="line == null", span="131-131"];
m3_42 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="var csv = line.Split(',')", span="133-133"];
m3_45 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", span="120-120"];
m3_34 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_46 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", span="149-149"];
m3_47 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="var mappedSymbol = symbol", span="151-151"];
m3_48 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="var symbolMapTable = GetMapTable(symbol)", span="155-155"];
m3_50 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="splitDate < searchDate", span="159-159"];
m3_54 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="return mappedSymbol;", span="167-167"];
m3_49 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="symbolMapTable.Keys", span="157-157"];
m3_51 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="mappedSymbol = symbolMapTable[splitDate]", span="160-160"];
m3_52 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label=Exception, span="163-163"];
m3_53 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Log.Error(''GetMappedTick(): '' + err.Message)", span="165-165"];
m3_55 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(string, string, System.DateTime)", span="149-149"];
m3_26 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="CashBuyingPowerModelTests.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m3_6 [cluster="System.IO.File.Exists(string)", file="CashBuyingPowerModelTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m3_27 [cluster="System.IO.File.ReadAllBytes(string)", file="CashBuyingPowerModelTests.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m3_31 [cluster="string.Split(params char[])", file="CashBuyingPowerModelTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_0 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", span="59-59"];
m3_1 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="CashBuyingPowerModelTests.cs", label="File.Exists(DataFolder + ''equity/factor_files/'' + symbol.ToLower() + ''.csv'')", span="62-62"];
m3_2 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="CashBuyingPowerModelTests.cs", label="return true;", span="64-64"];
m3_3 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="CashBuyingPowerModelTests.cs", label="return false;", span="66-66"];
m3_4 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", span="59-59"];
m3_15 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", span="93-93"];
m3_16 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="var factorTable = new SortedDictionary<DateTime, decimal>()", span="96-96"];
m3_17 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="var mapFile = File.ReadAllBytes(DataFolder + ''equity/factor_files/'' + symbol.ToLower() + ''.csv'')", span="97-97"];
m3_23 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="factorTable.Add(Time.ParseDate(csv[0]), Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture) * Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture))", span="107-107"];
m3_24 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="return factorTable;", span="110-110"];
m3_18 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="var stream = new StreamReader(new MemoryStream(mapFile))", span="99-99"];
m3_19 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="!stream.EndOfStream", span="101-101"];
m3_20 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="var line = stream.ReadLine()", span="103-103"];
m3_21 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="line == null", span="104-104"];
m3_22 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="var csv = line.Split(',')", span="106-106"];
m3_25 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="CashBuyingPowerModelTests.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", span="93-93"];
m3_29 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="CashBuyingPowerModelTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m3_5 [cluster="string.ToLower()", file="CashBuyingPowerModelTests.cs", label="Entry string.ToLower()", span="0-0"];
m3_33 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="CashBuyingPowerModelTests.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m3_28 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="CashBuyingPowerModelTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_2 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="SecondLimit = 100", span="80-80"];
m4_3 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="TickLimit = 30", span="81-81"];
m4_10 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="PeriodsSinceMinimum = minimum.Index", span="83-83"];
m4_13 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="return Current;", span="90-90"];
m4_15 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="Controls.cs", label="return SecondLimit;", span="100-100"];
m4_19 [cluster="lambda expression", file="Controls.cs", label="new\r\n                {\r\n                    Value = v,\r\n                    Index = i\r\n                }", span="77-81"];
m4_12 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="PeriodsSinceMinimum++", span="89-89"];
m4_14 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="Exit QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="57-57"];
m4_18 [cluster="lambda expression", file="Controls.cs", label="Entry lambda expression", span="77-81"];
m4_11 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="return minimum.Value;", span="84-84"];
m4_17 [cluster="Unk.First", file="Controls.cs", label="Entry Unk.First", span=""];
m4_16 [cluster="Unk.OrderBy", file="Controls.cs", label="Entry Unk.OrderBy", span=""];
m4_20 [cluster="lambda expression", file="Controls.cs", label="Exit lambda expression", span="77-81"];
m4_0 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="Entry QuantConnect.Packets.Controls.Controls()", span="77-77"];
m4_1 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="MinuteLimit = 500", span="79-79"];
m4_28 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="Controls.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m4_24 [cluster="QuantConnect.Indicators.Minimum.Reset()", file="Controls.cs", label="Entry QuantConnect.Indicators.Minimum.Reset()", span="96-96"];
m4_25 [cluster="QuantConnect.Indicators.Minimum.Reset()", file="Controls.cs", label="PeriodsSinceMinimum = 0", span="98-98"];
m4_26 [cluster="QuantConnect.Indicators.Minimum.Reset()", file="Controls.cs", label="base.Reset()", span="99-99"];
m4_27 [cluster="QuantConnect.Indicators.Minimum.Reset()", file="Controls.cs", label="Exit QuantConnect.Indicators.Minimum.Reset()", span="96-96"];
m4_8 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=green, community=0, file="Controls.cs", label="0: PeriodsSinceMinimum >= Period", span="67-67"];
m4_7 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="return input.Value;", span="64-64"];
m4_4 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="Entry QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="57-57"];
m4_5 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="Samples == 1 || input.Value <= Current.Value", span="59-59"];
m4_6 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="PeriodsSinceMinimum = 0", span="63-63"];
m4_9 [cluster="QuantConnect.Indicators.Minimum.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Controls.cs", label="var minimum = window.Select((v, i) => new\r\n                {\r\n                    Value = v,\r\n                    Index = i\r\n                }).OrderBy(x => x.Value.Value).First()", span="77-81"];
m4_21 [cluster="lambda expression", file="Controls.cs", label="QuantConnect.Packets.Controls", span=""];
m4_22 [cluster="lambda expression", file="Controls.cs", label="x.Value.Value", span="81-81"];
m4_23 [cluster="lambda expression", file="Controls.cs", label="Exit lambda expression", span="81-81"];
m4_29 [file="Controls.cs", label="QuantConnect.Indicators.Minimum", span=""];
m5_0 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="Credentials.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", span="27-27"];
m5_1 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="Credentials.cs", label="string file = ''../../../Data/equity/usa/minute/spy/20131008_trade.zip''", span="29-29"];
m5_2 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="Credentials.cs", label="int expected = 827", span="31-31"];
m5_3 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", color=red, community=0, file="Credentials.cs", label="0: int actual = QuantConnect.Compression.ReadLines(file).Count()", span="32-32"];
m5_4 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="Credentials.cs", label="Assert.AreEqual(expected, actual)", span="34-34"];
m5_5 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="Credentials.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", span="27-27"];
m5_20 [cluster="System.IO.File.WriteAllBytes(string, byte[])", file="Credentials.cs", label="Entry System.IO.File.WriteAllBytes(string, byte[])", span="0-0"];
m5_6 [cluster="QuantConnect.Compression.ReadLines(string)", file="Credentials.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="575-575"];
m5_33 [cluster="Unk.Unzip", file="Credentials.cs", label="Entry Unk.Unzip", span=""];
m5_18 [cluster="System.Text.Encoding.GetBytes(string)", file="Credentials.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m5_34 [cluster="Unk.ReadToEnd", file="Credentials.cs", label="Entry Unk.ReadToEnd", span=""];
m5_44 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", span="66-66"];
m5_35 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", span="66-66"];
m5_36 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="var zipFileName = Path.Combine(''TestData'', ''20151224_quote_american.zip'')", span="68-68"];
m5_37 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="var entryFileNames = QuantConnect.Compression.GetZipEntryFileNames(zipFileName).ToList()", span="69-69"];
m5_38 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="var expectedFileNames = new[]\r\n            {\r\n                ''20151224_xlre_tick_quote_american_call_210000_20160819.csv'',\r\n                ''20151224_xlre_tick_quote_american_call_220000_20160819.csv'',\r\n                ''20151224_xlre_tick_quote_american_put_370000_20160819.csv''\r\n            }", span="71-76"];
m5_39 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="Assert.AreEqual(expectedFileNames.Length, entryFileNames.Count)", span="78-78"];
m5_41 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="i < entryFileNames.Count", span="80-80"];
m5_42 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="Assert.AreEqual(expectedFileNames[i], entryFileNames[i])", span="82-82"];
m5_40 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="var i = 0", span="80-80"];
m5_43 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="Credentials.cs", label="i++", span="80-80"];
m5_8 [cluster="Unk.AreEqual", file="Credentials.cs", label="Entry Unk.AreEqual", span=""];
m5_9 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="Credentials.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", span="38-38"];
m5_10 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=red, community=0, file="Credentials.cs", label="0: string fileContents = ''this is the contents of a file!''", span="40-40"];
m5_11 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=red, community=0, file="Credentials.cs", label="0: var fileBytes = Encoding.ASCII.GetBytes(fileContents)", span="41-41"];
m5_16 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="Credentials.cs", label="Assert.AreEqual(fileContents, contents)", span="48-48"];
m5_12 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=red, community=0, file="Credentials.cs", label="0: var zippedBytes = QuantConnect.Compression.ZipBytes(fileBytes, ''entry'')", span="42-42"];
m5_13 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=red, community=0, file="Credentials.cs", label="0: File.WriteAllBytes(''entry.zip'', zippedBytes)", span="43-43"];
m5_14 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=red, community=0, file="Credentials.cs", label="0: var streamReader = QuantConnect.Compression.UnzipStreamToStreamReader(File.OpenRead(''entry.zip''))", span="45-45"];
m5_15 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="Credentials.cs", label="var contents = streamReader.ReadToEnd()", span="47-47"];
m5_17 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="Credentials.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", span="38-38"];
m5_19 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Credentials.cs", label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243"];
m5_22 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Credentials.cs", label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="625-625"];
m5_23 [cluster="System.IO.StreamReader.ReadToEnd()", file="Credentials.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m5_21 [cluster="System.IO.File.OpenRead(string)", file="Credentials.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m5_31 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="Credentials.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", span="53-53"];
m5_24 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="Credentials.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", span="53-53"];
m5_25 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", color=red, community=0, file="Credentials.cs", label="0: var zip = Path.Combine(''TestData'', ''multizip.zip'')", span="55-55"];
m5_26 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", color=red, community=0, file="Credentials.cs", label="0: ZipFile zipFile", span="56-56"];
m5_27 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", color=red, community=0, file="Credentials.cs", label="0: var entryStream = QuantConnect.Compression.Unzip(zip, ''multizip/two.txt'', out zipFile)", span="57-57"];
m5_28 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="Credentials.cs", label=zipFile, span="58-58"];
m5_29 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="Credentials.cs", label="var text = entryStream.ReadToEnd()", span="60-60"];
m5_30 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="Credentials.cs", label="Assert.AreEqual(''2'', text)", span="61-61"];
m5_45 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Credentials.cs", label="Entry QuantConnect.Compression.GetZipEntryFileNames(string)", span="847-847"];
m5_32 [cluster="System.IO.Path.Combine(string, string)", file="Credentials.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m5_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Credentials.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_0 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="CredentialsManager.cs", label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", span="30-30"];
m6_1 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", color=green, community=0, file="CredentialsManager.cs", label="0: var credential = new Credential { Target = CREDENTIAL_TARGET }", span="32-32"];
m6_2 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="CredentialsManager.cs", label="!credential.Load()", span="33-33"];
m6_4 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="CredentialsManager.cs", label="return new Credentials(credential.Username, credential.Password);", span="38-38"];
m6_3 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="CredentialsManager.cs", label="return null;", span="35-35"];
m6_5 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="CredentialsManager.cs", label="Exit QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", span="30-30"];
m6_7 [cluster="Unk.Load", file="CredentialsManager.cs", label="Entry Unk.Load", span=""];
m6_9 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", file="CredentialsManager.cs", label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", span="45-45"];
m6_10 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="CredentialsManager.cs", label="0: var credential = new Credential\r\n            {\r\n                Target = CREDENTIAL_TARGET,\r\n                Username = credentials.UserId,\r\n                Password = credentials.AccessToken,\r\n                PersistanceType = PersistanceType.LocalComputer\r\n            }", span="47-53"];
m6_11 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", file="CredentialsManager.cs", label="credential.Save()", span="55-55"];
m6_12 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", file="CredentialsManager.cs", label="Exit QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", span="45-45"];
m6_14 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", file="CredentialsManager.cs", label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", span="61-61"];
m6_15 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", color=green, community=0, file="CredentialsManager.cs", label="0: var credential = new Credential { Target = CREDENTIAL_TARGET }", span="63-63"];
m6_16 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", file="CredentialsManager.cs", label="credential.Delete()", span="64-64"];
m6_17 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", file="CredentialsManager.cs", label="Exit QuantConnect.VisualStudioPlugin.CredentialsManager.ForgetCredentials()", span="61-61"];
m6_6 [cluster="Credential.cstr", file="CredentialsManager.cs", label="Entry Credential.cstr", span=""];
m6_8 [cluster="Credentials.cstr", file="CredentialsManager.cs", label="Entry Credentials.cstr", span=""];
m6_13 [cluster="Unk.Save", file="CredentialsManager.cs", label="Entry Unk.Save", span=""];
m6_18 [cluster="Unk.Delete", file="CredentialsManager.cs", label="Entry Unk.Delete", span=""];
m7_4 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Securities.PortfolioEvent.ToString()", span="50-50"];
m7_5 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="DefaultAlphaHandler.cs", label="return string.Format(''Symbol: {0} Quantity: {1}'', Symbol, Quantity);", span="52-52"];
m7_6 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.Securities.PortfolioEvent.ToString()", span="50-50"];
m7_0 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", span="37-37"];
m7_1 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", color=red, community=0, file="DefaultAlphaHandler.cs", label="0: Symbol = symbol", span="39-39"];
m7_2 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="DefaultAlphaHandler.cs", label="Quantity = quantity", span="40-40"];
m7_3 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", span="37-37"];
m7_8 [file="DefaultAlphaHandler.cs", label="QuantConnect.Securities.PortfolioEvent", span=""];
m8_9 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="Extensions.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="43-43"];
m8_8 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="Extensions.cs", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="54-54"];
m8_18 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="Extensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
m8_10 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="89-89"];
m8_11 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="decimal typicalPrice = (input.High + input.Low + input.Close) / 3.0m", span="90-90"];
m8_12 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="TypicalPriceAverage.Update(input.Time, typicalPrice)", span="92-92"];
m8_13 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="TypicalPriceMeanDeviation.Update(input.Time, typicalPrice)", span="93-93"];
m8_16 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="return (typicalPrice - TypicalPriceAverage.Current) / (_k * TypicalPriceMeanDeviation.Current);", span="98-98"];
m8_14 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="TypicalPriceMeanDeviation.Current == 0.0m", span="95-95"];
m8_15 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="return 0.0m;", span="96-96"];
m8_17 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", file="Extensions.cs", label="Exit QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="89-89"];
m8_2 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="69-69"];
m8_3 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="_period = period", span="71-71"];
m8_4 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="MovingAverageType = movingAverageType", span="72-72"];
m8_5 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="TypicalPriceAverage = movingAverageType.AsIndicator(name + ''_TypicalPriceAvg'', period)", span="73-73"];
m8_6 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="TypicalPriceMeanDeviation = new MeanAbsoluteDeviation(name + ''_TypicalPriceMAD'', period)", span="74-74"];
m8_7 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="69-69"];
m8_0 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="58-58"];
m8_1 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", file="Extensions.cs", label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="58-58"];
m8_19 [file="Extensions.cs", label="QuantConnect.Indicators.CommodityChannelIndex", span=""];
m10_11 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m10_30 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string, System.Text.RegularExpressions.RegexOptions)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m10_0 [cluster="QuantConnect.Data.Custom.DailyFx.DailyFx()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFx.DailyFx()", span="118-118"];
m10_3 [cluster="JsonSerializerSettings.cstr", color=green, community=0, file="GetMaximumOrderQuantityForTargetValueResult.cs", label="0: Entry JsonSerializerSettings.cstr", span=""];
m10_2 [cluster="QuantConnect.Data.Custom.DailyFx.DailyFx()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.DailyFx()", span="118-118"];
m10_1 [cluster="QuantConnect.Data.Custom.DailyFx.DailyFx()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="_jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind\r\n            }", span="120-125"];
m10_4 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="139-139"];
m10_12 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="161-161"];
m10_13 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="var dailyfxList = JsonConvert.DeserializeObject<List<DailyFx>>(content, _jsonSerializerSettings)", span="163-163"];
m10_15 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="dailyfx.Symbol = config.Symbol", span="167-167"];
m10_20 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return new BaseDataCollection(date, config.Symbol, dailyfxList);", span="187-187"];
m10_14 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label=dailyfxList, span="165-165"];
m10_16 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="dailyfx.Time = dailyfx.DisplayDate.Date.AddHours(dailyfx.DisplayTime.TimeOfDay.TotalHours)", span="170-170"];
m10_17 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="dailyfx.Value = 0", span="174-174"];
m10_18 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="!string.IsNullOrEmpty(Actual)", span="177-177"];
m10_19 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="dailyfx.Value = Convert.ToDecimal(RemoveSpecialCharacters(Actual))", span="179-179"];
m10_21 [cluster="QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="161-161"];
m10_68 [cluster="System.NotImplementedException.NotImplementedException(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m10_23 [cluster="Unk.AddHours", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry Unk.AddHours", span=""];
m10_10 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", span=""];
m10_31 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="var start = date.ToString(''yyyy'', CultureInfo.InvariantCulture)", span="205-205"];
m10_33 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="date.Month < 4", span="208-208"];
m10_36 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="date.Month < 7", span="213-213"];
m10_39 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="date.Month < 10", span="218-218"];
m10_32 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="var end = start", span="206-206"];
m10_34 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="start += ''0101''", span="210-210"];
m10_37 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="start += ''0401''", span="215-215"];
m10_40 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="start += ''0701''", span="220-220"];
m10_42 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="start += ''1001''", span="225-225"];
m10_35 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="end += ''03312359''", span="211-211"];
m10_38 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="end += ''06302359''", span="216-216"];
m10_41 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="end += ''09302359''", span="221-221"];
m10_43 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="end += ''12312359''", span="226-226"];
m10_44 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return string.Format(''&startdate={0}&enddate={1}'', start, end);", span="228-228"];
m10_45 [cluster="QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)", span="203-203"];
m10_51 [cluster="System.DateTime.ToString(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m10_5 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="var url = ''https://content.dailyfx.com/getData?contenttype=calendarEvent&description=true&format=json_pretty''", span="142-142"];
m10_6 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="!isLiveMode", span="145-145"];
m10_7 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="url += GetQuarter(date)", span="147-147"];
m10_8 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return new SubscriptionDataSource(url, SubscriptionTransportMedium.Rest, FileFormat.Collection);", span="150-150"];
m10_9 [cluster="QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="139-139"];
m10_22 [cluster="Unk.>", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry Unk.>", span=""];
m10_25 [cluster="QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(string)", span="193-193"];
m10_28 [cluster="QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return Regex.Replace(str, ''[^a-zA-Z0-9_.]+'', '''', RegexOptions.Compiled);", span="195-195"];
m10_29 [cluster="QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(string)", span="193-193"];
m10_48 [cluster="QuantConnect.Data.Custom.DailyFx.ToString()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFx.ToString()", span="235-235"];
m10_49 [cluster="QuantConnect.Data.Custom.DailyFx.ToString()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return string.Format(''DailyFx [{0} {1} {2} {3} {4}]'', Time.ToString(''u''), Title, Currency, Importance, Meaning);", span="237-237"];
m10_50 [cluster="QuantConnect.Data.Custom.DailyFx.ToString()", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFx.ToString()", span="235-235"];
m10_65 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="321-321"];
m10_66 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="throw new NotImplementedException(''DailyFx Enum Converter is ReadOnly'');", span="323-323"];
m10_67 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="321-321"];
m10_27 [cluster="BaseDataCollection.cstr", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry BaseDataCollection.cstr", span=""];
m10_47 [cluster="string.Format(string, object, object)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_53 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="297-297"];
m10_54 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="var enumString = (string)reader.Value", span="299-299"];
m10_55 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="FxDailyMeaning? meaning = null", span="300-300"];
m10_56 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label=enumString, span="302-302"];
m10_57 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="''TRUE''", span="304-304"];
m10_59 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="''FALSE''", span="307-307"];
m10_61 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="''NONE''", span="311-311"];
m10_58 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="meaning = FxDailyMeaning.Better", span="305-305"];
m10_60 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="meaning = FxDailyMeaning.Worse", span="308-308"];
m10_62 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="meaning = FxDailyMeaning.None", span="312-312"];
m10_63 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return meaning;", span="315-315"];
m10_64 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="297-297"];
m10_24 [cluster="string.IsNullOrEmpty(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_69 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)", span="329-329"];
m10_70 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="return objectType == typeof(string);", span="331-331"];
m10_71 [cluster="QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Exit QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)", span="329-329"];
m10_26 [cluster="System.Convert.ToDecimal(string)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m10_46 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="GetMaximumOrderQuantityForTargetValueResult.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m10_72 [file="GetMaximumOrderQuantityForTargetValueResult.cs", label="QuantConnect.Data.Custom.DailyFx", span=""];
m11_57 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="516-516"];
m11_40 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="471-471"];
m11_41 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="471-471"];
m11_16 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
m11_17 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
m11_80 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="609-609"];
m11_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="609-609"];
m11_36 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="459-459"];
m11_37 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="459-459"];
m11_62 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="548-548"];
m11_63 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="548-548"];
m11_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="615-615"];
m11_83 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="615-615"];
m11_32 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="447-447"];
m11_33 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="447-447"];
m11_42 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="476-476"];
m11_43 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="476-476"];
m11_60 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="538-538"];
m11_61 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="538-538"];
m11_14 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
m11_15 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
m11_70 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="577-577"];
m11_71 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="577-577"];
m11_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="583-583"];
m11_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="583-583"];
m11_2 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
m11_3 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339"];
m11_92 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="645-645"];
m11_93 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="645-645"];
m11_54 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="509-509"];
m11_55 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="509-509"];
m11_22 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="420-420"];
m11_23 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="420-420"];
m11_74 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588"];
m11_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="588-588"];
m11_50 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="498-498"];
m11_51 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="498-498"];
m11_58 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="528-528"];
m11_59 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="528-528"];
m11_88 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="633-633"];
m11_89 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="633-633"];
m11_8 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358"];
m11_9 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358"];
m11_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="600-600"];
m11_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="600-600"];
m11_24 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
m11_25 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
m11_28 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="437-437"];
m11_29 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="437-437"];
m11_68 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="569-569"];
m11_69 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="569-569"];
m11_6 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="352-352"];
m11_7 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="352-352"];
m11_34 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="452-452"];
m11_35 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="452-452"];
m11_26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432"];
m11_27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="432-432"];
m11_10 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="366-366"];
m11_11 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="366-366"];
m11_46 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487"];
m11_47 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487"];
m11_86 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="627-627"];
m11_87 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="627-627"];
m11_4 [cluster="QuantConnect.Interfaces.IAlgorithm.OnWarmupFinished()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnWarmupFinished()", span="344-344"];
m11_5 [cluster="QuantConnect.Interfaces.IAlgorithm.OnWarmupFinished()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnWarmupFinished()", span="344-344"];
m11_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
m11_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
m11_48 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="493-493"];
m11_49 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="493-493"];
m11_20 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="414-414"];
m11_21 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="414-414"];
m11_44 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="481-481"];
m11_45 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="481-481"];
m11_30 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="442-442"];
m11_31 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="442-442"];
m11_52 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="503-503"];
m11_53 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="503-503"];
m11_64 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="555-555"];
m11_65 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="555-555"];
m11_38 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="466-466"];
m11_39 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="466-466"];
m11_76 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="594-594"];
m11_77 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="594-594"];
m11_90 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="639-639"];
m11_91 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="639-639"];
m11_84 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="621-621"];
m11_85 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="621-621"];
m11_18 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
m11_19 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
m11_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333"];
m11_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333"];
m11_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="561-561"];
m11_67 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="561-561"];
m12_8 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", span="34-34"];
m12_9 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="int i = 0", span="36-36"];
m12_10 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="var enumerable = Enumerable.Range(0, 10).Select(x => i++)", span="37-37"];
m12_11 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="var memoized = new MemoizingEnumerable<int>(enumerable)", span="38-38"];
m12_12 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="CollectionAssert.AreEqual(memoized, memoized)", span="40-40"];
m12_13 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesOnce()", span="34-34"];
m12_7 [cluster="Unk.AreEqual", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.AreEqual", span=""];
m12_14 [cluster="System.Linq.Enumerable.Range(int, int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m12_16 [cluster="MemoizingEnumerable<int>.cstr", file="LiveTradingRealTimeHandler.cs", label="Entry MemoizingEnumerable<int>.cstr", span=""];
m12_15 [cluster="Unk.Select", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Select", span=""];
m12_0 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", span="26-26"];
m12_1 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", file="LiveTradingRealTimeHandler.cs", label="var list = new List<int> {1, 2, 3, 4, 5}", span="28-28"];
m12_2 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", file="LiveTradingRealTimeHandler.cs", label="var memoized = new MemoizingEnumerable<int>(list)", span="29-29"];
m12_3 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", file="LiveTradingRealTimeHandler.cs", label="CollectionAssert.AreEqual(list, memoized)", span="30-30"];
m12_4 [cluster="QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Tests.Common.Util.MemoizingEnumerableTests.EnumeratesList()", span="26-26"];
m12_6 [cluster="QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", span="40-40"];
m12_17 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="37-37"];
m12_18 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="i++", span="37-37"];
m12_19 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="37-37"];
m12_20 [file="LiveTradingRealTimeHandler.cs", label=i, span=""];
m13_3 [cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", file="Log.cs", label="Entry QuantConnect.VisualStudioPlugin.Log.Info(string)", span="34-34"];
m13_4 [cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", color=red, community=0, file="Log.cs", label="0: ActivityLog.LogInformation(_logSource, message)", span="36-36"];
m13_5 [cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", file="Log.cs", label="Exit QuantConnect.VisualStudioPlugin.Log.Info(string)", span="34-34"];
m13_0 [cluster="QuantConnect.VisualStudioPlugin.Log.Log(System.Type)", file="Log.cs", label="Entry QuantConnect.VisualStudioPlugin.Log.Log(System.Type)", span="29-29"];
m13_1 [cluster="QuantConnect.VisualStudioPlugin.Log.Log(System.Type)", color=red, community=0, file="Log.cs", label="0: _logSource = QUANT_CONNECT + type.Name", span="31-31"];
m13_2 [cluster="QuantConnect.VisualStudioPlugin.Log.Log(System.Type)", file="Log.cs", label="Exit QuantConnect.VisualStudioPlugin.Log.Log(System.Type)", span="29-29"];
m13_6 [cluster="Unk.LogInformation", file="Log.cs", label="Entry Unk.LogInformation", span=""];
m13_7 [file="Log.cs", label="QuantConnect.VisualStudioPlugin.Log", span=""];
m17_71 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38"];
m17_31 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(int)", span="50-50"];
m17_32 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(int)", span="50-50"];
m17_70 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34"];
m17_0 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m17_7 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", color=green, community=0, file="MovingAverageTypeExtensions.cs", label="0: return new ExponentialMovingAverage(period, 1m/period);", span="42-42"];
m17_6 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Wilders", span="41-41"];
m17_1 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="MovingAverageTypeExtensions.cs", label="Exit QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
m17_3 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new SimpleMovingAverage(period);", span="36-36"];
m17_5 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new ExponentialMovingAverage(period);", span="39-39"];
m17_9 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new LinearWeightedMovingAverage(period);", span="45-45"];
m17_11 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new DoubleExponentialMovingAverage(period);", span="48-48"];
m17_13 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new TripleExponentialMovingAverage(period);", span="51-51"];
m17_15 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new TriangularMovingAverage(period);", span="54-54"];
m17_17 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new T3MovingAverage(period);", span="57-57"];
m17_19 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new KaufmanAdaptiveMovingAverage(period);", span="60-60"];
m17_21 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new HullMovingAverage(period);", span="63-63"];
m17_23 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="return new ArnaudLegouxMovingAverage(period);", span="66-66"];
m17_24 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="throw new ArgumentOutOfRangeException(''movingAverageType'');", span="69-69"];
m17_2 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Simple", span="35-35"];
m17_4 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Exponential", span="38-38"];
m17_8 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.LinearWeightedMovingAverage", span="44-44"];
m17_10 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.DoubleExponential", span="47-47"];
m17_12 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.TripleExponential", span="50-50"];
m17_14 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Triangular", span="53-53"];
m17_16 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.T3", span="56-56"];
m17_18 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Kama", span="59-59"];
m17_20 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Hull", span="62-62"];
m17_22 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Alma", span="65-65"];
m17_25 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", file="MovingAverageTypeExtensions.cs", label="Exit QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, int)", span="31-31"];
m17_30 [cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(int, decimal)", span="52-52"];
m17_34 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(int)", span="48-48"];
m17_66 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", span="42-42"];
m17_72 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39"];
m17_36 [cluster="QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(int)", span="88-88"];
m17_33 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(int, decimal)", span="52-52"];
m17_26 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m17_74 [cluster="QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(string, int)", span="62-62"];
m17_28 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int, decimal)", span="62-62"];
m17_69 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37"];
m17_64 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m17_67 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41"];
m17_29 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(int)", span="50-50"];
m17_37 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="MovingAverageTypeExtensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m17_27 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", span="53-53"];
m17_65 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m17_38 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", span="81-81"];
m17_45 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", color=green, community=0, file="MovingAverageTypeExtensions.cs", label="0: return new ExponentialMovingAverage(name, period, 1m / period);", span="92-92"];
m17_44 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Wilders", span="91-91"];
m17_39 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label=movingAverageType, span="83-83"];
m17_41 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new SimpleMovingAverage(name, period);", span="86-86"];
m17_43 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new ExponentialMovingAverage(name, period);", span="89-89"];
m17_47 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new LinearWeightedMovingAverage(name, period);", span="95-95"];
m17_49 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new DoubleExponentialMovingAverage(name, period);", span="98-98"];
m17_51 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new TripleExponentialMovingAverage(name, period);", span="101-101"];
m17_53 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new TriangularMovingAverage(name, period);", span="104-104"];
m17_55 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new T3MovingAverage(name, period);", span="107-107"];
m17_57 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new KaufmanAdaptiveMovingAverage(name, period);", span="110-110"];
m17_59 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new HullMovingAverage(name, period);", span="113-113"];
m17_61 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="return new ArnaudLegouxMovingAverage(name, period);", span="116-116"];
m17_62 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="throw new ArgumentOutOfRangeException(''movingAverageType'');", span="119-119"];
m17_40 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Simple", span="85-85"];
m17_42 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Exponential", span="88-88"];
m17_46 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.LinearWeightedMovingAverage", span="94-94"];
m17_48 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.DoubleExponential", span="97-97"];
m17_50 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.TripleExponential", span="100-100"];
m17_52 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Triangular", span="103-103"];
m17_54 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.T3", span="106-106"];
m17_56 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Kama", span="109-109"];
m17_58 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Hull", span="112-112"];
m17_60 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="MovingAverageType.Alma", span="115-115"];
m17_63 [cluster="QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", file="MovingAverageTypeExtensions.cs", label="Exit QuantConnect.Indicators.MovingAverageTypeExtensions.AsIndicator(QuantConnect.Indicators.MovingAverageType, string, int)", span="81-81"];
m17_68 [cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38"];
m17_73 [cluster="QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", span="34-34"];
m17_35 [cluster="QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(int)", file="MovingAverageTypeExtensions.cs", label="Entry QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(int)", span="48-48"];
m18_49 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="462-462"];
m18_34 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423"];
m18_35 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423"];
m18_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="360-360"];
m18_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="360-360"];
m18_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="555-555"];
m18_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="555-555"];
m18_30 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="411-411"];
m18_31 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="411-411"];
m18_54 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494"];
m18_55 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494"];
m18_74 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="561-561"];
m18_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="561-561"];
m18_26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="399-399"];
m18_27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="399-399"];
m18_36 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428"];
m18_37 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428"];
m18_52 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484"];
m18_53 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484"];
m18_62 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="523-523"];
m18_63 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="523-523"];
m18_64 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529"];
m18_65 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529"];
m18_2 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308"];
m18_3 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308"];
m18_16 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="372-372"];
m18_17 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="372-372"];
m18_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="534-534"];
m18_67 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="534-534"];
m18_44 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450"];
m18_45 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450"];
m18_50 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474"];
m18_51 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474"];
m18_80 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579"];
m18_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579"];
m18_6 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322"];
m18_7 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322"];
m18_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="546-546"];
m18_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="546-546"];
m18_18 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m18_19 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m18_22 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="389-389"];
m18_23 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="389-389"];
m18_60 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="515-515"];
m18_61 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="515-515"];
m18_4 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="316-316"];
m18_5 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="316-316"];
m18_28 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="404-404"];
m18_29 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="404-404"];
m18_20 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="384-384"];
m18_21 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="384-384"];
m18_8 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330"];
m18_9 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330"];
m18_40 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
m18_41 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
m18_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="573-573"];
m18_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="573-573"];
m18_10 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="354-354"];
m18_11 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="354-354"];
m18_42 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445"];
m18_43 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445"];
m18_14 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="366-366"];
m18_15 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="366-366"];
m18_38 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433"];
m18_39 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433"];
m18_24 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="394-394"];
m18_25 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="394-394"];
m18_46 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455"];
m18_47 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455"];
m18_56 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="501-501"];
m18_57 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="501-501"];
m18_32 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="418-418"];
m18_33 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="418-418"];
m18_68 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="540-540"];
m18_69 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="540-540"];
m18_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585"];
m18_83 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585"];
m18_76 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="567-567"];
m18_77 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="567-567"];
m18_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302"];
m18_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302"];
m18_58 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="507-507"];
m18_59 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="MovingAverageTypeExtensionsTests.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="507-507"];
m19_19 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="70-70"];
m19_28 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", span="143-143"];
m19_48 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Log(consolidated.Time.ToString(''0'') + '' >> Plotting!'')", span="145-145"];
m19_49 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Plot(consolidated.Symbol, ''3HourBar'', consolidated.Close)", span="146-146"];
m19_50 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", span="143-143"];
m19_25 [cluster="lambda expression", file="OptionChainUniverse.cs", label="Entry lambda expression", span="92-92"];
m19_26 [cluster="lambda expression", file="OptionChainUniverse.cs", label="ThreeHourBarConsolidatedHandler(sender, (TradeBar) consolidated)", span="92-92"];
m19_27 [cluster="lambda expression", file="OptionChainUniverse.cs", label="Exit lambda expression", span="92-92"];
m19_29 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", span="102-102"];
m19_30 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionChainUniverse.cs", label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", span="102-102"];
m19_23 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", span="79-79"];
m19_36 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", span="123-123"];
m19_37 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="_last != null && consolidated.Close > _last.Close", span="125-125"];
m19_38 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Log(consolidated.Time.ToString(''o'') + '' >> SPY >> LONG  >> 100 >> '' + Portfolio[''SPY''].Quantity)", span="127-127"];
m19_40 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="_last != null && consolidated.Close < _last.Close", span="130-130"];
m19_41 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Log(consolidated.Time.ToString(''o'') + '' >> SPY >> SHORT >> 100 >> '' + Portfolio[''SPY''].Quantity)", span="132-132"];
m19_43 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="_last = consolidated", span="135-135"];
m19_39 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Order(''SPY'', 100)", span="128-128"];
m19_42 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Order(''SPY'', -100)", span="133-133"];
m19_44 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="OptionChainUniverse.cs", label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", span="123-123"];
m19_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m19_45 [cluster="System.DateTime.ToString(string)", file="OptionChainUniverse.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m19_17 [cluster="System.DateTime.AddDays(double)", file="OptionChainUniverse.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m19_22 [cluster="System.TimeSpan.FromDays(double)", file="OptionChainUniverse.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m19_31 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", span="111-111"];
m19_32 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="OptionChainUniverse.cs", label="Liquidate(symbol)", span="114-114"];
m19_33 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="OptionChainUniverse.cs", label="_last = null", span="115-115"];
m19_34 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="OptionChainUniverse.cs", label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", span="111-111"];
m19_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="722-722"];
m19_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="503-503"];
m19_0 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", span="54-54"];
m19_1 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="AddSecurity(SecurityType.Equity, ''SPY'')", span="56-56"];
m19_2 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="var start = new DateTime(2013, 10, 07, 09, 30, 0)", span="59-59"];
m19_3 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="SetStartDate(start)", span="60-60"];
m19_4 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="SetEndDate(start.AddDays(1))", span="61-61"];
m19_5 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="var thirtyMinuteConsolidator = new TradeBarConsolidator(TimeSpan.FromMinutes(30))", span="65-65"];
m19_6 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="thirtyMinuteConsolidator.DataConsolidated += ThirtyMinuteBarHandler", span="69-69"];
m19_7 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="SubscriptionManager.AddConsolidator(''SPY'', thirtyMinuteConsolidator)", span="72-72"];
m19_8 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="var oneDayConsolidator = new TradeBarConsolidator(TimeSpan.FromDays(1))", span="81-81"];
m19_9 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="var threeCountConsolidator = new TradeBarConsolidator(3)", span="84-84"];
m19_10 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="var three_oneDayBar = new SequentialConsolidator(oneDayConsolidator, threeCountConsolidator)", span="89-89"];
m19_11 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="three_oneDayBar.DataConsolidated += (sender, consolidated) => ThreeHourBarConsolidatedHandler(sender, (TradeBar) consolidated)", span="92-92"];
m19_12 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="SubscriptionManager.AddConsolidator(''SPY'', three_oneDayBar)", span="95-95"];
m19_13 [cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="OptionChainUniverse.cs", label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", span="54-54"];
m19_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="365-365"];
m19_15 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="OptionChainUniverse.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m19_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="538-538"];
m19_24 [cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="90-90"];
m19_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="170-170"];
m19_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="611-611"];
m19_21 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="OptionChainUniverse.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", span="118-118"];
m19_52 [file="OptionChainUniverse.cs", label="QuantConnect.Algorithm.Examples.DataConsolidation", span=""];
m21_2 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="PathUtils.cs", label="Entry QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110"];
m21_3 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="PathUtils.cs", label="Start = DateTime.Now.Date.AddHours(defaultStart)", span="112-112"];
m21_4 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="PathUtils.cs", label="End = DateTime.Now.Date.AddHours(defaultEnd)", span="113-113"];
m21_5 [cluster="QuantConnect.Packets.MarketHours.MarketHours(double, double)", file="PathUtils.cs", label="Exit QuantConnect.Packets.MarketHours.MarketHours(double, double)", span="110-110"];
m21_6 [cluster="System.DateTime.AddHours(double)", file="PathUtils.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m21_0 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="PathUtils.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m21_1 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="PathUtils.cs", label="Exit QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m21_7 [file="PathUtils.cs", label="QuantConnect.Packets.MarketHours", span=""];
m22_0 [cluster="QuantConnect.Securities.Option.IUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="ProjectFinder.cs", label="Entry QuantConnect.Securities.Option.IUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="40-40"];
m22_1 [cluster="QuantConnect.Securities.Option.IUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="ProjectFinder.cs", label="Exit QuantConnect.Securities.Option.IUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="40-40"];
m23_0 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m23_1 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="ProjectNameDialog.xaml.cs", label="3: return Enumerable.Empty<Symbol>();", span="35-35"];
m23_2 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="ProjectNameDialog.xaml.cs", label="1: Exit QuantConnect.Securities.Option.EmptyOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="33-33"];
m23_3 [cluster="System.Linq.Enumerable.Empty<TResult>()", color=green, community=0, file="ProjectNameDialog.xaml.cs", label="0: Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m23_4 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", color=green, community=0, file="ProjectNameDialog.xaml.cs", label="0: Assert.AreEqual(expected, actual)", span="34-34"];
m23_5 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ReadLinesCountMatchesLineCount()", span="27-27"];
m23_20 [cluster="System.IO.File.WriteAllBytes(string, byte[])", file="ProjectNameDialog.xaml.cs", label="Entry System.IO.File.WriteAllBytes(string, byte[])", span="0-0"];
m23_6 [cluster="QuantConnect.Compression.ReadLines(string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="575-575"];
m23_34 [cluster="Unk.ReadToEnd", file="ProjectNameDialog.xaml.cs", label="Entry Unk.ReadToEnd", span=""];
m23_18 [cluster="System.Text.Encoding.GetBytes(string)", file="ProjectNameDialog.xaml.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m23_35 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", span="66-66"];
m23_39 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="Assert.AreEqual(expectedFileNames.Length, entryFileNames.Count)", span="78-78"];
m23_42 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="Assert.AreEqual(expectedFileNames[i], entryFileNames[i])", span="82-82"];
m23_37 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="var entryFileNames = QuantConnect.Compression.GetZipEntryFileNames(zipFileName).ToList()", span="69-69"];
m23_38 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="var expectedFileNames = new[]\r\n            {\r\n                ''20151224_xlre_tick_quote_american_call_210000_20160819.csv'',\r\n                ''20151224_xlre_tick_quote_american_call_220000_20160819.csv'',\r\n                ''20151224_xlre_tick_quote_american_put_370000_20160819.csv''\r\n            }", span="71-76"];
m23_40 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="var i = 0", span="80-80"];
m23_41 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="i < entryFileNames.Count", span="80-80"];
m23_43 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="i++", span="80-80"];
m23_36 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="var zipFileName = Path.Combine(''TestData'', ''20151224_quote_american.zip'')", span="68-68"];
m23_44 [cluster="QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ReadsZipEntryFileNames()", span="66-66"];
m23_33 [cluster="Unk.Unzip", file="ProjectNameDialog.xaml.cs", label="Entry Unk.Unzip", span=""];
m23_8 [cluster="Unk.AreEqual", file="ProjectNameDialog.xaml.cs", label="Entry Unk.AreEqual", span=""];
m23_9 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", span="38-38"];
m23_10 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", color=green, community=0, file="ProjectNameDialog.xaml.cs", label="0: string fileContents = ''this is the contents of a file!''", span="40-40"];
m23_11 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="var fileBytes = Encoding.ASCII.GetBytes(fileContents)", span="41-41"];
m23_16 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="Assert.AreEqual(fileContents, contents)", span="48-48"];
m23_12 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="var zippedBytes = QuantConnect.Compression.ZipBytes(fileBytes, ''entry'')", span="42-42"];
m23_15 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="var contents = streamReader.ReadToEnd()", span="47-47"];
m23_13 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="File.WriteAllBytes(''entry.zip'', zippedBytes)", span="43-43"];
m23_14 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="var streamReader = QuantConnect.Compression.UnzipStreamToStreamReader(File.OpenRead(''entry.zip''))", span="45-45"];
m23_17 [cluster="QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ZipBytes()", span="38-38"];
m23_19 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243"];
m23_23 [cluster="System.IO.StreamReader.ReadToEnd()", file="ProjectNameDialog.xaml.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m23_21 [cluster="System.IO.File.OpenRead(string)", file="ProjectNameDialog.xaml.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m23_22 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="625-625"];
m23_24 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", span="53-53"];
m23_30 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="Assert.AreEqual(''2'', text)", span="61-61"];
m23_29 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="var text = entryStream.ReadToEnd()", span="60-60"];
m23_31 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", span="53-53"];
m23_27 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="var entryStream = QuantConnect.Compression.Unzip(zip, ''multizip/two.txt'', out zipFile)", span="57-57"];
m23_28 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label=zipFile, span="58-58"];
m23_25 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="var zip = Path.Combine(''TestData'', ''multizip.zip'')", span="55-55"];
m23_26 [cluster="QuantConnect.Tests.Compression.CompressionTests.ExtractsZipEntryByName()", file="ProjectNameDialog.xaml.cs", label="ZipFile zipFile", span="56-56"];
m23_45 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.Compression.GetZipEntryFileNames(string)", span="847-847"];
m23_32 [cluster="System.IO.Path.Combine(string, string)", file="ProjectNameDialog.xaml.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m23_7 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ProjectNameDialog.xaml.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m24_9 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38"];
m24_10 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="QCAlgorithm.cs", label="return new StopLimitOrder(Symbol, Math.Abs(quantity), _highLimit, _lowLimit, DateTime.Now);", span="40-40"];
m24_11 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38"];
m24_26 [cluster="System.Math.Max(decimal, decimal)", file="QCAlgorithm.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m24_4 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33"];
m24_5 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="QCAlgorithm.cs", label="return new StopLimitOrder(Symbol, -Math.Abs(quantity), _lowLimit, _highLimit, DateTime.Now);", span="35-35"];
m24_6 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33"];
m24_27 [cluster="System.Math.Min(decimal, decimal)", file="QCAlgorithm.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m24_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m24_12 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m24_13 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="var stop = (StopLimitOrder) order", span="45-45"];
m24_15 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="order.Quantity > 0", span="47-47"];
m24_16 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50"];
m24_17 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="order.SecurityType == SecurityType.Forex", span="53-53"];
m24_18 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55"];
m24_19 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61"];
m24_20 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="order.SecurityType == SecurityType.Forex", span="65-65"];
m24_21 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67"];
m24_14 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="var previousStop = stop.StopPrice", span="46-46"];
m24_22 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="stop.LimitPrice = stop.StopPrice", span="70-70"];
m24_23 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="return stop.StopPrice != previousStop;", span="71-71"];
m24_24 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m24_25 [cluster="System.Math.Round(decimal, int, System.MidpointRounding)", file="QCAlgorithm.cs", label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0"];
m24_0 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m24_1 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithm.cs", label="_highLimit = highLimit", span="29-29"];
m24_2 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithm.cs", label="_lowLimit = lowLimit", span="30-30"];
m24_3 [cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m24_8 [cluster="System.Math.Abs(int)", file="QCAlgorithm.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m24_28 [file="QCAlgorithm.cs", label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", span=""];
m25_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="367-367"];
m25_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="Py.GIL()", span="369-369"];
m25_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="!PyList.IsListType(pyObject)", span="372-372"];
m25_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="tmp.Append(pyObject)", span="375-375"];
m25_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label=pyObject, span="380-380"];
m25_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="var tmp = new PyList()", span="374-374"];
m25_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="var symbols = new List<Symbol>()", span="379-379"];
m25_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="pyObject = tmp", span="376-376"];
m25_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="symbols.Add(symbol)", span="389-389"];
m25_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="return symbols.Count == 0 ? null : symbols;", span="391-391"];
m25_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="382-382"];
m25_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="string.IsNullOrWhiteSpace(symbol.Value)", span="384-384"];
m25_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="367-367"];
m25_185 [cluster="Unk.ModuleFromString", file="QCAlgorithm.Indicators.cs", label="Entry Unk.ModuleFromString", span=""];
m25_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="91-92"];
m25_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="82-82"];
m25_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="84-84"];
m25_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="87-87"];
m25_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="88-88"];
m25_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="94-94"];
m25_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="82-82"];
m25_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", span="426-426"];
m25_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="var testMod =\r\n               ''from clr import AddReference\n'' +\r\n               ''AddReference(\''System\'')\n'' +\r\n               ''AddReference(\''System.Collections\'')\n'' +\r\n               ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n               ''from System import Func\n'' +\r\n               ''from System.Collections.Generic import IEnumerable\n'' +\r\n               ''from QuantConnect import Symbol\n'' +\r\n               ''from QuantConnect.Data.Fundamental import FineFundamental\n'' +\r\n               ''from QuantConnect.Data.UniverseSelection import CoarseFundamental\n'' +\r\n               ''def to_func(pyobject, type):\n'' +\r\n               ''    return Func[IEnumerable[type], IEnumerable[Symbol]](pyobject)''", span="428-439"];
m25_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="return toFunc(pyObject, typeof(T))\r\n                    .AsManagedObject(typeof(Func<IEnumerable<T>, IEnumerable<Symbol>>));", span="444-445"];
m25_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="Py.GIL()", span="441-441"];
m25_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="dynamic toFunc = PythonEngine.ModuleFromString(''x'', testMod).GetAttr(''to_func'')", span="443-443"];
m25_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ToFunc<T>(PyObject)", span="426-426"];
m25_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="166-166"];
m25_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="168-168"];
m25_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="166-166"];
m25_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1348-1348"];
m25_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="260-260"];
m25_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="262-262"];
m25_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="260-260"];
m25_173 [cluster="Unk.Split", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Split", span=""];
m25_88 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Indicators.cs", label="Entry Unk.PlotIndicator", span=""];
m25_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="276-276"];
m25_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="278-278"];
m25_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="276-276"];
m25_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="284-284"];
m25_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="286-286"];
m25_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="284-284"];
m25_161 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="321-321"];
m25_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="323-323"];
m25_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="326-326"];
m25_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="symbols == null", span="324-324"];
m25_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return null;", span="324-324"];
m25_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="321-321"];
m25_68 [cluster="Unk.ToArray", file="QCAlgorithm.Indicators.cs", label="Entry Unk.ToArray", span=""];
m25_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="102-102"];
m25_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Indicators.cs", label="var coarse = ToFunc<CoarseFundamental>(pycoarse)", span="104-104"];
m25_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Indicators.cs", label="AddUniverse(coarse)", span="105-105"];
m25_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="102-102"];
m25_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="179-179"];
m25_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="181-181"];
m25_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="179-179"];
m25_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m25_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="268-268"];
m25_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="270-270"];
m25_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="268-268"];
m25_119 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="310-310"];
m25_70 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="234-234"];
m25_71 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="234-234"];
m25_72 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="234-234"];
m25_76 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="248-248"];
m25_77 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="248-248"];
m25_78 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="248-248"];
m25_82 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="262-262"];
m25_83 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="262-262"];
m25_84 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="262-262"];
m25_89 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="270-270"];
m25_90 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="270-270"];
m25_91 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="270-270"];
m25_95 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="278-278"];
m25_96 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="278-278"];
m25_97 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="278-278"];
m25_101 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="286-286"];
m25_102 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="286-286"];
m25_103 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="286-286"];
m25_107 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="294-294"];
m25_108 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="294-294"];
m25_109 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="294-294"];
m25_113 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="302-302"];
m25_114 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="302-302"];
m25_115 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="302-302"];
m25_120 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x != null", span="310-310"];
m25_121 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="310-310"];
m25_163 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Indicators.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m25_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m25_186 [cluster="Unk.GetAttr", file="QCAlgorithm.Indicators.cs", label="Entry Unk.GetAttr", span=""];
m25_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="218-218"];
m25_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="220-220"];
m25_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="218-218"];
m25_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="308-308"];
m25_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="310-310"];
m25_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="308-308"];
m25_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="114-114"];
m25_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Indicators.cs", label="var coarse = ToFunc<CoarseFundamental>(pycoarse)", span="116-116"];
m25_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Indicators.cs", label="var fine = ToFunc<FineFundamental>(pyfine)", span="117-117"];
m25_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Indicators.cs", label="AddUniverse(coarse, fine)", span="118-118"];
m25_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="114-114"];
m25_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="192-192"];
m25_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="194-194"];
m25_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="192-192"];
m25_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="128-128"];
m25_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="130-130"];
m25_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="128-128"];
m25_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="53-53"];
m25_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m)", span="55-55"];
m25_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="53-53"];
m25_172 [cluster="Unk.Repr", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Repr", span=""];
m25_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1334-1334"];
m25_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m25_22 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="438-438"];
m25_187 [cluster="Unk.toFunc", file="QCAlgorithm.Indicators.cs", label="Entry Unk.toFunc", span=""];
m25_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m25_159 [cluster="PyList.cstr", file="QCAlgorithm.Indicators.cs", label="Entry PyList.cstr", span=""];
m25_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1320-1320"];
m25_171 [cluster="AssemblyName.cstr", file="QCAlgorithm.Indicators.cs", label="Entry AssemblyName.cstr", span=""];
m25_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="300-300"];
m25_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="302-302"];
m25_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="300-300"];
m25_179 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Indicators.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m25_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m25_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="292-292"];
m25_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="294-294"];
m25_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="292-292"];
m25_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="246-246"];
m25_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="248-248"];
m25_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="246-246"];
m25_175 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Indicators.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m25_177 [cluster="Unk.HasAttr", file="QCAlgorithm.Indicators.cs", label="Entry Unk.HasAttr", span=""];
m25_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153"];
m25_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="155-155"];
m25_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153"];
m25_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205"];
m25_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="207-207"];
m25_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205"];
m25_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="40-40"];
m25_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Indicators.cs", label="_converter = new PandasConverter()", span="42-42"];
m25_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="40-40"];
m25_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="251-251"];
m25_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="140-140"];
m25_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="142-142"];
m25_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="140-140"];
m25_160 [cluster="Unk.Append", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Append", span=""];
m25_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m25_178 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m25_157 [cluster="Unk.GIL", file="QCAlgorithm.Indicators.cs", label="Entry Unk.GIL", span=""];
m25_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m25_158 [cluster="Unk.IsListType", file="QCAlgorithm.Indicators.cs", label="Entry Unk.IsListType", span=""];
m25_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1362-1362"];
m25_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="400-400"];
m25_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="Py.GIL()", span="402-402"];
m25_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="404-404"];
m25_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="407-416"];
m25_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="405-405"];
m25_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="406-406"];
m25_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="400-400"];
m25_164 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_130 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m25_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m25_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m25_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="68-68"];
m25_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="70-70"];
m25_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="68-68"];
m25_162 [cluster="Unk.AsManagedObject", file="QCAlgorithm.Indicators.cs", label="Entry Unk.AsManagedObject", span=""];
m25_69 [cluster="Unk.Plot", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Plot", span=""];
m25_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m25_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="337-337"];
m25_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="339-339"];
m25_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="342-342"];
m25_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="symbols == null", span="340-340"];
m25_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return null;", span="340-340"];
m25_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="337-337"];
m25_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="353-353"];
m25_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="355-355"];
m25_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="358-358"];
m25_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="symbols == null", span="356-356"];
m25_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return null;", span="356-356"];
m25_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="353-353"];
m25_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="232-232"];
m25_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="234-234"];
m25_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="232-232"];
m25_176 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m25_174 [cluster="Unk.Replace", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Replace", span=""];
m25_188 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m27_2 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="88-88"];
m27_3 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="SolutionExplorerMenuCommand.Initialize(this)", span="90-90"];
m27_4 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="base.Initialize()", span="91-91"];
m27_5 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="QuantConnectPackage.cs", label="0: QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(this)", span="92-92"];
m27_6 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="88-88"];
m27_0 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="65-65"];
m27_1 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="65-65"];
m27_7 [cluster="Unk.Initialize", file="QuantConnectPackage.cs", label="Entry Unk.Initialize", span=""];
m27_8 [file="QuantConnectPackage.cs", label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", span=""];
m28_49 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="818-818"];
m28_50 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="818-818"];
m28_51 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="818-818"];
m28_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m28_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m28_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="30-30"];
m28_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="38-38"];
m28_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''forward-console-messages'', ''false'')", span="28-28"];
m28_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="33-33"];
m28_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="34-34"];
m28_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="35-35"];
m28_8 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m28_46 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="828-828"];
m28_54 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="830-830"];
m28_55 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="831-831"];
m28_56 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="832-832"];
m28_57 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="828-828"];
m28_53 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m28_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41"];
m28_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="43-64"];
m28_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="66-87"];
m28_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python)\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="745-818"];
m28_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Total Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="89-122"];
m28_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="124-145"];
m28_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="147-168"];
m28_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="170-191"];
m28_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="193-214"];
m28_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="216-237"];
m28_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="239-260"];
m28_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="262-283"];
m28_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="285-306"];
m28_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="308-329"];
m28_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="331-352"];
m28_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="354-375"];
m28_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="377-398"];
m28_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="400-421"];
m28_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="423-444"];
m28_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="446-467"];
m28_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="469-490"];
m28_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="492-513"];
m28_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="515-536"];
m28_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="538-559"];
m28_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="561-582"];
m28_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="584-605"];
m28_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="607-628"];
m28_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="630-651"];
m28_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs", label="0: var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.081%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.245''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="653-674"];
m28_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="676-697"];
m28_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="699-720"];
m28_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="722-743"];
m28_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="41-41"];
m28_52 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m28_10 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="43-43"];
m28_47 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m28_48 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m28_9 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m28_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m28_58 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m29_80 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.FxcmVolumeWriter(QuantConnect.Resolution, QuantConnect.Symbol, string)", span="17-17"];
m29_10 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="RelativeStrengthIndexTests.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m29_8 [cluster="System.Guid.ToString(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.Guid.ToString(string)", span="0-0"];
m29_42 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="164-164"];
m29_48 [cluster="int.ToString()", file="RelativeStrengthIndexTests.cs", label="Entry int.ToString()", span="0-0"];
m29_102 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.Run(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.Run(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="99-99"];
m29_52 [cluster="string.Split(params char[])", file="RelativeStrengthIndexTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m29_91 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", span="125-125"];
m29_92 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var resolution = Resolution.Minute", span="128-128"];
m29_93 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var startDate = new DateTime(year: 2013, month: 04, day: 01)", span="129-129"];
m29_95 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="_downloader.Run(_eurusd, resolution, startDate, endDate)", span="132-132"];
m29_94 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var endDate = startDate.AddMonths(months: 1)", span="130-130"];
m29_96 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var outputFolder = Path.Combine(_dataDirectory, ''forex/fxcm/minute'')", span="134-134"];
m29_97 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var files = Directory.GetFiles(outputFolder, ''*_volume.zip'', SearchOption.AllDirectories)", span="135-135"];
m29_98 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expected: 27, actual: files.Length)", span="136-136"];
m29_99 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KMinuteObservationIsCorrectlySaved()", span="125-125"];
m29_104 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", span="141-141"];
m29_105 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var resolution = Resolution.Hour", span="144-144"];
m29_106 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var startDate = new DateTime(year: 2014, month: 01, day: 01)", span="145-145"];
m29_108 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="_downloader.Run(_eurusd, resolution, startDate, endDate)", span="148-148"];
m29_107 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var endDate = startDate.AddYears(value: 3)", span="146-146"];
m29_109 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var outputFile = Path.Combine(_dataDirectory, ''forex/fxcm/hour/eurusd_volume.zip'')", span="150-150"];
m29_110 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="var observationsCount = ReadZipFileData(outputFile).Count", span="151-151"];
m29_111 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Assert.True(observationsCount >= 18720, string.Format(''Actual observations: {0}'', observationsCount))", span="153-153"];
m29_112 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.RequestWithMoreThan10KHourlyObservationIsCorrectlySaved()", span="141-141"];
m29_39 [cluster="Unk.ToArray", file="RelativeStrengthIndexTests.cs", label="Entry Unk.ToArray", span=""];
m29_15 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", span="41-41"];
m29_16 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", file="RelativeStrengthIndexTests.cs", label=_testingTempFolders, span="43-43"];
m29_17 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", file="RelativeStrengthIndexTests.cs", label="Directory.Exists(testingTempFolder)", span="45-45"];
m29_18 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", file="RelativeStrengthIndexTests.cs", label="Directory.Delete(testingTempFolder, true)", span="47-47"];
m29_19 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.CleanTemporaryFolder()", span="41-41"];
m29_36 [cluster="System.IO.File.ReadAllLines(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
m29_49 [cluster="lambda expression", file="RelativeStrengthIndexTests.cs", label="Entry lambda expression", span="60-60"];
m29_50 [cluster="lambda expression", file="RelativeStrengthIndexTests.cs", label="x.Split(',')", span="60-60"];
m29_51 [cluster="lambda expression", file="RelativeStrengthIndexTests.cs", label="Exit lambda expression", span="60-60"];
m29_9 [cluster="string.Substring(int, int)", file="RelativeStrengthIndexTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m29_88 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", span="158-158"];
m29_115 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="var actualdata = new List<string[]>()", span="160-160"];
m29_116 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="var files = Directory.GetFiles(outputFolder, ''*.zip'')", span="161-161"];
m29_118 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="actualdata.AddRange(ReadZipFileData(file))", span="164-164"];
m29_119 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="return actualdata;", span="166-166"];
m29_117 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label=files, span="162-162"];
m29_120 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFolderData(string)", span="158-158"];
m29_131 [cluster="Unk.Unzip", file="RelativeStrengthIndexTests.cs", label="Entry Unk.Unzip", span=""];
m29_103 [cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0"];
m29_89 [cluster="long.Parse(string)", file="RelativeStrengthIndexTests.cs", label="Entry long.Parse(string)", span="0-0"];
m29_0 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", span="31-31"];
m29_1 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="var randomFolder = Guid.NewGuid().ToString(''N'').Substring(startIndex: 0, length: 8)", span="33-33"];
m29_2 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="var assemblyFolder = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)", span="34-34"];
m29_3 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="_dataDirectory = Path.Combine(assemblyFolder, randomFolder)", span="35-35"];
m29_4 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="_downloader = new FxcmVolumeDownloader(_dataDirectory)", span="36-36"];
m29_5 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="_testingTempFolders.Add(_dataDirectory)", span="37-37"];
m29_6 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.SetUpTemporatyFolder()", span="31-31"];
m29_100 [cluster="System.DateTime.DateTime(int, int, int)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m29_46 [cluster="System.DateTime.ToString(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m29_47 [cluster="long.ToString()", file="RelativeStrengthIndexTests.cs", label="Entry long.ToString()", span="0-0"];
m29_40 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m29_82 [cluster="System.Enum.ToLower()", file="RelativeStrengthIndexTests.cs", label="Entry System.Enum.ToLower()", span="879-879"];
m29_101 [cluster="System.DateTime.AddMonths(int)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m29_84 [cluster="string.ToLower()", file="RelativeStrengthIndexTests.cs", label="Entry string.ToLower()", span="0-0"];
m29_21 [cluster="System.IO.Directory.Delete(string, bool)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Directory.Delete(string, bool)", span="0-0"];
m29_79 [cluster="System.DateTime.AddDays(double)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m29_41 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m29_113 [cluster="System.DateTime.AddYears(int)", file="RelativeStrengthIndexTests.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m29_90 [cluster="int.Parse(string)", file="RelativeStrengthIndexTests.cs", label="Entry int.Parse(string)", span="0-0"];
m29_13 [cluster="QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownloader.FxcmVolumeDownloader(string)", span="86-86"];
m29_132 [cluster="Unk.ReadLine", file="RelativeStrengthIndexTests.cs", label="Entry Unk.ReadLine", span=""];
m29_45 [cluster="Unk.AreEqual", file="RelativeStrengthIndexTests.cs", label="Entry Unk.AreEqual", span=""];
m29_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RelativeStrengthIndexTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m29_83 [cluster="string.Format(string, object)", file="RelativeStrengthIndexTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m29_20 [cluster="System.IO.Directory.Exists(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m29_11 [cluster="System.IO.Path.GetDirectoryName(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m29_22 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", span="55-55"];
m29_23 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var expectedData = File.ReadAllLines(testingFilePath)\r\n                .Skip(count: 1) // Skip headers.\r\n                .Select(x => x.Split(','))\r\n                .ToArray()", span="58-61"];
m29_24 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var symbol = Symbol.Create(ticker, SecurityType.Base, Market.FXCM)", span="62-62"];
m29_25 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var startUtc = DateTime.ParseExact(startDate, ''yyyy-MM-dd'', CultureInfo.InvariantCulture)", span="63-63"];
m29_26 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var endUtc = DateTime.ParseExact(endDate, ''yyyy-MM-dd'', CultureInfo.InvariantCulture)", span="64-64"];
m29_27 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var actualData = _downloader.Get(symbol, resolution, startUtc,\r\n                endUtc).Cast<FxcmVolume>().ToArray()", span="66-67"];
m29_28 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData.Length, actualData.Length)", span="69-69"];
m29_30 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="i < expectedData.Length - 1", span="70-70"];
m29_31 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData[i][0], actualData[i].Time.ToString(''yyyy/MM/dd HH:mm''))", span="72-72"];
m29_32 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData[i][1], actualData[i].Value.ToString())", span="73-73"];
m29_33 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData[i][2], actualData[i].Transactions.ToString())", span="74-74"];
m29_29 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="var i = 0", span="70-70"];
m29_34 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="i++", span="70-70"];
m29_35 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.DataIsCorrectlyParsed(string, string, QuantConnect.Resolution, string, string)", span="55-55"];
m29_87 [cluster="System.IO.File.Exists(string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m29_114 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", span="169-169"];
m29_123 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="var actualdata = new List<string[]>()", span="171-171"];
m29_125 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="var unzipped = QuantConnect.Compression.Unzip(dataZipFile, out zipFile)", span="173-173"];
m29_124 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="ZipFile zipFile", span="172-172"];
m29_128 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="actualdata.Add(line.Split(','))", span="178-178"];
m29_129 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="return actualdata;", span="181-181"];
m29_126 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="string line", span="175-175"];
m29_127 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="(line = unzipped.ReadLine()) != null", span="176-176"];
m29_130 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ReadZipFileData(string)", span="169-169"];
m29_81 [cluster="QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="30-30"];
m29_12 [cluster="System.IO.Path.Combine(string, string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m29_7 [cluster="System.Guid.NewGuid()", file="RelativeStrengthIndexTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m29_53 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Entry QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", span="81-81"];
m29_54 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var symbol = Symbol.Create(ticker, SecurityType.Base, Market.FXCM)", span="84-84"];
m29_55 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var startUtc = DateTime.ParseExact(startDate, ''yyyy-MM-dd'', CultureInfo.InvariantCulture)", span="85-85"];
m29_56 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var endUtc = startUtc.AddDays(requestLength)", span="86-86"];
m29_57 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var data = _downloader.Get(symbol, resolution, startUtc, endUtc)", span="87-87"];
m29_58 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var writer = new FxcmVolumeWriter(resolution, symbol, _dataDirectory)", span="89-89"];
m29_61 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var expectedFolder = Path.Combine(_dataDirectory, string.Format(''forex/fxcm/{0}'', resolution.ToLower()))", span="93-93"];
m29_62 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="resolution == Resolution.Minute", span="94-94"];
m29_65 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="resolution == Resolution.Minute", span="100-100"];
m29_67 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(requestLength + 1, zipFiles)", span="104-104"];
m29_63 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="expectedFolder = Path.Combine(expectedFolder, symbol.Value.ToLower())", span="96-96"];
m29_68 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var expectedFilename = string.Format(''{0}_volume.zip'', symbol.Value.ToLower())", span="108-108"];
m29_59 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="writer.Write(data)", span="90-90"];
m29_60 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var expectedData = data.Cast<FxcmVolume>().ToArray()", span="92-92"];
m29_71 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData.Length, actualdata.Count)", span="113-113"];
m29_75 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData[i].Value, long.Parse(actualdata[i][1]))", span="118-118"];
m29_76 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.AreEqual(expectedData[i].Transactions, int.Parse(actualdata[i][2]))", span="119-119"];
m29_64 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.True(Directory.Exists(expectedFolder))", span="98-98"];
m29_66 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var zipFiles = Directory.GetFiles(expectedFolder, ''*_volume.zip'').Length", span="102-102"];
m29_69 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Assert.True(File.Exists(Path.Combine(expectedFolder, expectedFilename)))", span="109-109"];
m29_70 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var actualdata = ReadZipFolderData(expectedFolder)", span="112-112"];
m29_72 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var lines = actualdata.Count", span="115-115"];
m29_73 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="var i = 0", span="116-116"];
m29_74 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="i < lines - 1", span="116-116"];
m29_77 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="i++", span="116-116"];
m29_78 [cluster="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", file="RelativeStrengthIndexTests.cs", label="Exit QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest.ParsedDataIsCorrectlySaved(string, QuantConnect.Resolution, string, int)", span="81-81"];
m29_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="RelativeStrengthIndexTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m29_43 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="RelativeStrengthIndexTests.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m29_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RelativeStrengthIndexTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_85 [cluster="Unk.True", file="RelativeStrengthIndexTests.cs", label="Entry Unk.True", span=""];
m29_86 [cluster="System.IO.Directory.GetFiles(string, string)", file="RelativeStrengthIndexTests.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m29_38 [cluster="Unk.Select", file="RelativeStrengthIndexTests.cs", label="Entry Unk.Select", span=""];
m29_122 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RelativeStrengthIndexTests.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m29_133 [file="RelativeStrengthIndexTests.cs", label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", span=""];
m30_61 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="188-188"];
m30_62 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="BaseData data", span="191-191"];
m30_63 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="_dataByType.TryGetValue(typeof(T), out data)", span="192-192"];
m30_64 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="return data as T;", span="193-193"];
m30_65 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData<T>()", span="188-188"];
m30_67 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="199-199"];
m30_68 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="_dataByType.Clear()", span="201-201"];
m30_69 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.Reset()", span="199-199"];
m30_70 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m30_58 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="178-178"];
m30_59 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="return _lastData;", span="180-180"];
m30_60 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData()", span="178-178"];
m30_0 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m30_1 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: var openInterest = data as OpenInterest", span="96-96"];
m30_5 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="0: data.IsFillForward", span="104-104"];
m30_8 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: _lastData = data", span="109-109"];
m30_9 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="0: _dataByType[data.GetType()] = data", span="110-110"];
m30_10 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: data.Time > _lastData.Time || data.Time == _lastData.Time && data.DataType == MarketDataType.QuoteBar", span="115-115"];
m30_11 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: _lastData = data", span="117-117"];
m30_12 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="0: _dataByType[data.GetType()] = data", span="119-119"];
m30_2 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: openInterest != null", span="97-97"];
m30_3 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="OpenInterest = (long)openInterest.Value", span="99-99"];
m30_4 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="return;", span="100-100"];
m30_6 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="0: return;", span="104-104"];
m30_7 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="0: _dataByType.Keys.Count <= 1", span="107-107"];
m30_13 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var tick = _lastData as Tick", span="123-123"];
m30_14 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick != null", span="124-124"];
m30_15 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.Value != 0", span="126-126"];
m30_16 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = tick.Value", span="126-126"];
m30_17 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidPrice != 0", span="128-128"];
m30_18 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidPrice = tick.BidPrice", span="128-128"];
m30_19 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidSize != 0", span="129-129"];
m30_20 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidSize = tick.BidSize", span="129-129"];
m30_21 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskPrice != 0", span="131-131"];
m30_22 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = tick.AskPrice", span="131-131"];
m30_23 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskSize != 0", span="132-132"];
m30_24 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskSize = tick.AskSize", span="132-132"];
m30_25 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.Quantity != 0", span="134-134"];
m30_26 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Volume = tick.Quantity", span="134-134"];
m30_28 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var bar = _lastData as IBar", span="138-138"];
m30_27 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="return;", span="136-136"];
m30_29 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar != null", span="139-139"];
m30_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Open != 0", span="143-143"];
m30_32 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Open = bar.Open", span="143-143"];
m30_33 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.High != 0", span="144-144"];
m30_34 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="High = bar.High", span="144-144"];
m30_35 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Low != 0", span="145-145"];
m30_36 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Low = bar.Low", span="145-145"];
m30_37 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Close != 0", span="146-146"];
m30_38 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = bar.Close", span="148-148"];
m30_39 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Close = bar.Close", span="149-149"];
m30_40 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var tradeBar = bar as TradeBar", span="153-153"];
m30_44 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var quoteBar = bar as QuoteBar", span="158-158"];
m30_30 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate != _lastData.EndTime", span="141-141"];
m30_55 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = _lastData.Price", span="170-170"];
m30_41 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar != null", span="154-154"];
m30_42 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar.Volume != 0", span="156-156"];
m30_43 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Volume = tradeBar.Volume", span="156-156"];
m30_45 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar != null", span="159-159"];
m30_46 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate = quoteBar.EndTime", span="161-161"];
m30_47 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.Ask != null && quoteBar.Ask.Close != 0", span="162-162"];
m30_48 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = quoteBar.Ask.Close", span="162-162"];
m30_49 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.Bid != null && quoteBar.Bid.Close != 0", span="163-163"];
m30_50 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidPrice = quoteBar.Bid.Close", span="163-163"];
m30_51 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.LastBidSize != 0", span="164-164"];
m30_52 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidSize = quoteBar.LastBidSize", span="164-164"];
m30_53 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.LastAskSize != 0", span="165-165"];
m30_54 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskSize = quoteBar.LastAskSize", span="165-165"];
m30_56 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m30_66 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m30_71 [file="SecurityCache.cs", label="QuantConnect.Securities.SecurityCache", span=""];
m32_303 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
m32_339 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="303-303"];
m32_159 [cluster="System.TimeSpan.FromHours(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m32_99 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label=_chartLock, span="345-345"];
m32_503 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="583-583"];
m32_138 [cluster="System.DateTime.ToUniversalTime()", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m32_97 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="_nextChartsUpdate = DateTime.Now.AddMinutes(1)", span="343-343"];
m32_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="endOfDayEventTime = _today[security.Type].Open.End.Subtract(_endOfDayDelta)", span="197-197"];
m32_54 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="deltaOrders = new Dictionary<int, Order>()", span="253-253"];
m32_158 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="833-833"];
m32_345 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label=_chartLock, span="845-845"];
m32_357 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="data_keys.Add(new\r\n                        {\r\n                            Key = CreateKey(''minute''),\r\n                            Serialized = JsonConvert.SerializeObject(live.Results)\r\n                        })", span="870-874"];
m32_361 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="data_keys.Add(new\r\n                        {\r\n                            Key = CreateKey(''10minute''),\r\n                            Serialized = JsonConvert.SerializeObject(live.Results)\r\n                        })", span="881-885"];
m32_372 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="data_keys.Add(new\r\n                            {\r\n                                Key = CreateKey(''second_'' + Uri.EscapeUriString(name), ''yyyy-MM-dd-HH''),\r\n                                Serialized = JsonConvert.SerializeObject(newPacket)\r\n                            })", span="902-906"];
m32_376 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="_api.Store(dataKey.Serialized, dataKey.Key, StoragePermissions.Authenticated, async)", span="919-919"];
m32_344 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): Begin store result sampling'')", span="844-844"];
m32_374 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.StoreResult(): End store result sampling'')", span="914-914"];
m32_346 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="packet.Type != PacketType.LiveResult", span="848-848"];
m32_343 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var data_keys = Enumerable.Range(0, 0).Select(x => new\r\n            {\r\n                Key = (string)null,\r\n                Serialized = (string)null\r\n            }).ToList()", span="836-840"];
m32_348 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var live = packet as LiveResultPacket", span="851-851"];
m32_356 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="live.Results.Charts = minuteCharts", span="869-869"];
m32_358 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var tenminuteSampler = new SeriesSampler(TimeSpan.FromMinutes(10))", span="877-877"];
m32_360 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="live.Results.Charts = tenminuteCharts", span="880-880"];
m32_362 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="live.Results.Charts = highResolutionCharts", span="888-888"];
m32_366 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="live.Results.Charts.Keys", span="894-894"];
m32_371 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="newPacket.Charts.Add(name, live.Results.Charts[name])", span="900-900"];
m32_367 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var newPacket = new LiveResult()", span="896-896"];
m32_375 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label=data_keys, span="917-917"];
m32_373 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Error(''LiveResultHandler.StoreResult(): Result Null.'')", span="911-911"];
m32_353 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var highResolutionCharts = new Dictionary<string, Chart>(live.Results.Charts)", span="862-862"];
m32_368 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="newPacket.Orders = new Dictionary<int, Order>(live.Results.Orders)", span="897-897"];
m32_369 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="newPacket.Holdings = new Dictionary<string, Holding>(live.Results.Holdings)", span="898-898"];
m32_363 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="start = DateTime.UtcNow.RoundDown(TimeSpan.FromHours(1))", span="889-889"];
m32_364 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="stop = DateTime.UtcNow.RoundUp(TimeSpan.FromHours(1))", span="890-890"];
m32_347 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="return;", span="848-848"];
m32_349 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="live != null", span="853-853"];
m32_352 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Truncate(live.Results, start, stop)", span="860-860"];
m32_355 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var minuteCharts = minuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="866-866"];
m32_359 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var tenminuteCharts = tenminuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="878-878"];
m32_365 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Truncate(live.Results, start, stop)", span="892-892"];
m32_370 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="newPacket.Charts = new Dictionary<string, Chart>()", span="899-899"];
m32_377 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label=Exception, span="922-922"];
m32_354 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var minuteSampler = new SeriesSampler(TimeSpan.FromMinutes(1))", span="865-865"];
m32_378 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Error(err)", span="924-924"];
m32_350 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var start = DateTime.UtcNow.Date", span="856-856"];
m32_351 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="var stop = start.AddDays(1)", span="857-857"];
m32_379 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="833-833"];
m32_147 [cluster="int.ToString()", file="SolutionExplorerMenuCommand.cs", label="Entry int.ToString()", span="0-0"];
m32_201 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m32_402 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="951-951"];
m32_403 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="!_exitTriggered && _algorithm != null && !_algorithm.GetLocked()", span="955-955"];
m32_404 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="ProcessSynchronousEvents(true)", span="957-957"];
m32_405 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="StoreLog(_logStore)", span="958-958"];
m32_406 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="_exitTriggered = true", span="961-961"];
m32_407 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Update()", span="963-963"];
m32_408 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="951-951"];
m32_261 [cluster="System.DateTime.ToShortTimeString()", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m32_447 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1019-1019"];
m32_448 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="SolutionExplorerMenuCommand.cs", label="_subscription = symbol", span="1021-1021"];
m32_449 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1019-1019"];
m32_514 [cluster="object.GetType()", file="SolutionExplorerMenuCommand.cs", label="Entry object.GetType()", span="0-0"];
m32_506 [cluster="Unk.SingleOrDefault", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.SingleOrDefault", span=""];
m32_229 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m32_321 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776"];
m32_322 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var charts = new Dictionary<string, Chart>(Charts)", span="781-781"];
m32_324 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="result.ProcessingTime = (DateTime.Now - _startTime).TotalSeconds", span="787-787"];
m32_325 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="StoreResult(result, false)", span="790-790"];
m32_327 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="_messagingHandler.Send(result)", span="796-796"];
m32_323 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var result = new LiveResultPacket((LiveNodePacket)job, new LiveResult(charts, orders, profitLoss, holdings, statisticsResults.Summary, runtime))", span="784-784"];
m32_326 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="result.Results = new LiveResult()", span="793-793"];
m32_328 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label=Exception, span="798-798"];
m32_329 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Log.Error(err)", span="800-800"];
m32_330 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776"];
m32_194 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m32_96 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.Update(): Pre-store result'')", span="342-342"];
m32_410 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="969-969"];
m32_411 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Messages.Clear()", span="971-971"];
m32_412 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="969-969"];
m32_222 [cluster="System.DateTime.ToString(string)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m32_51 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="return;", span="244-244"];
m32_161 [cluster="Unk.ToList", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ToList", span=""];
m32_137 [cluster="decimal.SmartRounding()", file="SolutionExplorerMenuCommand.cs", label="Entry decimal.SmartRounding()", span="205-205"];
m32_153 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438"];
m32_181 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="deltaChart.Name == _subscription || _subscription == ''*''", span="461-461"];
m32_184 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="469-469"];
m32_187 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="478-478"];
m32_188 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var packets = new[]\r\n            {\r\n                new LiveResultPacket(_job, new LiveResult {Orders = deltaOrders}),\r\n                new LiveResultPacket(_job, new LiveResult {Holdings = holdings}),\r\n                new LiveResultPacket(_job, new LiveResult\r\n                {\r\n                    Statistics = deltaStatistics,\r\n                    RuntimeStatistics = runtimeStatistics,\r\n                    ServerStatistics = serverStatistics\r\n                })\r\n            }", span="482-492"];
m32_178 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="deltaCharts.Values", span="456-456"];
m32_180 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="current.Add(deltaChart.Name, chart)", span="459-459"];
m32_182 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="chart.Series = deltaChart.Series", span="463-463"];
m32_183 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="current.Count >= groupSize", span="466-466"];
m32_176 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var current = new Dictionary<string, Chart>()", span="448-448"];
m32_177 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var chartPackets = new List<LiveResultPacket>()", span="449-449"];
m32_185 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="current = new Dictionary<string, Chart>()", span="471-471"];
m32_186 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="current.Count > 0", span="476-476"];
m32_189 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="return packets.Concat(chartPackets);", span="495-495"];
m32_175 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var groupSize = 3", span="447-447"];
m32_179 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="var chart = new Chart(deltaChart.Name)", span="458-458"];
m32_190 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438"];
m32_52 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="DateTime.Now > _nextUpdate || _exitTriggered", span="249-249"];
m32_108 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_49 [cluster="System.DateTime.Subtract(System.TimeSpan)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m32_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="185-185"];
m32_50 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m32_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].PreMarket.Start.TimeOfDay", span="268-268"];
m32_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="!_today.ContainsKey(security.Type)", span="244-244"];
m32_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: sub.ExtendedMarketHours", span="266-266"];
m32_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _algorithm.Securities[sub.Symbol].Exchange.MarketOpen = TimeSpan.FromHours(0)", span="263-263"];
m32_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="SecurityType.Equity", span="259-259"];
m32_80 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = TimeSpan.FromHours(0)", span="264-264"];
m32_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].PostMarket.End.TimeOfDay", span="269-269"];
m32_56 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="212-225"];
m32_57 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="_algorithm.OnEndOfDay()", span="216-216"];
m32_62 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="223-223"];
m32_65 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="265-265"];
m32_66 [cluster="System.DateTime.ToShortDateString()", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m32_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="1: _today[security.Type] = Engine.Api.MarketToday(security.Type)", span="249-249"];
m32_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="security.Type", span="257-257"];
m32_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Extended market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].PreMarket.Start,\r\n                                    _today[SecurityType.Equity].PostMarket.End))", span="270-274"];
m32_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].Open.Start.TimeOfDay", span="278-278"];
m32_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].Open.End.TimeOfDay", span="279-279"];
m32_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].Open.Start, _today[SecurityType.Equity].Open.End))", span="280-283"];
m32_89 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Forex].Open.Start.TimeOfDay", span="288-288"];
m32_90 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Forex].Open.End.TimeOfDay", span="289-289"];
m32_91 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Log.Trace(\r\n                            string.Format(\r\n                                ''LiveTradingRealTimeHandler.SetupEvents(Forex): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                sub.Symbol, _today[SecurityType.Forex].Open.Start, _today[SecurityType.Forex].Open.End))", span="290-293"];
m32_92 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="234-234"];
m32_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_95 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="84-84"];
m32_100 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="SolutionExplorerMenuCommand.cs", label="var i = 0", span="304-304"];
m32_103 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="SolutionExplorerMenuCommand.cs", label="i++", span="304-304"];
m32_104 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="302-302"];
m32_105 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="77-77"];
m32_107 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="314-314"];
m32_110 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="SolutionExplorerMenuCommand.cs", label="var i = 0", span="325-325"];
m32_112 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _events[i].Reset()", span="327-327"];
m32_113 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="SolutionExplorerMenuCommand.cs", label="i++", span="325-325"];
m32_114 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="323-323"];
m32_115 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="107-107"];
m32_117 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="334-334"];
m32_118 [cluster="System.Collections.Generic.List<T>.Clear()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m32_121 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="_time = time", span="353-353"];
m32_123 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="359-359"];
m32_124 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="_exitTriggered = true", span="361-361"];
m32_128 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="_nextUpdate = DateTime.Now.AddSeconds(2)", span="423-423"];
m32_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="endOfDayEventTime.HasValue", span="207-207"];
m32_53 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m32_129 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label=Exception, span="427-427"];
m32_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="var security = _algorithm.Securities[sub.Symbol]", span="241-241"];
m32_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _today.Add(security.Type, new MarketToday())", span="247-247"];
m32_88 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="SecurityType.Forex", span="287-287"];
m32_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_today[SecurityType.Equity].Status != ''open''", span="261-261"];
m32_64 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="260-260"];
m32_69 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_today.Clear()", span="236-236"];
m32_106 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="SolutionExplorerMenuCommand.cs", label="_events.Add(newEvent)", span="316-316"];
m32_109 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="323-323"];
m32_116 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _events.Clear()", span="336-336"];
m32_122 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="343-343"];
m32_127 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label=symbol, span=""];
m32_55 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="314-314"];
m32_58 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="_algorithm.OnEndOfDay(symbol)", span="217-217"];
m32_59 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()))", span="218-218"];
m32_63 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="212-225"];
m32_68 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m32_67 [cluster="string.Format(string, object, object)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_75 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Log.Trace(\r\n                        string.Format(\r\n                            ''LiveTradingRealTimeHandler.SetupEvents(): Daily Market Hours Setup for Security Type: {0} Start: {1} Stop: {2}'',\r\n                            security.Type, _today[security.Type].Open.Start, _today[security.Type].Open.End))", span="250-253"];
m32_70 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="_feed.Subscriptions", span="239-239"];
m32_93 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m32_98 [cluster="string.Format(string, object, object, object)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m32_102 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="SolutionExplorerMenuCommand.cs", label="_events[i].Scan(_time)", span="306-306"];
m32_101 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="SolutionExplorerMenuCommand.cs", label="i < _events.Count", span="304-304"];
m32_111 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="SolutionExplorerMenuCommand.cs", label="i < _events.Count", span="325-325"];
m32_119 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="_time.Date != time.Date", span="346-346"];
m32_120 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="SetupEvents(time)", span="349-349"];
m32_125 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="359-359"];
m32_130 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="Log.Error(err, ''LiveTradingResultHandler().Update(): '', true)", span="429-429"];
m32_61 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="222-222"];
m32_60 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label=Exception, span="220-220"];
m32_126 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m32_131 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="235-235"];
m32_393 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="932-932"];
m32_394 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="_orderEvents.Enqueue(newEvent)", span="935-935"];
m32_396 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new OrderEventPacket(_deployId, newEvent))", span="939-939"];
m32_398 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="DebugMessage(message)", span="942-942"];
m32_399 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="LogMessage(message)", span="945-945"];
m32_395 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(''LiveTradingResultHandler.OrderEvent(): '' + newEvent, true)", span="938-938"];
m32_397 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="var message = ''New Order Event: '' + newEvent", span="941-941"];
m32_400 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="932-932"];
m32_252 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="133-133"];
m32_305 [cluster="System.Console.SetError(System.IO.TextWriter)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
m32_34 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="Update()", span="213-213"];
m32_338 [cluster="Unk.Join", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Join", span=""];
m32_251 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_385 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="1010-1010"];
m32_444 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="SolutionExplorerMenuCommand.cs", label="return string.Format(''live/{0}/{1}/{2}-{3}_{4}.json'', _job.UserId, _job.ProjectId, _job.DeployId, DateTime.UtcNow.ToString(dateFormat), suffix);", span="1012-1012"];
m32_445 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="1010-1010"];
m32_446 [cluster="string.Format(string, params object[])", file="SolutionExplorerMenuCommand.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m32_382 [cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="31-31"];
m32_193 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_231 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565"];
m32_233 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(packet)", span="568-568"];
m32_232 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="SolutionExplorerMenuCommand.cs", label="var packet = new SecurityTypesPacket { Types = types }", span="567-567"];
m32_234 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565"];
m32_433 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m32_505 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="625-625"];
m32_274 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671"];
m32_275 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="673-673"];
m32_276 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671"];
m32_289 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m32_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="var symbol = security.Symbol", span="211-211"];
m32_381 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="977-977"];
m32_426 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="result.Orders = result.Orders.Values.Where(x => x.Time >= start && x.Time <= stop).ToDictionary(x => x.Id)", span="999-999"];
m32_423 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="newSeries.Values.AddRange(series.Values.Where(chartPoint => chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop))", span="994-994"];
m32_425 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="result.Charts = charts", span="998-998"];
m32_427 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="result.Orders", span="1004-1004"];
m32_414 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var unixDateStart = Time.DateTimeToUnixTimeStamp(start)", span="979-979"];
m32_415 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var unixDateStop = Time.DateTimeToUnixTimeStamp(stop)", span="980-980"];
m32_421 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="chart.Series.Values", span="991-991"];
m32_422 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var newSeries = new Series(series.Name, series.SeriesType)", span="993-993"];
m32_424 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="newChart.AddSeries(newSeries)", span="995-995"];
m32_417 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="result.Charts", span="986-986"];
m32_416 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var charts = new Dictionary<string, Chart>()", span="985-985"];
m32_428 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="1006-1006"];
m32_420 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="charts.Add(kvp.Key, newChart)", span="990-990"];
m32_418 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var chart = kvp.Value", span="988-988"];
m32_419 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="var newChart = new Chart(chart.Name, chart.ChartType)", span="989-989"];
m32_429 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="977-977"];
m32_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: SetupEvents(DateTime.Now.Date)", span="130-130"];
m32_191 [cluster="QuantConnect.Chart.Chart(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m32_148 [cluster="Unk.Where", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Where", span=""];
m32_384 [cluster="QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", span="129-129"];
m32_7 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", file="SolutionExplorerMenuCommand.cs", label="_notificationPeriod = TimeSpan.FromSeconds(1)", span="166-166"];
m32_171 [cluster="QuantConnect.Symbol.IsCanonical()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m32_290 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715"];
m32_291 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="_algorithm = algorithm", span="717-717"];
m32_293 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities.Values", span="720-720"];
m32_296 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="SecurityType(types)", span="724-724"];
m32_292 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="var types = new List<SecurityType>()", span="719-719"];
m32_294 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="!types.Contains(security.Type)", span="722-722"];
m32_295 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="types.Add(security.Type)", span="722-722"];
m32_297 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="var debug = new FuncTextWriter(algorithm.Debug)", span="727-727"];
m32_298 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="var error = new FuncTextWriter(algorithm.Error)", span="728-728"];
m32_299 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="Console.SetOut(debug)", span="729-729"];
m32_300 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="Console.SetError(error)", span="730-730"];
m32_301 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715"];
m32_435 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="994-994"];
m32_167 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="300-300"];
m32_172 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="300-300"];
m32_169 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="300-300"];
m32_168 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="!x.IsInternalFeed() && !x.Symbol.IsCanonical()", span="300-300"];
m32_174 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="300-300"];
m32_173 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="x.Symbol.Value", span="300-300"];
m32_340 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="814-814"];
m32_390 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="836-840"];
m32_438 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="999-999"];
m32_441 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="999-999"];
m32_342 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="814-814"];
m32_341 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="x.Message", span="814-814"];
m32_392 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="836-840"];
m32_391 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="new\r\n            {\r\n                Key = (string)null,\r\n                Serialized = (string)null\r\n            }", span="836-840"];
m32_439 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="x.Time >= start && x.Time <= stop", span="999-999"];
m32_440 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="999-999"];
m32_443 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="999-999"];
m32_442 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="x.Id", span="999-999"];
m32_436 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop", span="994-994"];
m32_437 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="994-994"];
m32_509 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m32_163 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="280-280"];
m32_24 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SolutionExplorerMenuCommand.cs", label="throw new Exception(''LiveResultHandler.Constructor(): Submitted Job type invalid.'');", span="190-190"];
m32_23 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SolutionExplorerMenuCommand.cs", label="_job == null", span="190-190"];
m32_388 [cluster="System.Uri.EscapeUriString(string)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Uri.EscapeUriString(string)", span="0-0"];
m32_409 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1029-1029"];
m32_451 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="time > _nextSample || forceProcess", span="1033-1033"];
m32_453 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_nextSample = time.Add(ResamplePeriod)", span="1038-1038"];
m32_454 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_dataFeed != null", span="1041-1041"];
m32_455 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_dataFeed.Subscriptions", span="1043-1043"];
m32_458 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities.TryGetValue(subscription.Configuration.Symbol, out security)", span="1050-1050"];
m32_465 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var cash = (from c in _algorithm.Portfolio.CashBook.Values\r\n                                    where c.SecuritySymbol == last.Symbol\r\n                                    select c).SingleOrDefault()", span="1065-1067"];
m32_469 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="SampleAssetPrices(subscription.Configuration.Symbol, time, price)", span="1081-1081"];
m32_470 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="1087-1087"];
m32_471 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="SampleRange(_algorithm.GetChartUpdates(true))", span="1090-1090"];
m32_472 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="!_algorithm.IsWarmingUp && time > _nextRunningStatus", span="1094-1094"];
m32_473 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_nextRunningStatus = time.Add(TimeSpan.FromMinutes(1))", span="1096-1096"];
m32_474 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_api.SetAlgorithmStatus(_job.AlgorithmId, AlgorithmStatus.Running)", span="1097-1097"];
m32_476 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="1102-1102"];
m32_478 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.DebugMessages.TryDequeue(out message)", span="1105-1105"];
m32_479 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="DebugMessage(message)", span="1107-1107"];
m32_481 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="1113-1113"];
m32_483 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.ErrorMessages.TryDequeue(out message)", span="1116-1116"];
m32_484 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="ErrorMessage(message)", span="1118-1118"];
m32_486 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="1124-1124"];
m32_488 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.LogMessages.TryDequeue(out message)", span="1127-1127"];
m32_489 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="LogMessage(message)", span="1129-1129"];
m32_490 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.RuntimeStatistics", span="1134-1134"];
m32_491 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="RuntimeStatistic(pair.Key, pair.Value)", span="1136-1136"];
m32_493 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Notify.Messages.Count > 0 && (DateTime.Now < start.AddSeconds(1) || forceProcess)", span="1141-1141"];
m32_495 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Notify.Messages.TryDequeue(out message)", span="1144-1144"];
m32_497 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="_messagingHandler.SendNotification(message)", span="1150-1150"];
m32_452 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Enter'')", span="1035-1035"];
m32_500 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Exit'')", span="1159-1159"];
m32_450 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var time = DateTime.UtcNow", span="1031-1031"];
m32_456 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="subscription.Configuration.TickType == TickType.OpenInterest", span="1046-1046"];
m32_459 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var price = subscription.RealtimePrice", span="1053-1053"];
m32_468 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="security.SetMarketPrice(new Tick(time, subscription.Configuration.Symbol, price, price))", span="1077-1077"];
m32_457 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Security security", span="1049-1049"];
m32_460 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var last = security.GetLastData()", span="1055-1055"];
m32_464 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="security.SetRealTimePrice(last)", span="1062-1062"];
m32_462 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="last = last.Clone(last.IsFillForward)", span="1059-1059"];
m32_466 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="cash != null", span="1069-1069"];
m32_467 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="cash.Update(last)", span="1071-1071"];
m32_475 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var debugStopWatch = Stopwatch.StartNew()", span="1101-1101"];
m32_477 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="string message", span="1104-1104"];
m32_480 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var errorStopWatch = Stopwatch.StartNew()", span="1112-1112"];
m32_482 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="string message", span="1115-1115"];
m32_485 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var logStopWatch = Stopwatch.StartNew()", span="1123-1123"];
m32_487 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="string message", span="1126-1126"];
m32_492 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="var start = DateTime.Now", span="1140-1140"];
m32_499 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Error(err, ''Sending notification: '' + message.GetType().FullName)", span="1154-1154"];
m32_494 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Notification message", span="1143-1143"];
m32_496 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(''LiveTradingResultHandler.ProcessSynchronousEvents(): Processing Notification...'')", span="1147-1147"];
m32_498 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label=Exception, span="1152-1152"];
m32_461 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="last != null && price > 0", span="1056-1056"];
m32_463 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="last.Value = price", span="1061-1061"];
m32_501 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1029-1029"];
m32_27 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="182-182"];
m32_151 [cluster="Unk.Add", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Add", span=""];
m32_215 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m32_380 [cluster="System.Linq.Enumerable.Range(int, int)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m32_401 [cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="49-49"];
m32_16 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="138-138"];
m32_17 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="SetTime(DateTime.Now)", span="141-141"];
m32_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="ScanEvents()", span="144-144"];
m32_19 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="_isActive = false", span="147-147"];
m32_20 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m32_21 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="161-161"];
m32_22 [cluster="System.TimeSpan.FromSeconds(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m32_25 [cluster="System.Threading.Thread.Sleep(int)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m32_26 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="343-343"];
m32_508 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="143-143"];
m32_277 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
m32_279 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label=_chartLock, span="684-684"];
m32_281 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="!Charts.ContainsKey(update.Name)", span="689-689"];
m32_282 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="691-691"];
m32_284 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="698-698"];
m32_285 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="700-700"];
m32_286 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="704-704"];
m32_278 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Begin sampling'')", span="683-683"];
m32_287 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Finished sampling'')", span="708-708"];
m32_280 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label=updates, span="686-686"];
m32_283 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="update.Series.Values", span="695-695"];
m32_288 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681"];
m32_306 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739"];
m32_309 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="var packet = new AlgorithmStatusPacket(_job.AlgorithmId, _job.ProjectId, status, message)", span="743-743"];
m32_310 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(packet)", span="744-744"];
m32_308 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(''LiveTradingResultHandler.SendStatusUpdate(): '' + msg)", span="742-742"];
m32_307 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="var msg = status + (string.IsNullOrEmpty(message) ? string.Empty : '' '' + message)", span="741-741"];
m32_311 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739"];
m32_431 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="179-179"];
m32_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="AddEvent(new RealTimeEvent(endOfDayEventTime.Value, () =>\r\n                    {\r\n                        try\r\n                        {\r\n                            _algorithm.OnEndOfDay();\r\n                            _algorithm.OnEndOfDay(symbol);\r\n                            Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()));\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            Engine.ResultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                            Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                        }\r\n                    }, true))", span="212-225"];
m32_430 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m32_142 [cluster="string.Replace(char, char)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Replace(char, char)", span="0-0"];
m32_337 [cluster="Unk.Select", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Select", span=""];
m32_434 [cluster="Unk.ToDictionary", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ToDictionary", span=""];
m32_164 [cluster="System.DateTime.AddDays(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_270 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="564-564"];
m32_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m32_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m32_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _results = results", span="113-113"];
m32_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="123-123"];
m32_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _algorithm = algorithm", span="109-109"];
m32_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _events = new List<RealTimeEvent>()", span="110-110"];
m32_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _today = new Dictionary<SecurityType, MarketToday>()", span="111-111"];
m32_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _feed = feed", span="112-112"];
m32_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _isActive = true", span="126-126"];
m32_271 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m32_156 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="108-108"];
m32_135 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
m32_136 [cluster="QuantConnect.Orders.Order.Clone()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="224-224"];
m32_143 [cluster="QuantConnect.Chart.GetUpdates()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m32_256 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622"];
m32_259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="627-627"];
m32_258 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.SampleEquity(): '' + time.ToShortTimeString() + '' >'' + value)", span="626-626"];
m32_257 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="value > 0", span="624-624"];
m32_260 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622"];
m32_513 [cluster="QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", span="56-56"];
m32_36 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="4: Thread.Sleep(10)", span="218-218"];
m32_38 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Log.Error(err)", span="223-223"];
m32_39 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Log.Trace(''LiveTradingResultHandler.Run(): Ending Thread...'')", span="227-227"];
m32_40 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _isActive = false", span="228-228"];
m32_41 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198"];
m32_43 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m32_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="SolutionExplorerMenuCommand.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Setup EOD Event for {0}'', endOfDayEventTime.Value.ToString(''u'')))", span="209-209"];
m32_140 [cluster="Unk.Max", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Max", span=""];
m32_209 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527"];
m32_210 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Count > 500", span="530-530"];
m32_212 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new LogPacket(_deployId, message))", span="531-531"];
m32_213 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="AddToLogStore(message)", span="532-532"];
m32_211 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="return;", span="530-530"];
m32_214 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527"];
m32_28 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="ClearEvents()", span="166-166"];
m32_304 [cluster="System.Console.SetOut(System.IO.TextWriter)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
m32_149 [cluster="Unk.OrderBy", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.OrderBy", span=""];
m32_29 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198"];
m32_30 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="!(_exitTriggered && Messages.Count == 0)", span="201-201"];
m32_31 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Packet packet", span="206-206"];
m32_32 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Messages.TryDequeue(out packet)", span="207-207"];
m32_33 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="_messagingHandler.Send(packet)", span="209-209"];
m32_507 [cluster="Unk.Update", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Update", span=""];
m32_512 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
m32_336 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809"];
m32_332 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="var key = ''live/'' + _job.UserId + ''/'' + _job.ProjectId + ''/'' + _job.DeployId + ''-'' + DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'') + ''-log.txt''", span="815-815"];
m32_333 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="_api.Store(joined, key, StoragePermissions.Authenticated)", span="816-816"];
m32_162 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809"];
m32_331 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="var joined = string.Join(''\r\n'', logs.Select(x=>x.Message))", span="814-814"];
m32_334 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label=Exception, span="818-818"];
m32_335 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", file="SolutionExplorerMenuCommand.cs", label="Log.Error(err)", span="820-820"];
m32_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _time = DateTime.Now", span="127-127"];
m32_302 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m32_504 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249"];
m32_134 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m32_203 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539"];
m32_217 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label=_logStoreLock, span="542-542"];
m32_218 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label="_logStore.Add(new LogEntry(DateTime.Now.ToString(DateFormat.UI) + '' '' + message))", span="544-544"];
m32_216 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Adding'')", span="541-541"];
m32_219 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Finished adding'')", span="546-546"];
m32_220 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539"];
m32_510 [cluster="System.Math.Round(decimal, int)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m32_170 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m32_154 [cluster="System.DateTime.AddMinutes(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m32_146 [cluster="string.Format(string, object, object)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_221 [cluster="QuantConnect.Logging.LogEntry.LogEntry(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Logging.LogEntry.LogEntry(string)", span="44-44"];
m32_432 [cluster="Unk.AddRange", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.AddRange", span=""];
m32_155 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m32_157 [cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="179-179"];
m32_208 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m32_204 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515"];
m32_205 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="517-517"];
m32_206 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="AddToLogStore(message)", span="518-518"];
m32_207 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515"];
m32_152 [cluster="decimal.ToString(string)", file="SolutionExplorerMenuCommand.cs", label="Entry decimal.ToString(string)", span="0-0"];
m32_413 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="70-70"];
m32_253 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_262 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638"];
m32_264 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="_algorithm.Securities.TryGetValue(symbol, out security) && !security.IsInternalFeed() && value > 0", span="642-642"];
m32_267 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="647-647"];
m32_263 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Security security", span="641-641"];
m32_265 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="var now = DateTime.UtcNow.ConvertFromUtc(security.Exchange.TimeZone)", span="644-644"];
m32_266 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="security.Exchange.Hours.IsOpen(now, security.IsExtendedMarketHours)", span="645-645"];
m32_268 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638"];
m32_312 [cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", span="74-74"];
m32_254 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m32_386 [cluster="Unk.SerializeObject", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.SerializeObject", span=""];
m32_236 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576"];
m32_237 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _deployId, message, stacktrace))", span="578-578"];
m32_238 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="SolutionExplorerMenuCommand.cs", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="579-579"];
m32_239 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576"];
m32_133 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m32_37 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", file="SolutionExplorerMenuCommand.cs", label=Exception, span="221-221"];
m32_389 [cluster="Unk.Store", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Store", span=""];
m32_383 [cluster="System.TimeSpan.FromMinutes(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m32_241 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593"];
m32_243 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label=_chartLock, span="596-596"];
m32_244 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="!Charts.ContainsKey(chartName)", span="599-599"];
m32_245 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="601-601"];
m32_246 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="605-605"];
m32_247 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="607-607"];
m32_248 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="611-611"];
m32_242 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.Sample(): Sampling '' + chartName + ''.'' + seriesName)", span="595-595"];
m32_249 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.Sample(): Done sampling '' + chartName + ''.'' + seriesName)", span="613-613"];
m32_250 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593"];
m32_502 [cluster="System.DateTime.Add(System.TimeSpan)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m32_223 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554"];
m32_224 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Count > 500", span="556-556"];
m32_226 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new HandledErrorPacket(_deployId, message, stacktrace))", span="557-557"];
m32_227 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="558-558"];
m32_225 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="return;", span="556-556"];
m32_228 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554"];
m32_160 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="475-475"];
m32_313 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753"];
m32_315 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label=_runtimeLock, span="756-756"];
m32_316 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="!_runtimeStatistics.ContainsKey(key)", span="758-758"];
m32_317 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="_runtimeStatistics.Add(key, value)", span="760-760"];
m32_318 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="_runtimeStatistics[key] = value", span="762-762"];
m32_314 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): Begin setting statistic'')", span="755-755"];
m32_319 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): End setting statistic'')", span="764-764"];
m32_320 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753"];
m32_150 [cluster="Holding.cstr", file="SolutionExplorerMenuCommand.cs", label="Entry Holding.cstr", span=""];
m32_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !_exitTriggered", span="133-133"];
m32_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var nextSecond = DateTime.Now.RoundUp(TimeSpan.FromSeconds(1))", span="136-136"];
m32_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="SolutionExplorerMenuCommand.cs", label="var delay = Convert.ToInt32((nextSecond - DateTime.Now).TotalMilliseconds)", span="137-137"];
m32_269 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m32_141 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m32_235 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
m32_240 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m32_166 [cluster="System.DateTime.AddSeconds(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m32_192 [cluster="QuantConnect.Packets.LiveResult.LiveResult()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="173-173"];
m32_195 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504"];
m32_196 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Count > 500", span="506-506"];
m32_198 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="507-507"];
m32_199 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="AddToLogStore(message)", span="508-508"];
m32_197 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="return;", span="506-506"];
m32_200 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504"];
m32_202 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m32_165 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m32_132 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455"];
m32_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday()", span="234-234"];
m32_255 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m32_230 [cluster="string.IsNullOrEmpty(string)", file="SolutionExplorerMenuCommand.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m32_145 [cluster="QuantConnect.OS.GetServerStatistics()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.OS.GetServerStatistics()", span="217-217"];
m32_139 [cluster="Unk.DefaultIfEmpty", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m32_515 [file="SolutionExplorerMenuCommand.cs", label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", span=""];
m32_518 [file="SolutionExplorerMenuCommand.cs", label="System.DateTime", span=""];
m32_519 [file="SolutionExplorerMenuCommand.cs", label="System.DateTime", span=""];
m32_516 [file="SolutionExplorerMenuCommand.cs", label=unixDateStart, span=""];
m32_517 [file="SolutionExplorerMenuCommand.cs", label=unixDateStop, span=""];
m33_6 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="91-91"];
m33_36 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="ToolMenuCommand.cs", label="return subscriptionManager.LookupSubscriptionConfigDataTypes(securityType, resolution, isCanonical);", span="95-95"];
m33_43 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="87-87"];
m33_50 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.Parse()", span="113-113"];
m33_51 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="var factory = (BaseData) ObjectActivator.GetActivator(_config.Type).Invoke(new object[0])", span="115-115"];
m33_55 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="yield break;", span="120-120"];
m33_58 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="yield return factory.Reader(_config, line, _date, false);", span="124-124"];
m33_52 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="ZipFile zipFile", span="116-116"];
m33_53 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="var unzipped = Compression.Unzip(_zipPath,_zipentry, out zipFile)", span="117-117"];
m33_54 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="unzipped == null", span="119-119"];
m33_57 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=red, community=0, file="ToolMenuCommand.cs", label="0: (line = unzipped.ReadLine()) != null", span="122-122"];
m33_59 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=red, community=0, file="ToolMenuCommand.cs", label="0: zipFile.Dispose()", span="127-127"];
m33_56 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="string line", span="121-121"];
m33_60 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="ToolMenuCommand.cs", label="Exit QuantConnect.ToolBox.LeanDataReader.Parse()", span="113-113"];
m33_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m33_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m33_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=green, community=0, file="ToolMenuCommand.cs", label="1: var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m33_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m33_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m33_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="ToolMenuCommand.cs", label="Assert.AreEqual(3, types.Count)", span="66-66"];
m33_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m33_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="ToolMenuCommand.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m33_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(1, types.Count)", span="54-54"];
m33_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=green, community=0, file="ToolMenuCommand.cs", label="2: Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m33_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m33_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m33_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m33_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="3: Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m33_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="ToolMenuCommand.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m33_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(3, types.Count)", span="82-82"];
m33_32 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="88-88"];
m33_23 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m33_24 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m33_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="0: var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m33_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m33_30 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(TickType.Trade, types[1].Item2)", span="86-86"];
m33_31 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(typeof(Tick), types[2].Item1)", span="87-87"];
m33_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m33_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=red, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m33_28 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="ToolMenuCommand.cs", label="0: Assert.AreEqual(TickType.Quote, types[0].Item2)", span="84-84"];
m33_34 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", color=green, community=0, file="ToolMenuCommand.cs", label="0: var timeKeeper = new TimeKeeper(DateTime.UtcNow)", span="93-93"];
m33_35 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="ToolMenuCommand.cs", label="var subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="94-94"];
m33_37 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="91-91"];
m33_48 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="312-312"];
m33_42 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m33_3 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="41-41"];
m33_0 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m33_1 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", color=red, community=0, file="ToolMenuCommand.cs", label="0: var types = GetSubscriptionDataTypes(securityType, resolution)", span="38-38"];
m33_2 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Assert.AreEqual(1, types.Count)", span="40-40"];
m33_4 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="42-42"];
m33_5 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m33_49 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m33_63 [cluster="Unk.Unzip", file="ToolMenuCommand.cs", label="Entry Unk.Unzip", span=""];
m33_39 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m33_40 [cluster="System.ArgumentException.ArgumentException(string)", file="ToolMenuCommand.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m33_46 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="ToolMenuCommand.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m33_64 [cluster="Unk.ReadLine", file="ToolMenuCommand.cs", label="Entry Unk.ReadLine", span=""];
m33_41 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="646-646"];
m33_7 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="426-426"];
m33_66 [cluster="Unk.Dispose", file="ToolMenuCommand.cs", label="Entry Unk.Dispose", span=""];
m33_38 [cluster="System.IO.FileInfo.FileInfo(string)", file="ToolMenuCommand.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m33_61 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="49-49"];
m33_44 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74"];
m33_62 [cluster="System.Func<T, TResult>.Invoke(T)", file="ToolMenuCommand.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m33_65 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m33_45 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="630-630"];
m33_47 [cluster="System.Enum.Parse(System.Type, string, bool)", file="ToolMenuCommand.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m33_67 [file="ToolMenuCommand.cs", label="QuantConnect.ToolBox.LeanDataReader", span=""];
m34_4 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="VsUtils.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m34_0 [cluster="QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", file="VsUtils.cs", label="Entry QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", span="24-24"];
m34_1 [cluster="QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", file="VsUtils.cs", label="var rsi = new RelativeStrengthIndex(''rsi'', 14, MovingAverageType.Simple)", span="26-26"];
m34_2 [cluster="QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", file="VsUtils.cs", label="TestHelper.TestIndicator(rsi, ''RSI 14'')", span="27-27"];
m34_3 [cluster="QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", file="VsUtils.cs", label="Exit QuantConnect.Tests.Indicators.RelativeStrengthIndexTests.ComparesAgainstExternalData()", span="24-24"];
m34_5 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="VsUtils.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", span="56-56"];
n606 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n183  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n209  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n342  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n350  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n399  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n415  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n606 -> n595  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n607 -> n329  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n608 -> n332  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n609 -> n336  [color=darkseagreen4, key=1, label=split, style=dashed];
n610 -> n481  [color=red, key=1, label=dataType, style=dashed];
n611 -> n520  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n612 -> n556  [color=darkseagreen4, key=1, label=split, style=dashed];
n613 -> n589  [color=darkseagreen4, key=1, label=security, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label=bool, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n1  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n4  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n10 -> n22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n10 -> n24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n33  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n329  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n49  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n10 -> n52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
n10 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n10 -> n70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n73  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n10 -> n79  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
n10 -> n92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n10 -> n93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n10 -> n94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n98  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n103  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n106  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n112  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n118  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n120  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n129  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n141  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n142  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n143  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n10 -> n145  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n147  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n169  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n178  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n180  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n182  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n194  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n196  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n198  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n200  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n205  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n206  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n10 -> n214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n218  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
n10 -> n225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n234  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n238  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n10 -> n239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n241  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n242  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n243  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n10 -> n245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n10 -> n246  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n63  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n244  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n246  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n55  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n14 -> n68  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n14 -> n243  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n14 -> n245  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n14 -> n246  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n22 -> n23  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n251  [key=2, style=dotted];
n25 -> n191  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n251  [key=2, style=dotted];
n26 -> n193  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n251  [key=2, style=dotted];
n27 -> n195  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n251  [key=2, style=dotted];
n28 -> n197  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n251  [key=2, style=dotted];
n29 -> n175  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n251  [key=2, style=dotted];
n30 -> n177  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n251  [key=2, style=dotted];
n31 -> n179  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n251  [key=2, style=dotted];
n32 -> n72  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n252  [key=2, style=dotted];
n33 -> n253  [key=2, style=dotted];
n33 -> n254  [key=2, style=dotted];
n33 -> n255  [key=2, style=dotted];
n33 -> n324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n33 -> n328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n33 -> n38  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
n329 -> n330  [key=0, style=solid];
n329 -> n252  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n44  [key=0, style=solid];
n34 -> n36  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n37  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n39  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n43  [color=darkseagreen4, key=1, label=config, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n252  [key=2, style=dotted];
n36 -> n256  [key=2, style=dotted];
n36 -> n38  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n36 -> n42  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n36 -> n43  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n39 -> n40  [key=0, style=solid];
n39 -> n258  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n261  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n216  [key=0, style=solid];
n45 -> n262  [key=2, style=dotted];
n45 -> n48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n50  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n53  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n54  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n71  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n73  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n74  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n77  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n78  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n81  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n92  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n100  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n128  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n129  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n130  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n136  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n139  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n151  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n164  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n175  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n176  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n177  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n178  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n179  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n180  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n191  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n192  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n193  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n194  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n195  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n196  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n197  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n198  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n204  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n205  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n45 -> n206  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=0, style=solid];
n49 -> n49  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n52 -> n53  [key=0, style=solid];
n52 -> n265  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n266  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n267  [key=2, style=dotted];
n58 -> n268  [key=2, style=dotted];
n60 -> n62  [key=0, style=solid];
n60 -> n269  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n267  [key=2, style=dotted];
n61 -> n269  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n244  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n62 -> n246  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n66 -> n216  [key=0, style=solid];
n66 -> n270  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n266  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n271  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n272  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n273  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n74  [key=0, style=solid];
n75 -> n274  [key=2, style=dotted];
n75 -> n331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n79 -> n80  [key=0, style=solid];
n79 -> n78  [key=0, style=solid];
n79 -> n276  [key=2, style=dotted];
n80 -> n78  [key=0, style=solid];
n80 -> n277  [key=2, style=dotted];
n85 -> n81  [key=0, style=solid];
n85 -> n279  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n282  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n283  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n284  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n285  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n286  [key=2, style=dotted];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n101  [key=0, style=solid];
n100 -> n216  [key=0, style=solid];
n100 -> n263  [key=2, style=dotted];
n100 -> n261  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n287  [key=2, style=dotted];
n103 -> n106  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
n103 -> n108  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
n103 -> n117  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
n106 -> n107  [key=0, style=solid];
n106 -> n288  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n289  [key=2, style=dotted];
n110 -> n109  [key=0, style=solid];
n110 -> n290  [key=2, style=dotted];
n110 -> n291  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n118 -> n124  [key=0, style=solid];
n118 -> n293  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n294  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n295  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n136  [key=0, style=solid];
n130 -> n296  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n297  [key=2, style=dotted];
n138 -> n136  [key=0, style=solid];
n138 -> n298  [key=2, style=dotted];
n141 -> n142  [key=0, style=solid];
n141 -> n297  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n299  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n146  [key=0, style=solid];
n143 -> n139  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n274  [key=2, style=dotted];
n144 -> n335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n145 -> n146  [key=0, style=solid];
n145 -> n139  [key=0, style=solid];
n145 -> n300  [key=2, style=dotted];
n145 -> n301  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n169 -> n167  [key=0, style=solid];
n169 -> n308  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n273  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n273  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n186  [key=0, style=solid];
n180 -> n273  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n186 -> n187  [key=0, style=solid];
n186 -> n309  [key=2, style=dotted];
n192 -> n193  [key=0, style=solid];
n192 -> n273  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n273  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n273  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n198 -> n204  [key=0, style=solid];
n198 -> n273  [key=2, style=dotted];
n200 -> n201  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n312  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n212  [key=0, style=solid];
n206 -> n313  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n284  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n314  [key=2, style=dotted];
n215 -> n45  [key=0, style=solid];
n215 -> n315  [key=2, style=dotted];
n218 -> n219  [key=0, style=solid];
n218 -> n224  [key=0, style=solid];
n218 -> n316  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n317  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n224 -> n282  [key=2, style=dotted];
n225 -> n226  [key=0, style=solid];
n225 -> n314  [key=2, style=dotted];
n226 -> n227  [key=0, style=solid];
n226 -> n315  [key=2, style=dotted];
n229 -> n230  [key=0, style=solid];
n229 -> n318  [key=2, style=dotted];
n230 -> n231  [key=0, style=solid];
n230 -> n319  [key=2, style=dotted];
n231 -> n232  [key=0, style=solid];
n231 -> n320  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n319  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n320  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n321  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n239 -> n320  [key=2, style=dotted];
n240 -> n241  [key=0, style=solid];
n240 -> n320  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n322  [key=2, style=dotted];
n241 -> n323  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n267  [key=2, style=dotted];
n242 -> n268  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n266  [key=2, style=dotted];
n245 -> n247  [key=0, style=solid];
n245 -> n269  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n267  [key=2, style=dotted];
n246 -> n269  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n68  [key=0, style=solid];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n248  [key=2, style=dotted];
n15 -> n25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n27  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n28  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n31  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n32  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n37  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n43  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n73  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n166  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n176  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n178  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n180  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n192  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n194  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n196  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n15 -> n198  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n67  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n249  [key=2, style=dotted];
n16 -> n124  [color=darkseagreen4, key=1, label=marginCallFrequency, style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n34  [key=0, style=solid];
n37 -> n257  [key=2, style=dotted];
n43 -> n34  [key=0, style=solid];
n43 -> n259  [key=2, style=dotted];
n43 -> n260  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n164  [key=0, style=solid];
n166 -> n306  [key=2, style=dotted];
n166 -> n169  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n101  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
n124 -> n125  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n249  [key=2, style=dotted];
n18 -> n127  [color=darkseagreen4, key=1, label=settlementScanFrequency, style=dashed];
n101 -> n102  [key=0, style=solid];
n101 -> n125  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n125  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
n127 -> n128  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n250  [key=2, style=dotted];
n20 -> n94  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n20 -> n186  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n250  [key=2, style=dotted];
n21 -> n95  [color=darkseagreen4, key=1, label=splitWarnings, style=dashed];
n21 -> n187  [color=darkseagreen4, key=1, label=splitWarnings, style=dashed];
n187 -> n188  [key=0, style=solid];
n187 -> n310  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n251 -> n502  [key=0, style=solid];
n251 -> n504  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
n251 -> n10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
n251 -> n15  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<System.Type, MethodInvoker> methodInvokers", style=bold];
n251 -> n226  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
n251 -> n105  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n193 -> n195  [key=0, style=solid];
n195 -> n196  [key=0, style=solid];
n195 -> n197  [key=0, style=solid];
n197 -> n198  [key=0, style=solid];
n197 -> n199  [key=0, style=solid];
n197 -> n204  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n175 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n179 -> n181  [key=0, style=solid];
n179 -> n186  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n324 -> n325  [key=0, style=solid];
n328 -> n329  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n42  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n34  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n34  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n41 -> n247  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n216 -> n217  [key=0, style=solid];
n262 -> n346  [key=0, style=solid];
n262 -> n395  [color=crimson, key=0, style=bold];
n262 -> n405  [color=crimson, key=0, style=bold];
n262 -> n432  [color=crimson, key=0, style=bold];
n262 -> n347  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n348  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n349  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n350  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n352  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n355  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n358  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n362  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n377  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n391  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n394  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n400  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n262 -> n407  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n408  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n410  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n412  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n262 -> n416  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n420  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n425  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n426  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n262 -> n431  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n262 -> n10  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
n48 -> n216  [key=0, style=solid];
n48 -> n263  [key=2, style=dotted];
n48 -> n264  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n264  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n56  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n67  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n69  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n70  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n101  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n124  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n125  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n127  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n157  [color=darkseagreen4, key=1, label=time, style=dashed];
n53 -> n213  [color=darkseagreen4, key=1, label=time, style=dashed];
n54 -> n55  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n77  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [key=0, style=solid];
n74 -> n332  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n77 -> n78  [key=0, style=solid];
n77 -> n81  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n81  [key=0, style=solid];
n78 -> n80  [color=darkseagreen4, key=1, label=security, style=dashed];
n81 -> n82  [key=0, style=solid];
n81 -> n86  [key=0, style=solid];
n81 -> n83  [color=darkseagreen4, key=1, label=update, style=dashed];
n128 -> n129  [key=0, style=solid];
n128 -> n136  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n139  [key=0, style=solid];
n136 -> n138  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n151  [key=0, style=solid];
n139 -> n141  [color=darkseagreen4, key=1, label=split, style=dashed];
n139 -> n142  [color=darkseagreen4, key=1, label=split, style=dashed];
n139 -> n143  [color=darkseagreen4, key=1, label=split, style=dashed];
n139 -> n144  [color=darkseagreen4, key=1, label=split, style=dashed];
n139 -> n336  [color=darkseagreen4, key=1, label=split, style=dashed];
n139 -> n145  [color=darkseagreen4, key=1, label=split, style=dashed];
n151 -> n152  [key=0, style=solid];
n151 -> n159  [key=0, style=solid];
n151 -> n164  [key=0, style=solid];
n151 -> n154  [color=darkseagreen4, key=1, label=update, style=dashed];
n151 -> n155  [color=darkseagreen4, key=1, label=update, style=dashed];
n151 -> n157  [color=darkseagreen4, key=1, label=update, style=dashed];
n164 -> n165  [key=0, style=solid];
n164 -> n175  [key=0, style=solid];
n164 -> n166  [color=darkseagreen4, key=1, label=update, style=dashed];
n164 -> n167  [color=darkseagreen4, key=1, label=update, style=dashed];
n164 -> n168  [color=darkseagreen4, key=1, label=update, style=dashed];
n188 -> n189  [key=0, style=solid];
n188 -> n191  [key=0, style=solid];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=0, style=solid];
n189 -> n254  [key=2, style=dotted];
n189 -> n338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n190 -> n189  [key=0, style=solid];
n190 -> n311  [key=2, style=dotted];
n190 -> n260  [key=2, style=dotted];
n204 -> n205  [key=0, style=solid];
n204 -> n207  [key=0, style=solid];
n204 -> n212  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n51 -> n247  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n63  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n304  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n266 -> n592  [key=0, style=solid];
n266 -> n594  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n266 -> n10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Lean.Engine.Results.IResultHandler results", style=bold];
n266 -> n53  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
n64 -> n64  [color=darkorchid, key=3, label="Local variable string logMessage", style=bold];
n65 -> n66  [key=0, style=solid];
n65 -> n261  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n334  [key=2, style=dotted];
n76 -> n75  [key=0, style=solid];
n76 -> n275  [key=2, style=dotted];
n274 -> n274  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
n331 -> n332  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [color=darkseagreen4, key=1, label=security, style=dashed];
n82 -> n85  [color=darkseagreen4, key=1, label=security, style=dashed];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=0, style=solid];
n84 -> n83  [key=0, style=solid];
n84 -> n278  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n87  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n87 -> n90  [color=darkseagreen4, key=1, label=cash, style=dashed];
n88 -> n89  [key=0, style=solid];
n88 -> n280  [key=2, style=dotted];
n88 -> n90  [color=darkseagreen4, key=1, label=updateData, style=dashed];
n90 -> n86  [key=0, style=solid];
n90 -> n281  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n86  [key=0, style=solid];
n285 -> n522  [key=0, style=solid];
n285 -> n524  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n285 -> n526  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n285 -> n534  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n285 -> n536  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n285 -> n537  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n285 -> n538  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n285 -> n539  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n285 -> n10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
n285 -> n20  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
n286 -> n558  [key=0, style=solid];
n286 -> n560  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
n286 -> n561  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n566  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n570  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n571  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n572  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n574  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n286 -> n575  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
n286 -> n10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
n286 -> n21  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings", style=bold];
n97 -> n216  [key=0, style=solid];
n97 -> n261  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n124  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n105 -> n105  [color=darkorchid, key=3, label="Local variable bool executingMarginCall", style=bold];
n107 -> n108  [key=0, style=solid];
n107 -> n114  [color=darkseagreen4, key=1, label=executingMarginCall, style=dashed];
n114 -> n115  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n111  [key=0, style=solid];
n109 -> n124  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n115 -> n292  [key=2, style=dotted];
n115 -> n264  [key=2, style=dotted];
n116 -> n247  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n264  [key=2, style=dotted];
n123 -> n247  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n133 -> n134  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n264  [key=2, style=dotted];
n135 -> n247  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n139  [key=0, style=solid];
n336 -> n337  [key=0, style=solid];
n336 -> n334  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n335 -> n336  [key=0, style=solid];
n301 -> n0  [color=darkorchid, key=3, label="Field variable bool _liveMode", style=bold];
n148 -> n149  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n264  [key=2, style=dotted];
n150 -> n247  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n154 -> n157  [key=0, style=solid];
n154 -> n156  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n155 -> n156  [key=0, style=solid];
n155 -> n154  [key=0, style=solid];
n155 -> n302  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n151  [key=0, style=solid];
n153 -> n156  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n153 -> n158  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n156 -> n154  [key=0, style=solid];
n156 -> n303  [key=2, style=dotted];
n158 -> n153  [key=0, style=solid];
n158 -> n305  [key=2, style=dotted];
n302 -> n601  [key=0, style=solid];
n302 -> n603  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
n302 -> n604  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n302 -> n226  [color=darkorchid, key=3, label="method methodReturn bool EndTimeIsInNativeResolution", style=bold];
n161 -> n162  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n162 -> n264  [key=2, style=dotted];
n163 -> n247  [key=0, style=solid];
n165 -> n166  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n170  [key=0, style=solid];
n167 -> n164  [key=0, style=solid];
n167 -> n169  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n168 -> n169  [key=0, style=solid];
n168 -> n167  [key=0, style=solid];
n168 -> n307  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n173 -> n264  [key=2, style=dotted];
n174 -> n247  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n264  [key=2, style=dotted];
n185 -> n247  [key=0, style=solid];
n309 -> n508  [key=0, style=solid];
n309 -> n510  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n309 -> n511  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n309 -> n514  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n309 -> n10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
n309 -> n20  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
n310 -> n548  [key=0, style=solid];
n310 -> n552  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
n310 -> n553  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
n310 -> n21  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings", style=bold];
n338 -> n339  [key=0, style=solid];
n199 -> n200  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n202 -> n264  [key=2, style=dotted];
n203 -> n247  [key=0, style=solid];
n207 -> n208  [key=0, style=solid];
n209 -> n210  [key=0, style=solid];
n210 -> n211  [key=0, style=solid];
n210 -> n264  [key=2, style=dotted];
n211 -> n247  [key=0, style=solid];
n217 -> n218  [key=0, style=solid];
n217 -> n261  [key=2, style=dotted];
n219 -> n220  [key=0, style=solid];
n220 -> n221  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n264  [key=2, style=dotted];
n223 -> n247  [key=0, style=solid];
n227 -> n228  [key=0, style=solid];
n227 -> n232  [key=0, style=solid];
n228 -> n229  [key=0, style=solid];
n228 -> n261  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n236  [key=0, style=solid];
n233 -> n234  [key=0, style=solid];
n233 -> n261  [key=2, style=dotted];
n236 -> n237  [key=0, style=solid];
n236 -> n240  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n261  [key=2, style=dotted];
n247 -> n10  [color=blue, key=0, style=bold];
n325 -> n326  [key=0, style=solid];
n325 -> n327  [key=2, style=dotted];
n326 -> n324  [color=blue, key=0, style=bold];
n330 -> n328  [color=blue, key=0, style=bold];
n333 -> n331  [color=blue, key=0, style=bold];
n337 -> n335  [color=blue, key=0, style=bold];
n339 -> n340  [key=0, style=solid];
n339 -> n339  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
n340 -> n338  [color=blue, key=0, style=bold];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n341 -> n344  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n342 -> n343  [key=0, style=solid];
n343 -> n344  [key=0, style=solid];
n343 -> n345  [key=0, style=solid];
n344 -> n345  [key=0, style=solid];
n345 -> n341  [color=blue, key=0, style=bold];
n346 -> n347  [key=0, style=solid];
n346 -> n397  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n346 -> n413  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n346 -> n105  [color=darkorchid, key=3, label="Local variable bool setStartTime", style=bold];
n395 -> n396  [key=0, style=solid];
n405 -> n406  [key=0, style=solid];
n432 -> n412  [key=0, style=solid];
n347 -> n348  [key=0, style=solid];
n347 -> n373  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
n347 -> n391  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
n348 -> n349  [key=0, style=solid];
n348 -> n373  [color=darkseagreen4, key=1, label=history, style=dashed];
n349 -> n350  [key=0, style=solid];
n349 -> n351  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n434  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n352 -> n435  [key=2, style=dotted];
n352 -> n300  [key=2, style=dotted];
n352 -> n357  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n360  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n366  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n367  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n368  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n370  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n373  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n407  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n352 -> n409  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n355 -> n356  [key=0, style=solid];
n355 -> n437  [key=2, style=dotted];
n355 -> n438  [key=2, style=dotted];
n355 -> n439  [key=2, style=dotted];
n355 -> n458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n358 -> n359  [key=0, style=solid];
n358 -> n254  [key=2, style=dotted];
n358 -> n440  [key=2, style=dotted];
n358 -> n462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n362 -> n363  [key=0, style=solid];
n362 -> n360  [key=0, style=solid];
n362 -> n441  [key=2, style=dotted];
n362 -> n442  [key=2, style=dotted];
n362 -> n362  [color=darkseagreen4, key=1, label=security, style=dashed];
n377 -> n378  [key=0, style=solid];
n377 -> n387  [color=red, key=1, label=security, style=dashed];
n377 -> n390  [color=darkseagreen4, key=1, label=security, style=dashed];
n391 -> n392  [key=0, style=solid];
n391 -> n396  [key=0, style=solid];
n391 -> n450  [key=2, style=dotted];
n391 -> n451  [key=2, style=dotted];
n391 -> n399  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n391 -> n403  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n391 -> n405  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n391 -> n406  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n394 -> n395  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n400 -> n453  [key=2, style=dotted];
n404 -> n405  [key=0, style=solid];
n404 -> n292  [key=2, style=dotted];
n404 -> n320  [key=2, style=dotted];
n407 -> n408  [key=0, style=solid];
n407 -> n412  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n408 -> n454  [key=2, style=dotted];
n410 -> n411  [key=0, style=solid];
n410 -> n453  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n433  [key=0, style=solid];
n412 -> n415  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n412 -> n419  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n412 -> n424  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n412 -> n430  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n412 -> n432  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n416 -> n417  [key=0, style=solid];
n416 -> n432  [key=0, style=solid];
n420 -> n421  [key=0, style=solid];
n420 -> n419  [key=0, style=solid];
n420 -> n450  [key=2, style=dotted];
n425 -> n426  [key=0, style=solid];
n425 -> n454  [key=2, style=dotted];
n426 -> n427  [key=0, style=solid];
n426 -> n453  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n292  [key=2, style=dotted];
n431 -> n320  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n401  [key=0, style=solid];
n413 -> n414  [key=0, style=solid];
n413 -> n416  [key=0, style=solid];
n373 -> n374  [key=0, style=solid];
n373 -> n407  [key=0, style=solid];
n373 -> n445  [key=2, style=dotted];
n373 -> n376  [color=darkseagreen4, key=1, label=slice, style=dashed];
n373 -> n378  [color=darkseagreen4, key=1, label=slice, style=dashed];
n373 -> n391  [color=darkseagreen4, key=1, label=slice, style=dashed];
n351 -> n352  [key=0, style=solid];
n351 -> n417  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n351 -> n420  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n351 -> n1  [color=darkorchid, key=3, label="Local variable System.DateTime? lastHistoryTimeUtc", style=bold];
n434 -> n487  [key=0, style=solid];
n434 -> n488  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n434 -> n491  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n434 -> n492  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n434 -> n493  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n434 -> n262  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
n417 -> n418  [key=0, style=solid];
n417 -> n424  [key=0, style=solid];
n353 -> n354  [key=0, style=solid];
n353 -> n371  [color=darkseagreen4, key=1, label=start, style=dashed];
n353 -> n403  [color=darkseagreen4, key=1, label=start, style=dashed];
n353 -> n430  [color=darkseagreen4, key=1, label=start, style=dashed];
n357 -> n358  [key=0, style=solid];
n357 -> n407  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n360 -> n366  [key=0, style=solid];
n360 -> n362  [color=darkseagreen4, key=1, label=request, style=dashed];
n360 -> n363  [color=darkseagreen4, key=1, label=request, style=dashed];
n360 -> n364  [color=darkseagreen4, key=1, label=request, style=dashed];
n360 -> n365  [color=darkseagreen4, key=1, label=request, style=dashed];
n366 -> n367  [key=0, style=solid];
n366 -> n370  [key=0, style=solid];
n366 -> n443  [key=2, style=dotted];
n366 -> n468  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n367 -> n368  [key=0, style=solid];
n367 -> n254  [key=2, style=dotted];
n367 -> n439  [key=2, style=dotted];
n367 -> n471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n367 -> n474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n367 -> n369  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n368 -> n369  [key=0, style=solid];
n368 -> n370  [key=0, style=solid];
n368 -> n254  [key=2, style=dotted];
n368 -> n477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n370 -> n371  [key=0, style=solid];
n370 -> n373  [key=0, style=solid];
n370 -> n372  [color=darkseagreen4, key=1, label=request, style=dashed];
n409 -> n410  [key=0, style=solid];
n409 -> n412  [key=0, style=solid];
n354 -> n355  [key=0, style=solid];
n354 -> n436  [key=2, style=dotted];
n354 -> n401  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n354 -> n428  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n371 -> n372  [key=0, style=solid];
n371 -> n444  [key=2, style=dotted];
n371 -> n371  [color=darkseagreen4, key=1, label=start, style=dashed];
n371 -> n403  [color=darkseagreen4, key=1, label=start, style=dashed];
n371 -> n430  [color=darkseagreen4, key=1, label=start, style=dashed];
n403 -> n404  [key=0, style=solid];
n430 -> n431  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n405  [key=0, style=solid];
n428 -> n429  [key=0, style=solid];
n428 -> n432  [key=0, style=solid];
n356 -> n357  [key=0, style=solid];
n356 -> n356  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
n356 -> n424  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
n458 -> n459  [key=0, style=solid];
n424 -> n425  [key=0, style=solid];
n424 -> n428  [key=0, style=solid];
n424 -> n457  [key=2, style=dotted];
n359 -> n360  [key=0, style=solid];
n359 -> n439  [key=2, style=dotted];
n359 -> n465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n359 -> n363  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n359 -> n364  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n359 -> n365  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n462 -> n463  [key=0, style=solid];
n465 -> n466  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n363 -> n360  [key=0, style=solid];
n364 -> n365  [key=0, style=solid];
n365 -> n360  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n468 -> n469  [key=0, style=solid];
n471 -> n472  [key=0, style=solid];
n474 -> n475  [key=0, style=solid];
n369 -> n368  [key=0, style=solid];
n369 -> n369  [color=darkseagreen4, key=1, label=request, style=dashed];
n477 -> n478  [key=0, style=solid];
n372 -> n370  [key=0, style=solid];
n372 -> n290  [key=2, style=dotted];
n372 -> n261  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n376 -> n377  [key=0, style=solid];
n376 -> n391  [key=0, style=solid];
n376 -> n378  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n378 -> n379  [key=0, style=solid];
n378 -> n381  [color=darkseagreen4, key=1, label=data, style=dashed];
n378 -> n385  [color=darkseagreen4, key=1, label=data, style=dashed];
n378 -> n386  [color=darkseagreen4, key=1, label=data, style=dashed];
n375 -> n376  [key=0, style=solid];
n375 -> n250  [key=2, style=dotted];
n375 -> n390  [color=darkseagreen4, key=1, label=paired, style=dashed];
n375 -> n391  [color=darkseagreen4, key=1, label=paired, style=dashed];
n390 -> n376  [key=0, style=solid];
n390 -> n449  [key=2, style=dotted];
n390 -> n447  [key=2, style=dotted];
n387 -> n388  [color=red, key=0, style=solid];
n387 -> n255  [color=red, key=2, style=dotted];
n387 -> n480  [color=red, key=1, label="lambda expression", style=dashed];
n387 -> n390  [color=red, key=1, label=config, style=dashed];
n379 -> n380  [key=0, style=solid];
n379 -> n250  [key=2, style=dotted];
n379 -> n383  [color=darkseagreen4, key=1, label=list, style=dashed];
n379 -> n385  [color=darkseagreen4, key=1, label=list, style=dashed];
n379 -> n390  [color=darkseagreen4, key=1, label=list, style=dashed];
n381 -> n382  [key=0, style=solid];
n381 -> n383  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n385 -> n386  [key=0, style=solid];
n385 -> n447  [key=2, style=dotted];
n386 -> n387  [color=red, key=0, style=solid];
n386 -> n448  [key=2, style=dotted];
n386 -> n481  [color=red, key=1, label=dataType, style=dashed];
n386 -> n389  [color=darkseagreen4, key=1, label=dataType, style=dashed];
n380 -> n381  [key=0, style=solid];
n383 -> n384  [key=0, style=solid];
n383 -> n446  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n385  [key=0, style=solid];
n384 -> n387  [color=red, key=0, style=solid];
n384 -> n481  [color=red, key=1, label=dataType, style=dashed];
n384 -> n389  [color=darkseagreen4, key=1, label=dataType, style=dashed];
n481 -> n482  [color=red, key=0, style=solid];
n481 -> n483  [color=red, key=2, style=dotted];
n389 -> n396  [key=0, style=solid];
n389 -> n258  [key=2, style=dotted];
n388 -> n389  [key=0, style=solid];
n388 -> n390  [key=0, style=solid];
n480 -> n481  [color=red, key=0, style=solid];
n392 -> n393  [key=0, style=solid];
n396 -> n397  [key=0, style=solid];
n396 -> n373  [key=0, style=solid];
n399 -> n400  [key=0, style=solid];
n406 -> n373  [key=0, style=solid];
n406 -> n417  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n406 -> n420  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n393 -> n394  [key=0, style=solid];
n393 -> n452  [key=2, style=dotted];
n398 -> n399  [key=0, style=solid];
n398 -> n413  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n402 -> n403  [key=0, style=solid];
n402 -> n436  [key=2, style=dotted];
n402 -> n428  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n411 -> n412  [key=0, style=solid];
n411 -> n261  [key=2, style=dotted];
n433 -> n262  [color=blue, key=0, style=bold];
n415 -> n416  [key=0, style=solid];
n419 -> n420  [key=0, style=solid];
n419 -> n422  [key=0, style=solid];
n419 -> n455  [key=2, style=dotted];
n419 -> n456  [key=2, style=dotted];
n419 -> n484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n414 -> n415  [key=0, style=solid];
n418 -> n419  [key=0, style=solid];
n418 -> n422  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
n418 -> n105  [color=darkorchid, key=3, label="Local variable bool hasHistoricalData", style=bold];
n422 -> n423  [key=0, style=solid];
n422 -> n412  [key=0, style=solid];
n484 -> n485  [key=0, style=solid];
n421 -> n422  [key=0, style=solid];
n423 -> n424  [key=0, style=solid];
n427 -> n432  [key=0, style=solid];
n427 -> n261  [key=2, style=dotted];
n429 -> n430  [key=0, style=solid];
n429 -> n436  [key=2, style=dotted];
n459 -> n460  [key=0, style=solid];
n459 -> n461  [key=2, style=dotted];
n459 -> n459  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
n460 -> n458  [color=blue, key=0, style=bold];
n463 -> n464  [key=0, style=solid];
n464 -> n462  [color=blue, key=0, style=bold];
n466 -> n467  [key=0, style=solid];
n467 -> n465  [color=blue, key=0, style=bold];
n469 -> n470  [key=0, style=solid];
n470 -> n468  [color=blue, key=0, style=bold];
n472 -> n473  [key=0, style=solid];
n473 -> n471  [color=blue, key=0, style=bold];
n475 -> n476  [key=0, style=solid];
n476 -> n474  [color=blue, key=0, style=bold];
n478 -> n479  [key=0, style=solid];
n479 -> n477  [color=blue, key=0, style=bold];
n482 -> n480  [color=blue, key=0, style=bold];
n485 -> n486  [key=0, style=solid];
n486 -> n484  [color=blue, key=0, style=bold];
n487 -> n488  [key=0, style=solid];
n487 -> n261  [key=2, style=dotted];
n488 -> n489  [key=0, style=solid];
n488 -> n498  [key=0, style=solid];
n491 -> n492  [key=0, style=solid];
n491 -> n499  [key=2, style=dotted];
n491 -> n493  [color=darkseagreen4, key=1, label=historyReq, style=dashed];
n492 -> n493  [key=0, style=solid];
n492 -> n488  [key=0, style=solid];
n493 -> n494  [key=0, style=solid];
n493 -> n445  [key=2, style=dotted];
n493 -> n495  [color=darkseagreen4, key=1, label=history, style=dashed];
n489 -> n490  [key=0, style=solid];
n489 -> n489  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n489 -> n491  [color=darkseagreen4, key=1, label=security, style=dashed];
n489 -> n496  [color=darkseagreen4, key=1, label=security, style=dashed];
n489 -> n497  [color=darkseagreen4, key=1, label=security, style=dashed];
n498 -> n434  [color=blue, key=0, style=bold];
n490 -> n491  [key=0, style=solid];
n490 -> n488  [key=0, style=solid];
n496 -> n497  [key=0, style=solid];
n496 -> n495  [key=0, style=solid];
n496 -> n500  [key=2, style=dotted];
n497 -> n495  [key=0, style=solid];
n497 -> n501  [key=2, style=dotted];
n494 -> n495  [key=0, style=solid];
n494 -> n488  [key=0, style=solid];
n495 -> n496  [key=0, style=solid];
n495 -> n488  [key=0, style=solid];
n495 -> n497  [color=darkseagreen4, key=1, label=slice, style=dashed];
n502 -> n503  [key=0, style=solid];
n502 -> n252  [key=2, style=dotted];
n502 -> n256  [key=2, style=dotted];
n502 -> n504  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
n504 -> n505  [key=0, style=solid];
n504 -> n259  [key=2, style=dotted];
n504 -> n260  [key=2, style=dotted];
n503 -> n504  [key=0, style=solid];
n503 -> n506  [key=0, style=solid];
n506 -> n507  [key=0, style=solid];
n505 -> n507  [key=0, style=solid];
n507 -> n251  [color=blue, key=0, style=bold];
n508 -> n509  [key=0, style=solid];
n508 -> n517  [key=0, style=solid];
n508 -> n510  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n508 -> n520  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n508 -> n511  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n508 -> n512  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n508 -> n513  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n508 -> n514  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n510 -> n511  [key=0, style=solid];
n510 -> n508  [key=0, style=solid];
n510 -> n443  [key=2, style=dotted];
n510 -> n519  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n511 -> n512  [key=0, style=solid];
n511 -> n447  [key=2, style=dotted];
n514 -> n515  [key=0, style=solid];
n514 -> n518  [key=2, style=dotted];
n509 -> n510  [key=0, style=solid];
n509 -> n513  [key=0, style=solid];
n517 -> n309  [color=blue, key=0, style=bold];
n520 -> n521  [key=0, style=solid];
n512 -> n508  [key=0, style=solid];
n512 -> n261  [key=2, style=dotted];
n513 -> n514  [key=0, style=solid];
n513 -> n261  [key=2, style=dotted];
n519 -> n520  [key=0, style=solid];
n515 -> n516  [key=0, style=solid];
n515 -> n508  [key=0, style=solid];
n516 -> n515  [key=0, style=solid];
n516 -> n261  [key=2, style=dotted];
n521 -> n519  [color=blue, key=0, style=bold];
n522 -> n523  [key=0, style=solid];
n522 -> n524  [color=darkseagreen4, key=1, label=i, style=dashed];
n522 -> n526  [color=darkseagreen4, key=1, label=i, style=dashed];
n522 -> n539  [color=darkseagreen4, key=1, label=i, style=dashed];
n522 -> n540  [color=darkseagreen4, key=1, label=i, style=dashed];
n524 -> n525  [key=0, style=solid];
n524 -> n527  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n528  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n529  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n531  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n532  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n533  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n534  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n536  [color=darkseagreen4, key=1, label=security, style=dashed];
n524 -> n537  [color=darkseagreen4, key=1, label=security, style=dashed];
n526 -> n527  [key=0, style=solid];
n534 -> n538  [key=0, style=solid];
n534 -> n544  [key=2, style=dotted];
n536 -> n538  [key=0, style=solid];
n536 -> n544  [key=2, style=dotted];
n537 -> n538  [key=0, style=solid];
n537 -> n544  [key=2, style=dotted];
n538 -> n539  [key=0, style=solid];
n538 -> n546  [key=2, style=dotted];
n539 -> n540  [key=0, style=solid];
n539 -> n547  [key=2, style=dotted];
n523 -> n524  [key=0, style=solid];
n523 -> n541  [key=0, style=solid];
n540 -> n523  [key=0, style=solid];
n540 -> n540  [color=darkseagreen4, key=1, label=i, style=dashed];
n541 -> n285  [color=blue, key=0, style=bold];
n525 -> n526  [key=0, style=solid];
n525 -> n523  [key=0, style=solid];
n527 -> n528  [key=0, style=solid];
n527 -> n542  [key=2, style=dotted];
n528 -> n529  [key=0, style=solid];
n528 -> n543  [key=2, style=dotted];
n529 -> n530  [key=0, style=solid];
n529 -> n523  [key=0, style=solid];
n531 -> n532  [key=0, style=solid];
n531 -> n537  [key=0, style=solid];
n532 -> n533  [key=0, style=solid];
n532 -> n535  [color=darkseagreen4, key=1, label=option, style=dashed];
n533 -> n534  [key=0, style=solid];
n533 -> n535  [key=0, style=solid];
n530 -> n531  [key=0, style=solid];
n535 -> n536  [key=0, style=solid];
n535 -> n545  [key=2, style=dotted];
n548 -> n549  [key=0, style=solid];
n548 -> n554  [key=0, style=solid];
n548 -> n550  [color=darkseagreen4, key=1, label=split, style=dashed];
n548 -> n551  [color=darkseagreen4, key=1, label=split, style=dashed];
n548 -> n552  [color=darkseagreen4, key=1, label=split, style=dashed];
n548 -> n556  [color=darkseagreen4, key=1, label=split, style=dashed];
n548 -> n553  [color=darkseagreen4, key=1, label=split, style=dashed];
n552 -> n553  [key=0, style=solid];
n552 -> n548  [key=0, style=solid];
n552 -> n443  [key=2, style=dotted];
n552 -> n555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n553 -> n548  [key=0, style=solid];
n553 -> n447  [key=2, style=dotted];
n549 -> n550  [key=0, style=solid];
n549 -> n551  [key=0, style=solid];
n554 -> n310  [color=blue, key=0, style=bold];
n550 -> n548  [key=0, style=solid];
n550 -> n261  [key=2, style=dotted];
n551 -> n552  [key=0, style=solid];
n551 -> n261  [key=2, style=dotted];
n556 -> n557  [key=0, style=solid];
n555 -> n556  [key=0, style=solid];
n557 -> n555  [color=blue, key=0, style=bold];
n558 -> n559  [key=0, style=solid];
n558 -> n560  [color=darkseagreen4, key=1, label=i, style=dashed];
n558 -> n575  [color=darkseagreen4, key=1, label=i, style=dashed];
n558 -> n576  [color=darkseagreen4, key=1, label=i, style=dashed];
n560 -> n561  [key=0, style=solid];
n560 -> n574  [color=darkseagreen4, key=1, label=split, style=dashed];
n561 -> n562  [key=0, style=solid];
n561 -> n563  [color=darkseagreen4, key=1, label=security, style=dashed];
n561 -> n564  [color=darkseagreen4, key=1, label=security, style=dashed];
n561 -> n565  [color=darkseagreen4, key=1, label=security, style=dashed];
n561 -> n566  [color=darkseagreen4, key=1, label=security, style=dashed];
n561 -> n589  [color=darkseagreen4, key=1, label=security, style=dashed];
n566 -> n567  [key=0, style=solid];
n566 -> n254  [key=2, style=dotted];
n566 -> n588  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n570 -> n571  [key=0, style=solid];
n570 -> n582  [key=2, style=dotted];
n571 -> n572  [key=0, style=solid];
n571 -> n583  [key=2, style=dotted];
n572 -> n573  [key=0, style=solid];
n572 -> n584  [key=2, style=dotted];
n574 -> n567  [key=0, style=solid];
n574 -> n453  [key=2, style=dotted];
n575 -> n576  [key=0, style=solid];
n575 -> n547  [key=2, style=dotted];
n559 -> n560  [key=0, style=solid];
n559 -> n577  [key=0, style=solid];
n576 -> n559  [key=0, style=solid];
n576 -> n576  [color=darkseagreen4, key=1, label=i, style=dashed];
n577 -> n286  [color=blue, key=0, style=bold];
n562 -> n563  [key=0, style=solid];
n562 -> n543  [key=2, style=dotted];
n562 -> n564  [color=darkseagreen4, key=1, label=nextMarketClose, style=dashed];
n563 -> n564  [key=0, style=solid];
n563 -> n578  [key=2, style=dotted];
n563 -> n579  [key=2, style=dotted];
n563 -> n585  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n564 -> n565  [key=0, style=solid];
n564 -> n580  [key=2, style=dotted];
n564 -> n461  [key=2, style=dotted];
n564 -> n581  [key=2, style=dotted];
n565 -> n566  [key=0, style=solid];
n565 -> n559  [key=0, style=solid];
n589 -> n590  [key=0, style=solid];
n589 -> n591  [key=2, style=dotted];
n589 -> n589  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
n585 -> n586  [key=0, style=solid];
n567 -> n568  [key=0, style=solid];
n567 -> n575  [key=0, style=solid];
n567 -> n569  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n588 -> n589  [key=0, style=solid];
n568 -> n569  [key=0, style=solid];
n568 -> n570  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
n568 -> n571  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
n568 -> n574  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
n569 -> n570  [key=0, style=solid];
n569 -> n571  [color=darkseagreen4, key=1, label=optionContractSecurity, style=dashed];
n569 -> n573  [color=darkseagreen4, key=1, label=optionContractSecurity, style=dashed];
n573 -> n574  [key=0, style=solid];
n586 -> n587  [key=0, style=solid];
n587 -> n585  [color=blue, key=0, style=bold];
n590 -> n588  [color=blue, key=0, style=bold];
n592 -> n593  [key=0, style=solid];
n592 -> n597  [key=0, style=solid];
n592 -> n598  [key=2, style=dotted];
n592 -> n599  [key=2, style=dotted];
n592 -> n600  [key=2, style=dotted];
n594 -> n595  [key=0, style=solid];
n593 -> n594  [key=0, style=solid];
n597 -> n266  [color=blue, key=0, style=bold];
n595 -> n596  [key=0, style=solid];
n596 -> n597  [key=0, style=solid];
n596 -> n452  [key=2, style=dotted];
n601 -> n602  [key=0, style=solid];
n601 -> n603  [key=0, style=solid];
n603 -> n604  [key=0, style=solid];
n603 -> n581  [key=2, style=dotted];
n604 -> n605  [key=0, style=solid];
n602 -> n605  [key=0, style=solid];
n605 -> n302  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_29  [key=2, style=dotted];
m0_18 -> m0_30  [key=2, style=dotted];
m0_18 -> m0_31  [key=2, style=dotted];
m0_18 -> m0_32  [key=2, style=dotted];
m0_18 -> m0_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=0, style=solid];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m0_19 -> m0_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m0_19 -> m0_24  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m0_19 -> m0_25  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_19  [key=0, style=solid];
m0_20 -> m0_33  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=0, style=solid];
m0_22 -> m0_19  [key=0, style=solid];
m0_22 -> m0_34  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_19  [key=0, style=solid];
m0_25 -> m0_34  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_19  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_35  [key=2, style=dotted];
m0_27 -> m0_36  [key=2, style=dotted];
m0_28 -> m0_17  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_6 -> m0_5  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_8 -> m0_7  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> n456  [key=2, style=dotted];
m0_10 -> m0_0  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Data.Market.TradeBar>", style=dashed];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_40 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_3  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_4  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_5  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_6  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_7  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_8  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_21  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_23  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m0_40 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_7 -> m2_4  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [color=darkseagreen4, key=1, label=atr, style=dashed];
m2_7 -> m2_10  [color=darkseagreen4, key=1, label=atr, style=dashed];
m2_7 -> m2_11  [color=darkseagreen4, key=1, label=atr, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_13  [key=2, style=dotted];
m2_8 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_10  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_7  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_6  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_3  [key=2, style=dotted];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_12 -> m2_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_4  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=atr, style=dashed];
m2_18 -> m2_21  [color=darkseagreen4, key=1, label=atr, style=dashed];
m2_18 -> m2_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_13  [key=2, style=dotted];
m2_20 -> m2_14  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [key=2, style=dotted];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_17  [color=blue, key=0, style=bold];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_33  [key=2, style=dotted];
m2_61 -> m2_63  [key=2, style=dotted];
m2_62 -> m2_60  [color=blue, key=0, style=bold];
m2_111 -> m2_112  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m2_16 -> m2_14  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_38  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_57  [color=blue, key=0, style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_105  [key=2, style=dotted];
m2_112 -> m2_114  [key=2, style=dotted];
m2_113 -> m2_111  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=2, style=dotted];
m2_88 -> m2_86  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_5  [color=green, key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_33  [key=2, style=dotted];
m2_47 -> m2_49  [key=2, style=dotted];
m2_48 -> m2_46  [color=blue, key=0, style=bold];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_123  [color=crimson, key=0, style=bold];
m2_115 -> m2_126  [color=crimson, key=0, style=bold];
m2_115 -> m2_121  [color=darkseagreen4, key=1, label="System.Func<T, T, bool>", style=dashed];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_128  [key=2, style=dotted];
m2_116 -> m2_118  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_119  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_120  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_121  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_122  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_124  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_116 -> m2_125  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_123  [key=0, style=solid];
m2_121 -> m2_82  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_127  [key=0, style=solid];
m2_117 -> m2_129  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_130  [key=2, style=dotted];
m2_118 -> m2_122  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_118 -> m2_123  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_118 -> m2_126  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label=pred, style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_126  [key=0, style=solid];
m2_120 -> m2_129  [key=2, style=dotted];
m2_122 -> m2_125  [key=0, style=solid];
m2_122 -> m2_131  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_130  [key=2, style=dotted];
m2_124 -> m2_126  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_125 -> m2_120  [key=0, style=solid];
m2_127 -> m2_115  [color=blue, key=0, style=bold];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_30 -> m2_33  [key=2, style=dotted];
m2_31 -> m2_29  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=2, style=dotted];
m2_92 -> m2_90  [color=blue, key=0, style=bold];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_98  [color=crimson, key=0, style=bold];
m2_94 -> m2_101  [color=crimson, key=0, style=bold];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_94 -> m2_99  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m2_94 -> m2_100  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_94 -> m2_102  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_95 -> m2_98  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_95 -> m2_99  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_95 -> m2_100  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_95 -> m2_101  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_95 -> m2_102  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_98 -> m2_99  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_100  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_103  [key=0, style=solid];
m2_97 -> m2_104  [key=2, style=dotted];
m2_99 -> m2_97  [key=0, style=solid];
m2_99 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_99  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [key=0, style=solid];
m2_100 -> m2_104  [key=2, style=dotted];
m2_102 -> m2_97  [key=0, style=solid];
m2_102 -> m2_105  [key=2, style=dotted];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_103 -> m2_94  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> n254  [key=2, style=dotted];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_34  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label="System.Func<TSearch, TItem, int>", style=dashed];
m2_64 -> m2_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m2_64 -> m2_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [color=darkseagreen4, key=1, label=upper, style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_82  [key=2, style=dotted];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label=comparisonResult, style=dashed];
m2_66 -> m2_80  [key=0, style=solid];
m2_66 -> m2_81  [key=2, style=dotted];
m2_68 -> m2_80  [key=0, style=solid];
m2_68 -> m2_81  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [color=darkseagreen4, key=1, label=lower, style=dashed];
m2_69 -> m2_72  [color=darkseagreen4, key=1, label=lower, style=dashed];
m2_69 -> m2_79  [color=darkseagreen4, key=1, label=lower, style=dashed];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_79  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_75  [color=darkseagreen4, key=1, label=middle, style=dashed];
m2_72 -> m2_77  [color=darkseagreen4, key=1, label=middle, style=dashed];
m2_72 -> m2_78  [color=darkseagreen4, key=1, label=middle, style=dashed];
m2_79 -> m2_80  [key=0, style=solid];
m2_75 -> m2_71  [key=0, style=solid];
m2_77 -> m2_71  [key=0, style=solid];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label=lower, style=dashed];
m2_78 -> m2_80  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_80 -> m2_64  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m2_106 -> m2_112  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_110  [key=2, style=dotted];
m2_107 -> m2_112  [color=darkseagreen4, key=1, label=hash, style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> n254  [key=2, style=dotted];
m2_108 -> m2_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_109 -> m2_106  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_10  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [key=2, style=dotted];
m2_52 -> m2_55  [key=2, style=dotted];
m2_52 -> m2_56  [key=2, style=dotted];
m2_52 -> m2_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_53 -> m2_50  [color=blue, key=0, style=bold];
m2_132 -> m2_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m2_133 -> m2_112  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m2_134 -> m2_112  [color=darkseagreen4, key=1, label=hash, style=dashed];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, string>", style=dashed];
m3_57 -> m3_60  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_57 -> m3_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, string>", style=dashed];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_62  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_62  [key=0, style=solid];
m3_59 -> m3_61  [color=darkseagreen4, key=1, label=splitDate, style=dashed];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_59  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_57  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
m3_7 -> m3_10  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_7 -> m3_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=factor, style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=0, style=solid];
m3_9 -> m3_14  [key=2, style=dotted];
m3_9 -> m3_11  [color=darkseagreen4, key=1, label=splitDate, style=dashed];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=0, style=solid];
m3_11 -> m3_9  [key=0, style=solid];
m3_11 -> m3_12  [color=darkseagreen4, key=1, label=factor, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_7  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_26  [key=2, style=dotted];
m3_36 -> m3_43  [color=darkseagreen4, key=1, label=symbolMapTable, style=dashed];
m3_36 -> m3_44  [color=darkseagreen4, key=1, label=symbolMapTable, style=dashed];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_5  [key=2, style=dotted];
m3_37 -> m3_27  [key=2, style=dotted];
m3_43 -> m3_39  [key=0, style=solid];
m3_43 -> m3_32  [key=2, style=dotted];
m3_43 -> m3_34  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_28  [key=2, style=dotted];
m3_38 -> m3_29  [key=2, style=dotted];
m3_38 -> m3_40  [color=darkseagreen4, key=1, label=stream, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_44  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_30  [key=2, style=dotted];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=line, style=dashed];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_39  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_31  [key=2, style=dotted];
m3_45 -> m3_35  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_46 -> m3_50  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_54  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_35  [key=2, style=dotted];
m3_48 -> m3_51  [color=darkseagreen4, key=1, label=symbolMapTable, style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_49  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_52  [key=0, style=solid];
m3_49 -> m3_54  [key=0, style=solid];
m3_49 -> m3_51  [color=darkseagreen4, key=1, label=splitDate, style=dashed];
m3_51 -> m3_49  [key=0, style=solid];
m3_51 -> m3_54  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> n264  [key=2, style=dotted];
m3_55 -> m3_46  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_4  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_26  [key=2, style=dotted];
m3_16 -> m3_23  [color=darkseagreen4, key=1, label=factorTable, style=dashed];
m3_16 -> m3_24  [color=darkseagreen4, key=1, label=factorTable, style=dashed];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_5  [key=2, style=dotted];
m3_17 -> m3_27  [key=2, style=dotted];
m3_23 -> m3_19  [key=0, style=solid];
m3_23 -> m3_32  [key=2, style=dotted];
m3_23 -> m3_33  [key=2, style=dotted];
m3_23 -> m3_34  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_28  [key=2, style=dotted];
m3_18 -> m3_29  [key=2, style=dotted];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label=stream, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_24  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_30  [key=2, style=dotted];
m3_20 -> m3_22  [color=darkseagreen4, key=1, label=line, style=dashed];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_19  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_31  [key=2, style=dotted];
m3_25 -> m3_15  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_13 -> m4_20  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_15 -> m4_20  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_4  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=0, style=solid];
m4_11 -> m4_16  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_20 -> m4_10  [color=blue, key=0, style=bold];
m4_20 -> m4_18  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_27 -> m4_24  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_12  [key=0, style=solid];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_14  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m4_4 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_9 -> m4_0  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> n437  [key=2, style=dotted];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_17  [key=2, style=dotted];
m4_9 -> m4_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_9 -> m4_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_9 -> m4_11  [color=darkseagreen4, key=1, label=minimum, style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_8  [color=green, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_21 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
m4_29 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m4_29 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Minimum", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [color=red, key=1, label=file, style=dashed];
m5_1 -> m5_1  [color=darkorchid, key=3, label="Local variable string file", style=bold];
m5_2 -> m5_3  [color=red, key=0, style=solid];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_2 -> m5_2  [color=darkorchid, key=3, label="Local variable int expected", style=bold];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_6  [color=red, key=2, style=dotted];
m5_3 -> m5_7  [color=red, key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_44 -> m5_35  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_32  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_45  [key=2, style=dotted];
m5_37 -> n300  [key=2, style=dotted];
m5_37 -> m5_39  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m5_37 -> m5_41  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m5_37 -> m5_42  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_42  [color=darkseagreen4, key=1, label=expectedFileNames, style=dashed];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_8  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_44  [key=0, style=solid];
m5_41 -> m5_41  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_8  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_40 -> m5_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_43 -> m5_41  [key=0, style=solid];
m5_43 -> m5_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_9 -> m5_10  [color=red, key=0, style=solid];
m5_10 -> m5_11  [color=red, key=0, style=solid];
m5_10 -> m5_16  [color=red, key=1, label=fileContents, style=dashed];
m5_10 -> m5_10  [color=red, key=3, label="Local variable string fileContents", style=bold];
m5_11 -> m5_12  [color=red, key=0, style=solid];
m5_11 -> m5_18  [color=red, key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_8  [key=2, style=dotted];
m5_12 -> m5_13  [color=red, key=0, style=solid];
m5_12 -> m5_19  [color=red, key=2, style=dotted];
m5_13 -> m5_14  [color=red, key=0, style=solid];
m5_13 -> m5_20  [color=red, key=2, style=dotted];
m5_14 -> m5_15  [color=red, key=0, style=solid];
m5_14 -> m5_21  [color=red, key=2, style=dotted];
m5_14 -> m5_22  [color=red, key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_9  [color=blue, key=0, style=bold];
m5_31 -> m5_24  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [color=red, key=0, style=solid];
m5_25 -> m5_26  [color=red, key=0, style=solid];
m5_25 -> m5_32  [color=red, key=2, style=dotted];
m5_25 -> m5_27  [color=red, key=1, label=zip, style=dashed];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_33  [color=red, key=2, style=dotted];
m5_27 -> m5_29  [color=red, key=1, label=entryStream, style=dashed];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_34  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_8  [key=2, style=dotted];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_0 -> m6_3  [color=darkorchid, key=3, label="method methodReturn QuantConnect.VisualStudioPlugin.Credentials? GetLastCredential", style=bold];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_6  [color=green, key=2, style=dotted];
m6_1 -> m6_4  [color=green, key=1, label=credential, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_0  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [color=green, key=0, style=solid];
m6_10 -> m6_11  [color=green, key=0, style=solid];
m6_10 -> m6_6  [color=green, key=2, style=dotted];
m6_10 -> m6_10  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.Credentials", style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=2, style=dotted];
m6_12 -> m6_9  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [color=green, key=0, style=solid];
m6_15 -> m6_16  [color=green, key=0, style=solid];
m6_15 -> m6_6  [color=green, key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_14  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> n263  [key=2, style=dotted];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_8 -> m7_1  [color=red, key=1, label="QuantConnect.Securities.PortfolioEvent", style=dashed];
m7_8 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.PortfolioEvent", style=dashed];
m7_8 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.PortfolioEvent", style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_10 -> m8_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
m8_11 -> m8_16  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_18  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_17 -> m8_10  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MovingAverageType", style=dashed];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=2, style=dotted];
m8_7 -> m8_2  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_19 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m8_19 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
m10_0 -> m10_3  [color=green, key=1, label=string, style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_4 -> m10_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_12 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_22  [key=2, style=dotted];
m10_13 -> m10_20  [color=darkseagreen4, key=1, label=dailyfxList, style=dashed];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_15  [color=darkseagreen4, key=1, label=dailyfx, style=dashed];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_27  [key=2, style=dotted];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_20  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_23  [key=2, style=dotted];
m10_16 -> m10_16  [color=darkseagreen4, key=1, label=dailyfx, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_17  [color=darkseagreen4, key=1, label=dailyfx, style=dashed];
m10_17 -> m10_19  [color=darkseagreen4, key=1, label=dailyfx, style=dashed];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_14  [key=0, style=solid];
m10_18 -> m10_24  [key=2, style=dotted];
m10_19 -> m10_14  [key=0, style=solid];
m10_19 -> m10_25  [key=2, style=dotted];
m10_19 -> m10_26  [key=2, style=dotted];
m10_19 -> m10_19  [color=darkseagreen4, key=1, label=dailyfx, style=dashed];
m10_21 -> m10_12  [color=blue, key=0, style=bold];
m10_10 -> m10_31  [key=0, style=solid];
m10_10 -> m10_33  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_10 -> m10_36  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_10 -> m10_39  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_10 -> m10_3  [color=green, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_10 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_10 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_10 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_10 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_10 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.GetMaximumOrderQuantityForTargetValueResult", style=dashed];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_46  [key=2, style=dotted];
m10_31 -> m10_34  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_31 -> m10_37  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_31 -> m10_40  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_31 -> m10_42  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_36  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_39  [key=0, style=solid];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_42  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_32 -> m10_38  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_32 -> m10_41  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_32 -> m10_43  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_34  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_34 -> m10_44  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_37  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_37 -> m10_44  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_40  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_40 -> m10_44  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_42  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_42 -> m10_44  [color=darkseagreen4, key=1, label=start, style=dashed];
m10_35 -> m10_44  [key=0, style=solid];
m10_35 -> m10_35  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_38 -> m10_44  [key=0, style=solid];
m10_38 -> m10_38  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_41 -> m10_44  [key=0, style=solid];
m10_41 -> m10_41  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_43  [color=darkseagreen4, key=1, label=end, style=dashed];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_47  [key=2, style=dotted];
m10_45 -> m10_10  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [color=darkseagreen4, key=1, label=url, style=dashed];
m10_5 -> m10_8  [color=darkseagreen4, key=1, label=url, style=dashed];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_10  [key=2, style=dotted];
m10_7 -> m10_7  [color=darkseagreen4, key=1, label=url, style=dashed];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_11  [key=2, style=dotted];
m10_9 -> m10_5  [color=blue, key=0, style=bold];
m10_9 -> m10_4  [color=blue, key=0, style=bold];
m10_25 -> m10_28  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_30  [key=2, style=dotted];
m10_29 -> m10_25  [color=blue, key=0, style=bold];
m10_48 -> m10_49  [key=0, style=solid];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_51  [key=2, style=dotted];
m10_49 -> n290  [key=2, style=dotted];
m10_50 -> m10_48  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_68  [key=2, style=dotted];
m10_67 -> m10_65  [color=blue, key=0, style=bold];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_56  [color=darkseagreen4, key=1, label=enumString, style=dashed];
m10_55 -> m10_56  [key=0, style=solid];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_59  [key=0, style=solid];
m10_56 -> m10_61  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_58 -> m10_63  [key=0, style=solid];
m10_60 -> m10_63  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_53  [color=blue, key=0, style=bold];
m10_69 -> m10_70  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_70  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Market.Ticks CreateTicksCollection", style=bold];
m10_71 -> m10_69  [color=blue, key=0, style=bold];
m10_72 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m10_72 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m10_72 -> m10_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m10_72 -> m10_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m10_72 -> m10_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m10_72 -> m10_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.DailyFx", style=dashed];
m11_57 -> n322  [color=blue, key=0, style=bold];
m11_40 -> m11_41  [key=0, style=solid];
m11_41 -> m11_40  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_17 -> m11_16  [color=blue, key=0, style=bold];
m11_80 -> m11_81  [key=0, style=solid];
m11_81 -> m11_80  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_36  [color=blue, key=0, style=bold];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_62  [color=blue, key=0, style=bold];
m11_82 -> m11_83  [key=0, style=solid];
m11_83 -> m11_82  [color=blue, key=0, style=bold];
m11_32 -> m11_33  [key=0, style=solid];
m11_33 -> m11_32  [color=blue, key=0, style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_43 -> m11_42  [color=blue, key=0, style=bold];
m11_60 -> m11_61  [key=0, style=solid];
m11_61 -> m11_60  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_14  [color=blue, key=0, style=bold];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_70  [color=blue, key=0, style=bold];
m11_72 -> m11_73  [key=0, style=solid];
m11_73 -> m11_72  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_92 -> m11_93  [key=0, style=solid];
m11_93 -> m11_92  [color=blue, key=0, style=bold];
m11_54 -> m11_55  [key=0, style=solid];
m11_55 -> m11_54  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_22  [color=blue, key=0, style=bold];
m11_74 -> m11_75  [key=0, style=solid];
m11_75 -> m11_74  [color=blue, key=0, style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_50  [color=blue, key=0, style=bold];
m11_58 -> m11_59  [key=0, style=solid];
m11_59 -> m11_58  [color=blue, key=0, style=bold];
m11_88 -> m11_89  [key=0, style=solid];
m11_89 -> m11_88  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_8  [color=blue, key=0, style=bold];
m11_78 -> m11_79  [key=0, style=solid];
m11_79 -> m11_78  [color=blue, key=0, style=bold];
m11_24 -> m11_25  [key=0, style=solid];
m11_25 -> m11_24  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_29 -> m11_28  [color=blue, key=0, style=bold];
m11_68 -> m11_69  [key=0, style=solid];
m11_69 -> m11_68  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_6  [color=blue, key=0, style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_34  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_26  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_10  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_47 -> m11_46  [color=blue, key=0, style=bold];
m11_86 -> m11_87  [key=0, style=solid];
m11_87 -> m11_86  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_4  [color=blue, key=0, style=bold];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_12  [color=blue, key=0, style=bold];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_48  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_20  [color=blue, key=0, style=bold];
m11_44 -> m11_45  [key=0, style=solid];
m11_45 -> m11_44  [color=blue, key=0, style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_30  [color=blue, key=0, style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_53 -> m11_52  [color=blue, key=0, style=bold];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_64  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_38  [color=blue, key=0, style=bold];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_76  [color=blue, key=0, style=bold];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_90  [color=blue, key=0, style=bold];
m11_84 -> m11_85  [key=0, style=solid];
m11_85 -> m11_84  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_18  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_66  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_9  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_14  [key=2, style=dotted];
m12_10 -> m12_15  [key=2, style=dotted];
m12_10 -> m12_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_10 -> m12_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_10 -> m12_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_16  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_7  [key=2, style=dotted];
m12_13 -> m12_8  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> n250  [key=2, style=dotted];
m12_1 -> m12_3  [color=darkseagreen4, key=1, label=list, style=dashed];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_6  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_7  [key=2, style=dotted];
m12_4 -> m12_0  [color=blue, key=0, style=bold];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_19 -> m12_17  [color=blue, key=0, style=bold];
m12_20 -> m12_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_4 -> m13_5  [color=red, key=0, style=solid];
m13_4 -> m13_6  [color=red, key=2, style=dotted];
m13_5 -> m13_3  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=red, key=0, style=solid];
m13_1 -> m13_2  [color=red, key=0, style=solid];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_7 -> m13_1  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.Log", style=dashed];
m13_7 -> m13_4  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.Log", style=dashed];
m17_0 -> m17_7  [color=green, key=1, label=int, style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_7 -> m17_25  [color=green, key=0, style=solid];
m17_7 -> m17_28  [color=green, key=2, style=dotted];
m17_6 -> m17_7  [color=green, key=0, style=solid];
m17_1 -> m17_6  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_4  [key=0, style=solid];
m17_1 -> m17_8  [key=0, style=solid];
m17_1 -> m17_10  [key=0, style=solid];
m17_1 -> m17_12  [key=0, style=solid];
m17_1 -> m17_14  [key=0, style=solid];
m17_1 -> m17_16  [key=0, style=solid];
m17_1 -> m17_18  [key=0, style=solid];
m17_1 -> m17_20  [key=0, style=solid];
m17_1 -> m17_22  [key=0, style=solid];
m17_1 -> m17_24  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_3 -> m17_25  [key=0, style=solid];
m17_3 -> m17_26  [key=2, style=dotted];
m17_5 -> m17_25  [key=0, style=solid];
m17_5 -> m17_27  [key=2, style=dotted];
m17_9 -> m17_25  [key=0, style=solid];
m17_9 -> m17_29  [key=2, style=dotted];
m17_11 -> m17_25  [key=0, style=solid];
m17_11 -> m17_30  [key=2, style=dotted];
m17_13 -> m17_25  [key=0, style=solid];
m17_13 -> m17_31  [key=2, style=dotted];
m17_15 -> m17_25  [key=0, style=solid];
m17_15 -> m17_32  [key=2, style=dotted];
m17_17 -> m17_25  [key=0, style=solid];
m17_17 -> m17_33  [key=2, style=dotted];
m17_19 -> m17_25  [key=0, style=solid];
m17_19 -> m17_34  [key=2, style=dotted];
m17_21 -> m17_25  [key=0, style=solid];
m17_21 -> m17_35  [key=2, style=dotted];
m17_23 -> m17_25  [key=0, style=solid];
m17_23 -> m17_36  [key=2, style=dotted];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_37  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_16 -> m17_17  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_22 -> m17_23  [key=0, style=solid];
m17_25 -> m17_0  [color=blue, key=0, style=bold];
m17_38 -> m17_45  [color=green, key=1, label=string, style=dashed];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_45 -> m17_63  [color=green, key=0, style=solid];
m17_45 -> m17_66  [color=green, key=2, style=dotted];
m17_44 -> m17_45  [color=green, key=0, style=solid];
m17_39 -> m17_44  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_42  [key=0, style=solid];
m17_39 -> m17_46  [key=0, style=solid];
m17_39 -> m17_48  [key=0, style=solid];
m17_39 -> m17_50  [key=0, style=solid];
m17_39 -> m17_52  [key=0, style=solid];
m17_39 -> m17_54  [key=0, style=solid];
m17_39 -> m17_56  [key=0, style=solid];
m17_39 -> m17_58  [key=0, style=solid];
m17_39 -> m17_60  [key=0, style=solid];
m17_39 -> m17_62  [key=0, style=solid];
m17_41 -> m17_63  [key=0, style=solid];
m17_41 -> m17_64  [key=2, style=dotted];
m17_43 -> m17_63  [key=0, style=solid];
m17_43 -> m17_65  [key=2, style=dotted];
m17_47 -> m17_63  [key=0, style=solid];
m17_47 -> m17_67  [key=2, style=dotted];
m17_49 -> m17_63  [key=0, style=solid];
m17_49 -> m17_68  [key=2, style=dotted];
m17_51 -> m17_63  [key=0, style=solid];
m17_51 -> m17_69  [key=2, style=dotted];
m17_53 -> m17_63  [key=0, style=solid];
m17_53 -> m17_70  [key=2, style=dotted];
m17_55 -> m17_63  [key=0, style=solid];
m17_55 -> m17_71  [key=2, style=dotted];
m17_57 -> m17_63  [key=0, style=solid];
m17_57 -> m17_72  [key=2, style=dotted];
m17_59 -> m17_63  [key=0, style=solid];
m17_59 -> m17_73  [key=2, style=dotted];
m17_61 -> m17_63  [key=0, style=solid];
m17_61 -> m17_74  [key=2, style=dotted];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_37  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_46 -> m17_47  [key=0, style=solid];
m17_48 -> m17_49  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_52 -> m17_53  [key=0, style=solid];
m17_54 -> m17_55  [key=0, style=solid];
m17_56 -> m17_57  [key=0, style=solid];
m17_58 -> m17_59  [key=0, style=solid];
m17_60 -> m17_61  [key=0, style=solid];
m17_63 -> m17_38  [color=blue, key=0, style=bold];
m18_49 -> n322  [color=blue, key=0, style=bold];
m18_34 -> m18_35  [key=0, style=solid];
m18_35 -> m18_34  [color=blue, key=0, style=bold];
m18_12 -> m18_13  [key=0, style=solid];
m18_13 -> m18_12  [color=blue, key=0, style=bold];
m18_72 -> m18_73  [key=0, style=solid];
m18_73 -> m18_72  [color=blue, key=0, style=bold];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_30  [color=blue, key=0, style=bold];
m18_54 -> m18_55  [key=0, style=solid];
m18_55 -> m18_54  [color=blue, key=0, style=bold];
m18_74 -> m18_75  [key=0, style=solid];
m18_75 -> m18_74  [color=blue, key=0, style=bold];
m18_26 -> m18_27  [key=0, style=solid];
m18_27 -> m18_26  [color=blue, key=0, style=bold];
m18_36 -> m18_37  [key=0, style=solid];
m18_37 -> m18_36  [color=blue, key=0, style=bold];
m18_52 -> m18_53  [key=0, style=solid];
m18_53 -> m18_52  [color=blue, key=0, style=bold];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_62  [color=blue, key=0, style=bold];
m18_64 -> m18_65  [key=0, style=solid];
m18_65 -> m18_64  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [key=0, style=solid];
m18_17 -> m18_16  [color=blue, key=0, style=bold];
m18_66 -> m18_67  [key=0, style=solid];
m18_67 -> m18_66  [color=blue, key=0, style=bold];
m18_44 -> m18_45  [key=0, style=solid];
m18_45 -> m18_44  [color=blue, key=0, style=bold];
m18_50 -> m18_51  [key=0, style=solid];
m18_51 -> m18_50  [color=blue, key=0, style=bold];
m18_80 -> m18_81  [key=0, style=solid];
m18_81 -> m18_80  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_6  [color=blue, key=0, style=bold];
m18_70 -> m18_71  [key=0, style=solid];
m18_71 -> m18_70  [color=blue, key=0, style=bold];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_18  [color=blue, key=0, style=bold];
m18_22 -> m18_23  [key=0, style=solid];
m18_23 -> m18_22  [color=blue, key=0, style=bold];
m18_60 -> m18_61  [key=0, style=solid];
m18_61 -> m18_60  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_4  [color=blue, key=0, style=bold];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_28  [color=blue, key=0, style=bold];
m18_20 -> m18_21  [key=0, style=solid];
m18_21 -> m18_20  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_8  [color=blue, key=0, style=bold];
m18_40 -> m18_41  [key=0, style=solid];
m18_41 -> m18_40  [color=blue, key=0, style=bold];
m18_78 -> m18_79  [key=0, style=solid];
m18_79 -> m18_78  [color=blue, key=0, style=bold];
m18_10 -> m18_11  [key=0, style=solid];
m18_11 -> m18_10  [color=blue, key=0, style=bold];
m18_42 -> m18_43  [key=0, style=solid];
m18_43 -> m18_42  [color=blue, key=0, style=bold];
m18_14 -> m18_15  [key=0, style=solid];
m18_15 -> m18_14  [color=blue, key=0, style=bold];
m18_38 -> m18_39  [key=0, style=solid];
m18_39 -> m18_38  [color=blue, key=0, style=bold];
m18_24 -> m18_25  [key=0, style=solid];
m18_25 -> m18_24  [color=blue, key=0, style=bold];
m18_46 -> m18_47  [key=0, style=solid];
m18_47 -> m18_46  [color=blue, key=0, style=bold];
m18_56 -> m18_57  [key=0, style=solid];
m18_57 -> m18_56  [color=blue, key=0, style=bold];
m18_32 -> m18_33  [key=0, style=solid];
m18_33 -> m18_32  [color=blue, key=0, style=bold];
m18_68 -> m18_69  [key=0, style=solid];
m18_69 -> m18_68  [color=blue, key=0, style=bold];
m18_82 -> m18_83  [key=0, style=solid];
m18_83 -> m18_82  [color=blue, key=0, style=bold];
m18_76 -> m18_77  [key=0, style=solid];
m18_77 -> m18_76  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m18_58 -> m18_59  [key=0, style=solid];
m18_59 -> m18_58  [color=blue, key=0, style=bold];
m19_28 -> m19_48  [key=0, style=solid];
m19_28 -> m19_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_45  [key=2, style=dotted];
m19_48 -> m19_46  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_51  [key=2, style=dotted];
m19_50 -> m19_28  [color=blue, key=0, style=bold];
m19_25 -> m19_26  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=2, style=dotted];
m19_27 -> m19_25  [color=blue, key=0, style=bold];
m19_29 -> m19_30  [key=0, style=solid];
m19_30 -> m19_29  [color=blue, key=0, style=bold];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_36 -> m19_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_36 -> m19_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_36 -> m19_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_40  [key=0, style=solid];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_45  [key=2, style=dotted];
m19_38 -> m19_46  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_43  [key=0, style=solid];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_45  [key=2, style=dotted];
m19_41 -> m19_46  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_39 -> m19_43  [key=0, style=solid];
m19_39 -> m19_47  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_47  [key=2, style=dotted];
m19_44 -> m19_36  [color=blue, key=0, style=bold];
m19_31 -> m19_32  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_35  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_34 -> m19_31  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_14  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_15  [key=2, style=dotted];
m19_2 -> m19_4  [color=darkseagreen4, key=1, label=start, style=dashed];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_16  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_17  [key=2, style=dotted];
m19_4 -> m19_18  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_19  [key=2, style=dotted];
m19_5 -> n249  [key=2, style=dotted];
m19_5 -> m19_7  [color=darkseagreen4, key=1, label=thirtyMinuteConsolidator, style=dashed];
m19_6 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_21  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_19  [key=2, style=dotted];
m19_8 -> m19_22  [key=2, style=dotted];
m19_8 -> m19_10  [color=darkseagreen4, key=1, label=oneDayConsolidator, style=dashed];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_23  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_24  [key=2, style=dotted];
m19_10 -> m19_12  [color=darkseagreen4, key=1, label=three_oneDayBar, style=dashed];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_26  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_21  [key=2, style=dotted];
m19_13 -> m19_0  [color=blue, key=0, style=bold];
m19_52 -> m19_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m19_52 -> m19_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DataConsolidation", style=dashed];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_4  [color=darkseagreen4, key=1, label=double, style=dashed];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_6  [key=2, style=dotted];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_6  [key=2, style=dotted];
m21_5 -> m21_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_7 -> m21_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.MarketHours", style=dashed];
m21_7 -> m21_4  [color=darkseagreen4, key=1, label="QuantConnect.Packets.MarketHours", style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=green, key=0, style=solid];
m23_0 -> m23_0  [color=darkorchid, key=3, label="Field variable bool _projectNameProvided", style=bold];
m23_1 -> m23_1  [color=green, key=3, label="Field variable int? _selectedProjectId", style=bold];
m23_1 -> m23_2  [color=green, key=0, style=solid];
m23_1 -> m23_3  [color=green, key=1, label=file, style=dashed];
m23_2 -> m23_3  [color=green, key=0, style=solid];
m23_2 -> m23_4  [color=green, key=1, label=expected, style=dashed];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_3 -> m23_4  [color=green, key=0, style=solid];
m23_3 -> m23_6  [color=green, key=2, style=dotted];
m23_3 -> m23_7  [color=green, key=2, style=dotted];
m23_4 -> m23_5  [color=green, key=0, style=solid];
m23_4 -> m23_8  [color=green, key=2, style=dotted];
m23_5 -> m23_0  [color=blue, key=0, style=bold];
m23_35 -> m23_36  [key=0, style=solid];
m23_39 -> m23_8  [key=2, style=dotted];
m23_39 -> m23_40  [key=0, style=solid];
m23_42 -> m23_8  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_37 -> m23_39  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m23_37 -> m23_42  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_45  [key=2, style=dotted];
m23_37 -> n300  [key=2, style=dotted];
m23_37 -> m23_41  [color=darkseagreen4, key=1, label=entryFileNames, style=dashed];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_42  [color=darkseagreen4, key=1, label=expectedFileNames, style=dashed];
m23_40 -> m23_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_44  [key=0, style=solid];
m23_43 -> m23_41  [key=0, style=solid];
m23_43 -> m23_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_32  [key=2, style=dotted];
m23_44 -> m23_35  [color=blue, key=0, style=bold];
m23_9 -> m23_10  [color=green, key=0, style=solid];
m23_10 -> m23_11  [color=green, key=0, style=solid];
m23_10 -> m23_16  [color=green, key=1, label=fileContents, style=dashed];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_18  [key=2, style=dotted];
m23_16 -> m23_8  [key=2, style=dotted];
m23_16 -> m23_17  [key=0, style=solid];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_19  [key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_23  [key=2, style=dotted];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_20  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_21  [key=2, style=dotted];
m23_14 -> m23_22  [key=2, style=dotted];
m23_17 -> m23_9  [color=blue, key=0, style=bold];
m23_24 -> m23_25  [key=0, style=solid];
m23_30 -> m23_8  [key=2, style=dotted];
m23_30 -> m23_31  [key=0, style=solid];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_34  [key=2, style=dotted];
m23_31 -> m23_24  [color=blue, key=0, style=bold];
m23_27 -> m23_29  [color=darkseagreen4, key=1, label=entryStream, style=dashed];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_33  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_25 -> m23_27  [color=darkseagreen4, key=1, label=zip, style=dashed];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_32  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_7  [key=2, style=dotted];
m24_10 -> m24_8  [key=2, style=dotted];
m24_11 -> m24_9  [color=blue, key=0, style=bold];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=2, style=dotted];
m24_5 -> m24_8  [key=2, style=dotted];
m24_6 -> m24_4  [color=blue, key=0, style=bold];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m24_12 -> m24_16  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_12 -> m24_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m24_12 -> m24_18  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_12 -> m24_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_12 -> m24_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m24_12 -> m24_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_16  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_13 -> m24_18  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_13 -> m24_19  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_13 -> m24_21  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_13 -> m24_22  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_13 -> m24_23  [color=darkseagreen4, key=1, label=stop, style=dashed];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_19  [key=0, style=solid];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_25  [key=2, style=dotted];
m24_16 -> m24_26  [key=2, style=dotted];
m24_16 -> m24_27  [key=2, style=dotted];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_22  [key=0, style=solid];
m24_18 -> m24_22  [key=0, style=solid];
m24_18 -> m24_25  [key=2, style=dotted];
m24_18 -> m24_26  [key=2, style=dotted];
m24_18 -> m24_27  [key=2, style=dotted];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_25  [key=2, style=dotted];
m24_19 -> m24_27  [key=2, style=dotted];
m24_19 -> m24_26  [key=2, style=dotted];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_22  [key=0, style=solid];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_25  [key=2, style=dotted];
m24_21 -> m24_27  [key=2, style=dotted];
m24_21 -> m24_26  [key=2, style=dotted];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_23  [color=darkseagreen4, key=1, label=previousStop, style=dashed];
m24_22 -> m24_23  [key=0, style=solid];
m24_23 -> m24_24  [key=0, style=solid];
m24_24 -> m24_12  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_3  [key=0, style=solid];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m24_28 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m24_28 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m24_28 -> m24_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m24_28 -> m24_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", style=dashed];
m25_128 -> m25_145  [key=0, style=solid];
m25_128 -> m25_146  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_128 -> m25_148  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_128 -> m25_151  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_145 -> m25_146  [key=0, style=solid];
m25_145 -> m25_157  [key=2, style=dotted];
m25_146 -> m25_147  [key=0, style=solid];
m25_146 -> m25_150  [key=0, style=solid];
m25_146 -> m25_158  [key=2, style=dotted];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_160  [key=2, style=dotted];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_155  [key=0, style=solid];
m25_147 -> m25_148  [key=0, style=solid];
m25_147 -> m25_159  [key=2, style=dotted];
m25_147 -> m25_149  [color=darkseagreen4, key=1, label=tmp, style=dashed];
m25_150 -> m25_151  [key=0, style=solid];
m25_150 -> m25_161  [key=2, style=dotted];
m25_150 -> m25_154  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m25_150 -> m25_155  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m25_149 -> m25_150  [key=0, style=solid];
m25_149 -> m25_151  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_154 -> m25_151  [key=0, style=solid];
m25_154 -> m25_164  [key=2, style=dotted];
m25_155 -> m25_156  [key=0, style=solid];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_162  [key=2, style=dotted];
m25_152 -> m25_154  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m25_153 -> m25_154  [key=0, style=solid];
m25_153 -> m25_151  [key=0, style=solid];
m25_153 -> m25_163  [key=2, style=dotted];
m25_156 -> m25_128  [color=blue, key=0, style=bold];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_22  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_11 -> m25_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_11 -> m25_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_18  [key=2, style=dotted];
m25_12 -> m25_15  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_19  [key=2, style=dotted];
m25_13 -> m25_20  [key=2, style=dotted];
m25_13 -> m25_15  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_21  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_23  [key=2, style=dotted];
m25_17 -> m25_11  [color=blue, key=0, style=bold];
m25_28 -> m25_180  [key=0, style=solid];
m25_28 -> m25_183  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_180 -> m25_181  [key=0, style=solid];
m25_180 -> m25_182  [color=darkseagreen4, key=1, label=testMod, style=dashed];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_187  [key=2, style=dotted];
m25_183 -> m25_162  [key=2, style=dotted];
m25_181 -> m25_182  [key=0, style=solid];
m25_181 -> m25_157  [key=2, style=dotted];
m25_182 -> m25_183  [key=0, style=solid];
m25_182 -> m25_185  [key=2, style=dotted];
m25_182 -> m25_186  [key=2, style=dotted];
m25_184 -> m25_28  [color=blue, key=0, style=bold];
m25_47 -> m25_48  [key=0, style=solid];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_46  [key=2, style=dotted];
m25_49 -> m25_47  [color=blue, key=0, style=bold];
m25_79 -> m25_80  [key=0, style=solid];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> n254  [key=2, style=dotted];
m25_80 -> m25_68  [key=2, style=dotted];
m25_80 -> m25_69  [key=2, style=dotted];
m25_80 -> m25_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_81 -> m25_79  [color=blue, key=0, style=bold];
m25_92 -> m25_93  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid];
m25_93 -> n254  [key=2, style=dotted];
m25_93 -> m25_68  [key=2, style=dotted];
m25_93 -> m25_88  [key=2, style=dotted];
m25_93 -> m25_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_94 -> m25_92  [color=blue, key=0, style=bold];
m25_98 -> m25_99  [key=0, style=solid];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> n254  [key=2, style=dotted];
m25_99 -> m25_68  [key=2, style=dotted];
m25_99 -> m25_88  [key=2, style=dotted];
m25_99 -> m25_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_100 -> m25_98  [color=blue, key=0, style=bold];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_128  [key=2, style=dotted];
m25_123 -> m25_126  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_129  [key=2, style=dotted];
m25_126 -> m25_130  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_126  [key=0, style=solid];
m25_125 -> m25_127  [key=0, style=solid];
m25_127 -> m25_122  [color=blue, key=0, style=bold];
m25_24 -> m25_25  [key=0, style=solid];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_28  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_29  [key=2, style=dotted];
m25_27 -> m25_24  [color=blue, key=0, style=bold];
m25_50 -> m25_51  [key=0, style=solid];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_53  [key=2, style=dotted];
m25_52 -> m25_50  [color=blue, key=0, style=bold];
m25_85 -> m25_86  [key=0, style=solid];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> n254  [key=2, style=dotted];
m25_86 -> m25_68  [key=2, style=dotted];
m25_86 -> m25_88  [key=2, style=dotted];
m25_86 -> m25_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_87 -> m25_85  [color=blue, key=0, style=bold];
m25_119 -> m25_120  [key=0, style=solid];
m25_70 -> m25_71  [key=0, style=solid];
m25_71 -> m25_72  [key=0, style=solid];
m25_72 -> m25_70  [color=blue, key=0, style=bold];
m25_76 -> m25_77  [key=0, style=solid];
m25_77 -> m25_78  [key=0, style=solid];
m25_78 -> m25_76  [color=blue, key=0, style=bold];
m25_82 -> m25_83  [key=0, style=solid];
m25_83 -> m25_84  [key=0, style=solid];
m25_84 -> m25_82  [color=blue, key=0, style=bold];
m25_89 -> m25_90  [key=0, style=solid];
m25_90 -> m25_91  [key=0, style=solid];
m25_91 -> m25_89  [color=blue, key=0, style=bold];
m25_95 -> m25_96  [key=0, style=solid];
m25_96 -> m25_97  [key=0, style=solid];
m25_97 -> m25_95  [color=blue, key=0, style=bold];
m25_101 -> m25_102  [key=0, style=solid];
m25_102 -> m25_103  [key=0, style=solid];
m25_103 -> m25_101  [color=blue, key=0, style=bold];
m25_107 -> m25_108  [key=0, style=solid];
m25_108 -> m25_109  [key=0, style=solid];
m25_109 -> m25_107  [color=blue, key=0, style=bold];
m25_113 -> m25_114  [key=0, style=solid];
m25_114 -> m25_115  [key=0, style=solid];
m25_115 -> m25_113  [color=blue, key=0, style=bold];
m25_120 -> m25_121  [key=0, style=solid];
m25_121 -> m25_119  [color=blue, key=0, style=bold];
m25_61 -> m25_62  [key=0, style=solid];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_60  [key=2, style=dotted];
m25_63 -> m25_61  [color=blue, key=0, style=bold];
m25_116 -> m25_117  [key=0, style=solid];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> n254  [key=2, style=dotted];
m25_117 -> m25_68  [key=2, style=dotted];
m25_117 -> m25_88  [key=2, style=dotted];
m25_117 -> m25_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_118 -> m25_116  [color=blue, key=0, style=bold];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_32  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_28  [key=2, style=dotted];
m25_31 -> m25_33  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_28  [key=2, style=dotted];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_35  [key=2, style=dotted];
m25_34 -> m25_30  [color=blue, key=0, style=bold];
m25_54 -> m25_55  [key=0, style=solid];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_53  [key=2, style=dotted];
m25_56 -> m25_54  [color=blue, key=0, style=bold];
m25_36 -> m25_37  [key=0, style=solid];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_39  [key=2, style=dotted];
m25_38 -> m25_36  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=2, style=dotted];
m25_6 -> m25_4  [color=blue, key=0, style=bold];
m25_110 -> m25_111  [key=0, style=solid];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> n254  [key=2, style=dotted];
m25_111 -> m25_68  [key=2, style=dotted];
m25_111 -> m25_88  [key=2, style=dotted];
m25_111 -> m25_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_112 -> m25_110  [color=blue, key=0, style=bold];
m25_104 -> m25_105  [key=0, style=solid];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> n254  [key=2, style=dotted];
m25_105 -> m25_68  [key=2, style=dotted];
m25_105 -> m25_88  [key=2, style=dotted];
m25_105 -> m25_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_106 -> m25_104  [color=blue, key=0, style=bold];
m25_73 -> m25_74  [key=0, style=solid];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> n254  [key=2, style=dotted];
m25_74 -> m25_68  [key=2, style=dotted];
m25_74 -> m25_69  [key=2, style=dotted];
m25_74 -> m25_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_75 -> m25_73  [color=blue, key=0, style=bold];
m25_43 -> m25_44  [key=0, style=solid];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_46  [key=2, style=dotted];
m25_45 -> m25_43  [color=blue, key=0, style=bold];
m25_57 -> m25_58  [key=0, style=solid];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_60  [key=2, style=dotted];
m25_59 -> m25_57  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_40 -> m25_41  [key=0, style=solid];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_39  [key=2, style=dotted];
m25_42 -> m25_40  [color=blue, key=0, style=bold];
m25_10 -> m25_165  [key=0, style=solid];
m25_10 -> m25_166  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_10 -> m25_169  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> m25_157  [key=2, style=dotted];
m25_166 -> m25_167  [key=0, style=solid];
m25_166 -> m25_171  [key=2, style=dotted];
m25_166 -> m25_172  [key=2, style=dotted];
m25_166 -> m25_173  [key=2, style=dotted];
m25_166 -> m25_174  [key=2, style=dotted];
m25_166 -> m25_169  [color=darkseagreen4, key=1, label=an, style=dashed];
m25_169 -> m25_170  [key=0, style=solid];
m25_169 -> m25_177  [key=2, style=dotted];
m25_169 -> m25_178  [key=2, style=dotted];
m25_169 -> m25_179  [key=2, style=dotted];
m25_167 -> m25_168  [key=0, style=solid];
m25_167 -> m25_175  [key=2, style=dotted];
m25_168 -> m25_169  [key=0, style=solid];
m25_168 -> m25_176  [key=2, style=dotted];
m25_170 -> m25_10  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_10  [key=2, style=dotted];
m25_8 -> m25_11  [key=2, style=dotted];
m25_9 -> m25_7  [color=blue, key=0, style=bold];
m25_131 -> m25_132  [key=0, style=solid];
m25_131 -> m25_135  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_128  [key=2, style=dotted];
m25_132 -> m25_135  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m25_135 -> m25_136  [key=0, style=solid];
m25_135 -> m25_137  [key=2, style=dotted];
m25_135 -> m25_130  [key=2, style=dotted];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_135  [key=0, style=solid];
m25_134 -> m25_136  [key=0, style=solid];
m25_136 -> m25_131  [color=blue, key=0, style=bold];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_142  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_128  [key=2, style=dotted];
m25_139 -> m25_142  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m25_142 -> m25_143  [key=0, style=solid];
m25_142 -> m25_144  [key=2, style=dotted];
m25_142 -> m25_130  [key=2, style=dotted];
m25_140 -> m25_141  [key=0, style=solid];
m25_140 -> m25_142  [key=0, style=solid];
m25_141 -> m25_143  [key=0, style=solid];
m25_143 -> m25_138  [color=blue, key=0, style=bold];
m25_64 -> m25_65  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> n254  [key=2, style=dotted];
m25_65 -> m25_68  [key=2, style=dotted];
m25_65 -> m25_69  [key=2, style=dotted];
m25_65 -> m25_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_66 -> m25_64  [color=blue, key=0, style=bold];
m25_188 -> m25_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_135  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m25_188 -> m25_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_7  [key=2, style=dotted];
m27_4 -> m27_5  [color=red, key=0, style=solid];
m27_4 -> m27_7  [key=2, style=dotted];
m27_5 -> m27_6  [color=red, key=0, style=solid];
m27_5 -> m27_7  [color=red, key=2, style=dotted];
m27_6 -> m27_2  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [color=blue, key=0, style=bold];
m27_8 -> m27_3  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m27_8 -> m27_4  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m27_8 -> m27_5  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m28_49 -> m28_50  [key=0, style=solid];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_52  [key=2, style=dotted];
m28_50 -> m28_53  [key=2, style=dotted];
m28_51 -> m28_49  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m28_0 -> m28_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_10  [key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_9  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_9  [key=2, style=dotted];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_9  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_9  [key=2, style=dotted];
m28_8 -> m28_0  [color=blue, key=0, style=bold];
m28_46 -> m28_54  [key=0, style=solid];
m28_46 -> m28_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m28_46 -> m28_56  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m28_54 -> m28_55  [key=0, style=solid];
m28_55 -> m28_56  [key=0, style=solid];
m28_56 -> m28_57  [key=0, style=solid];
m28_57 -> m28_46  [color=blue, key=0, style=bold];
m28_11 -> m28_12  [key=0, style=solid];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_44  [key=2, style=dotted];
m28_12 -> m28_42  [color=darkseagreen4, key=1, label=emptyStatistics, style=dashed];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_44  [key=2, style=dotted];
m28_13 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> n250  [key=2, style=dotted];
m28_42 -> m28_46  [key=2, style=dotted];
m28_42 -> m28_47  [key=2, style=dotted];
m28_42 -> m28_48  [key=2, style=dotted];
m28_42 -> m28_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_44  [key=2, style=dotted];
m28_14 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_44  [key=2, style=dotted];
m28_15 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_44  [key=2, style=dotted];
m28_16 -> m28_42  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_44  [key=2, style=dotted];
m28_17 -> m28_42  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_44  [key=2, style=dotted];
m28_18 -> m28_42  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_44  [key=2, style=dotted];
m28_19 -> m28_42  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_44  [key=2, style=dotted];
m28_20 -> m28_42  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_44  [key=2, style=dotted];
m28_21 -> m28_42  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_44  [key=2, style=dotted];
m28_22 -> m28_42  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_44  [key=2, style=dotted];
m28_23 -> m28_42  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m28_24 -> m28_25  [key=0, style=solid];
m28_24 -> m28_44  [key=2, style=dotted];
m28_24 -> m28_42  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_44  [key=2, style=dotted];
m28_25 -> m28_42  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_44  [key=2, style=dotted];
m28_26 -> m28_42  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_44  [key=2, style=dotted];
m28_27 -> m28_42  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_44  [key=2, style=dotted];
m28_28 -> m28_42  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_44  [key=2, style=dotted];
m28_29 -> m28_42  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_44  [key=2, style=dotted];
m28_30 -> m28_42  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_44  [key=2, style=dotted];
m28_31 -> m28_42  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_44  [key=2, style=dotted];
m28_32 -> m28_42  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m28_33 -> m28_34  [key=0, style=solid];
m28_33 -> m28_44  [key=2, style=dotted];
m28_33 -> m28_42  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_44  [key=2, style=dotted];
m28_34 -> m28_42  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_44  [key=2, style=dotted];
m28_35 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m28_36 -> m28_37  [key=0, style=solid];
m28_36 -> m28_44  [key=2, style=dotted];
m28_36 -> m28_42  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m28_37 -> m28_38  [color=red, key=0, style=solid];
m28_37 -> m28_44  [key=2, style=dotted];
m28_37 -> m28_42  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m28_38 -> m28_39  [color=red, key=0, style=solid];
m28_38 -> m28_44  [color=red, key=2, style=dotted];
m28_38 -> m28_42  [color=red, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_44  [key=2, style=dotted];
m28_39 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateFuturesAlgorithmDailyStatistics, style=dashed];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_44  [key=2, style=dotted];
m28_40 -> m28_42  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_44  [key=2, style=dotted];
m28_43 -> m28_11  [color=blue, key=0, style=bold];
m28_58 -> m28_54  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m28_58 -> m28_55  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m28_58 -> m28_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m29_91 -> m29_92  [key=0, style=solid];
m29_92 -> m29_93  [key=0, style=solid];
m29_92 -> m29_95  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_93 -> m29_94  [key=0, style=solid];
m29_93 -> m29_100  [key=2, style=dotted];
m29_93 -> m29_95  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_102  [key=2, style=dotted];
m29_94 -> m29_95  [key=0, style=solid];
m29_94 -> m29_101  [key=2, style=dotted];
m29_96 -> m29_97  [key=0, style=solid];
m29_96 -> m29_12  [key=2, style=dotted];
m29_97 -> m29_98  [key=0, style=solid];
m29_97 -> m29_103  [key=2, style=dotted];
m29_98 -> m29_99  [key=0, style=solid];
m29_98 -> m29_45  [key=2, style=dotted];
m29_99 -> m29_91  [color=blue, key=0, style=bold];
m29_104 -> m29_105  [key=0, style=solid];
m29_105 -> m29_106  [key=0, style=solid];
m29_105 -> m29_108  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m29_106 -> m29_107  [key=0, style=solid];
m29_106 -> m29_100  [key=2, style=dotted];
m29_106 -> m29_108  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m29_108 -> m29_109  [key=0, style=solid];
m29_108 -> m29_102  [key=2, style=dotted];
m29_107 -> m29_108  [key=0, style=solid];
m29_107 -> m29_113  [key=2, style=dotted];
m29_109 -> m29_110  [key=0, style=solid];
m29_109 -> m29_12  [key=2, style=dotted];
m29_110 -> m29_111  [key=0, style=solid];
m29_110 -> m29_114  [key=2, style=dotted];
m29_111 -> m29_112  [key=0, style=solid];
m29_111 -> m29_83  [key=2, style=dotted];
m29_111 -> m29_85  [key=2, style=dotted];
m29_112 -> m29_104  [color=blue, key=0, style=bold];
m29_15 -> m29_16  [key=0, style=solid];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_19  [key=0, style=solid];
m29_16 -> m29_18  [color=darkseagreen4, key=1, label=testingTempFolder, style=dashed];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_16  [key=0, style=solid];
m29_17 -> m29_20  [key=2, style=dotted];
m29_18 -> m29_16  [key=0, style=solid];
m29_18 -> m29_21  [key=2, style=dotted];
m29_19 -> m29_15  [color=blue, key=0, style=bold];
m29_49 -> m29_50  [key=0, style=solid];
m29_50 -> m29_51  [key=0, style=solid];
m29_50 -> m29_52  [key=2, style=dotted];
m29_51 -> m29_49  [color=blue, key=0, style=bold];
m29_88 -> m29_115  [key=0, style=solid];
m29_88 -> m29_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_115 -> m29_116  [key=0, style=solid];
m29_115 -> n250  [key=2, style=dotted];
m29_115 -> m29_118  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_115 -> m29_119  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_116 -> m29_117  [key=0, style=solid];
m29_116 -> m29_86  [key=2, style=dotted];
m29_118 -> m29_117  [key=0, style=solid];
m29_118 -> m29_114  [key=2, style=dotted];
m29_118 -> m29_122  [key=2, style=dotted];
m29_119 -> m29_120  [key=0, style=solid];
m29_117 -> m29_118  [key=0, style=solid];
m29_117 -> m29_119  [key=0, style=solid];
m29_120 -> m29_88  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_7  [key=2, style=dotted];
m29_1 -> m29_8  [key=2, style=dotted];
m29_1 -> m29_9  [key=2, style=dotted];
m29_1 -> m29_3  [color=darkseagreen4, key=1, label=randomFolder, style=dashed];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_10  [key=2, style=dotted];
m29_2 -> m29_11  [key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_12  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_13  [key=2, style=dotted];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_14  [key=2, style=dotted];
m29_6 -> m29_0  [color=blue, key=0, style=bold];
m29_22 -> m29_23  [key=0, style=solid];
m29_22 -> m29_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_22 -> m29_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_22 -> m29_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_22 -> m29_27  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_36  [key=2, style=dotted];
m29_23 -> m29_37  [key=2, style=dotted];
m29_23 -> m29_38  [key=2, style=dotted];
m29_23 -> m29_39  [key=2, style=dotted];
m29_23 -> m29_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_23 -> m29_28  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_23 -> m29_30  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_23 -> m29_31  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_23 -> m29_32  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_23 -> m29_33  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_40  [key=2, style=dotted];
m29_24 -> m29_27  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_41  [key=2, style=dotted];
m29_25 -> m29_27  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m29_26 -> m29_27  [key=0, style=solid];
m29_26 -> m29_41  [key=2, style=dotted];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_42  [key=2, style=dotted];
m29_27 -> m29_43  [key=2, style=dotted];
m29_27 -> m29_44  [key=2, style=dotted];
m29_27 -> m29_31  [color=darkseagreen4, key=1, label=actualData, style=dashed];
m29_27 -> m29_32  [color=darkseagreen4, key=1, label=actualData, style=dashed];
m29_27 -> m29_33  [color=darkseagreen4, key=1, label=actualData, style=dashed];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_45  [key=2, style=dotted];
m29_30 -> m29_31  [key=0, style=solid];
m29_30 -> m29_35  [key=0, style=solid];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_46  [key=2, style=dotted];
m29_31 -> m29_45  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_47  [key=2, style=dotted];
m29_32 -> m29_45  [key=2, style=dotted];
m29_33 -> m29_34  [key=0, style=solid];
m29_33 -> m29_48  [key=2, style=dotted];
m29_33 -> m29_45  [key=2, style=dotted];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_29 -> m29_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_29 -> m29_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_29 -> m29_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_34 -> m29_30  [key=0, style=solid];
m29_34 -> m29_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_35 -> m29_22  [color=blue, key=0, style=bold];
m29_114 -> m29_123  [key=0, style=solid];
m29_114 -> m29_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_123 -> m29_124  [key=0, style=solid];
m29_123 -> n250  [key=2, style=dotted];
m29_123 -> m29_128  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_123 -> m29_129  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_125 -> m29_126  [key=0, style=solid];
m29_125 -> m29_131  [key=2, style=dotted];
m29_125 -> m29_127  [color=darkseagreen4, key=1, label=unzipped, style=dashed];
m29_124 -> m29_125  [key=0, style=solid];
m29_128 -> m29_127  [key=0, style=solid];
m29_128 -> m29_52  [key=2, style=dotted];
m29_128 -> m29_14  [key=2, style=dotted];
m29_129 -> m29_130  [key=0, style=solid];
m29_126 -> m29_127  [key=0, style=solid];
m29_127 -> m29_128  [key=0, style=solid];
m29_127 -> m29_129  [key=0, style=solid];
m29_127 -> m29_132  [key=2, style=dotted];
m29_130 -> m29_114  [color=blue, key=0, style=bold];
m29_53 -> m29_54  [key=0, style=solid];
m29_53 -> m29_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_53 -> m29_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_53 -> m29_57  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_53 -> m29_58  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_53 -> m29_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_53 -> m29_62  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_53 -> m29_65  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m29_53 -> m29_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_54 -> m29_55  [key=0, style=solid];
m29_54 -> m29_40  [key=2, style=dotted];
m29_54 -> m29_57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m29_54 -> m29_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m29_54 -> m29_63  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m29_54 -> m29_68  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m29_55 -> m29_56  [key=0, style=solid];
m29_55 -> m29_41  [key=2, style=dotted];
m29_55 -> m29_57  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_79  [key=2, style=dotted];
m29_57 -> m29_58  [key=0, style=solid];
m29_57 -> m29_42  [key=2, style=dotted];
m29_57 -> m29_59  [color=darkseagreen4, key=1, label=data, style=dashed];
m29_57 -> m29_60  [color=darkseagreen4, key=1, label=data, style=dashed];
m29_58 -> m29_59  [key=0, style=solid];
m29_58 -> m29_80  [key=2, style=dotted];
m29_61 -> m29_62  [key=0, style=solid];
m29_61 -> m29_82  [key=2, style=dotted];
m29_61 -> m29_83  [key=2, style=dotted];
m29_61 -> m29_12  [key=2, style=dotted];
m29_61 -> m29_63  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_61 -> m29_64  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_61 -> m29_66  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_61 -> m29_69  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_61 -> m29_70  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_62 -> m29_63  [key=0, style=solid];
m29_62 -> m29_64  [key=0, style=solid];
m29_65 -> m29_66  [key=0, style=solid];
m29_65 -> m29_68  [key=0, style=solid];
m29_67 -> m29_70  [key=0, style=solid];
m29_67 -> m29_45  [key=2, style=dotted];
m29_63 -> m29_64  [key=0, style=solid];
m29_63 -> m29_84  [key=2, style=dotted];
m29_63 -> m29_12  [key=2, style=dotted];
m29_63 -> m29_63  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_63 -> m29_66  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_63 -> m29_69  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_63 -> m29_70  [color=darkseagreen4, key=1, label=expectedFolder, style=dashed];
m29_68 -> m29_69  [key=0, style=solid];
m29_68 -> m29_84  [key=2, style=dotted];
m29_68 -> m29_83  [key=2, style=dotted];
m29_59 -> m29_60  [key=0, style=solid];
m29_59 -> m29_81  [key=2, style=dotted];
m29_60 -> m29_61  [key=0, style=solid];
m29_60 -> m29_43  [key=2, style=dotted];
m29_60 -> m29_44  [key=2, style=dotted];
m29_60 -> m29_71  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_60 -> m29_75  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_60 -> m29_76  [color=darkseagreen4, key=1, label=expectedData, style=dashed];
m29_71 -> m29_72  [key=0, style=solid];
m29_71 -> m29_45  [key=2, style=dotted];
m29_75 -> m29_76  [key=0, style=solid];
m29_75 -> m29_89  [key=2, style=dotted];
m29_75 -> m29_45  [key=2, style=dotted];
m29_76 -> m29_77  [key=0, style=solid];
m29_76 -> m29_90  [key=2, style=dotted];
m29_76 -> m29_45  [key=2, style=dotted];
m29_64 -> m29_65  [key=0, style=solid];
m29_64 -> m29_20  [key=2, style=dotted];
m29_64 -> m29_85  [key=2, style=dotted];
m29_66 -> m29_67  [key=0, style=solid];
m29_66 -> m29_86  [key=2, style=dotted];
m29_69 -> m29_70  [key=0, style=solid];
m29_69 -> m29_12  [key=2, style=dotted];
m29_69 -> m29_87  [key=2, style=dotted];
m29_69 -> m29_85  [key=2, style=dotted];
m29_70 -> m29_71  [key=0, style=solid];
m29_70 -> m29_88  [key=2, style=dotted];
m29_70 -> m29_72  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_70 -> m29_75  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_70 -> m29_76  [color=darkseagreen4, key=1, label=actualdata, style=dashed];
m29_72 -> m29_73  [key=0, style=solid];
m29_72 -> m29_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m29_73 -> m29_74  [key=0, style=solid];
m29_73 -> m29_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_73 -> m29_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_73 -> m29_77  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_74 -> m29_75  [key=0, style=solid];
m29_74 -> m29_78  [key=0, style=solid];
m29_77 -> m29_74  [key=0, style=solid];
m29_77 -> m29_77  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_78 -> m29_53  [color=blue, key=0, style=bold];
m29_133 -> m29_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_16  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_57  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_58  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_61  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_109  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_110  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m29_133 -> m29_118  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.FxcmVolumeDownloaderTest", style=dashed];
m30_61 -> m30_62  [key=0, style=solid];
m30_62 -> m30_63  [key=0, style=solid];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_66  [key=2, style=dotted];
m30_64 -> m30_65  [key=0, style=solid];
m30_65 -> m30_61  [color=blue, key=0, style=bold];
m30_67 -> m30_68  [key=0, style=solid];
m30_68 -> m30_69  [key=0, style=solid];
m30_68 -> m30_70  [key=2, style=dotted];
m30_69 -> m30_67  [color=blue, key=0, style=bold];
m30_58 -> m30_59  [key=0, style=solid];
m30_59 -> m30_60  [key=0, style=solid];
m30_60 -> m30_58  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [color=green, key=0, style=solid];
m30_0 -> m30_8  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_0 -> m30_10  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_0 -> m30_11  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_0 -> m30_5  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_0 -> m30_9  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_0 -> m30_12  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_1 -> m30_2  [color=green, key=0, style=solid];
m30_1 -> m30_3  [color=green, key=1, label=openInterest, style=dashed];
m30_5 -> m30_6  [color=red, key=0, style=solid];
m30_5 -> m30_7  [color=red, key=0, style=solid];
m30_8 -> m30_9  [color=green, key=0, style=solid];
m30_9 -> m30_13  [color=red, key=0, style=solid];
m30_9 -> n252  [color=red, key=2, style=dotted];
m30_10 -> m30_11  [color=green, key=0, style=solid];
m30_10 -> m30_12  [color=green, key=0, style=solid];
m30_11 -> m30_12  [color=green, key=0, style=solid];
m30_12 -> m30_13  [color=red, key=0, style=solid];
m30_12 -> n252  [color=red, key=2, style=dotted];
m30_2 -> m30_3  [color=green, key=0, style=solid];
m30_2 -> m30_5  [color=green, key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_4 -> m30_56  [key=0, style=solid];
m30_6 -> m30_56  [color=red, key=0, style=solid];
m30_7 -> m30_8  [color=green, key=0, style=solid];
m30_7 -> m30_10  [color=green, key=0, style=solid];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_15  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_16  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_17  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_18  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_19  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_20  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_21  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_22  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_23  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_24  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_25  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_13 -> m30_26  [color=darkseagreen4, key=1, label=tick, style=dashed];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_28  [key=0, style=solid];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_17  [key=0, style=solid];
m30_16 -> m30_17  [key=0, style=solid];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_19  [key=0, style=solid];
m30_18 -> m30_19  [key=0, style=solid];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_21  [key=0, style=solid];
m30_20 -> m30_21  [key=0, style=solid];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_23  [key=0, style=solid];
m30_22 -> m30_23  [key=0, style=solid];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_25  [key=0, style=solid];
m30_24 -> m30_25  [key=0, style=solid];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_27  [key=0, style=solid];
m30_26 -> m30_27  [key=0, style=solid];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_31  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_32  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_33  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_34  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_35  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_36  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_37  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_38  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_39  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_40  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_28 -> m30_44  [color=darkseagreen4, key=1, label=bar, style=dashed];
m30_27 -> m30_56  [key=0, style=solid];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_55  [key=0, style=solid];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_33  [key=0, style=solid];
m30_32 -> m30_33  [key=0, style=solid];
m30_33 -> m30_34  [key=0, style=solid];
m30_33 -> m30_35  [key=0, style=solid];
m30_34 -> m30_35  [key=0, style=solid];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_37  [key=0, style=solid];
m30_36 -> m30_37  [key=0, style=solid];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_40  [key=0, style=solid];
m30_38 -> m30_39  [key=0, style=solid];
m30_39 -> m30_40  [key=0, style=solid];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_42  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m30_40 -> m30_43  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_46  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_47  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_48  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_49  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_50  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_51  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_52  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_53  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_44 -> m30_54  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_40  [key=0, style=solid];
m30_55 -> m30_56  [key=0, style=solid];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_44  [key=0, style=solid];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_44  [key=0, style=solid];
m30_43 -> m30_44  [key=0, style=solid];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_56  [key=0, style=solid];
m30_46 -> m30_47  [key=0, style=solid];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_49  [key=0, style=solid];
m30_48 -> m30_49  [key=0, style=solid];
m30_49 -> m30_50  [key=0, style=solid];
m30_49 -> m30_51  [key=0, style=solid];
m30_50 -> m30_51  [key=0, style=solid];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_53  [key=0, style=solid];
m30_52 -> m30_53  [key=0, style=solid];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_56  [key=0, style=solid];
m30_54 -> m30_56  [key=0, style=solid];
m30_56 -> m30_0  [color=blue, key=0, style=bold];
m30_71 -> m30_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_8  [color=green, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_10  [color=green, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_11  [color=green, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_71 -> m30_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m32_99 -> m32_100  [key=0, style=solid];
m32_97 -> m32_98  [key=0, style=solid];
m32_97 -> m32_154  [key=2, style=dotted];
m32_42 -> m32_44  [key=0, style=solid];
m32_42 -> m32_49  [key=2, style=dotted];
m32_42 -> m32_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m32_42 -> m32_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m32_54 -> m32_62  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m32_54 -> m32_92  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_58  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m32_54 -> m32_59  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
m32_54 -> m32_8  [key=2, style=dotted];
m32_158 -> m32_376  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_158 -> m32_343  [key=0, style=solid];
m32_158 -> m32_346  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m32_158 -> m32_348  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m32_345 -> m32_346  [key=0, style=solid];
m32_357 -> m32_358  [key=0, style=solid];
m32_357 -> m32_385  [key=2, style=dotted];
m32_357 -> m32_386  [key=2, style=dotted];
m32_357 -> m32_151  [key=2, style=dotted];
m32_361 -> m32_362  [key=0, style=solid];
m32_361 -> m32_385  [key=2, style=dotted];
m32_361 -> m32_386  [key=2, style=dotted];
m32_361 -> m32_151  [key=2, style=dotted];
m32_372 -> m32_366  [key=0, style=solid];
m32_372 -> m32_388  [key=2, style=dotted];
m32_372 -> m32_385  [key=2, style=dotted];
m32_372 -> m32_386  [key=2, style=dotted];
m32_372 -> m32_151  [key=2, style=dotted];
m32_376 -> m32_375  [key=0, style=solid];
m32_376 -> m32_389  [key=2, style=dotted];
m32_344 -> m32_141  [key=2, style=dotted];
m32_344 -> m32_345  [key=0, style=solid];
m32_374 -> m32_141  [key=2, style=dotted];
m32_374 -> m32_375  [key=0, style=solid];
m32_346 -> m32_347  [key=0, style=solid];
m32_346 -> m32_348  [key=0, style=solid];
m32_343 -> m32_357  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m32_343 -> m32_361  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m32_343 -> m32_372  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m32_343 -> m32_344  [key=0, style=solid];
m32_343 -> m32_161  [key=2, style=dotted];
m32_343 -> m32_380  [key=2, style=dotted];
m32_343 -> m32_337  [key=2, style=dotted];
m32_343 -> m32_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_343 -> m32_375  [color=darkseagreen4, key=1, label=data_keys, style=dashed];
m32_348 -> m32_357  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_361  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_349  [key=0, style=solid];
m32_348 -> m32_352  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_353  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_355  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_356  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_359  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_360  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_362  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_365  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_366  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_368  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_369  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_348 -> m32_371  [color=darkseagreen4, key=1, label=live, style=dashed];
m32_356 -> m32_357  [key=0, style=solid];
m32_358 -> m32_359  [key=0, style=solid];
m32_358 -> m32_382  [key=2, style=dotted];
m32_358 -> m32_383  [key=2, style=dotted];
m32_360 -> m32_361  [key=0, style=solid];
m32_362 -> m32_363  [key=0, style=solid];
m32_366 -> m32_372  [color=darkseagreen4, key=1, label=name, style=dashed];
m32_366 -> m32_374  [key=0, style=solid];
m32_366 -> m32_367  [key=0, style=solid];
m32_366 -> m32_371  [color=darkseagreen4, key=1, label=name, style=dashed];
m32_371 -> m32_372  [key=0, style=solid];
m32_371 -> m32_96  [key=2, style=dotted];
m32_367 -> m32_372  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m32_367 -> m32_192  [key=2, style=dotted];
m32_367 -> m32_371  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m32_367 -> m32_368  [key=0, style=solid];
m32_367 -> m32_369  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m32_367 -> m32_370  [color=darkseagreen4, key=1, label=newPacket, style=dashed];
m32_375 -> m32_376  [key=0, style=solid];
m32_375 -> m32_377  [key=0, style=solid];
m32_375 -> m32_379  [key=0, style=solid];
m32_373 -> m32_133  [key=2, style=dotted];
m32_373 -> m32_374  [key=0, style=solid];
m32_353 -> m32_155  [key=2, style=dotted];
m32_353 -> m32_362  [color=darkseagreen4, key=1, label=highResolutionCharts, style=dashed];
m32_353 -> m32_354  [key=0, style=solid];
m32_368 -> m32_155  [key=2, style=dotted];
m32_368 -> m32_369  [key=0, style=solid];
m32_369 -> m32_155  [key=2, style=dotted];
m32_369 -> m32_370  [key=0, style=solid];
m32_363 -> m32_159  [key=2, style=dotted];
m32_363 -> m32_160  [key=2, style=dotted];
m32_363 -> m32_364  [key=0, style=solid];
m32_363 -> m32_365  [color=darkseagreen4, key=1, label=start, style=dashed];
m32_364 -> m32_159  [key=2, style=dotted];
m32_364 -> m32_365  [key=0, style=solid];
m32_364 -> m32_23  [key=2, style=dotted];
m32_347 -> m32_379  [key=0, style=solid];
m32_349 -> m32_373  [key=0, style=solid];
m32_349 -> m32_350  [key=0, style=solid];
m32_352 -> m32_353  [key=0, style=solid];
m32_352 -> m32_381  [key=2, style=dotted];
m32_355 -> m32_356  [key=0, style=solid];
m32_355 -> m32_384  [key=2, style=dotted];
m32_359 -> m32_360  [key=0, style=solid];
m32_359 -> m32_384  [key=2, style=dotted];
m32_365 -> m32_366  [key=0, style=solid];
m32_365 -> m32_381  [key=2, style=dotted];
m32_370 -> m32_371  [key=0, style=solid];
m32_370 -> m32_8  [key=2, style=dotted];
m32_377 -> m32_378  [key=0, style=solid];
m32_354 -> m32_383  [key=2, style=dotted];
m32_354 -> m32_355  [key=0, style=solid];
m32_354 -> m32_382  [key=2, style=dotted];
m32_378 -> m32_46  [key=2, style=dotted];
m32_378 -> m32_379  [key=0, style=solid];
m32_350 -> m32_352  [color=darkseagreen4, key=1, label=start, style=dashed];
m32_350 -> m32_355  [color=darkseagreen4, key=1, label=start, style=dashed];
m32_350 -> m32_359  [color=darkseagreen4, key=1, label=start, style=dashed];
m32_350 -> m32_351  [key=0, style=solid];
m32_351 -> m32_352  [key=0, style=solid];
m32_351 -> m32_355  [color=darkseagreen4, key=1, label=stop, style=dashed];
m32_351 -> m32_359  [color=darkseagreen4, key=1, label=stop, style=dashed];
m32_351 -> m32_164  [key=2, style=dotted];
m32_379 -> m32_158  [color=blue, key=0, style=bold];
m32_402 -> m32_403  [key=0, style=solid];
m32_403 -> m32_132  [key=2, style=dotted];
m32_403 -> m32_404  [key=0, style=solid];
m32_403 -> m32_406  [key=0, style=solid];
m32_404 -> m32_405  [key=0, style=solid];
m32_404 -> m32_409  [key=2, style=dotted];
m32_405 -> m32_406  [key=0, style=solid];
m32_405 -> m32_162  [key=2, style=dotted];
m32_406 -> m32_407  [key=0, style=solid];
m32_407 -> m32_408  [key=0, style=solid];
m32_407 -> m32_44  [key=2, style=dotted];
m32_408 -> m32_402  [color=blue, key=0, style=bold];
m32_447 -> m32_448  [key=0, style=solid];
m32_448 -> m32_449  [key=0, style=solid];
m32_449 -> m32_447  [color=blue, key=0, style=bold];
m32_321 -> m32_322  [key=0, style=solid];
m32_321 -> m32_323  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m32_322 -> m32_323  [key=0, style=solid];
m32_322 -> m32_155  [key=2, style=dotted];
m32_324 -> m32_325  [key=0, style=solid];
m32_325 -> m32_326  [key=0, style=solid];
m32_325 -> m32_158  [key=2, style=dotted];
m32_327 -> m32_328  [key=0, style=solid];
m32_327 -> m32_330  [key=0, style=solid];
m32_327 -> m32_43  [key=2, style=dotted];
m32_323 -> m32_324  [key=0, style=solid];
m32_323 -> m32_325  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_323 -> m32_327  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_323 -> m32_156  [key=2, style=dotted];
m32_323 -> m32_157  [key=2, style=dotted];
m32_323 -> m32_326  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_326 -> m32_327  [key=0, style=solid];
m32_326 -> m32_192  [key=2, style=dotted];
m32_328 -> m32_329  [key=0, style=solid];
m32_329 -> m32_330  [key=0, style=solid];
m32_329 -> m32_46  [key=2, style=dotted];
m32_330 -> m32_321  [color=blue, key=0, style=bold];
m32_96 -> m32_141  [key=2, style=dotted];
m32_96 -> m32_97  [key=0, style=solid];
m32_410 -> m32_411  [key=0, style=solid];
m32_411 -> m32_412  [key=0, style=solid];
m32_411 -> m32_413  [key=2, style=dotted];
m32_412 -> m32_410  [color=blue, key=0, style=bold];
m32_51 -> m32_131  [key=0, style=solid];
m32_153 -> m32_188  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>", style=dashed];
m32_153 -> m32_175  [key=0, style=solid];
m32_153 -> m32_178  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_183  [key=0, style=solid];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_156  [key=2, style=dotted];
m32_184 -> m32_192  [key=2, style=dotted];
m32_184 -> m32_193  [key=2, style=dotted];
m32_187 -> m32_188  [key=0, style=solid];
m32_187 -> m32_156  [key=2, style=dotted];
m32_187 -> m32_192  [key=2, style=dotted];
m32_187 -> m32_193  [key=2, style=dotted];
m32_188 -> m32_189  [key=0, style=solid];
m32_188 -> m32_156  [key=2, style=dotted];
m32_188 -> m32_192  [key=2, style=dotted];
m32_178 -> m32_181  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
m32_178 -> m32_179  [key=0, style=solid];
m32_178 -> m32_186  [key=0, style=solid];
m32_178 -> m32_180  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
m32_178 -> m32_182  [color=darkseagreen4, key=1, label=deltaChart, style=dashed];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_96  [key=2, style=dotted];
m32_182 -> m32_183  [key=0, style=solid];
m32_183 -> m32_184  [key=0, style=solid];
m32_183 -> m32_178  [key=0, style=solid];
m32_176 -> m32_184  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_176 -> m32_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_176 -> m32_180  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_176 -> m32_183  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_176 -> m32_177  [key=0, style=solid];
m32_176 -> m32_8  [key=2, style=dotted];
m32_176 -> m32_186  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_177 -> m32_184  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m32_177 -> m32_187  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m32_177 -> m32_178  [key=0, style=solid];
m32_177 -> m32_7  [key=2, style=dotted];
m32_177 -> m32_189  [color=darkseagreen4, key=1, label=chartPackets, style=dashed];
m32_185 -> m32_187  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_185 -> m32_178  [key=0, style=solid];
m32_185 -> m32_8  [key=2, style=dotted];
m32_185 -> m32_186  [color=darkseagreen4, key=1, label=current, style=dashed];
m32_186 -> m32_187  [key=0, style=solid];
m32_186 -> m32_188  [key=0, style=solid];
m32_189 -> m32_190  [key=0, style=solid];
m32_189 -> m32_194  [key=2, style=dotted];
m32_175 -> m32_183  [color=darkseagreen4, key=1, label=groupSize, style=dashed];
m32_175 -> m32_176  [key=0, style=solid];
m32_179 -> m32_180  [key=0, style=solid];
m32_179 -> m32_182  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_179 -> m32_191  [key=2, style=dotted];
m32_190 -> m32_153  [color=blue, key=0, style=bold];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_129  [key=0, style=solid];
m32_52 -> m32_131  [key=0, style=solid];
m32_108 -> m32_109  [key=0, style=solid];
m32_49 -> m32_50  [color=green, key=0, style=solid];
m32_49 -> m32_52  [color=green, key=0, style=solid];
m32_49 -> m32_132  [color=green, key=2, style=dotted];
m32_48 -> m32_49  [color=green, key=0, style=solid];
m32_48 -> m32_36  [color=blue, key=0, style=bold];
m32_50 -> m32_51  [key=0, style=solid];
m32_50 -> m32_133  [key=2, style=dotted];
m32_82 -> m32_82  [color=green, key=1, label=pair, style=dashed];
m32_82 -> m32_81  [color=green, key=0, style=solid];
m32_82 -> m32_96  [color=green, key=2, style=dotted];
m32_82 -> m32_83  [key=0, style=solid];
m32_72 -> m32_82  [color=green, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_73  [color=red, key=0, style=solid];
m32_72 -> m32_8  [key=2, style=dotted];
m32_72 -> m32_85  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_86  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_87  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_88  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_89  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_90  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_91  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_92  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_104  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
m32_72 -> m32_76  [key=0, style=solid];
m32_72 -> m32_94  [key=2, style=dotted];
m32_81 -> m32_82  [color=red, key=0, style=solid];
m32_81 -> m32_83  [color=green, key=0, style=solid];
m32_81 -> m32_85  [color=red, key=0, style=solid];
m32_79 -> m32_80  [color=green, key=0, style=solid];
m32_79 -> m32_141  [color=green, key=2, style=dotted];
m32_79 -> m32_99  [key=2, style=dotted];
m32_77 -> m32_79  [color=green, key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_148  [key=2, style=dotted];
m32_77 -> m32_149  [key=2, style=dotted];
m32_77 -> m32_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_77 -> m32_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_80 -> m32_81  [color=green, key=0, style=solid];
m32_80 -> m32_70  [key=0, style=solid];
m32_80 -> m32_99  [key=2, style=dotted];
m32_83 -> m32_141  [key=2, style=dotted];
m32_83 -> m32_84  [key=0, style=solid];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_59  [key=0, style=solid];
m32_56 -> m32_42  [key=2, style=dotted];
m32_56 -> m32_58  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_135  [key=2, style=dotted];
m32_57 -> m32_64  [key=2, style=dotted];
m32_62 -> m32_62  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_139  [key=2, style=dotted];
m32_62 -> m32_140  [key=2, style=dotted];
m32_62 -> m32_37  [key=2, style=dotted];
m32_65 -> m32_66  [key=0, style=solid];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_69  [key=0, style=solid];
m32_74 -> m32_75  [color=red, key=0, style=solid];
m32_74 -> m32_97  [color=red, key=2, style=dotted];
m32_76 -> m32_77  [key=0, style=solid];
m32_76 -> m32_147  [key=2, style=dotted];
m32_76 -> m32_88  [key=0, style=solid];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_88  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m32_84 -> m32_118  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m32_84 -> m32_70  [key=0, style=solid];
m32_84 -> m32_98  [key=2, style=dotted];
m32_84 -> m32_53  [key=2, style=dotted];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_152  [key=2, style=dotted];
m32_85 -> m32_96  [key=2, style=dotted];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_152  [key=2, style=dotted];
m32_86 -> m32_96  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_152  [key=2, style=dotted];
m32_87 -> m32_96  [key=2, style=dotted];
m32_87 -> m32_70  [key=0, style=solid];
m32_87 -> m32_98  [key=2, style=dotted];
m32_87 -> m32_53  [key=2, style=dotted];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_152  [key=2, style=dotted];
m32_89 -> m32_96  [key=2, style=dotted];
m32_90 -> m32_91  [color=red, key=0, style=solid];
m32_90 -> m32_152  [key=2, style=dotted];
m32_90 -> m32_96  [key=2, style=dotted];
m32_91 -> m32_92  [key=0, style=solid];
m32_91 -> m32_152  [key=2, style=dotted];
m32_91 -> m32_96  [key=2, style=dotted];
m32_91 -> m32_70  [color=red, key=0, style=solid];
m32_91 -> m32_98  [color=red, key=2, style=dotted];
m32_91 -> m32_53  [color=red, key=2, style=dotted];
m32_92 -> m32_93  [key=0, style=solid];
m32_92 -> m32_153  [key=2, style=dotted];
m32_92 -> m32_35  [color=blue, key=0, style=bold];
m32_94 -> m32_93  [key=0, style=solid];
m32_94 -> m32_43  [key=2, style=dotted];
m32_95 -> m32_96  [key=0, style=solid];
m32_95 -> m32_107  [key=0, style=solid];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_103  [key=0, style=solid];
m32_100 -> m32_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_155  [key=2, style=dotted];
m32_103 -> m32_101  [key=0, style=solid];
m32_103 -> m32_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_104 -> m32_105  [key=0, style=solid];
m32_104 -> m32_156  [key=2, style=dotted];
m32_104 -> m32_157  [key=2, style=dotted];
m32_104 -> m32_27  [color=blue, key=0, style=bold];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_158  [key=2, style=dotted];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_117  [key=0, style=solid];
m32_107 -> m32_55  [color=blue, key=0, style=bold];
m32_110 -> m32_111  [key=0, style=solid];
m32_110 -> m32_112  [color=red, key=1, label=i, style=dashed];
m32_110 -> m32_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_112 -> m32_112  [color=darkseagreen4, key=1, label=log, style=dashed];
m32_112 -> m32_113  [color=red, key=0, style=solid];
m32_112 -> m32_159  [key=2, style=dotted];
m32_112 -> m32_160  [key=2, style=dotted];
m32_112 -> m32_161  [key=2, style=dotted];
m32_112 -> m32_114  [color=darkseagreen4, key=1, label=logs, style=dashed];
m32_112 -> m32_115  [color=red, key=2, style=dotted];
m32_113 -> m32_114  [key=0, style=solid];
m32_113 -> m32_111  [key=0, style=solid];
m32_113 -> m32_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_162  [key=2, style=dotted];
m32_114 -> m32_109  [color=blue, key=0, style=bold];
m32_115 -> m32_116  [key=0, style=solid];
m32_115 -> m32_154  [key=2, style=dotted];
m32_117 -> m32_118  [key=0, style=solid];
m32_117 -> m32_122  [key=0, style=solid];
m32_117 -> m32_34  [color=blue, key=0, style=bold];
m32_118 -> m32_119  [key=0, style=solid];
m32_118 -> m32_121  [key=0, style=solid];
m32_118 -> m32_163  [key=2, style=dotted];
m32_121 -> m32_122  [key=0, style=solid];
m32_121 -> m32_154  [key=2, style=dotted];
m32_123 -> m32_124  [key=0, style=solid];
m32_124 -> m32_125  [key=0, style=solid];
m32_124 -> m32_127  [key=0, style=solid];
m32_128 -> m32_129  [key=0, style=solid];
m32_128 -> m32_131  [key=0, style=solid];
m32_128 -> m32_166  [key=2, style=dotted];
m32_44 -> m32_48  [key=0, style=solid];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_38  [color=red, key=0, style=solid];
m32_53 -> m32_54  [key=0, style=solid];
m32_129 -> m32_130  [key=0, style=solid];
m32_71 -> m32_72  [key=0, style=solid];
m32_71 -> m32_92  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
m32_71 -> m32_104  [color=darkseagreen4, key=1, label=deltaStatistics, style=dashed];
m32_71 -> m32_8  [key=2, style=dotted];
m32_71 -> m32_73  [color=red, key=1, label=security, style=dashed];
m32_71 -> m32_74  [color=red, key=1, label=security, style=dashed];
m32_71 -> m32_75  [color=red, key=1, label=security, style=dashed];
m32_71 -> m32_76  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_73 -> m32_74  [color=red, key=0, style=solid];
m32_73 -> m32_76  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m32_73 -> m32_92  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m32_73 -> m32_104  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m32_73 -> m32_145  [key=2, style=dotted];
m32_73 -> m32_75  [color=darkseagreen4, key=1, label=serverStatistics, style=dashed];
m32_73 -> m32_95  [color=red, key=2, style=dotted];
m32_73 -> m32_96  [color=red, key=2, style=dotted];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_152  [key=2, style=dotted];
m32_88 -> m32_96  [key=2, style=dotted];
m32_78 -> m32_77  [key=0, style=solid];
m32_78 -> m32_150  [key=2, style=dotted];
m32_78 -> m32_151  [key=2, style=dotted];
m32_78 -> m32_79  [key=0, style=solid];
m32_78 -> m32_81  [color=red, key=0, style=solid];
m32_64 -> m32_141  [key=2, style=dotted];
m32_64 -> m32_65  [key=0, style=solid];
m32_69 -> m32_141  [key=2, style=dotted];
m32_69 -> m32_70  [key=0, style=solid];
m32_69 -> m32_93  [key=2, style=dotted];
m32_106 -> m32_141  [key=2, style=dotted];
m32_106 -> m32_107  [key=0, style=solid];
m32_106 -> m32_108  [key=2, style=dotted];
m32_109 -> m32_141  [key=2, style=dotted];
m32_109 -> m32_110  [key=0, style=solid];
m32_116 -> m32_141  [key=2, style=dotted];
m32_116 -> m32_117  [color=red, key=0, style=solid];
m32_116 -> m32_118  [color=red, key=2, style=dotted];
m32_122 -> m32_141  [key=2, style=dotted];
m32_122 -> m32_123  [key=0, style=solid];
m32_122 -> m32_26  [color=blue, key=0, style=bold];
m32_127 -> m32_141  [key=2, style=dotted];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m32_127 -> m32_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_134  [key=2, style=dotted];
m32_55 -> m32_106  [key=0, style=solid];
m32_58 -> m32_56  [key=0, style=solid];
m32_58 -> m32_136  [key=2, style=dotted];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_65  [key=2, style=dotted];
m32_59 -> m32_62  [key=0, style=solid];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_63  [key=0, style=solid];
m32_59 -> m32_66  [key=2, style=dotted];
m32_59 -> m32_67  [key=2, style=dotted];
m32_59 -> m32_53  [key=2, style=dotted];
m32_63 -> m32_92  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_8  [key=2, style=dotted];
m32_63 -> m32_68  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
m32_63 -> m32_56  [color=blue, key=0, style=bold];
m32_68 -> m32_66  [key=0, style=solid];
m32_68 -> m32_68  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_68 -> m32_143  [key=2, style=dotted];
m32_68 -> m32_96  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_67  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_67 -> m32_142  [key=2, style=dotted];
m32_75 -> m32_76  [color=red, key=0, style=solid];
m32_75 -> m32_75  [color=darkseagreen4, key=1, label=upTime, style=dashed];
m32_75 -> m32_146  [key=2, style=dotted];
m32_75 -> m32_98  [color=red, key=2, style=dotted];
m32_75 -> m32_53  [color=red, key=2, style=dotted];
m32_70 -> m32_92  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m32_70 -> m32_104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_78  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m32_70 -> m32_8  [key=2, style=dotted];
m32_70 -> m32_79  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_80  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_81  [color=red, key=1, label=sub, style=dashed];
m32_70 -> m32_82  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_83  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_84  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_85  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_86  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_87  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_89  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_90  [color=darkseagreen4, key=1, label=sub, style=dashed];
m32_70 -> m32_91  [color=red, key=1, label=sub, style=dashed];
m32_93 -> m32_94  [key=0, style=solid];
m32_93 -> m32_95  [key=0, style=solid];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_104  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
m32_98 -> m32_8  [key=2, style=dotted];
m32_98 -> m32_102  [color=darkseagreen4, key=1, label=chartComplete, style=dashed];
m32_102 -> m32_100  [key=0, style=solid];
m32_102 -> m32_102  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_102 -> m32_96  [key=2, style=dotted];
m32_102 -> m32_103  [key=0, style=solid];
m32_102 -> m32_105  [key=2, style=dotted];
m32_101 -> m32_102  [key=0, style=solid];
m32_101 -> m32_101  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_101 -> m32_142  [key=2, style=dotted];
m32_101 -> m32_104  [key=0, style=solid];
m32_111 -> m32_112  [color=red, key=0, style=solid];
m32_111 -> m32_114  [key=0, style=solid];
m32_119 -> m32_120  [key=0, style=solid];
m32_119 -> m32_121  [key=0, style=solid];
m32_120 -> m32_121  [key=0, style=solid];
m32_120 -> m32_46  [key=2, style=dotted];
m32_120 -> m32_21  [key=2, style=dotted];
m32_125 -> m32_124  [key=0, style=solid];
m32_125 -> m32_125  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_125 -> m32_126  [key=0, style=solid];
m32_125 -> m32_123  [color=blue, key=0, style=bold];
m32_130 -> m32_131  [key=0, style=solid];
m32_130 -> m32_46  [key=2, style=dotted];
m32_61 -> m32_59  [key=0, style=solid];
m32_61 -> m32_61  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_61 -> m32_138  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_68  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_60  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_60 -> m32_137  [key=2, style=dotted];
m32_126 -> m32_161  [key=2, style=dotted];
m32_126 -> m32_125  [key=0, style=solid];
m32_126 -> m32_126  [color=darkseagreen4, key=1, label=series, style=dashed];
m32_126 -> m32_164  [key=2, style=dotted];
m32_126 -> m32_165  [key=2, style=dotted];
m32_126 -> m32_1  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_2  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_3  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_4  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_5  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_10  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_11  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_12  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_13  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_29  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_38  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_73  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_74  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_75  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_91  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_112  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_116  [color=red, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_126 -> m32_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m32_131 -> m32_44  [color=blue, key=0, style=bold];
m32_393 -> m32_394  [key=0, style=solid];
m32_393 -> m32_396  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_393 -> m32_395  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_393 -> m32_397  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m32_394 -> m32_395  [key=0, style=solid];
m32_394 -> m32_202  [key=2, style=dotted];
m32_396 -> m32_397  [key=0, style=solid];
m32_396 -> m32_401  [key=2, style=dotted];
m32_396 -> m32_202  [key=2, style=dotted];
m32_398 -> m32_399  [key=0, style=solid];
m32_398 -> m32_195  [key=2, style=dotted];
m32_399 -> m32_400  [key=0, style=solid];
m32_399 -> m32_209  [key=2, style=dotted];
m32_395 -> m32_396  [key=0, style=solid];
m32_395 -> m32_47  [key=2, style=dotted];
m32_397 -> m32_398  [key=0, style=solid];
m32_397 -> m32_399  [color=darkseagreen4, key=1, label=message, style=dashed];
m32_400 -> m32_393  [color=blue, key=0, style=bold];
m32_34 -> m32_116  [color=red, key=0, style=solid];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_44  [key=2, style=dotted];
m32_385 -> m32_444  [key=0, style=solid];
m32_444 -> m32_445  [key=0, style=solid];
m32_444 -> m32_222  [key=2, style=dotted];
m32_444 -> m32_446  [key=2, style=dotted];
m32_445 -> m32_385  [color=blue, key=0, style=bold];
m32_231 -> m32_232  [key=0, style=solid];
m32_233 -> m32_234  [key=0, style=solid];
m32_233 -> m32_202  [key=2, style=dotted];
m32_232 -> m32_233  [key=0, style=solid];
m32_232 -> m32_235  [key=2, style=dotted];
m32_234 -> m32_231  [color=blue, key=0, style=bold];
m32_274 -> m32_275  [key=0, style=solid];
m32_275 -> m32_276  [key=0, style=solid];
m32_275 -> m32_241  [key=2, style=dotted];
m32_276 -> m32_274  [color=blue, key=0, style=bold];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m32_46 -> m32_59  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m32_381 -> m32_426  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m32_381 -> m32_414  [key=0, style=solid];
m32_381 -> m32_415  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_381 -> m32_417  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m32_381 -> m32_425  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m32_381 -> m32_439  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_381 -> m32_427  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveResult", style=dashed];
m32_426 -> m32_148  [key=2, style=dotted];
m32_426 -> m32_427  [key=0, style=solid];
m32_426 -> m32_434  [key=2, style=dotted];
m32_426 -> m32_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_426 -> m32_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_423 -> m32_148  [key=2, style=dotted];
m32_423 -> m32_424  [key=0, style=solid];
m32_423 -> m32_432  [key=2, style=dotted];
m32_423 -> m32_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_425 -> m32_426  [key=0, style=solid];
m32_427 -> m32_428  [key=0, style=solid];
m32_427 -> m32_429  [key=0, style=solid];
m32_414 -> m32_423  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m32_414 -> m32_415  [key=0, style=solid];
m32_414 -> m32_165  [key=2, style=dotted];
m32_414 -> m32_436  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m32_415 -> m32_423  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m32_415 -> m32_416  [key=0, style=solid];
m32_415 -> m32_165  [key=2, style=dotted];
m32_415 -> m32_436  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m32_421 -> m32_423  [color=darkseagreen4, key=1, label=series, style=dashed];
m32_421 -> m32_422  [key=0, style=solid];
m32_421 -> m32_417  [key=0, style=solid];
m32_422 -> m32_423  [key=0, style=solid];
m32_422 -> m32_431  [key=2, style=dotted];
m32_422 -> m32_424  [color=darkseagreen4, key=1, label=newSeries, style=dashed];
m32_424 -> m32_421  [key=0, style=solid];
m32_424 -> m32_433  [key=2, style=dotted];
m32_417 -> m32_425  [key=0, style=solid];
m32_417 -> m32_418  [key=0, style=solid];
m32_416 -> m32_425  [color=darkseagreen4, key=1, label=charts, style=dashed];
m32_416 -> m32_417  [key=0, style=solid];
m32_416 -> m32_8  [key=2, style=dotted];
m32_416 -> m32_420  [color=darkseagreen4, key=1, label=charts, style=dashed];
m32_428 -> m32_427  [key=0, style=solid];
m32_428 -> m32_138  [key=2, style=dotted];
m32_428 -> m32_428  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_420 -> m32_421  [key=0, style=solid];
m32_420 -> m32_420  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m32_420 -> m32_96  [key=2, style=dotted];
m32_418 -> m32_421  [color=darkseagreen4, key=1, label=chart, style=dashed];
m32_418 -> m32_420  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m32_418 -> m32_418  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m32_418 -> m32_419  [key=0, style=solid];
m32_419 -> m32_424  [color=darkseagreen4, key=1, label=newChart, style=dashed];
m32_419 -> m32_420  [key=0, style=solid];
m32_419 -> m32_430  [key=2, style=dotted];
m32_429 -> m32_381  [color=blue, key=0, style=bold];
m32_12 -> m32_13  [color=red, key=0, style=solid];
m32_12 -> m32_21  [color=red, key=2, style=dotted];
m32_7 -> m32_8  [color=green, key=0, style=solid];
m32_7 -> m32_22  [key=2, style=dotted];
m32_290 -> m32_291  [key=0, style=solid];
m32_290 -> m32_297  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m32_290 -> m32_298  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m32_291 -> m32_292  [key=0, style=solid];
m32_293 -> m32_294  [key=0, style=solid];
m32_293 -> m32_296  [key=0, style=solid];
m32_293 -> m32_295  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_296 -> m32_297  [key=0, style=solid];
m32_296 -> m32_231  [key=2, style=dotted];
m32_292 -> m32_293  [key=0, style=solid];
m32_292 -> m32_296  [color=darkseagreen4, key=1, label=types, style=dashed];
m32_292 -> m32_7  [key=2, style=dotted];
m32_292 -> m32_294  [color=darkseagreen4, key=1, label=types, style=dashed];
m32_292 -> m32_295  [color=darkseagreen4, key=1, label=types, style=dashed];
m32_294 -> m32_293  [key=0, style=solid];
m32_294 -> m32_295  [key=0, style=solid];
m32_294 -> m32_302  [key=2, style=dotted];
m32_295 -> m32_293  [key=0, style=solid];
m32_295 -> m32_193  [key=2, style=dotted];
m32_297 -> m32_298  [key=0, style=solid];
m32_297 -> m32_303  [key=2, style=dotted];
m32_297 -> m32_299  [color=darkseagreen4, key=1, label=debug, style=dashed];
m32_298 -> m32_299  [key=0, style=solid];
m32_298 -> m32_303  [key=2, style=dotted];
m32_298 -> m32_300  [color=darkseagreen4, key=1, label=error, style=dashed];
m32_299 -> m32_300  [key=0, style=solid];
m32_299 -> m32_304  [key=2, style=dotted];
m32_300 -> m32_301  [key=0, style=solid];
m32_300 -> m32_305  [key=2, style=dotted];
m32_301 -> m32_290  [color=blue, key=0, style=bold];
m32_435 -> m32_436  [key=0, style=solid];
m32_167 -> m32_168  [key=0, style=solid];
m32_172 -> m32_173  [key=0, style=solid];
m32_169 -> m32_167  [color=blue, key=0, style=bold];
m32_168 -> m32_170  [key=2, style=dotted];
m32_168 -> m32_169  [key=0, style=solid];
m32_168 -> m32_171  [key=2, style=dotted];
m32_174 -> m32_172  [color=blue, key=0, style=bold];
m32_173 -> m32_174  [key=0, style=solid];
m32_340 -> m32_341  [key=0, style=solid];
m32_390 -> m32_391  [key=0, style=solid];
m32_438 -> m32_439  [key=0, style=solid];
m32_441 -> m32_442  [key=0, style=solid];
m32_342 -> m32_340  [color=blue, key=0, style=bold];
m32_341 -> m32_342  [key=0, style=solid];
m32_392 -> m32_390  [color=blue, key=0, style=bold];
m32_391 -> m32_392  [key=0, style=solid];
m32_439 -> m32_440  [key=0, style=solid];
m32_440 -> m32_438  [color=blue, key=0, style=bold];
m32_443 -> m32_441  [color=blue, key=0, style=bold];
m32_442 -> m32_443  [key=0, style=solid];
m32_436 -> m32_437  [key=0, style=solid];
m32_437 -> m32_435  [color=blue, key=0, style=bold];
m32_24 -> m32_27  [key=0, style=solid];
m32_24 -> m32_28  [key=2, style=dotted];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_25  [key=0, style=solid];
m32_409 -> m32_451  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_409 -> m32_493  [color=darkseagreen4, key=1, label=bool, style=dashed];
m32_409 -> m32_450  [key=0, style=solid];
m32_451 -> m32_452  [key=0, style=solid];
m32_451 -> m32_472  [key=0, style=solid];
m32_453 -> m32_454  [key=0, style=solid];
m32_453 -> m32_502  [key=2, style=dotted];
m32_454 -> m32_455  [key=0, style=solid];
m32_454 -> m32_470  [key=0, style=solid];
m32_455 -> m32_456  [key=0, style=solid];
m32_455 -> m32_470  [key=0, style=solid];
m32_455 -> m32_458  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m32_455 -> m32_459  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m32_455 -> m32_468  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m32_455 -> m32_469  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m32_458 -> m32_455  [key=0, style=solid];
m32_458 -> m32_459  [key=0, style=solid];
m32_458 -> m32_269  [key=2, style=dotted];
m32_458 -> m32_460  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_458 -> m32_464  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_458 -> m32_468  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_465 -> m32_465  [color=darkseagreen4, key=1, label=c, style=dashed];
m32_465 -> m32_466  [key=0, style=solid];
m32_465 -> m32_506  [key=2, style=dotted];
m32_465 -> m32_467  [color=darkseagreen4, key=1, label=cash, style=dashed];
m32_469 -> m32_455  [key=0, style=solid];
m32_469 -> m32_262  [key=2, style=dotted];
m32_470 -> m32_471  [key=0, style=solid];
m32_470 -> m32_510  [key=2, style=dotted];
m32_470 -> m32_256  [key=2, style=dotted];
m32_471 -> m32_472  [key=0, style=solid];
m32_471 -> n322  [key=2, style=dotted];
m32_471 -> m32_277  [key=2, style=dotted];
m32_472 -> m32_473  [key=0, style=solid];
m32_472 -> m32_475  [key=0, style=solid];
m32_473 -> m32_474  [key=0, style=solid];
m32_473 -> m32_383  [key=2, style=dotted];
m32_473 -> m32_502  [key=2, style=dotted];
m32_474 -> m32_475  [key=0, style=solid];
m32_474 -> m32_512  [key=2, style=dotted];
m32_476 -> m32_477  [key=0, style=solid];
m32_476 -> m32_480  [key=0, style=solid];
m32_478 -> m32_476  [key=0, style=solid];
m32_478 -> m32_479  [key=0, style=solid];
m32_478 -> m32_42  [key=2, style=dotted];
m32_479 -> m32_476  [key=0, style=solid];
m32_479 -> m32_195  [key=2, style=dotted];
m32_481 -> m32_482  [key=0, style=solid];
m32_481 -> m32_485  [key=0, style=solid];
m32_483 -> m32_481  [key=0, style=solid];
m32_483 -> m32_484  [key=0, style=solid];
m32_483 -> m32_42  [key=2, style=dotted];
m32_484 -> m32_481  [key=0, style=solid];
m32_484 -> m32_223  [key=2, style=dotted];
m32_486 -> m32_487  [key=0, style=solid];
m32_486 -> m32_490  [key=0, style=solid];
m32_488 -> m32_486  [key=0, style=solid];
m32_488 -> m32_489  [key=0, style=solid];
m32_488 -> m32_42  [key=2, style=dotted];
m32_489 -> m32_486  [key=0, style=solid];
m32_489 -> m32_209  [key=2, style=dotted];
m32_490 -> m32_491  [key=0, style=solid];
m32_490 -> m32_492  [key=0, style=solid];
m32_491 -> m32_490  [key=0, style=solid];
m32_491 -> m32_491  [color=darkseagreen4, key=1, label=pair, style=dashed];
m32_491 -> m32_313  [key=2, style=dotted];
m32_493 -> m32_494  [key=0, style=solid];
m32_493 -> m32_500  [key=0, style=solid];
m32_493 -> m32_166  [key=2, style=dotted];
m32_495 -> m32_493  [key=0, style=solid];
m32_495 -> m32_496  [key=0, style=solid];
m32_495 -> m32_42  [key=2, style=dotted];
m32_495 -> m32_497  [color=darkseagreen4, key=1, label=message, style=dashed];
m32_495 -> m32_499  [color=darkseagreen4, key=1, label=message, style=dashed];
m32_497 -> m32_493  [key=0, style=solid];
m32_497 -> m32_498  [key=0, style=solid];
m32_497 -> m32_513  [key=2, style=dotted];
m32_452 -> m32_141  [key=2, style=dotted];
m32_452 -> m32_453  [key=0, style=solid];
m32_500 -> m32_141  [key=2, style=dotted];
m32_500 -> m32_501  [key=0, style=solid];
m32_450 -> m32_451  [key=0, style=solid];
m32_450 -> m32_453  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_450 -> m32_469  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_450 -> m32_470  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_450 -> m32_472  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_450 -> m32_473  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_450 -> m32_468  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_456 -> m32_455  [key=0, style=solid];
m32_456 -> m32_457  [key=0, style=solid];
m32_459 -> m32_469  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_459 -> m32_460  [key=0, style=solid];
m32_459 -> m32_461  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_459 -> m32_463  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_459 -> m32_468  [color=darkseagreen4, key=1, label=price, style=dashed];
m32_468 -> m32_469  [key=0, style=solid];
m32_468 -> m32_508  [key=2, style=dotted];
m32_468 -> m32_509  [key=2, style=dotted];
m32_457 -> m32_458  [key=0, style=solid];
m32_460 -> m32_461  [key=0, style=solid];
m32_460 -> m32_503  [key=2, style=dotted];
m32_460 -> m32_462  [color=darkseagreen4, key=1, label=last, style=dashed];
m32_464 -> m32_465  [key=0, style=solid];
m32_464 -> m32_505  [key=2, style=dotted];
m32_462 -> m32_465  [color=darkseagreen4, key=1, label=last, style=dashed];
m32_462 -> m32_464  [color=darkseagreen4, key=1, label=last, style=dashed];
m32_462 -> m32_462  [color=darkseagreen4, key=1, label=last, style=dashed];
m32_462 -> m32_463  [key=0, style=solid];
m32_462 -> m32_504  [key=2, style=dotted];
m32_462 -> m32_467  [color=darkseagreen4, key=1, label=last, style=dashed];
m32_466 -> m32_469  [key=0, style=solid];
m32_466 -> m32_467  [key=0, style=solid];
m32_467 -> m32_469  [key=0, style=solid];
m32_467 -> m32_507  [key=2, style=dotted];
m32_475 -> m32_476  [key=0, style=solid];
m32_475 -> m32_134  [key=2, style=dotted];
m32_477 -> m32_478  [key=0, style=solid];
m32_480 -> m32_481  [key=0, style=solid];
m32_480 -> m32_134  [key=2, style=dotted];
m32_482 -> m32_483  [key=0, style=solid];
m32_485 -> m32_486  [key=0, style=solid];
m32_485 -> m32_134  [key=2, style=dotted];
m32_487 -> m32_488  [key=0, style=solid];
m32_492 -> m32_493  [key=0, style=solid];
m32_499 -> m32_493  [key=0, style=solid];
m32_499 -> m32_514  [key=2, style=dotted];
m32_499 -> m32_46  [key=2, style=dotted];
m32_494 -> m32_495  [key=0, style=solid];
m32_496 -> m32_497  [key=0, style=solid];
m32_496 -> m32_47  [key=2, style=dotted];
m32_498 -> m32_499  [key=0, style=solid];
m32_461 -> m32_468  [key=0, style=solid];
m32_461 -> m32_462  [key=0, style=solid];
m32_463 -> m32_464  [key=0, style=solid];
m32_501 -> m32_409  [color=blue, key=0, style=bold];
m32_27 -> m32_100  [key=0, style=solid];
m32_27 -> m32_16  [color=blue, key=0, style=bold];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m32_16 -> m32_19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IMessagingHandler", style=dashed];
m32_16 -> m32_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m32_16 -> m32_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m32_16 -> m32_22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m32_16 -> m32_25  [key=2, style=dotted];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_26  [key=2, style=dotted];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_13  [color=red, key=0, style=solid];
m32_18 -> m32_27  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_9  [color=blue, key=0, style=bold];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_28  [key=0, style=solid];
m32_22 -> m32_23  [key=0, style=solid];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_119  [key=0, style=solid];
m32_26 -> m32_120  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_26 -> m32_121  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_277 -> m32_278  [key=0, style=solid];
m32_277 -> m32_280  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
m32_279 -> m32_280  [key=0, style=solid];
m32_281 -> m32_282  [key=0, style=solid];
m32_281 -> m32_283  [key=0, style=solid];
m32_281 -> m32_251  [key=2, style=dotted];
m32_282 -> m32_283  [key=0, style=solid];
m32_282 -> m32_191  [key=2, style=dotted];
m32_282 -> m32_252  [key=2, style=dotted];
m32_284 -> m32_285  [key=0, style=solid];
m32_284 -> m32_286  [key=0, style=solid];
m32_284 -> m32_253  [key=2, style=dotted];
m32_285 -> m32_286  [key=0, style=solid];
m32_285 -> m32_254  [key=2, style=dotted];
m32_285 -> m32_96  [key=2, style=dotted];
m32_286 -> m32_283  [key=0, style=solid];
m32_286 -> m32_289  [key=2, style=dotted];
m32_278 -> m32_141  [key=2, style=dotted];
m32_278 -> m32_279  [key=0, style=solid];
m32_287 -> m32_141  [key=2, style=dotted];
m32_287 -> m32_288  [key=0, style=solid];
m32_280 -> m32_281  [key=0, style=solid];
m32_280 -> m32_282  [color=darkseagreen4, key=1, label=update, style=dashed];
m32_280 -> m32_284  [color=darkseagreen4, key=1, label=update, style=dashed];
m32_280 -> m32_285  [color=darkseagreen4, key=1, label=update, style=dashed];
m32_280 -> m32_286  [color=darkseagreen4, key=1, label=update, style=dashed];
m32_280 -> m32_287  [key=0, style=solid];
m32_280 -> m32_283  [color=darkseagreen4, key=1, label=update, style=dashed];
m32_283 -> m32_284  [key=0, style=solid];
m32_283 -> m32_285  [color=darkseagreen4, key=1, label=series, style=dashed];
m32_283 -> m32_286  [color=darkseagreen4, key=1, label=series, style=dashed];
m32_283 -> m32_280  [key=0, style=solid];
m32_288 -> m32_277  [color=blue, key=0, style=bold];
m32_306 -> m32_309  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m32_306 -> m32_307  [key=0, style=solid];
m32_309 -> m32_310  [key=0, style=solid];
m32_309 -> m32_312  [key=2, style=dotted];
m32_310 -> m32_311  [key=0, style=solid];
m32_310 -> m32_202  [key=2, style=dotted];
m32_308 -> m32_309  [key=0, style=solid];
m32_308 -> m32_47  [key=2, style=dotted];
m32_307 -> m32_230  [key=2, style=dotted];
m32_307 -> m32_308  [key=0, style=solid];
m32_311 -> m32_306  [color=blue, key=0, style=bold];
m32_47 -> m32_38  [color=red, key=0, style=solid];
m32_47 -> m32_54  [key=2, style=dotted];
m32_47 -> m32_55  [key=2, style=dotted];
m32_47 -> m32_61  [color=darkseagreen4, key=1, label=err, style=dashed];
m32_47 -> m32_62  [color=darkseagreen4, key=1, label=err, style=dashed];
m32_0 -> m32_1  [color=red, key=0, style=solid];
m32_0 -> m32_4  [color=red, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m32_0 -> m32_5  [color=red, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_22  [color=green, key=2, style=dotted];
m32_6 -> m32_0  [color=blue, key=0, style=bold];
m32_5 -> m32_6  [color=red, key=0, style=solid];
m32_5 -> m32_8  [key=2, style=dotted];
m32_8 -> m32_9  [color=green, key=0, style=solid];
m32_9 -> m32_10  [color=red, key=0, style=solid];
m32_9 -> m32_7  [key=2, style=dotted];
m32_1 -> m32_2  [color=red, key=0, style=solid];
m32_1 -> m32_11  [key=2, style=dotted];
m32_2 -> m32_3  [color=red, key=0, style=solid];
m32_2 -> m32_12  [key=2, style=dotted];
m32_2 -> m32_7  [color=red, key=2, style=dotted];
m32_3 -> m32_4  [color=red, key=0, style=solid];
m32_3 -> m32_12  [key=2, style=dotted];
m32_3 -> m32_8  [color=red, key=2, style=dotted];
m32_4 -> m32_5  [color=red, key=0, style=solid];
m32_10 -> m32_0  [color=blue, key=0, style=bold];
m32_10 -> m32_11  [color=red, key=0, style=solid];
m32_256 -> m32_259  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_256 -> m32_258  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_256 -> m32_257  [key=0, style=solid];
m32_259 -> m32_260  [key=0, style=solid];
m32_259 -> m32_241  [key=2, style=dotted];
m32_258 -> m32_141  [key=2, style=dotted];
m32_258 -> m32_259  [key=0, style=solid];
m32_258 -> m32_261  [key=2, style=dotted];
m32_257 -> m32_258  [key=0, style=solid];
m32_257 -> m32_260  [key=0, style=solid];
m32_260 -> m32_256  [color=blue, key=0, style=bold];
m32_36 -> m32_38  [color=red, key=0, style=solid];
m32_36 -> m32_37  [color=green, key=0, style=solid];
m32_36 -> m32_30  [color=green, key=0, style=solid];
m32_36 -> m32_25  [color=green, key=2, style=dotted];
m32_38 -> m32_39  [color=red, key=0, style=solid];
m32_38 -> m32_48  [color=red, key=0, style=solid];
m32_38 -> m32_40  [color=red, key=1, label=security, style=dashed];
m32_38 -> m32_41  [color=red, key=1, label=security, style=dashed];
m32_38 -> m32_42  [color=red, key=1, label=security, style=dashed];
m32_38 -> m32_43  [color=red, key=1, label=security, style=dashed];
m32_38 -> m32_46  [color=red, key=1, label=security, style=dashed];
m32_38 -> m32_30  [key=0, style=solid];
m32_39 -> m32_40  [color=red, key=0, style=solid];
m32_39 -> m32_44  [color=red, key=1, label=endOfDayEventTime, style=dashed];
m32_39 -> m32_45  [color=red, key=1, label=endOfDayEventTime, style=dashed];
m32_39 -> m32_47  [color=red, key=1, label=endOfDayEventTime, style=dashed];
m32_40 -> m32_41  [color=red, key=0, style=solid];
m32_40 -> m32_43  [color=red, key=0, style=solid];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_44  [key=0, style=solid];
m32_41 -> m32_29  [color=blue, key=0, style=bold];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_50  [key=2, style=dotted];
m32_43 -> m32_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m32_43 -> m32_47  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_51  [key=2, style=dotted];
m32_45 -> m32_52  [key=2, style=dotted];
m32_45 -> m32_53  [key=2, style=dotted];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_209 -> m32_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_210 -> m32_211  [key=0, style=solid];
m32_210 -> m32_212  [key=0, style=solid];
m32_212 -> m32_213  [key=0, style=solid];
m32_212 -> m32_215  [key=2, style=dotted];
m32_212 -> m32_202  [key=2, style=dotted];
m32_213 -> m32_214  [key=0, style=solid];
m32_213 -> m32_203  [key=2, style=dotted];
m32_211 -> m32_214  [key=0, style=solid];
m32_214 -> m32_209  [color=blue, key=0, style=bold];
m32_28 -> m32_29  [color=red, key=0, style=solid];
m32_28 -> m32_34  [key=2, style=dotted];
m32_29 -> m32_30  [color=red, key=0, style=solid];
m32_29 -> m32_35  [color=red, key=2, style=dotted];
m32_30 -> m32_31  [color=red, key=0, style=solid];
m32_30 -> m32_33  [key=0, style=solid];
m32_30 -> m32_36  [key=2, style=dotted];
m32_30 -> m32_39  [key=0, style=solid];
m32_31 -> m32_32  [color=red, key=0, style=solid];
m32_32 -> m32_33  [color=red, key=0, style=solid];
m32_32 -> m32_37  [color=red, key=2, style=dotted];
m32_32 -> m32_34  [key=0, style=solid];
m32_32 -> m32_42  [key=2, style=dotted];
m32_33 -> m32_21  [color=blue, key=0, style=bold];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_43  [key=2, style=dotted];
m32_336 -> m32_162  [color=blue, key=0, style=bold];
m32_332 -> m32_333  [key=0, style=solid];
m32_332 -> m32_222  [key=2, style=dotted];
m32_333 -> m32_334  [key=0, style=solid];
m32_333 -> m32_336  [key=0, style=solid];
m32_333 -> m32_339  [key=2, style=dotted];
m32_162 -> m32_331  [key=0, style=solid];
m32_331 -> m32_332  [key=0, style=solid];
m32_331 -> m32_333  [color=darkseagreen4, key=1, label=joined, style=dashed];
m32_331 -> m32_337  [key=2, style=dotted];
m32_331 -> m32_338  [key=2, style=dotted];
m32_331 -> m32_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_334 -> m32_335  [key=0, style=solid];
m32_335 -> m32_336  [key=0, style=solid];
m32_335 -> m32_46  [key=2, style=dotted];
m32_11 -> m32_12  [color=red, key=0, style=solid];
m32_203 -> m32_218  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_203 -> m32_216  [key=0, style=solid];
m32_217 -> m32_218  [key=0, style=solid];
m32_218 -> m32_219  [key=0, style=solid];
m32_218 -> m32_221  [key=2, style=dotted];
m32_218 -> m32_222  [key=2, style=dotted];
m32_218 -> m32_193  [key=2, style=dotted];
m32_216 -> m32_141  [key=2, style=dotted];
m32_216 -> m32_217  [key=0, style=solid];
m32_219 -> m32_141  [key=2, style=dotted];
m32_219 -> m32_220  [key=0, style=solid];
m32_220 -> m32_203  [color=blue, key=0, style=bold];
m32_204 -> m32_205  [key=0, style=solid];
m32_204 -> m32_206  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_205 -> m32_206  [key=0, style=solid];
m32_205 -> m32_208  [key=2, style=dotted];
m32_205 -> m32_202  [key=2, style=dotted];
m32_206 -> m32_207  [key=0, style=solid];
m32_206 -> m32_203  [key=2, style=dotted];
m32_207 -> m32_204  [color=blue, key=0, style=bold];
m32_262 -> m32_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m32_262 -> m32_267  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m32_262 -> m32_263  [key=0, style=solid];
m32_264 -> m32_264  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_264 -> m32_265  [key=0, style=solid];
m32_264 -> m32_268  [key=0, style=solid];
m32_264 -> m32_269  [key=2, style=dotted];
m32_264 -> m32_170  [key=2, style=dotted];
m32_264 -> m32_266  [color=darkseagreen4, key=1, label=security, style=dashed];
m32_267 -> m32_268  [key=0, style=solid];
m32_267 -> m32_241  [key=2, style=dotted];
m32_263 -> m32_264  [key=0, style=solid];
m32_265 -> m32_266  [key=0, style=solid];
m32_265 -> m32_270  [key=2, style=dotted];
m32_266 -> m32_267  [key=0, style=solid];
m32_266 -> m32_268  [key=0, style=solid];
m32_266 -> m32_271  [key=2, style=dotted];
m32_268 -> m32_262  [color=blue, key=0, style=bold];
m32_236 -> m32_237  [key=0, style=solid];
m32_236 -> m32_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_237 -> m32_238  [key=0, style=solid];
m32_237 -> m32_240  [key=2, style=dotted];
m32_237 -> m32_202  [key=2, style=dotted];
m32_238 -> m32_239  [key=0, style=solid];
m32_238 -> m32_230  [key=2, style=dotted];
m32_238 -> m32_203  [key=2, style=dotted];
m32_239 -> m32_236  [color=blue, key=0, style=bold];
m32_37 -> m32_38  [key=0, style=solid];
m32_241 -> m32_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_241 -> m32_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_241 -> m32_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_241 -> m32_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_241 -> m32_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_241 -> m32_242  [key=0, style=solid];
m32_241 -> m32_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_243 -> m32_244  [key=0, style=solid];
m32_244 -> m32_245  [key=0, style=solid];
m32_244 -> m32_246  [key=0, style=solid];
m32_244 -> m32_251  [key=2, style=dotted];
m32_245 -> m32_246  [key=0, style=solid];
m32_245 -> m32_191  [key=2, style=dotted];
m32_245 -> m32_252  [key=2, style=dotted];
m32_246 -> m32_247  [key=0, style=solid];
m32_246 -> m32_248  [key=0, style=solid];
m32_246 -> m32_253  [key=2, style=dotted];
m32_247 -> m32_248  [key=0, style=solid];
m32_247 -> m32_254  [key=2, style=dotted];
m32_247 -> m32_96  [key=2, style=dotted];
m32_248 -> m32_249  [key=0, style=solid];
m32_248 -> m32_255  [key=2, style=dotted];
m32_248 -> m32_193  [key=2, style=dotted];
m32_242 -> m32_141  [key=2, style=dotted];
m32_242 -> m32_243  [key=0, style=solid];
m32_249 -> m32_141  [key=2, style=dotted];
m32_249 -> m32_250  [key=0, style=solid];
m32_250 -> m32_241  [color=blue, key=0, style=bold];
m32_223 -> m32_224  [key=0, style=solid];
m32_223 -> m32_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_223 -> m32_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_224 -> m32_225  [key=0, style=solid];
m32_224 -> m32_226  [key=0, style=solid];
m32_226 -> m32_227  [key=0, style=solid];
m32_226 -> m32_229  [key=2, style=dotted];
m32_226 -> m32_202  [key=2, style=dotted];
m32_227 -> m32_228  [key=0, style=solid];
m32_227 -> m32_230  [key=2, style=dotted];
m32_227 -> m32_203  [key=2, style=dotted];
m32_225 -> m32_228  [key=0, style=solid];
m32_228 -> m32_223  [color=blue, key=0, style=bold];
m32_313 -> m32_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_313 -> m32_317  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_313 -> m32_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_313 -> m32_314  [key=0, style=solid];
m32_315 -> m32_316  [key=0, style=solid];
m32_316 -> m32_317  [key=0, style=solid];
m32_316 -> m32_318  [key=0, style=solid];
m32_316 -> m32_253  [key=2, style=dotted];
m32_317 -> m32_318  [key=0, style=solid];
m32_317 -> m32_96  [key=2, style=dotted];
m32_318 -> m32_319  [key=0, style=solid];
m32_314 -> m32_141  [key=2, style=dotted];
m32_314 -> m32_315  [key=0, style=solid];
m32_319 -> m32_141  [key=2, style=dotted];
m32_319 -> m32_320  [key=0, style=solid];
m32_320 -> m32_313  [color=blue, key=0, style=bold];
m32_13 -> m32_14  [color=red, key=0, style=solid];
m32_13 -> m32_19  [color=red, key=0, style=solid];
m32_14 -> m32_15  [color=red, key=0, style=solid];
m32_14 -> m32_22  [color=red, key=2, style=dotted];
m32_14 -> m32_23  [color=red, key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_24  [key=2, style=dotted];
m32_195 -> m32_196  [key=0, style=solid];
m32_195 -> m32_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_195 -> m32_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_196 -> m32_197  [key=0, style=solid];
m32_196 -> m32_198  [key=0, style=solid];
m32_198 -> m32_199  [key=0, style=solid];
m32_198 -> m32_201  [key=2, style=dotted];
m32_198 -> m32_202  [key=2, style=dotted];
m32_199 -> m32_200  [key=0, style=solid];
m32_199 -> m32_203  [key=2, style=dotted];
m32_197 -> m32_200  [key=0, style=solid];
m32_200 -> m32_195  [color=blue, key=0, style=bold];
m32_35 -> m32_36  [color=green, key=0, style=solid];
m32_35 -> m32_37  [key=0, style=solid];
m32_35 -> m32_30  [key=0, style=solid];
m32_35 -> m32_69  [key=0, style=solid];
m32_515 -> m32_6  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_8  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_49  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_81  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_105  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_112  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_184  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_196  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_248  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_267  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_275  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_279  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_281  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_282  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_284  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_285  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_286  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_291  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_293  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_310  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_316  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_317  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_322  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_325  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_332  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_345  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_357  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_361  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_372  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_376  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_394  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_396  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_398  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_399  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_403  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_405  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_406  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_407  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_411  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_444  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_448  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_451  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_453  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_454  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_455  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_458  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_465  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_469  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_470  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_471  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_472  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_473  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_474  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_476  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_478  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_479  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_481  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_483  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_484  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_486  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_488  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_489  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_490  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_491  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_493  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_495  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_515 -> m32_497  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", style=dashed];
m32_518 -> m32_439  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_519 -> m32_439  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_516 -> m32_436  [color=darkseagreen4, key=1, label=unixDateStart, style=dashed];
m32_517 -> m32_436  [color=darkseagreen4, key=1, label=unixDateStop, style=dashed];
m33_6 -> m33_9  [color=green, key=3, label="Parameter variable bool isCanonical", style=bold];
m33_6 -> m33_34  [color=green, key=0, style=solid];
m33_6 -> m33_36  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_6 -> m33_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m33_6 -> m33_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m33_6 -> m33_14  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m33_6 -> m33_24  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_41  [key=2, style=dotted];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_55  [color=crimson, key=0, style=bold];
m33_50 -> m33_58  [color=crimson, key=0, style=bold];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_61  [key=2, style=dotted];
m33_51 -> m33_62  [key=2, style=dotted];
m33_51 -> m33_58  [color=darkseagreen4, key=1, label=factory, style=dashed];
m33_55 -> m33_56  [key=0, style=solid];
m33_58 -> m33_57  [color=red, key=0, style=solid];
m33_58 -> m33_65  [key=2, style=dotted];
m33_52 -> m33_53  [key=0, style=solid];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_63  [key=2, style=dotted];
m33_53 -> m33_57  [color=red, key=1, label=unzipped, style=dashed];
m33_53 -> m33_59  [color=red, key=1, label=zipFile, style=dashed];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_56  [key=0, style=solid];
m33_57 -> m33_58  [color=red, key=0, style=solid];
m33_57 -> m33_59  [color=red, key=0, style=solid];
m33_57 -> m33_64  [color=red, key=2, style=dotted];
m33_59 -> m33_60  [color=red, key=0, style=solid];
m33_59 -> m33_66  [color=red, key=2, style=dotted];
m33_56 -> m33_57  [color=red, key=0, style=solid];
m33_60 -> m33_50  [color=blue, key=0, style=bold];
m33_33 -> m33_34  [color=red, key=0, style=solid];
m33_33 -> m33_24  [color=blue, key=0, style=bold];
m33_8 -> m33_9  [color=green, key=0, style=solid];
m33_8 -> m33_13  [color=red, key=1, label=string, style=dashed];
m33_8 -> m33_15  [color=red, key=1, label=string, style=dashed];
m33_8 -> m33_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_8 -> m33_17  [color=red, key=1, label=string, style=dashed];
m33_8 -> m33_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_8 -> m33_11  [color=green, key=1, label="System.Type", style=dashed];
m33_8 -> m33_12  [color=green, key=1, label="QuantConnect.TickType", style=dashed];
m33_9 -> m33_10  [color=green, key=0, style=solid];
m33_9 -> m33_6  [color=green, key=2, style=dotted];
m33_9 -> m33_11  [color=green, key=1, label=types, style=dashed];
m33_9 -> m33_12  [color=green, key=1, label=types, style=dashed];
m33_13 -> m33_14  [color=red, key=0, style=solid];
m33_13 -> m33_36  [color=red, key=2, style=dotted];
m33_13 -> m33_20  [color=red, key=1, label=isFutureOrOption, style=dashed];
m33_13 -> m33_8  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [color=red, key=0, style=solid];
m33_15 -> m33_37  [color=red, key=2, style=dotted];
m33_15 -> m33_21  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_15 -> m33_33  [color=red, key=1, label=zipEntry, style=dashed];
m33_15 -> m33_20  [color=green, key=1, label=types, style=dashed];
m33_15 -> m33_6  [key=2, style=dotted];
m33_15 -> m33_17  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_15 -> m33_18  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_15 -> m33_19  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_15 -> m33_22  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_16 -> m33_17  [color=red, key=0, style=solid];
m33_16 -> m33_37  [key=2, style=dotted];
m33_16 -> m33_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_16 -> m33_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_16 -> m33_7  [key=2, style=dotted];
m33_17 -> m33_18  [color=red, key=0, style=solid];
m33_17 -> m33_38  [color=red, key=2, style=dotted];
m33_17 -> m33_26  [color=red, key=1, label=fileInfo, style=dashed];
m33_17 -> m33_32  [color=red, key=1, label=fileInfo, style=dashed];
m33_17 -> m33_7  [key=2, style=dotted];
m33_19 -> m33_35  [key=0, style=solid];
m33_19 -> m33_40  [key=2, style=dotted];
m33_19 -> m33_20  [color=green, key=0, style=solid];
m33_19 -> m33_7  [key=2, style=dotted];
m33_10 -> m33_11  [color=green, key=0, style=solid];
m33_10 -> m33_7  [color=green, key=2, style=dotted];
m33_11 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> m33_7  [color=green, key=2, style=dotted];
m33_12 -> m33_13  [color=green, key=0, style=solid];
m33_12 -> m33_21  [color=red, key=1, label=zipEntry, style=dashed];
m33_12 -> m33_33  [color=red, key=1, label=zipEntry, style=dashed];
m33_12 -> m33_12  [color=darkorchid, key=3, label="Local variable string zipEntry", style=bold];
m33_12 -> m33_7  [color=green, key=2, style=dotted];
m33_21 -> m33_22  [color=red, key=0, style=solid];
m33_21 -> m33_41  [color=red, key=2, style=dotted];
m33_21 -> m33_21  [color=red, key=1, label=symbol, style=dashed];
m33_21 -> m33_23  [color=red, key=1, label=symbol, style=dashed];
m33_21 -> m33_24  [color=red, key=1, label=symbol, style=dashed];
m33_21 -> m33_25  [color=red, key=1, label=symbol, style=dashed];
m33_21 -> m33_30  [color=red, key=1, label=symbol, style=dashed];
m33_21 -> m33_7  [key=2, style=dotted];
m33_14 -> m33_15  [color=red, key=0, style=solid];
m33_14 -> m33_17  [color=red, key=0, style=solid];
m33_20 -> m33_21  [color=green, key=0, style=solid];
m33_20 -> m33_22  [color=red, key=0, style=solid];
m33_20 -> m33_7  [color=green, key=2, style=dotted];
m33_18 -> m33_19  [key=0, style=solid];
m33_18 -> m33_20  [key=0, style=solid];
m33_18 -> m33_39  [key=2, style=dotted];
m33_18 -> m33_21  [color=red, key=1, label=symbol, style=dashed];
m33_18 -> m33_23  [color=red, key=1, label=symbol, style=dashed];
m33_18 -> m33_24  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m33_18 -> m33_25  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m33_18 -> m33_29  [color=red, key=1, label=resolution, style=dashed];
m33_18 -> m33_30  [color=red, key=1, label=symbol, style=dashed];
m33_18 -> m33_31  [color=red, key=1, label=date, style=dashed];
m33_18 -> m33_7  [key=2, style=dotted];
m33_26 -> m33_27  [color=red, key=0, style=solid];
m33_26 -> m33_46  [color=red, key=2, style=dotted];
m33_26 -> m33_28  [color=red, key=1, label=fileName, style=dashed];
m33_26 -> m33_7  [key=2, style=dotted];
m33_32 -> m33_33  [color=green, key=0, style=solid];
m33_32 -> m33_7  [color=green, key=2, style=dotted];
m33_23 -> m33_24  [color=red, key=0, style=solid];
m33_23 -> m33_43  [color=red, key=2, style=dotted];
m33_23 -> m33_30  [color=red, key=1, label=dataTimeZone, style=dashed];
m33_23 -> m33_14  [color=blue, key=0, style=bold];
m33_24 -> m33_25  [color=green, key=0, style=solid];
m33_24 -> m33_44  [key=2, style=dotted];
m33_24 -> m33_30  [color=red, key=1, label=exchangeTimeZone, style=dashed];
m33_25 -> m33_26  [color=green, key=0, style=solid];
m33_25 -> m33_45  [key=2, style=dotted];
m33_25 -> m33_29  [color=green, key=1, label=types, style=dashed];
m33_25 -> m33_30  [color=green, key=1, label=types, style=dashed];
m33_25 -> m33_6  [color=green, key=2, style=dotted];
m33_25 -> m33_27  [color=green, key=1, label=types, style=dashed];
m33_25 -> m33_28  [color=green, key=1, label=types, style=dashed];
m33_25 -> m33_31  [color=green, key=1, label=types, style=dashed];
m33_25 -> m33_32  [color=green, key=1, label=types, style=dashed];
m33_29 -> m33_30  [color=green, key=0, style=solid];
m33_29 -> m33_48  [color=red, key=2, style=dotted];
m33_29 -> m33_7  [key=2, style=dotted];
m33_30 -> m33_31  [color=green, key=0, style=solid];
m33_30 -> m33_49  [color=red, key=2, style=dotted];
m33_30 -> m33_34  [color=red, key=1, label=config, style=dashed];
m33_30 -> m33_7  [color=green, key=2, style=dotted];
m33_31 -> m33_32  [color=green, key=0, style=solid];
m33_31 -> m33_7  [color=green, key=2, style=dotted];
m33_22 -> m33_23  [color=red, key=0, style=solid];
m33_22 -> m33_42  [color=red, key=2, style=dotted];
m33_22 -> m33_24  [color=red, key=1, label=marketHoursDataBase, style=dashed];
m33_22 -> m33_7  [key=2, style=dotted];
m33_22 -> m33_15  [color=darkorchid, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m33_27 -> m33_28  [color=green, key=0, style=solid];
m33_27 -> m33_29  [color=red, key=0, style=solid];
m33_27 -> m33_36  [color=red, key=2, style=dotted];
m33_27 -> m33_7  [key=2, style=dotted];
m33_28 -> m33_29  [color=green, key=0, style=solid];
m33_28 -> m33_37  [color=red, key=2, style=dotted];
m33_28 -> m33_47  [color=red, key=2, style=dotted];
m33_28 -> m33_30  [color=red, key=1, label=tickType, style=dashed];
m33_28 -> m33_7  [color=green, key=2, style=dotted];
m33_28 -> m33_15  [color=green, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m33_34 -> m33_35  [color=green, key=0, style=solid];
m33_34 -> m33_38  [color=green, key=2, style=dotted];
m33_35 -> m33_8  [color=blue, key=0, style=bold];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_39  [key=2, style=dotted];
m33_35 -> m33_40  [key=2, style=dotted];
m33_37 -> m33_6  [color=blue, key=0, style=bold];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_7  [key=2, style=dotted];
m33_0 -> m33_1  [color=red, key=0, style=solid];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m33_0 -> m33_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m33_0 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_1 -> m33_6  [key=2, style=dotted];
m33_1 -> m33_3  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_1 -> m33_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_6  [key=2, style=dotted];
m33_2 -> m33_7  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_7  [key=2, style=dotted];
m33_5 -> m33_0  [color=blue, key=0, style=bold];
m33_67 -> m33_1  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_31  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_32  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_33  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_34  [color=red, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_51  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_53  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m33_67 -> m33_58  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_4  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_5  [key=2, style=dotted];
m34_3 -> m34_0  [color=blue, key=0, style=bold];
}
